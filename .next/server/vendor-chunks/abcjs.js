/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/abcjs";
exports.ids = ["vendor-chunks/abcjs"];
exports.modules = {

/***/ "(ssr)/./node_modules/abcjs/index.js":
/*!*************************************!*\
  !*** ./node_modules/abcjs/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**!\nCopyright (c) 2009-2024 Paul Rosen and Gregory Dyke\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n **This text is from: http://opensource.org/licenses/MIT**\n!**/\nvar version = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/abcjs/version.js\");\nvar animation = __webpack_require__(/*! ./src/api/abc_animation */ \"(ssr)/./node_modules/abcjs/src/api/abc_animation.js\");\nvar tuneBook = __webpack_require__(/*! ./src/api/abc_tunebook */ \"(ssr)/./node_modules/abcjs/src/api/abc_tunebook.js\");\nvar sequence = __webpack_require__(/*! ./src/synth/abc_midi_sequencer */ \"(ssr)/./node_modules/abcjs/src/synth/abc_midi_sequencer.js\");\nvar strTranspose = __webpack_require__(/*! ./src/str/output */ \"(ssr)/./node_modules/abcjs/src/str/output.js\");\n\nvar abcjs = {};\n\nabcjs.signature = \"abcjs-basic v\" + version;\n\nObject.keys(animation).forEach(function (key) {\n\tabcjs[key] = animation[key];\n});\n\nObject.keys(tuneBook).forEach(function (key) {\n\tabcjs[key] = tuneBook[key];\n});\n\nabcjs.renderAbc = __webpack_require__(/*! ./src/api/abc_tunebook_svg */ \"(ssr)/./node_modules/abcjs/src/api/abc_tunebook_svg.js\");\nabcjs.tuneMetrics = __webpack_require__(/*! ./src/api/tune-metrics */ \"(ssr)/./node_modules/abcjs/src/api/tune-metrics.js\");\nabcjs.TimingCallbacks = __webpack_require__(/*! ./src/api/abc_timing_callbacks */ \"(ssr)/./node_modules/abcjs/src/api/abc_timing_callbacks.js\");\n\nvar glyphs = __webpack_require__(/*! ./src/write/creation/glyphs */ \"(ssr)/./node_modules/abcjs/src/write/creation/glyphs.js\");\nabcjs.setGlyph = glyphs.setSymbol;\nabcjs.strTranspose = strTranspose;\n\nvar CreateSynth = __webpack_require__(/*! ./src/synth/create-synth */ \"(ssr)/./node_modules/abcjs/src/synth/create-synth.js\");\nvar instrumentIndexToName = __webpack_require__(/*! ./src/synth/instrument-index-to-name */ \"(ssr)/./node_modules/abcjs/src/synth/instrument-index-to-name.js\");\nvar pitchToNoteName = __webpack_require__(/*! ./src/synth/pitch-to-note-name */ \"(ssr)/./node_modules/abcjs/src/synth/pitch-to-note-name.js\");\nvar SynthSequence = __webpack_require__(/*! ./src/synth/synth-sequence */ \"(ssr)/./node_modules/abcjs/src/synth/synth-sequence.js\");\nvar CreateSynthControl = __webpack_require__(/*! ./src/synth/create-synth-control */ \"(ssr)/./node_modules/abcjs/src/synth/create-synth-control.js\");\nvar registerAudioContext = __webpack_require__(/*! ./src/synth/register-audio-context */ \"(ssr)/./node_modules/abcjs/src/synth/register-audio-context.js\");\nvar activeAudioContext = __webpack_require__(/*! ./src/synth/active-audio-context */ \"(ssr)/./node_modules/abcjs/src/synth/active-audio-context.js\");\nvar supportsAudio = __webpack_require__(/*! ./src/synth/supports-audio */ \"(ssr)/./node_modules/abcjs/src/synth/supports-audio.js\");\nvar playEvent = __webpack_require__(/*! ./src/synth/play-event */ \"(ssr)/./node_modules/abcjs/src/synth/play-event.js\");\nvar SynthController = __webpack_require__(/*! ./src/synth/synth-controller */ \"(ssr)/./node_modules/abcjs/src/synth/synth-controller.js\");\nvar getMidiFile = __webpack_require__(/*! ./src/synth/get-midi-file */ \"(ssr)/./node_modules/abcjs/src/synth/get-midi-file.js\");\nvar midiRenderer = __webpack_require__(/*! ./src/synth/abc_midi_renderer */ \"(ssr)/./node_modules/abcjs/src/synth/abc_midi_renderer.js\");\n\nabcjs.synth = {\n\tCreateSynth: CreateSynth,\n\tinstrumentIndexToName: instrumentIndexToName,\n\tpitchToNoteName: pitchToNoteName,\n\tSynthController: SynthController,\n\tSynthSequence: SynthSequence,\n\tCreateSynthControl: CreateSynthControl,\n\tregisterAudioContext: registerAudioContext,\n\tactiveAudioContext: activeAudioContext,\n\tsupportsAudio: supportsAudio,\n\tplayEvent: playEvent,\n\tgetMidiFile: getMidiFile,\n\tsequence: sequence,\n\tmidiRenderer: midiRenderer,\n};\n\nabcjs['Editor'] = __webpack_require__(/*! ./src/edit/abc_editor */ \"(ssr)/./node_modules/abcjs/src/edit/abc_editor.js\");\nabcjs['EditArea'] = __webpack_require__(/*! ./src/edit/abc_editarea */ \"(ssr)/./node_modules/abcjs/src/edit/abc_editarea.js\");\n\nmodule.exports = abcjs;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLHdEQUFXO0FBQ2pDLGdCQUFnQixtQkFBTyxDQUFDLG9GQUF5QjtBQUNqRCxlQUFlLG1CQUFPLENBQUMsa0ZBQXdCO0FBQy9DLGVBQWUsbUJBQU8sQ0FBQyxrR0FBZ0M7QUFDdkQsbUJBQW1CLG1CQUFPLENBQUMsc0VBQWtCOztBQUU3Qzs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxrQkFBa0IsbUJBQU8sQ0FBQywwRkFBNEI7QUFDdEQsb0JBQW9CLG1CQUFPLENBQUMsa0ZBQXdCO0FBQ3BELHdCQUF3QixtQkFBTyxDQUFDLGtHQUFnQzs7QUFFaEUsYUFBYSxtQkFBTyxDQUFDLDRGQUE2QjtBQUNsRDtBQUNBOztBQUVBLGtCQUFrQixtQkFBTyxDQUFDLHNGQUEwQjtBQUNwRCw0QkFBNEIsbUJBQU8sQ0FBQyw4R0FBc0M7QUFDMUUsc0JBQXNCLG1CQUFPLENBQUMsa0dBQWdDO0FBQzlELG9CQUFvQixtQkFBTyxDQUFDLDBGQUE0QjtBQUN4RCx5QkFBeUIsbUJBQU8sQ0FBQyxzR0FBa0M7QUFDbkUsMkJBQTJCLG1CQUFPLENBQUMsMEdBQW9DO0FBQ3ZFLHlCQUF5QixtQkFBTyxDQUFDLHNHQUFrQztBQUNuRSxvQkFBb0IsbUJBQU8sQ0FBQywwRkFBNEI7QUFDeEQsZ0JBQWdCLG1CQUFPLENBQUMsa0ZBQXdCO0FBQ2hELHNCQUFzQixtQkFBTyxDQUFDLDhGQUE4QjtBQUM1RCxrQkFBa0IsbUJBQU8sQ0FBQyx3RkFBMkI7QUFDckQsbUJBQW1CLG1CQUFPLENBQUMsZ0dBQStCOztBQUUxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCLG1CQUFPLENBQUMsZ0ZBQXVCO0FBQ2pELG9CQUFvQixtQkFBTyxDQUFDLG9GQUF5Qjs7QUFFckQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9pbmRleC5qcz84OTFiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiFcbkNvcHlyaWdodCAoYykgMjAwOS0yMDI0IFBhdWwgUm9zZW4gYW5kIEdyZWdvcnkgRHlrZVxuXG5QZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG5vZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG5pbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG50byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG5jb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbmZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG5cblRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG5hbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cblxuVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG5GSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbkFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbkxJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG5PVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG5USEUgU09GVFdBUkUuXG5cbiAqKlRoaXMgdGV4dCBpcyBmcm9tOiBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUKipcbiEqKi9cbnZhciB2ZXJzaW9uID0gcmVxdWlyZSgnLi92ZXJzaW9uJyk7XG52YXIgYW5pbWF0aW9uID0gcmVxdWlyZSgnLi9zcmMvYXBpL2FiY19hbmltYXRpb24nKTtcbnZhciB0dW5lQm9vayA9IHJlcXVpcmUoJy4vc3JjL2FwaS9hYmNfdHVuZWJvb2snKTtcbnZhciBzZXF1ZW5jZSA9IHJlcXVpcmUoJy4vc3JjL3N5bnRoL2FiY19taWRpX3NlcXVlbmNlcicpO1xudmFyIHN0clRyYW5zcG9zZSA9IHJlcXVpcmUoJy4vc3JjL3N0ci9vdXRwdXQnKTtcblxudmFyIGFiY2pzID0ge307XG5cbmFiY2pzLnNpZ25hdHVyZSA9IFwiYWJjanMtYmFzaWMgdlwiICsgdmVyc2lvbjtcblxuT2JqZWN0LmtleXMoYW5pbWF0aW9uKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0YWJjanNba2V5XSA9IGFuaW1hdGlvbltrZXldO1xufSk7XG5cbk9iamVjdC5rZXlzKHR1bmVCb29rKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0YWJjanNba2V5XSA9IHR1bmVCb29rW2tleV07XG59KTtcblxuYWJjanMucmVuZGVyQWJjID0gcmVxdWlyZSgnLi9zcmMvYXBpL2FiY190dW5lYm9va19zdmcnKTtcbmFiY2pzLnR1bmVNZXRyaWNzID0gcmVxdWlyZSgnLi9zcmMvYXBpL3R1bmUtbWV0cmljcycpO1xuYWJjanMuVGltaW5nQ2FsbGJhY2tzID0gcmVxdWlyZSgnLi9zcmMvYXBpL2FiY190aW1pbmdfY2FsbGJhY2tzJyk7XG5cbnZhciBnbHlwaHMgPSByZXF1aXJlKCcuL3NyYy93cml0ZS9jcmVhdGlvbi9nbHlwaHMnKTtcbmFiY2pzLnNldEdseXBoID0gZ2x5cGhzLnNldFN5bWJvbDtcbmFiY2pzLnN0clRyYW5zcG9zZSA9IHN0clRyYW5zcG9zZTtcblxudmFyIENyZWF0ZVN5bnRoID0gcmVxdWlyZSgnLi9zcmMvc3ludGgvY3JlYXRlLXN5bnRoJyk7XG52YXIgaW5zdHJ1bWVudEluZGV4VG9OYW1lID0gcmVxdWlyZSgnLi9zcmMvc3ludGgvaW5zdHJ1bWVudC1pbmRleC10by1uYW1lJyk7XG52YXIgcGl0Y2hUb05vdGVOYW1lID0gcmVxdWlyZSgnLi9zcmMvc3ludGgvcGl0Y2gtdG8tbm90ZS1uYW1lJyk7XG52YXIgU3ludGhTZXF1ZW5jZSA9IHJlcXVpcmUoJy4vc3JjL3N5bnRoL3N5bnRoLXNlcXVlbmNlJyk7XG52YXIgQ3JlYXRlU3ludGhDb250cm9sID0gcmVxdWlyZSgnLi9zcmMvc3ludGgvY3JlYXRlLXN5bnRoLWNvbnRyb2wnKTtcbnZhciByZWdpc3RlckF1ZGlvQ29udGV4dCA9IHJlcXVpcmUoJy4vc3JjL3N5bnRoL3JlZ2lzdGVyLWF1ZGlvLWNvbnRleHQnKTtcbnZhciBhY3RpdmVBdWRpb0NvbnRleHQgPSByZXF1aXJlKCcuL3NyYy9zeW50aC9hY3RpdmUtYXVkaW8tY29udGV4dCcpO1xudmFyIHN1cHBvcnRzQXVkaW8gPSByZXF1aXJlKCcuL3NyYy9zeW50aC9zdXBwb3J0cy1hdWRpbycpO1xudmFyIHBsYXlFdmVudCA9IHJlcXVpcmUoJy4vc3JjL3N5bnRoL3BsYXktZXZlbnQnKTtcbnZhciBTeW50aENvbnRyb2xsZXIgPSByZXF1aXJlKCcuL3NyYy9zeW50aC9zeW50aC1jb250cm9sbGVyJyk7XG52YXIgZ2V0TWlkaUZpbGUgPSByZXF1aXJlKCcuL3NyYy9zeW50aC9nZXQtbWlkaS1maWxlJyk7XG52YXIgbWlkaVJlbmRlcmVyID0gcmVxdWlyZSgnLi9zcmMvc3ludGgvYWJjX21pZGlfcmVuZGVyZXInKTtcblxuYWJjanMuc3ludGggPSB7XG5cdENyZWF0ZVN5bnRoOiBDcmVhdGVTeW50aCxcblx0aW5zdHJ1bWVudEluZGV4VG9OYW1lOiBpbnN0cnVtZW50SW5kZXhUb05hbWUsXG5cdHBpdGNoVG9Ob3RlTmFtZTogcGl0Y2hUb05vdGVOYW1lLFxuXHRTeW50aENvbnRyb2xsZXI6IFN5bnRoQ29udHJvbGxlcixcblx0U3ludGhTZXF1ZW5jZTogU3ludGhTZXF1ZW5jZSxcblx0Q3JlYXRlU3ludGhDb250cm9sOiBDcmVhdGVTeW50aENvbnRyb2wsXG5cdHJlZ2lzdGVyQXVkaW9Db250ZXh0OiByZWdpc3RlckF1ZGlvQ29udGV4dCxcblx0YWN0aXZlQXVkaW9Db250ZXh0OiBhY3RpdmVBdWRpb0NvbnRleHQsXG5cdHN1cHBvcnRzQXVkaW86IHN1cHBvcnRzQXVkaW8sXG5cdHBsYXlFdmVudDogcGxheUV2ZW50LFxuXHRnZXRNaWRpRmlsZTogZ2V0TWlkaUZpbGUsXG5cdHNlcXVlbmNlOiBzZXF1ZW5jZSxcblx0bWlkaVJlbmRlcmVyOiBtaWRpUmVuZGVyZXIsXG59O1xuXG5hYmNqc1snRWRpdG9yJ10gPSByZXF1aXJlKCcuL3NyYy9lZGl0L2FiY19lZGl0b3InKTtcbmFiY2pzWydFZGl0QXJlYSddID0gcmVxdWlyZSgnLi9zcmMvZWRpdC9hYmNfZWRpdGFyZWEnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBhYmNqcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/api/abc_animation.js":
/*!*****************************************************!*\
  !*** ./node_modules/abcjs/src/api/abc_animation.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_animation.js: handles animating the music in real time.\n\nvar TimingCallbacks = __webpack_require__(/*! ./abc_timing_callbacks */ \"(ssr)/./node_modules/abcjs/src/api/abc_timing_callbacks.js\");\n\nvar animation = {};\n\n(function() {\n\t\"use strict\";\n\n\tvar timer;\n\tvar cursor;\n\tanimation.startAnimation = function(paper, tune, options) {\n\t\t//options.bpm\n\t\t//options.showCursor\n\t\t//options.hideCurrentMeasure\n\t\t//options.hideFinishedMeasures\n\t\tif (timer) {\n\t\t\ttimer.stop();\n\t\t\ttimer = undefined;\n\t\t}\n\n\t\tif (options.showCursor) {\n\t\t\tcursor = paper.querySelector('.abcjs-cursor');\n\t\t\tif (!cursor) {\n\t\t\t\tcursor = document.createElement('DIV');\n\t\t\t\tcursor.className = 'abcjs-cursor cursor';\n\t\t\t\tcursor.style.position = 'absolute';\n\n\t\t\t\tpaper.appendChild(cursor);\n\t\t\t\tpaper.style.position = 'relative';\n\t\t\t}\n\t\t}\n\n\t\tfunction hideMeasures(elements) {\n\t\t\tfor (var i = 0; i < elements.length; i++) {\n\t\t\t\tvar element = elements[i];\n\t\t\t\tif (!element.classList.contains('abcjs-bar'))\n\t\t\t\t\telement.style.display = \"none\";\n\t\t\t}\n\t\t}\n\n\t\tvar lastMeasure;\n\t\tfunction disappearMeasuresAfter(selector) {\n\t\t\tif (lastMeasure) {\n\t\t\t\tvar elements = paper.querySelectorAll(lastMeasure);\n\t\t\t\thideMeasures(elements);\n\t\t\t}\n\t\t\tlastMeasure = selector;\n\t\t}\n\n\t\tfunction disappearMeasuresBefore(selector) {\n\t\t\tvar elements = paper.querySelectorAll(selector);\n\t\t\thideMeasures(elements);\n\t\t}\n\n\t\tfunction measureCallback(selector) {\n\t\t\tif (options.hideCurrentMeasure) {\n\t\t\t\tdisappearMeasuresBefore(selector);\n\t\t\t} else if (options.hideFinishedMeasures) {\n\t\t\t\tdisappearMeasuresAfter(selector);\n\t\t\t}\n\t\t}\n\n\t\tfunction getLineAndMeasure(element) {\n\t\t\treturn '.abcjs-l' + element.line + '.abcjs-m' + element.measureNumber;\n\t\t}\n\n\t\tfunction setCursor(range) {\n\t\t\tif (range) {\n\t\t\t\tif (range.measureStart) {\n\t\t\t\t\tvar selector = getLineAndMeasure(range);\n\t\t\t\t\tif (selector)\n\t\t\t\t\t\tmeasureCallback(selector);\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor.style.left = range.left + \"px\";\n\t\t\t\t\tcursor.style.top = range.top + \"px\";\n\t\t\t\t\tcursor.style.width = range.width + \"px\";\n\t\t\t\t\tcursor.style.height = range.height + \"px\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttimer.stop();\n\t\t\t\ttimer = undefined;\n\t\t\t}\n\t\t}\n\n\t\ttimer = new TimingCallbacks(tune, {\n\t\t\tqpm: options.bpm,\n\t\t\teventCallback: setCursor\n\t\t});\n\t\ttimer.start();\n\t};\n\n\tanimation.pauseAnimation = function(pause) {\n\t\tif (timer) {\n\t\t\tif (pause)\n\t\t\t\ttimer.pause();\n\t\t\telse\n\t\t\t\ttimer.start();\n\t\t}\n\t};\n\n\tanimation.stopAnimation = function() {\n\t\tif (timer) {\n\t\t\ttimer.stop();\n\t\t\ttimer = undefined;\n\t\t}\n\t};\n\n})();\n\nmodule.exports = animation;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL2FwaS9hYmNfYW5pbWF0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUVBLHNCQUFzQixtQkFBTyxDQUFDLDBGQUF3Qjs7QUFFdEQ7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1CQUFtQixxQkFBcUI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvYXBpL2FiY19hbmltYXRpb24uanM/NWY1NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAgICBhYmNfYW5pbWF0aW9uLmpzOiBoYW5kbGVzIGFuaW1hdGluZyB0aGUgbXVzaWMgaW4gcmVhbCB0aW1lLlxuXG52YXIgVGltaW5nQ2FsbGJhY2tzID0gcmVxdWlyZSgnLi9hYmNfdGltaW5nX2NhbGxiYWNrcycpO1xuXG52YXIgYW5pbWF0aW9uID0ge307XG5cbihmdW5jdGlvbigpIHtcblx0XCJ1c2Ugc3RyaWN0XCI7XG5cblx0dmFyIHRpbWVyO1xuXHR2YXIgY3Vyc29yO1xuXHRhbmltYXRpb24uc3RhcnRBbmltYXRpb24gPSBmdW5jdGlvbihwYXBlciwgdHVuZSwgb3B0aW9ucykge1xuXHRcdC8vb3B0aW9ucy5icG1cblx0XHQvL29wdGlvbnMuc2hvd0N1cnNvclxuXHRcdC8vb3B0aW9ucy5oaWRlQ3VycmVudE1lYXN1cmVcblx0XHQvL29wdGlvbnMuaGlkZUZpbmlzaGVkTWVhc3VyZXNcblx0XHRpZiAodGltZXIpIHtcblx0XHRcdHRpbWVyLnN0b3AoKTtcblx0XHRcdHRpbWVyID0gdW5kZWZpbmVkO1xuXHRcdH1cblxuXHRcdGlmIChvcHRpb25zLnNob3dDdXJzb3IpIHtcblx0XHRcdGN1cnNvciA9IHBhcGVyLnF1ZXJ5U2VsZWN0b3IoJy5hYmNqcy1jdXJzb3InKTtcblx0XHRcdGlmICghY3Vyc29yKSB7XG5cdFx0XHRcdGN1cnNvciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ0RJVicpO1xuXHRcdFx0XHRjdXJzb3IuY2xhc3NOYW1lID0gJ2FiY2pzLWN1cnNvciBjdXJzb3InO1xuXHRcdFx0XHRjdXJzb3Iuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xuXG5cdFx0XHRcdHBhcGVyLmFwcGVuZENoaWxkKGN1cnNvcik7XG5cdFx0XHRcdHBhcGVyLnN0eWxlLnBvc2l0aW9uID0gJ3JlbGF0aXZlJztcblx0XHRcdH1cblx0XHR9XG5cblx0XHRmdW5jdGlvbiBoaWRlTWVhc3VyZXMoZWxlbWVudHMpIHtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgZWxlbWVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0dmFyIGVsZW1lbnQgPSBlbGVtZW50c1tpXTtcblx0XHRcdFx0aWYgKCFlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygnYWJjanMtYmFyJykpXG5cdFx0XHRcdFx0ZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0dmFyIGxhc3RNZWFzdXJlO1xuXHRcdGZ1bmN0aW9uIGRpc2FwcGVhck1lYXN1cmVzQWZ0ZXIoc2VsZWN0b3IpIHtcblx0XHRcdGlmIChsYXN0TWVhc3VyZSkge1xuXHRcdFx0XHR2YXIgZWxlbWVudHMgPSBwYXBlci5xdWVyeVNlbGVjdG9yQWxsKGxhc3RNZWFzdXJlKTtcblx0XHRcdFx0aGlkZU1lYXN1cmVzKGVsZW1lbnRzKTtcblx0XHRcdH1cblx0XHRcdGxhc3RNZWFzdXJlID0gc2VsZWN0b3I7XG5cdFx0fVxuXG5cdFx0ZnVuY3Rpb24gZGlzYXBwZWFyTWVhc3VyZXNCZWZvcmUoc2VsZWN0b3IpIHtcblx0XHRcdHZhciBlbGVtZW50cyA9IHBhcGVyLnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpO1xuXHRcdFx0aGlkZU1lYXN1cmVzKGVsZW1lbnRzKTtcblx0XHR9XG5cblx0XHRmdW5jdGlvbiBtZWFzdXJlQ2FsbGJhY2soc2VsZWN0b3IpIHtcblx0XHRcdGlmIChvcHRpb25zLmhpZGVDdXJyZW50TWVhc3VyZSkge1xuXHRcdFx0XHRkaXNhcHBlYXJNZWFzdXJlc0JlZm9yZShzZWxlY3Rvcik7XG5cdFx0XHR9IGVsc2UgaWYgKG9wdGlvbnMuaGlkZUZpbmlzaGVkTWVhc3VyZXMpIHtcblx0XHRcdFx0ZGlzYXBwZWFyTWVhc3VyZXNBZnRlcihzZWxlY3Rvcik7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0ZnVuY3Rpb24gZ2V0TGluZUFuZE1lYXN1cmUoZWxlbWVudCkge1xuXHRcdFx0cmV0dXJuICcuYWJjanMtbCcgKyBlbGVtZW50LmxpbmUgKyAnLmFiY2pzLW0nICsgZWxlbWVudC5tZWFzdXJlTnVtYmVyO1xuXHRcdH1cblxuXHRcdGZ1bmN0aW9uIHNldEN1cnNvcihyYW5nZSkge1xuXHRcdFx0aWYgKHJhbmdlKSB7XG5cdFx0XHRcdGlmIChyYW5nZS5tZWFzdXJlU3RhcnQpIHtcblx0XHRcdFx0XHR2YXIgc2VsZWN0b3IgPSBnZXRMaW5lQW5kTWVhc3VyZShyYW5nZSk7XG5cdFx0XHRcdFx0aWYgKHNlbGVjdG9yKVxuXHRcdFx0XHRcdFx0bWVhc3VyZUNhbGxiYWNrKHNlbGVjdG9yKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoY3Vyc29yKSB7XG5cdFx0XHRcdFx0Y3Vyc29yLnN0eWxlLmxlZnQgPSByYW5nZS5sZWZ0ICsgXCJweFwiO1xuXHRcdFx0XHRcdGN1cnNvci5zdHlsZS50b3AgPSByYW5nZS50b3AgKyBcInB4XCI7XG5cdFx0XHRcdFx0Y3Vyc29yLnN0eWxlLndpZHRoID0gcmFuZ2Uud2lkdGggKyBcInB4XCI7XG5cdFx0XHRcdFx0Y3Vyc29yLnN0eWxlLmhlaWdodCA9IHJhbmdlLmhlaWdodCArIFwicHhcIjtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dGltZXIuc3RvcCgpO1xuXHRcdFx0XHR0aW1lciA9IHVuZGVmaW5lZDtcblx0XHRcdH1cblx0XHR9XG5cblx0XHR0aW1lciA9IG5ldyBUaW1pbmdDYWxsYmFja3ModHVuZSwge1xuXHRcdFx0cXBtOiBvcHRpb25zLmJwbSxcblx0XHRcdGV2ZW50Q2FsbGJhY2s6IHNldEN1cnNvclxuXHRcdH0pO1xuXHRcdHRpbWVyLnN0YXJ0KCk7XG5cdH07XG5cblx0YW5pbWF0aW9uLnBhdXNlQW5pbWF0aW9uID0gZnVuY3Rpb24ocGF1c2UpIHtcblx0XHRpZiAodGltZXIpIHtcblx0XHRcdGlmIChwYXVzZSlcblx0XHRcdFx0dGltZXIucGF1c2UoKTtcblx0XHRcdGVsc2Vcblx0XHRcdFx0dGltZXIuc3RhcnQoKTtcblx0XHR9XG5cdH07XG5cblx0YW5pbWF0aW9uLnN0b3BBbmltYXRpb24gPSBmdW5jdGlvbigpIHtcblx0XHRpZiAodGltZXIpIHtcblx0XHRcdHRpbWVyLnN0b3AoKTtcblx0XHRcdHRpbWVyID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0fTtcblxufSkoKTtcblxubW9kdWxlLmV4cG9ydHMgPSBhbmltYXRpb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/api/abc_animation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/api/abc_timing_callbacks.js":
/*!************************************************************!*\
  !*** ./node_modules/abcjs/src/api/abc_timing_callbacks.js ***!
  \************************************************************/
/***/ ((module) => {

eval("var TimingCallbacks = function(target, params) {\n\tvar self = this;\n\tif (!params) params = {};\n\tself.qpm = params.qpm ? parseInt(params.qpm, 10) : null;\n\tif (!self.qpm) {\n\t\tvar tempo = target.metaText ? target.metaText.tempo : null;\n\t\tself.qpm = target.getBpm(tempo);\n\t}\n\tself.extraMeasuresAtBeginning = params.extraMeasuresAtBeginning ? parseInt(params.extraMeasuresAtBeginning, 10) : 0;\n\tself.beatCallback = params.beatCallback; // This is called for each beat.\n\tself.eventCallback = params.eventCallback;   // This is called for each note or rest encountered.\n\tself.lineEndCallback = params.lineEndCallback;   // This is called when the end of a line is approaching.\n\tself.lineEndAnticipation = params.lineEndAnticipation ? parseInt(params.lineEndAnticipation, 10) : 0;   // How many milliseconds before the end should the call happen.\n\tself.beatSubdivisions = params.beatSubdivisions ? parseInt(params.beatSubdivisions, 10) : 1; // how many callbacks per beat is desired.\n\tself.joggerTimer = null;\n\n\tself.replaceTarget = function(newTarget) {\n\t\tself.noteTimings = newTarget.setTiming(self.qpm, self.extraMeasuresAtBeginning);\n\t\tif (newTarget.noteTimings.length === 0)\n\t\t\tself.noteTimings = newTarget.setTiming(0,0);\n\t\tif (self.lineEndCallback) {\n\t\t\tself.lineEndTimings = getLineEndTimings(newTarget.noteTimings, self.lineEndAnticipation);\n\t\t}\n\t\tself.startTime = null;\n\t\tself.currentBeat = 0;\n\t\tself.currentEvent = 0;\n\t\tself.currentLine = 0;\n\t\tself.currentTime = 0;\n\t\tself.isPaused = false;\n\t\tself.isRunning = false;\n\t\tself.pausedPercent = null;\n\t\tself.justUnpaused = false;\n\t\tself.newSeekPercent = 0;\n\t\tself.lastTimestamp = 0;\n\n\t\tif (self.noteTimings.length === 0)\n\t\t\treturn;\n\t\t// noteTimings contains an array of events sorted by time. Events that happen at the same time are in the same element of the array.\n\t\tself.millisecondsPerBeat = 1000 / (self.qpm / 60) / self.beatSubdivisions;\n\t\tself.lastMoment = self.noteTimings[self.noteTimings.length-1].milliseconds;\n\t\tself.totalBeats = Math.round(self.lastMoment / self.millisecondsPerBeat);\n\t};\n\n\tself.replaceTarget(target);\n\n\tself.doTiming = function (timestamp) {\n\t\t// This is called 60 times a second, that is, every 16 msecs.\n\t\t//console.log(\"doTiming\", timestamp, timestamp-self.lastTimestamp);\n\t\tif (self.lastTimestamp === timestamp)\n\t\t\treturn; // If there are multiple seeks or other calls, then we can easily get multiple callbacks for the same instant.\n\t\tself.lastTimestamp = timestamp;\n\t\tif (!self.startTime) {\n\t\t\tself.startTime = timestamp;\n\t\t}\n\n\t\tif (!self.isPaused && self.isRunning) {\n\t\t\tself.currentTime = timestamp - self.startTime;\n\t\t\tself.currentTime += 16; // Add a little slop because this function isn't called exactly.\n\t\t\twhile (self.noteTimings.length > self.currentEvent && self.noteTimings[self.currentEvent].milliseconds < self.currentTime) {\n\t\t\t\tif (self.eventCallback && self.noteTimings[self.currentEvent].type === 'event') {\n\t\t\t\t\tvar thisStartTime = self.startTime; // the event callback can call seek and change the position from beneath us.\n\t\t\t\t\tself.eventCallback(self.noteTimings[self.currentEvent]);\n\t\t\t\t\tif (thisStartTime !== self.startTime) {\n\t\t\t\t\t\tself.currentTime = timestamp - self.startTime;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tself.currentEvent++;\n\t\t\t}\n\t\t\tif (self.lineEndCallback && self.lineEndTimings.length > self.currentLine && self.lineEndTimings[self.currentLine].milliseconds < self.currentTime && self.currentEvent < self.noteTimings.length) {\n\t\t\t\tvar leftEvent = self.noteTimings[self.currentEvent].milliseconds === self.currentTime ? self.noteTimings[self.currentEvent] : self.noteTimings[self.currentEvent-1]\n\t\t\t\tself.lineEndCallback(self.lineEndTimings[self.currentLine], leftEvent, { line: self.currentLine, endTimings: self.lineEndTimings, currentTime: self.currentTime });\n\t\t\t\tself.currentLine++;\n\t\t\t}\n\t\t\tif (self.currentTime < self.lastMoment) {\n\t\t\t\trequestAnimationFrame(self.doTiming);\n\t\t\t\tif (self.currentBeat * self.millisecondsPerBeat < self.currentTime) {\n\t\t\t\t\tvar ret = self.doBeatCallback(timestamp);\n\t\t\t\t\tif (ret !== null)\n\t\t\t\t\t\tself.currentTime = ret;\n\t\t\t\t}\n\t\t\t} else if (self.currentBeat <= self.totalBeats) {\n\t\t\t\t// Because of timing issues (for instance, if the browser tab isn't active), the beat callbacks might not have happened when they are supposed to. To keep the client programs from having to deal with that, this will keep calling the loop until all of them have been sent.\n\t\t\t\tif (self.beatCallback) {\n\t\t\t\t\tvar ret2 = self.doBeatCallback(timestamp);\n\t\t\t\t\tif (ret2 !== null)\n\t\t\t\t\t\tself.currentTime = ret2;\n\t\t\t\t\trequestAnimationFrame(self.doTiming);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (self.currentTime >= self.lastMoment) {\n\t\t\t\tif (self.eventCallback) {\n\t\t\t\t\t// At the end, the event callback can return \"continue\" to keep from stopping.\n\t\t\t\t\t// The event callback can either be a promise or not.\n\t\t\t\t\tvar promise = self.eventCallback(null);\n\t\t\t\t\tself.shouldStop(promise).then(function(shouldStop) {\n\t\t\t\t\t\tif (shouldStop)\n\t\t\t\t\t\t\tself.stop();\n\t\t\t\t\t})\n\t\t\t\t} else\n\t\t\t\t\tself.stop();\n\t\t\t}\n\t\t}\n\t};\n\n\tself.shouldStop = function(promise) {\n\t\t// The return of the last event callback can be \"continue\" or a promise that returns \"continue\".\n\t\t// If it is then don't call stop. Any other value calls stop.\n\t\treturn new Promise(function (resolve) {\n\t\t\tif (!promise)\n\t\t\t\treturn resolve(true);\n\t\t\tif (promise === \"continue\")\n\t\t\t\treturn resolve(false);\n\t\t\tif (promise.then) {\n\t\t\t\tpromise.then(function (result) {\n\t\t\t\t\tresolve(result !== \"continue\");\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\tself.doBeatCallback = function(timestamp) {\n\t\tif (self.beatCallback) {\n\t\t\tvar next = self.currentEvent;\n\t\t\twhile (next < self.noteTimings.length && self.noteTimings[next].left === null)\n\t\t\t\tnext++;\n\t\t\tvar endMs;\n\t\t\tvar ev;\n\t\t\tif (next < self.noteTimings.length) {\n\t\t\t\tendMs = self.noteTimings[next].milliseconds;\n\t\t\t\tnext = Math.max(0, self.currentEvent - 1);\n\t\t\t\twhile (next >= 0 && self.noteTimings[next].left === null)\n\t\t\t\t\tnext--;\n\n\t\t\t\tev = self.noteTimings[next];\n\t\t\t}\n\n\t\t\tvar position = {};\n\t\t\tvar debugInfo = {};\n\t\t\tif (ev) {\n\t\t\t\tposition.top = ev.top;\n\t\t\t\tposition.height = ev.height;\n\n\t\t\t\t// timestamp = the time passed in from the animation timer\n\t\t\t\t// self.startTime = the time that the tune was started (if there was seeking or pausing, it is adjusted to keep the math the same)\n\t\t\t\t// ev = the event that is either happening now or has most recently passed.\n\t\t\t\t// ev.milliseconds = the time that the current event starts (relative to self.startTime)\n\t\t\t\t// endMs = the time that the next event starts\n\t\t\t\t// ev.endX = the x coordinate that the next event happens (or the end of the line or repeat measure)\n\t\t\t\t// ev.left = the x coordinate of the current event\n\t\t\t\t//\n\t\t\t\t// The output is the X coordinate of the current cursor location. It is calculated with the ratio of the length of the event and the width of it.\n\t\t\t\tvar offMs = Math.max(0, timestamp-self.startTime-ev.milliseconds); // Offset in time from the last beat\n\t\t\t\tvar gapMs = endMs - ev.milliseconds; // Length of this event in time\n\t\t\t\tvar gapPx = ev.endX - ev.left; // The length in pixels\n\t\t\t\tvar offPx = gapMs ? offMs * gapPx / gapMs : 0;\n\t\t\t\tposition.left = ev.left + offPx;\n\t\t\t\t// See if this is before the first event - that is the case where there are \"prep beats\"\n\t\t\t\tif (self.currentEvent === 0 && ev.milliseconds > timestamp-self.startTime)\n\t\t\t\t\tposition.left = undefined\n\t\t\t\t\n\t\t\t\tdebugInfo = {\n\t\t\t\t\ttimestamp: timestamp,\n\t\t\t\t\tstartTime: self.startTime,\n\t\t\t\t\tev: ev,\n\t\t\t\t\tendMs: endMs,\n\t\t\t\t\toffMs: offMs,\n\t\t\t\t\toffPx: offPx,\n\t\t\t\t\tgapMs: gapMs,\n\t\t\t\t\tgapPx: gapPx\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tdebugInfo = {\n\t\t\t\t\ttimestamp: timestamp,\n\t\t\t\t\tstartTime: self.startTime,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar thisStartTime = self.startTime; // the beat callback can call seek and change the position from beneath us.\n\t\t\tself.beatCallback(\n\t\t\t\tself.currentBeat / self.beatSubdivisions,\n\t\t\t\tself.totalBeats / self.beatSubdivisions,\n\t\t\t\tself.lastMoment,\n\t\t\t\tposition,\n\t\t\t\tdebugInfo);\n\t\t\tif (thisStartTime !== self.startTime) {\n\t\t\t\treturn timestamp - self.startTime;\n\t\t\t} else\n\t\t\t\tself.currentBeat++;\n\t\t}\n\t\treturn null;\n\t};\n\n\t// In general music doesn't need a timer at 60 fps because notes don't happen that fast.\n\t// For instance, at 120 beats per minute, a sixteenth note takes 125ms. So just as a\n\t// compromise value between performance and jank this is set about half that.\n\tvar JOGGING_INTERVAL = 60;\n\n\tself.animationJogger = function() {\n\t\t// There are some cases where the animation timer doesn't work: for instance when\n\t\t// this isn't running in a visible tab and sometimes on mobile devices. We compensate\n\t\t// by having a backup timer using setTimeout. This won't be accurate so the performance\n\t\t// will be jerky, but without it the requestAnimationFrame might be skipped and so\n\t\t// not called again.\n\t\tif (self.isRunning) {\n\t\t\tself.doTiming(performance.now());\n\t\t\tself.joggerTimer = setTimeout(self.animationJogger, JOGGING_INTERVAL);\n\t\t}\n\t};\n\n\tself.start = function(offsetPercent, units) {\n\t\tself.isRunning = true;\n\t\tif (self.isPaused) {\n\t\t\tself.isPaused = false;\n\t\t\tif (offsetPercent === undefined)\n\t\t\t\tself.justUnpaused = true;\n\t\t}\n\t\tif (offsetPercent) {\n\t\t\tself.setProgress(offsetPercent, units);\n\t\t} else if (offsetPercent === 0) {\n\t\t\tself.reset();\n\t\t} else if (self.pausedPercent !== null) {\n\t\t\tvar now = performance.now();\n\t\t\tself.currentTime = self.lastMoment * self.pausedPercent;\n\t\t\tself.startTime = now - self.currentTime;\n\t\t\tself.pausedPercent = null;\n\t\t\tself.reportNext = true;\n\t\t}\n\t\trequestAnimationFrame(self.doTiming);\n\t\tself.joggerTimer = setTimeout(self.animationJogger, JOGGING_INTERVAL);\n\t};\n\tself.pause = function() {\n\t\tself.isPaused = true;\n\t\tvar now = performance.now();\n\t\tself.pausedPercent = (now - self.startTime) / self.lastMoment;\n\t\tself.isRunning = false;\n\t\tif (self.joggerTimer) {\n\t\t\tclearTimeout(self.joggerTimer);\n\t\t\tself.joggerTimer = null;\n\t\t}\n\t};\n\tself.currentMillisecond = function() {\n\t\treturn self.currentTime;\n\t};\n\tself.reset = function() {\n\t\tself.currentBeat = 0;\n\t\tself.currentEvent = 0;\n\t\tself.currentLine = 0;\n\t\tself.startTime = null;\n\t\tself.pausedPercent = null;\n\t};\n\tself.stop = function() {\n\t\tself.pause();\n\t\tself.reset();\n\t};\n\tself.setProgress = function(position, units) {\n\t\t// the effect of this function is to move startTime so that the callbacks happen correctly for the new seek.\n\t\tvar percent;\n\t\tswitch (units) {\n\t\t\tcase \"seconds\":\n\t\t\t\tself.currentTime = position * 1000;\n\t\t\t\tif (self.currentTime < 0) self.currentTime = 0;\n\t\t\t\tif (self.currentTime > self.lastMoment) self.currentTime = self.lastMoment;\n\t\t\t\tpercent = self.currentTime / self.lastMoment;\n\t\t\t\tbreak;\n\t\t\tcase \"beats\":\n\t\t\t\tself.currentTime = position * self.millisecondsPerBeat * self.beatSubdivisions;\n\t\t\t\tif (self.currentTime < 0) self.currentTime = 0;\n\t\t\t\tif (self.currentTime > self.lastMoment) self.currentTime = self.lastMoment;\n\t\t\t\tpercent = self.currentTime / self.lastMoment;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// this is \"percent\" or any illegal value\n\t\t\t\t// this is passed a value between 0 and 1.\n\t\t\t\tpercent = position;\n\t\t\t\tif (percent < 0) percent = 0;\n\t\t\t\tif (percent > 1) percent = 1;\n\t\t\t\tself.currentTime = self.lastMoment * percent;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!self.isRunning)\n\t\t\tself.pausedPercent = percent;\n\n\t\tvar now = performance.now();\n\t\tself.startTime = now - self.currentTime;\n\n\t\tvar oldEvent = self.currentEvent;\n\t\tself.currentEvent = 0;\n\t\twhile (self.noteTimings.length > self.currentEvent && self.noteTimings[self.currentEvent].milliseconds < self.currentTime) {\n\t\t\tself.currentEvent++;\n\t\t}\n\n\t\tif (self.lineEndCallback) {\n\t\t\tself.currentLine = 0;\n\t\t\twhile (self.lineEndTimings.length > self.currentLine && self.lineEndTimings[self.currentLine].milliseconds + self.lineEndAnticipation < self.currentTime) {\n\t\t\t\tself.currentLine++;\n\t\t\t}\n\t\t}\n\n\t\tvar oldBeat = self.currentBeat;\n\t\tself.currentBeat = Math.floor(self.currentTime / self.millisecondsPerBeat);\n\t\tif (self.beatCallback && oldBeat !== self.currentBeat) // If the movement caused the beat to change, then immediately report it to the client.\n\t\t\tself.doBeatCallback(self.startTime+self.currentTime);\n\n\t\tif (self.eventCallback && self.currentEvent >= 0 && self.noteTimings[self.currentEvent].type === 'event')\n\t\t\tself.eventCallback(self.noteTimings[self.currentEvent]);\n\t\tif (self.lineEndCallback)\n\t\t\tself.lineEndCallback(self.lineEndTimings[self.currentLine], self.noteTimings[self.currentEvent], { line: self.currentLine, endTimings: self.lineEndTimings });\n\n\t\tself.joggerTimer = setTimeout(self.animationJogger, JOGGING_INTERVAL);\n\t};\n};\n\nfunction getLineEndTimings(timings, anticipation) {\n\t// Returns an array of milliseconds to call the lineEndCallback.\n\t// This figures out the timing of the beginning of each line and subtracts the anticipation from it.\n\tvar callbackTimes = [];\n\tvar lastTop = null;\n\tfor (var i = 0; i < timings.length; i++) {\n\t\tvar timing = timings[i];\n\t\tif (timing.type !== 'end' && timing.top !== lastTop) {\n\t\t\tcallbackTimes.push({ measureNumber: timing.measureNumber, milliseconds: timing.milliseconds-anticipation, top: timing.top, bottom: timing.top+timing.height });\n\t\t\tlastTop = timing.top;\n\t\t}\n\t}\n\treturn callbackTimes;\n}\n\nmodule.exports = TimingCallbacks;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/api/abc_timing_callbacks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/api/abc_tunebook.js":
/*!****************************************************!*\
  !*** ./node_modules/abcjs/src/api/abc_tunebook.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_tunebook.js: splits a string representing ABC Music Notation into individual tunes.\n\nvar Parse = __webpack_require__(/*! ../parse/abc_parse */ \"(ssr)/./node_modules/abcjs/src/parse/abc_parse.js\");\nvar bookParser = __webpack_require__(/*! ../parse/abc_parse_book */ \"(ssr)/./node_modules/abcjs/src/parse/abc_parse_book.js\");\nvar tablatures = __webpack_require__(/*! ../tablatures/abc_tablatures */ \"(ssr)/./node_modules/abcjs/src/tablatures/abc_tablatures.js\");\n\n\nvar tunebook = {};\n\n(function() {\n\t\"use strict\";\n\n\ttunebook.numberOfTunes = function(abc) {\n\t\tvar tunes = abc.split(\"\\nX:\");\n\t\tvar num = tunes.length;\n\t\tif (num === 0) num = 1;\n\t\treturn num;\n\t};\n\n\tvar TuneBook = tunebook.TuneBook = function(book) {\n\t\tvar parsed = bookParser(book);\n\t\tthis.header = parsed.header;\n\t\tthis.tunes = parsed.tunes;\n\t};\n\n\tTuneBook.prototype.getTuneById = function(id) {\n\t\tfor (var i = 0; i < this.tunes.length; i++) {\n\t\t\tif (this.tunes[i].id === ''+id)\n\t\t\t\treturn this.tunes[i];\n\t\t}\n\t\treturn null;\n\t};\n\n\tTuneBook.prototype.getTuneByTitle = function(title) {\n\t\tfor (var i = 0; i < this.tunes.length; i++) {\n\t\t\tif (this.tunes[i].title === title)\n\t\t\t\treturn this.tunes[i];\n\t\t}\n\t\treturn null;\n\t};\n\n\ttunebook.parseOnly = function(abc, params) {\n\t\tvar numTunes = tunebook.numberOfTunes(abc);\n\n\t\t// this just needs to be passed in because this tells the engine how many tunes to process.\n\t\tvar output = [];\n\t\tfor (var i = 0; i < numTunes; i++) {\n\t\t\toutput.push(1);\n\t\t}\n\t\tfunction callback() {\n\t\t\t// Don't need to do anything with the parsed tunes.\n\t\t}\n\t\treturn tunebook.renderEngine(callback, output, abc, params);\n\t};\n\n\ttunebook.renderEngine = function (callback, output, abc, params) {\n\t\tvar ret = [];\n\t\tvar isArray = function(testObject) {\n\t\t\treturn testObject && !(testObject.propertyIsEnumerable('length')) && typeof testObject === 'object' && typeof testObject.length === 'number';\n\t\t};\n\n\t\t// check and normalize input parameters\n\t\tif (output === undefined || abc === undefined)\n\t\t\treturn;\n\t\tif (!isArray(output))\n\t\t\toutput = [ output ];\n\t\tif (params === undefined)\n\t\t\tparams = {};\n\t\tvar currentTune = params.startingTune ? parseInt(params.startingTune, 10) : 0;\n\n\t\t// parse the abc string\n\t\tvar book = new TuneBook(abc);\n\t\tvar abcParser = new Parse();\n\n\t\t// output each tune, if it exists. Otherwise clear the div.\n\t\tfor (var i = 0; i < output.length; i++) {\n\t\t\tvar div = output[i];\n\t\t\tif (div === \"*\") {\n\t\t\t\t// This is for \"headless\" rendering: doing the work but not showing the svg.\n\t\t\t} else if (typeof(div) === \"string\")\n\t\t\t\tdiv = document.getElementById(div);\n\t\t\tif (div) {\n\t\t\t\tif (currentTune >= 0 && currentTune < book.tunes.length) {\n\t\t\t\t\tabcParser.parse(book.tunes[currentTune].abc, params, book.tunes[currentTune].startPos - book.header.length);\n\t\t\t\t\tvar tune = abcParser.getTune();\n\t\t\t\t\t//\n\t\t\t\t\t// Init tablatures plugins\n\t\t\t\t\t//\n\t\t\t\t\tif (params.tablature) {\n\t\t\t\t\t\ttune.tablatures = tablatures.preparePlugins(tune, currentTune, params);\n\t\t\t\t\t}\n\t\t\t\t\tvar warnings = abcParser.getWarnings();\n\t\t\t\t\tif (warnings)\n\t\t\t\t\t\ttune.warnings = warnings;\n\t\t\t\t\tvar override = callback(div, tune, i, book.tunes[currentTune].abc);\n\t\t\t\t\tret.push(override ? override : tune);\n\t\t\t\t} else {\n\t\t\t\t\tif (div['innerHTML'])\n\t\t\t\t\t\tdiv.innerHTML = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentTune++;\n\t\t}\n\t  return ret;\n\t};\n\n\tfunction flattenTune(tuneObj) {\n\t\t// This removes the line breaks and removes the non-music lines.\n\t\tvar staves = [];\n\t\tfor (var j = 0; j < tuneObj.lines.length; j++) {\n\t\t\tvar line = tuneObj.lines[j];\n\t\t\tif (line.staff) {\n\t\t\t\tfor (var k = 0; k < line.staff.length; k++) {\n\t\t\t\t\tvar staff = line.staff[k];\n\t\t\t\t\tif (!staves[k])\n\t\t\t\t\t\tstaves[k] = staff;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor (var i = 0; i < staff.voices.length; i++) {\n\t\t\t\t\t\t\tif (staves[k].voices[i])\n\t\t\t\t\t\t\t\tstaves[k].voices[i] = staves[k].voices[i].concat(staff.voices[i]);\n\t\t\t\t\t\t\t// TODO-PER: If staves[k].voices[i] doesn't exist, that means a voice appeared in the middle of the tune. That isn't handled yet.\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn staves;\n\t}\n\n\tfunction measuresParser(staff, tune) {\n\t\tvar voices = [];\n\t\tvar lastChord = null;\n\t\tvar measureStartChord = null;\n\t\tvar fragStart = null;\n\t\tvar hasNotes = false;\n\n\t\tfor (var i = 0; i < staff.voices.length; i++) {\n\t\t\tvar voice = staff.voices[i];\n\t\t\tvoices.push([]);\n\t\t\tfor (var j = 0; j < voice.length; j++) {\n\t\t\t\tvar elem = voice[j];\n\t\t\t\tif (fragStart === null && elem.startChar >= 0) {\n\t\t\t\t\tfragStart = elem.startChar;\n\t\t\t\t\tif (elem.chord === undefined)\n\t\t\t\t\t\tmeasureStartChord = lastChord;\n\t\t\t\t\telse\n\t\t\t\t\t\tmeasureStartChord = null;\n\t\t\t\t}\n\t\t\t\tif (elem.chord)\n\t\t\t\t\tlastChord = elem;\n\t\t\t\tif (elem.el_type === 'bar') {\n\t\t\t\t\tif (hasNotes) {\n\t\t\t\t\t\tvar frag = tune.abc.substring(fragStart, elem.endChar);\n\t\t\t\t\t\tvar measure = {abc: frag};\n\t\t\t\t\t\tlastChord = measureStartChord && measureStartChord.chord && measureStartChord.chord.length > 0 ? measureStartChord.chord[0].name : null;\n\t\t\t\t\t\tif (lastChord)\n\t\t\t\t\t\t\tmeasure.lastChord = lastChord;\n\t\t\t\t\t\tif (elem.startEnding)\n\t\t\t\t\t\t\tmeasure.startEnding = elem.startEnding;\n\t\t\t\t\t\tif (elem.endEnding)\n\t\t\t\t\t\t\tmeasure.endEnding = elem.endEnding;\n\t\t\t\t\t\tvoices[i].push(measure);\n\t\t\t\t\t\tfragStart = null;\n\t\t\t\t\t\thasNotes = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (elem.el_type === 'note') {\n\t\t\t\t\thasNotes = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn voices;\n\t}\n\n\ttunebook.extractMeasures = function(abc) {\n\t\tvar tunes = [];\n\t\tvar book = new TuneBook(abc);\n\t\tfor (var i = 0; i < book.tunes.length; i++) {\n\t\t\tvar tune = book.tunes[i];\n\t\t\tvar arr = tune.abc.split(\"K:\");\n\t\t\tvar arr2 = arr[1].split(\"\\n\");\n\t\t\tvar header = arr[0] + \"K:\" + arr2[0] + \"\\n\";\n\t\t\tvar lastChord = null;\n\t\t\tvar measureStartChord = null;\n\t\t\tvar fragStart = null;\n\t\t\tvar measures = [];\n\t\t\tvar hasNotes = false;\n\t\t\tvar tuneObj = tunebook.parseOnly(tune.abc)[0];\n\t\t\tvar hasPickup = tuneObj.getPickupLength() > 0;\n\t\t\t// var staves = flattenTune(tuneObj);\n\t\t\t// for (var s = 0; s < staves.length; s++) {\n\t\t\t// \tvar voices = measuresParser(staves[s], tune);\n\t\t\t// \tif (s === 0)\n\t\t\t// \t\tmeasures = voices;\n\t\t\t// \telse {\n\t\t\t// \t\tfor (var ss = 0; ss < voices.length; ss++) {\n\t\t\t// \t\t\tvar voice = voices[ss];\n\t\t\t// \t\t\tif (measures.length <= ss)\n\t\t\t// \t\t\t\tmeasures.push([]);\n\t\t\t// \t\t\tvar measureVoice = measures[ss];\n\t\t\t// \t\t\tfor (var sss = 0; sss < voice.length; sss++) {\n\t\t\t// \t\t\t\tif (measureVoice.length > sss)\n\t\t\t// \t\t\t\t\tmeasureVoice[sss].abc += \"\\n\" + voice[sss].abc;\n\t\t\t// \t\t\t\telse\n\t\t\t// \t\t\t\t\tmeasures.push(voice[sss]);\n\t\t\t// \t\t\t}\n\t\t\t// \t\t}\n\t\t\t// \t}\n\t\t\t// \tconsole.log(voices);\n\t\t\t// }\n\t\t\t// measures = measures[0];\n\n\t\t\tfor (var j = 0; j < tuneObj.lines.length; j++) {\n\t\t\t\tvar line = tuneObj.lines[j];\n\t\t\t\tif (line.staff) {\n\t\t\t\t\tfor (var k = 0; k < 1 /*line.staff.length*/; k++) {\n\t\t\t\t\t\tvar staff = line.staff[k];\n\t\t\t\t\t\tfor (var kk = 0; kk < 1 /*staff.voices.length*/; kk++) {\n\t\t\t\t\t\t\tvar voice = staff.voices[kk];\n\t\t\t\t\t\t\tfor (var kkk = 0; kkk < voice.length; kkk++) {\n\t\t\t\t\t\t\t\tvar elem = voice[kkk];\n\t\t\t\t\t\t\t\tif (fragStart === null && elem.startChar >= 0) {\n\t\t\t\t\t\t\t\t\tfragStart = elem.startChar;\n\t\t\t\t\t\t\t\t\tif (elem.chord === undefined)\n\t\t\t\t\t\t\t\t\t\tmeasureStartChord = lastChord;\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\tmeasureStartChord = null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (elem.chord)\n\t\t\t\t\t\t\t\t\tlastChord = elem;\n\t\t\t\t\t\t\t\tif (elem.el_type === 'bar') {\n\t\t\t\t\t\t\t\t\tif (hasNotes) {\n\t\t\t\t\t\t\t\t\t\tvar frag = tune.abc.substring(fragStart, elem.endChar);\n\t\t\t\t\t\t\t\t\t\tvar measure = {abc: frag};\n\t\t\t\t\t\t\t\t\t\tlastChord = measureStartChord && measureStartChord.chord && measureStartChord.chord.length > 0 ? measureStartChord.chord[0].name : null;\n\t\t\t\t\t\t\t\t\t\tif (lastChord)\n\t\t\t\t\t\t\t\t\t\t\tmeasure.lastChord = lastChord;\n\t\t\t\t\t\t\t\t\t\tif (elem.startEnding)\n\t\t\t\t\t\t\t\t\t\t\tmeasure.startEnding = elem.startEnding;\n\t\t\t\t\t\t\t\t\t\tif (elem.endEnding)\n\t\t\t\t\t\t\t\t\t\t\tmeasure.endEnding = elem.endEnding;\n\t\t\t\t\t\t\t\t\t\tmeasures.push(measure);\n\t\t\t\t\t\t\t\t\t\tfragStart = null;\n\t\t\t\t\t\t\t\t\t\thasNotes = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (elem.el_type === 'note') {\n\t\t\t\t\t\t\t\t\thasNotes = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttunes.push({\n\t\t\t\theader: header,\n\t\t\t\tmeasures: measures,\n\t\t\t\thasPickup: hasPickup\n\t\t\t});\n\t\t}\n\t\treturn tunes;\n\t};\n})();\n\nmodule.exports = tunebook;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/api/abc_tunebook.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/api/abc_tunebook_svg.js":
/*!********************************************************!*\
  !*** ./node_modules/abcjs/src/api/abc_tunebook_svg.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var tunebook = __webpack_require__(/*! ./abc_tunebook */ \"(ssr)/./node_modules/abcjs/src/api/abc_tunebook.js\");\nvar Tune = __webpack_require__(/*! ../data/abc_tune */ \"(ssr)/./node_modules/abcjs/src/data/abc_tune.js\");\n\nvar EngraverController = __webpack_require__(/*! ../write/engraver-controller */ \"(ssr)/./node_modules/abcjs/src/write/engraver-controller.js\");\nvar Parse = __webpack_require__(/*! ../parse/abc_parse */ \"(ssr)/./node_modules/abcjs/src/parse/abc_parse.js\");\nvar wrap = __webpack_require__(/*! ../parse/wrap_lines */ \"(ssr)/./node_modules/abcjs/src/parse/wrap_lines.js\");\n\n\nvar resizeDivs = {};\nfunction resizeOuter() {\n    var width = window.innerWidth;\n    for (var id in resizeDivs) {\n        if (resizeDivs.hasOwnProperty(id)) {\n            var outer = resizeDivs[id];\n            var ofs = outer.offsetLeft;\n            width -= ofs * 2;\n            outer.style.width = width + \"px\";\n        }\n    }\n}\n\ntry {\n    window.addEventListener(\"resize\", resizeOuter);\n    window.addEventListener(\"orientationChange\", resizeOuter);\n} catch(e) {\n    // if we aren't in a browser, this code will crash, but it is not needed then either.\n}\n\nfunction renderOne(div, tune, params, tuneNumber, lineOffset) {\n    if (params.viewportHorizontal) {\n        // Create an inner div that holds the music, so that the passed in div will be the viewport.\n        div.innerHTML = '<div class=\"abcjs-inner\"></div>';\n        if (params.scrollHorizontal) {\n            div.style.overflowX = \"auto\";\n            div.style.overflowY = \"hidden\";\n        } else\n            div.style.overflow = \"hidden\";\n        resizeDivs[div.id] = div; // We use a hash on the element's id so that multiple calls won't keep adding to the list.\n        div = div.children[0]; // The music should be rendered in the inner div.\n    }\n    else if (params.viewportVertical) {\n        // Create an inner div that holds the music, so that the passed in div will be the viewport.\n        div.innerHTML = '<div class=\"abcjs-inner scroll-amount\"></div>';\n        div.style.overflowX = \"hidden\";\n        div.style.overflowY = \"auto\";\n        div = div.children[0]; // The music should be rendered in the inner div.\n    }\n    else\n\t    div.innerHTML = \"\";\n    var engraver_controller = new EngraverController(div, params);\n    engraver_controller.engraveABC(tune, tuneNumber, lineOffset);\n    tune.engraver = engraver_controller;\n    if (params.viewportVertical || params.viewportHorizontal) {\n        // If we added a wrapper around the div, then we need to size the wrapper, too.\n        var parent = div.parentNode;\n        parent.style.width = div.style.width;\n    }\n}\n\n// A quick way to render a tune from javascript when interactivity is not required.\n// This is used when a javascript routine has some abc text that it wants to render\n// in a div or collection of divs. One tune or many can be rendered.\n//\n// parameters:\n//      output: an array of divs that the individual tunes are rendered to.\n//          If the number of tunes exceeds the number of divs in the array, then\n//          only the first tunes are rendered. If the number of divs exceeds the number\n//          of tunes, then the unused divs are cleared. The divs can be passed as either\n//          elements or strings of ids. If ids are passed, then the div MUST exist already.\n//          (if a single element is passed, then it is an implied array of length one.)\n//          (if a null is passed for an element, or the element doesn't exist, then that tune is skipped.)\n//      abc: text representing a tune or an entire tune book in ABC notation.\n//      renderParams: hash of:\n//          startingTune: an index, starting at zero, representing which tune to start rendering at.\n//              (If this element is not present, then rendering starts at zero.)\n//          width: 800 by default. The width in pixels of the output paper\nvar renderAbc = function(output, abc, parserParams, engraverParams, renderParams) {\n    // Note: all parameters have been condensed into the first ones. It doesn't hurt anything to allow the old format, so just copy them here.\n    var params = {};\n    var key;\n    if (parserParams) {\n        for (key in parserParams) {\n            if (parserParams.hasOwnProperty(key)) {\n                params[key] = parserParams[key];\n            }\n        }\n        if (params.warnings_id && params.tablature) {\n            params.tablature.warning_id = params.warnings_id;\n        }\n    }\n    if (engraverParams) {\n        for (key in engraverParams) {\n            if (engraverParams.hasOwnProperty(key)) {\n\t            // There is a conflict with the name of the parameter \"listener\". If it is in the second parameter, then it is for click.\n\t            if (key === \"listener\") {\n\t            \tif (engraverParams[key].highlight)\n\t\t                params.clickListener = engraverParams[key].highlight;\n\t            } else\n                    params[key] = engraverParams[key];\n            }\n        }\n    }\n    if (renderParams) {\n        for (key in renderParams) {\n            if (renderParams.hasOwnProperty(key)) {\n                params[key] = renderParams[key];\n            }\n        }\n    }\n\n    function callback(div, tune, tuneNumber, abcString) {\n        var removeDiv = false;\n        if (div === \"*\") {\n            removeDiv = true;\n            div = document.createElement(\"div\");\n            div.setAttribute(\"style\", \"visibility: hidden;\");\n            document.body.appendChild(div);\n        }\n        if (!removeDiv && params.wrap && params.staffwidth) {\n            tune = doLineWrapping(div, tune, tuneNumber, abcString, params);\n\t        return tune;\n        }\n        if (params.afterParsing)\n            params.afterParsing(tune, tuneNumber, abcString);\n        renderOne(div, tune, params, tuneNumber, 0);\n        if (removeDiv)\n            div.parentNode.removeChild(div);\n        return null;\n    }\n\n    return tunebook.renderEngine(callback, output, abc, params);\n};\n\nfunction doLineWrapping(div, tune, tuneNumber, abcString, params) {\n\tvar engraver_controller = new EngraverController(div, params);\n\tvar widths = engraver_controller.getMeasureWidths(tune);\n\n\tvar ret = wrap.calcLineWraps(tune, widths, params);\n\tif (ret.reParse) {\n        var abcParser = new Parse();\n        abcParser.parse(abcString, ret.revisedParams);\n        tune = abcParser.getTune();\n        var warnings = abcParser.getWarnings();\n        if (warnings)\n            tune.warnings = warnings;\n    }\n    if (params.afterParsing)\n        params.afterParsing(tune, tuneNumber, abcString);\n    renderOne(div, tune, ret.revisedParams, tuneNumber, 0);\n\ttune.explanation = ret.explanation;\n\treturn tune;\n}\n\nmodule.exports = renderAbc;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/api/abc_tunebook_svg.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/api/tune-metrics.js":
/*!****************************************************!*\
  !*** ./node_modules/abcjs/src/api/tune-metrics.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var tunebook = __webpack_require__(/*! ./abc_tunebook */ \"(ssr)/./node_modules/abcjs/src/api/abc_tunebook.js\");\nvar EngraverController = __webpack_require__(/*! ../write/engraver-controller */ \"(ssr)/./node_modules/abcjs/src/write/engraver-controller.js\");\n\nvar tuneMetrics = function(abc, params) {\n    function callback(div, tune, tuneNumber, abcString) {\n\t\tdiv = document.createElement(\"div\");\n\t\tdiv.setAttribute(\"style\", \"visibility: hidden;\");\n\t\tdocument.body.appendChild(div);\n\t\tvar engraver_controller = new EngraverController(div, params);\n\t\tvar widths = engraver_controller.getMeasureWidths(tune);\n            div.parentNode.removeChild(div);\n        return {sections: widths};\n    }\n\n    return tunebook.renderEngine(callback, \"*\", abc, params);\n};\n\nmodule.exports = tuneMetrics;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL2FwaS90dW5lLW1ldHJpY3MuanMiLCJtYXBwaW5ncyI6IkFBQUEsZUFBZSxtQkFBTyxDQUFDLDBFQUFnQjtBQUN2Qyx5QkFBeUIsbUJBQU8sQ0FBQyxpR0FBOEI7O0FBRS9EO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL2FwaS90dW5lLW1ldHJpY3MuanM/OTAwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdHVuZWJvb2sgPSByZXF1aXJlKCcuL2FiY190dW5lYm9vaycpO1xudmFyIEVuZ3JhdmVyQ29udHJvbGxlciA9IHJlcXVpcmUoJy4uL3dyaXRlL2VuZ3JhdmVyLWNvbnRyb2xsZXInKTtcblxudmFyIHR1bmVNZXRyaWNzID0gZnVuY3Rpb24oYWJjLCBwYXJhbXMpIHtcbiAgICBmdW5jdGlvbiBjYWxsYmFjayhkaXYsIHR1bmUsIHR1bmVOdW1iZXIsIGFiY1N0cmluZykge1xuXHRcdGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cdFx0ZGl2LnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIFwidmlzaWJpbGl0eTogaGlkZGVuO1wiKTtcblx0XHRkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGRpdik7XG5cdFx0dmFyIGVuZ3JhdmVyX2NvbnRyb2xsZXIgPSBuZXcgRW5ncmF2ZXJDb250cm9sbGVyKGRpdiwgcGFyYW1zKTtcblx0XHR2YXIgd2lkdGhzID0gZW5ncmF2ZXJfY29udHJvbGxlci5nZXRNZWFzdXJlV2lkdGhzKHR1bmUpO1xuICAgICAgICAgICAgZGl2LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZGl2KTtcbiAgICAgICAgcmV0dXJuIHtzZWN0aW9uczogd2lkdGhzfTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHVuZWJvb2sucmVuZGVyRW5naW5lKGNhbGxiYWNrLCBcIipcIiwgYWJjLCBwYXJhbXMpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB0dW5lTWV0cmljcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/api/tune-metrics.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/const/key-accidentals.js":
/*!*********************************************************!*\
  !*** ./node_modules/abcjs/src/const/key-accidentals.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var { relativeMajor } = __webpack_require__(/*! ./relative-major */ \"(ssr)/./node_modules/abcjs/src/const/relative-major.js\");\n\nvar key1sharp = { acc: 'sharp', note: 'f' };\nvar key2sharp = { acc: 'sharp', note: 'c' };\nvar key3sharp = { acc: 'sharp', note: 'g' };\nvar key4sharp = { acc: 'sharp', note: 'd' };\nvar key5sharp = { acc: 'sharp', note: 'A' };\nvar key6sharp = { acc: 'sharp', note: 'e' };\nvar key7sharp = { acc: 'sharp', note: 'B' };\nvar key1flat = { acc: 'flat', note: 'B' };\nvar key2flat = { acc: 'flat', note: 'e' };\nvar key3flat = { acc: 'flat', note: 'A' };\nvar key4flat = { acc: 'flat', note: 'd' };\nvar key5flat = { acc: 'flat', note: 'G' };\nvar key6flat = { acc: 'flat', note: 'c' };\nvar key7flat = { acc: 'flat', note: 'F' };\n\nvar keys = {\n\t'C#': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp, key6sharp, key7sharp],\n\t'F#': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp, key6sharp],\n\t'B': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp],\n\t'E': [key1sharp, key2sharp, key3sharp, key4sharp],\n\t'A': [key1sharp, key2sharp, key3sharp],\n\t'D': [key1sharp, key2sharp],\n\t'G': [key1sharp],\n\t'C': [],\n\t'F': [key1flat],\n\t'Bb': [key1flat, key2flat],\n\t'Eb': [key1flat, key2flat, key3flat],\n\t'Cm': [key1flat, key2flat, key3flat],\n\t'Ab': [key1flat, key2flat, key3flat, key4flat],\n\t'Db': [key1flat, key2flat, key3flat, key4flat, key5flat],\n\t'Gb': [key1flat, key2flat, key3flat, key4flat, key5flat, key6flat],\n\t'Cb': [key1flat, key2flat, key3flat, key4flat, key5flat, key6flat, key7flat],\n\n\t// The following are not in the 2.0 spec, but seem normal enough.\n\t// TODO-PER: These SOUND the same as what's written, but they aren't right\n\t'A#': [key1flat, key2flat],\n\t'B#': [],\n\t'D#': [key1flat, key2flat, key3flat],\n\t'E#': [key1flat],\n\t'G#': [key1flat, key2flat, key3flat, key4flat],\n\t'none': [],\n};\n\nfunction keyAccidentals(key) {\n\tvar newKey = keys[relativeMajor(key)]\n\tif (!newKey) // If we don't recognize the key then there is no change\n\t\treturn null\n\treturn JSON.parse(JSON.stringify(newKey))\n};\n\nmodule.exports = keyAccidentals;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL2NvbnN0L2tleS1hY2NpZGVudGFscy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxNQUFNLGdCQUFnQixFQUFFLG1CQUFPLENBQUMsZ0ZBQWtCOztBQUVsRCxrQkFBa0I7QUFDbEIsa0JBQWtCO0FBQ2xCLGtCQUFrQjtBQUNsQixrQkFBa0I7QUFDbEIsa0JBQWtCO0FBQ2xCLGtCQUFrQjtBQUNsQixrQkFBa0I7QUFDbEIsaUJBQWlCO0FBQ2pCLGlCQUFpQjtBQUNqQixpQkFBaUI7QUFDakIsaUJBQWlCO0FBQ2pCLGlCQUFpQjtBQUNqQixpQkFBaUI7QUFDakIsaUJBQWlCOztBQUVqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvY29uc3Qva2V5LWFjY2lkZW50YWxzLmpzP2U0MGMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHsgcmVsYXRpdmVNYWpvciB9ID0gcmVxdWlyZShcIi4vcmVsYXRpdmUtbWFqb3JcIik7XG5cbnZhciBrZXkxc2hhcnAgPSB7IGFjYzogJ3NoYXJwJywgbm90ZTogJ2YnIH07XG52YXIga2V5MnNoYXJwID0geyBhY2M6ICdzaGFycCcsIG5vdGU6ICdjJyB9O1xudmFyIGtleTNzaGFycCA9IHsgYWNjOiAnc2hhcnAnLCBub3RlOiAnZycgfTtcbnZhciBrZXk0c2hhcnAgPSB7IGFjYzogJ3NoYXJwJywgbm90ZTogJ2QnIH07XG52YXIga2V5NXNoYXJwID0geyBhY2M6ICdzaGFycCcsIG5vdGU6ICdBJyB9O1xudmFyIGtleTZzaGFycCA9IHsgYWNjOiAnc2hhcnAnLCBub3RlOiAnZScgfTtcbnZhciBrZXk3c2hhcnAgPSB7IGFjYzogJ3NoYXJwJywgbm90ZTogJ0InIH07XG52YXIga2V5MWZsYXQgPSB7IGFjYzogJ2ZsYXQnLCBub3RlOiAnQicgfTtcbnZhciBrZXkyZmxhdCA9IHsgYWNjOiAnZmxhdCcsIG5vdGU6ICdlJyB9O1xudmFyIGtleTNmbGF0ID0geyBhY2M6ICdmbGF0Jywgbm90ZTogJ0EnIH07XG52YXIga2V5NGZsYXQgPSB7IGFjYzogJ2ZsYXQnLCBub3RlOiAnZCcgfTtcbnZhciBrZXk1ZmxhdCA9IHsgYWNjOiAnZmxhdCcsIG5vdGU6ICdHJyB9O1xudmFyIGtleTZmbGF0ID0geyBhY2M6ICdmbGF0Jywgbm90ZTogJ2MnIH07XG52YXIga2V5N2ZsYXQgPSB7IGFjYzogJ2ZsYXQnLCBub3RlOiAnRicgfTtcblxudmFyIGtleXMgPSB7XG5cdCdDIyc6IFtrZXkxc2hhcnAsIGtleTJzaGFycCwga2V5M3NoYXJwLCBrZXk0c2hhcnAsIGtleTVzaGFycCwga2V5NnNoYXJwLCBrZXk3c2hhcnBdLFxuXHQnRiMnOiBba2V5MXNoYXJwLCBrZXkyc2hhcnAsIGtleTNzaGFycCwga2V5NHNoYXJwLCBrZXk1c2hhcnAsIGtleTZzaGFycF0sXG5cdCdCJzogW2tleTFzaGFycCwga2V5MnNoYXJwLCBrZXkzc2hhcnAsIGtleTRzaGFycCwga2V5NXNoYXJwXSxcblx0J0UnOiBba2V5MXNoYXJwLCBrZXkyc2hhcnAsIGtleTNzaGFycCwga2V5NHNoYXJwXSxcblx0J0EnOiBba2V5MXNoYXJwLCBrZXkyc2hhcnAsIGtleTNzaGFycF0sXG5cdCdEJzogW2tleTFzaGFycCwga2V5MnNoYXJwXSxcblx0J0cnOiBba2V5MXNoYXJwXSxcblx0J0MnOiBbXSxcblx0J0YnOiBba2V5MWZsYXRdLFxuXHQnQmInOiBba2V5MWZsYXQsIGtleTJmbGF0XSxcblx0J0ViJzogW2tleTFmbGF0LCBrZXkyZmxhdCwga2V5M2ZsYXRdLFxuXHQnQ20nOiBba2V5MWZsYXQsIGtleTJmbGF0LCBrZXkzZmxhdF0sXG5cdCdBYic6IFtrZXkxZmxhdCwga2V5MmZsYXQsIGtleTNmbGF0LCBrZXk0ZmxhdF0sXG5cdCdEYic6IFtrZXkxZmxhdCwga2V5MmZsYXQsIGtleTNmbGF0LCBrZXk0ZmxhdCwga2V5NWZsYXRdLFxuXHQnR2InOiBba2V5MWZsYXQsIGtleTJmbGF0LCBrZXkzZmxhdCwga2V5NGZsYXQsIGtleTVmbGF0LCBrZXk2ZmxhdF0sXG5cdCdDYic6IFtrZXkxZmxhdCwga2V5MmZsYXQsIGtleTNmbGF0LCBrZXk0ZmxhdCwga2V5NWZsYXQsIGtleTZmbGF0LCBrZXk3ZmxhdF0sXG5cblx0Ly8gVGhlIGZvbGxvd2luZyBhcmUgbm90IGluIHRoZSAyLjAgc3BlYywgYnV0IHNlZW0gbm9ybWFsIGVub3VnaC5cblx0Ly8gVE9ETy1QRVI6IFRoZXNlIFNPVU5EIHRoZSBzYW1lIGFzIHdoYXQncyB3cml0dGVuLCBidXQgdGhleSBhcmVuJ3QgcmlnaHRcblx0J0EjJzogW2tleTFmbGF0LCBrZXkyZmxhdF0sXG5cdCdCIyc6IFtdLFxuXHQnRCMnOiBba2V5MWZsYXQsIGtleTJmbGF0LCBrZXkzZmxhdF0sXG5cdCdFIyc6IFtrZXkxZmxhdF0sXG5cdCdHIyc6IFtrZXkxZmxhdCwga2V5MmZsYXQsIGtleTNmbGF0LCBrZXk0ZmxhdF0sXG5cdCdub25lJzogW10sXG59O1xuXG5mdW5jdGlvbiBrZXlBY2NpZGVudGFscyhrZXkpIHtcblx0dmFyIG5ld0tleSA9IGtleXNbcmVsYXRpdmVNYWpvcihrZXkpXVxuXHRpZiAoIW5ld0tleSkgLy8gSWYgd2UgZG9uJ3QgcmVjb2duaXplIHRoZSBrZXkgdGhlbiB0aGVyZSBpcyBubyBjaGFuZ2Vcblx0XHRyZXR1cm4gbnVsbFxuXHRyZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShuZXdLZXkpKVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBrZXlBY2NpZGVudGFscztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/const/key-accidentals.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/const/relative-major.js":
/*!********************************************************!*\
  !*** ./node_modules/abcjs/src/const/relative-major.js ***!
  \********************************************************/
/***/ ((module) => {

eval("// All these keys have the same number of accidentals\nvar keys = {\n\t'C': { modes: ['CMaj', 'Amin', 'Am', 'GMix', 'DDor', 'EPhr', 'FLyd', 'BLoc'], stepsFromC: 0 },\n\t'Db': { modes: ['DbMaj', 'Bbmin', 'Bbm', 'AbMix', 'EbDor', 'FPhr', 'GbLyd', 'CLoc'], stepsFromC: 1 },\n\t'D': { modes: ['DMaj', 'Bmin', 'Bm', 'AMix', 'EDor', 'F#Phr', 'GLyd', 'C#Loc'], stepsFromC: 2 },\n\t'Eb': { modes: ['EbMaj', 'Cmin', 'Cm', 'BbMix', 'FDor', 'GPhr', 'AbLyd', 'DLoc'], stepsFromC: 3 },\n\t'E': { modes: ['EMaj', 'C#min', 'C#m', 'BMix', 'F#Dor', 'G#Phr', 'ALyd', 'D#Loc'], stepsFromC: 4 },\n\t'F': { modes: ['FMaj', 'Dmin', 'Dm', 'CMix', 'GDor', 'APhr', 'BbLyd', 'ELoc'], stepsFromC: 5 },\n\t'Gb': { modes: ['GbMaj', 'Ebmin', 'Ebm', 'DbMix', 'AbDor', 'BbPhr', 'CbLyd', 'FLoc'], stepsFromC: 6 },\n\t'G': { modes: ['GMaj', 'Emin', 'Em', 'DMix', 'ADor', 'BPhr', 'CLyd', 'F#Loc'], stepsFromC: 7 },\n\t'Ab': { modes: ['AbMaj', 'Fmin', 'Fm', 'EbMix', 'BbDor', 'CPhr', 'DbLyd', 'GLoc'], stepsFromC: 8 },\n\t'A': { modes: ['AMaj', 'F#min', 'F#m', 'EMix', 'BDor', 'C#Phr', 'DLyd', 'G#Loc'], stepsFromC: 9 },\n\t'Bb': { modes: ['BbMaj', 'Gmin', 'Gm', 'FMix', 'CDor', 'DPhr', 'EbLyd', 'ALoc'], stepsFromC: 10 },\n\t'B': { modes: ['BMaj', 'G#min', 'G#m', 'F#Mix', 'C#Dor', 'D#Phr', 'ELyd', 'A#Loc'], stepsFromC: 11 },\n\t// Enharmonic keys\n\t'C#': { modes: ['C#Maj', 'A#min', 'A#m', 'G#Mix', 'D#Dor', 'E#Phr', 'F#Lyd', 'B#Loc'], stepsFromC: 1 },\n\t'F#': { modes: ['F#Maj', 'D#min', 'D#m', 'C#Mix', 'G#Dor', 'A#Phr', 'BLyd', 'E#Loc'], stepsFromC: 6 },\n\t'Cb': { modes: ['CbMaj', 'Abmin', 'Abm', 'GbMix', 'DbDor', 'EbPhr', 'FbLyd', 'BbLoc'], stepsFromC: 11 },\n}\n\nvar keyReverse = null\n\nfunction createKeyReverse() {\n\tkeyReverse = {}\n\tvar allKeys = Object.keys(keys)\n\tfor (var i = 0 ; i < allKeys.length; i++) {\n\t\tvar keyObj = keys[allKeys[i]]\n\t\tkeyReverse[allKeys[i].toLowerCase()] = allKeys[i];\n\t\tfor (var j = 0; j < keyObj.modes.length; j++) {\n\t\t\tvar mode = keyObj.modes[j].toLowerCase()\n\t\t\tkeyReverse[mode] = allKeys[i];\n\t\t}\n\t}\n}\n\nfunction relativeMajor(key) {\n\t// Translate a key to its relative major. If it doesn't exist, do the best we can\n\t// by just returning the original key.\n\t// There are alternate spellings of these - so the search needs to be case insensitive.\n\t// To make this efficient, the first time this is called the \"keys\" object is reversed so this search is fast in the future\n\tif (!keyReverse) {\n\t\tcreateKeyReverse()\n\t}\n\t// get the key portion itself - there might be other stuff, like extra sharps and flats, or the mode written out.\n\tvar mode = key.toLowerCase().match(/([a-g][b#]?)(maj|min|mix|dor|phr|lyd|loc|m)?/)\n\tif (!mode || !mode[2])\n\t\treturn key;\n\tmode = mode[1] + mode[2]\n\tvar maj = keyReverse[mode]\n\tif (maj)\n\t\treturn maj;\n\treturn key;\n}\n\nfunction relativeMode(majorKey, mode) {\n\t// The reverse of the relativeMajor. Translate it back to the original mode.\n\t// If it isn't a recognized mode or it is already major, then just return the major key.\n\tvar group = keys[majorKey]\n\tif (!group)\n\t\treturn majorKey;\n\tif (mode === '')\n\t\treturn majorKey;\n\tvar match = mode.toLowerCase().match(/^(maj|min|mix|dor|phr|lyd|loc|m)/)\t\n\tif (!match)\n\t\treturn majorKey\n\tvar regMode = match[1]\t\n\tfor (var i = 0; i < group.modes.length; i++) {\n\t\tvar thisMode = group.modes[i]\n\t\tvar ind = thisMode.toLowerCase().indexOf(regMode)\n\t\tif (ind !== -1 && ind === thisMode.length - regMode.length)\n\t\t\treturn thisMode.substring(0, thisMode.length - regMode.length)\n\t}\n\treturn majorKey;\n}\n\nfunction transposeKey(key, steps) {\n\t// This takes a major key and adds the desired steps.\n\t// It assigns each key a number that is the number of steps from C so that there can just be arithmetic.\n\tvar match = keys[key]\n\tif (!match)\n\t\treturn key;\n\twhile (steps < 0) steps += 12;\n\tvar fromC = (match.stepsFromC + steps) % 12;\n\tfor (var i = 0;  i < Object.keys(keys).length; i++) {\n\t\tvar k = Object.keys(keys)[i]\n\t\tif (keys[k].stepsFromC === fromC)\n\t\t\treturn k;\n\t}\n\treturn key;\n}\n\nmodule.exports = {relativeMajor: relativeMajor, relativeMode: relativeMode, transposeKey: transposeKey};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL2NvbnN0L3JlbGF0aXZlLW1ham9yLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSxRQUFRLHNGQUFzRjtBQUM5RixTQUFTLDRGQUE0RjtBQUNyRyxRQUFRLHdGQUF3RjtBQUNoRyxTQUFTLHlGQUF5RjtBQUNsRyxRQUFRLDJGQUEyRjtBQUNuRyxRQUFRLHVGQUF1RjtBQUMvRixTQUFTLDZGQUE2RjtBQUN0RyxRQUFRLHVGQUF1RjtBQUMvRixTQUFTLDBGQUEwRjtBQUNuRyxRQUFRLDBGQUEwRjtBQUNsRyxTQUFTLHlGQUF5RjtBQUNsRyxRQUFRLDZGQUE2RjtBQUNyRztBQUNBLFNBQVMsOEZBQThGO0FBQ3ZHLFNBQVMsNkZBQTZGO0FBQ3RHLFNBQVMsK0ZBQStGO0FBQ3hHOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixvQkFBb0I7QUFDdEM7QUFDQTtBQUNBLGtCQUFrQix5QkFBeUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHdCQUF3QjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDhCQUE4QjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL2NvbnN0L3JlbGF0aXZlLW1ham9yLmpzP2ZhMzgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQWxsIHRoZXNlIGtleXMgaGF2ZSB0aGUgc2FtZSBudW1iZXIgb2YgYWNjaWRlbnRhbHNcbnZhciBrZXlzID0ge1xuXHQnQyc6IHsgbW9kZXM6IFsnQ01haicsICdBbWluJywgJ0FtJywgJ0dNaXgnLCAnRERvcicsICdFUGhyJywgJ0ZMeWQnLCAnQkxvYyddLCBzdGVwc0Zyb21DOiAwIH0sXG5cdCdEYic6IHsgbW9kZXM6IFsnRGJNYWonLCAnQmJtaW4nLCAnQmJtJywgJ0FiTWl4JywgJ0ViRG9yJywgJ0ZQaHInLCAnR2JMeWQnLCAnQ0xvYyddLCBzdGVwc0Zyb21DOiAxIH0sXG5cdCdEJzogeyBtb2RlczogWydETWFqJywgJ0JtaW4nLCAnQm0nLCAnQU1peCcsICdFRG9yJywgJ0YjUGhyJywgJ0dMeWQnLCAnQyNMb2MnXSwgc3RlcHNGcm9tQzogMiB9LFxuXHQnRWInOiB7IG1vZGVzOiBbJ0ViTWFqJywgJ0NtaW4nLCAnQ20nLCAnQmJNaXgnLCAnRkRvcicsICdHUGhyJywgJ0FiTHlkJywgJ0RMb2MnXSwgc3RlcHNGcm9tQzogMyB9LFxuXHQnRSc6IHsgbW9kZXM6IFsnRU1haicsICdDI21pbicsICdDI20nLCAnQk1peCcsICdGI0RvcicsICdHI1BocicsICdBTHlkJywgJ0QjTG9jJ10sIHN0ZXBzRnJvbUM6IDQgfSxcblx0J0YnOiB7IG1vZGVzOiBbJ0ZNYWonLCAnRG1pbicsICdEbScsICdDTWl4JywgJ0dEb3InLCAnQVBocicsICdCYkx5ZCcsICdFTG9jJ10sIHN0ZXBzRnJvbUM6IDUgfSxcblx0J0diJzogeyBtb2RlczogWydHYk1haicsICdFYm1pbicsICdFYm0nLCAnRGJNaXgnLCAnQWJEb3InLCAnQmJQaHInLCAnQ2JMeWQnLCAnRkxvYyddLCBzdGVwc0Zyb21DOiA2IH0sXG5cdCdHJzogeyBtb2RlczogWydHTWFqJywgJ0VtaW4nLCAnRW0nLCAnRE1peCcsICdBRG9yJywgJ0JQaHInLCAnQ0x5ZCcsICdGI0xvYyddLCBzdGVwc0Zyb21DOiA3IH0sXG5cdCdBYic6IHsgbW9kZXM6IFsnQWJNYWonLCAnRm1pbicsICdGbScsICdFYk1peCcsICdCYkRvcicsICdDUGhyJywgJ0RiTHlkJywgJ0dMb2MnXSwgc3RlcHNGcm9tQzogOCB9LFxuXHQnQSc6IHsgbW9kZXM6IFsnQU1haicsICdGI21pbicsICdGI20nLCAnRU1peCcsICdCRG9yJywgJ0MjUGhyJywgJ0RMeWQnLCAnRyNMb2MnXSwgc3RlcHNGcm9tQzogOSB9LFxuXHQnQmInOiB7IG1vZGVzOiBbJ0JiTWFqJywgJ0dtaW4nLCAnR20nLCAnRk1peCcsICdDRG9yJywgJ0RQaHInLCAnRWJMeWQnLCAnQUxvYyddLCBzdGVwc0Zyb21DOiAxMCB9LFxuXHQnQic6IHsgbW9kZXM6IFsnQk1haicsICdHI21pbicsICdHI20nLCAnRiNNaXgnLCAnQyNEb3InLCAnRCNQaHInLCAnRUx5ZCcsICdBI0xvYyddLCBzdGVwc0Zyb21DOiAxMSB9LFxuXHQvLyBFbmhhcm1vbmljIGtleXNcblx0J0MjJzogeyBtb2RlczogWydDI01haicsICdBI21pbicsICdBI20nLCAnRyNNaXgnLCAnRCNEb3InLCAnRSNQaHInLCAnRiNMeWQnLCAnQiNMb2MnXSwgc3RlcHNGcm9tQzogMSB9LFxuXHQnRiMnOiB7IG1vZGVzOiBbJ0YjTWFqJywgJ0QjbWluJywgJ0QjbScsICdDI01peCcsICdHI0RvcicsICdBI1BocicsICdCTHlkJywgJ0UjTG9jJ10sIHN0ZXBzRnJvbUM6IDYgfSxcblx0J0NiJzogeyBtb2RlczogWydDYk1haicsICdBYm1pbicsICdBYm0nLCAnR2JNaXgnLCAnRGJEb3InLCAnRWJQaHInLCAnRmJMeWQnLCAnQmJMb2MnXSwgc3RlcHNGcm9tQzogMTEgfSxcbn1cblxudmFyIGtleVJldmVyc2UgPSBudWxsXG5cbmZ1bmN0aW9uIGNyZWF0ZUtleVJldmVyc2UoKSB7XG5cdGtleVJldmVyc2UgPSB7fVxuXHR2YXIgYWxsS2V5cyA9IE9iamVjdC5rZXlzKGtleXMpXG5cdGZvciAodmFyIGkgPSAwIDsgaSA8IGFsbEtleXMubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIga2V5T2JqID0ga2V5c1thbGxLZXlzW2ldXVxuXHRcdGtleVJldmVyc2VbYWxsS2V5c1tpXS50b0xvd2VyQ2FzZSgpXSA9IGFsbEtleXNbaV07XG5cdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBrZXlPYmoubW9kZXMubGVuZ3RoOyBqKyspIHtcblx0XHRcdHZhciBtb2RlID0ga2V5T2JqLm1vZGVzW2pdLnRvTG93ZXJDYXNlKClcblx0XHRcdGtleVJldmVyc2VbbW9kZV0gPSBhbGxLZXlzW2ldO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiByZWxhdGl2ZU1ham9yKGtleSkge1xuXHQvLyBUcmFuc2xhdGUgYSBrZXkgdG8gaXRzIHJlbGF0aXZlIG1ham9yLiBJZiBpdCBkb2Vzbid0IGV4aXN0LCBkbyB0aGUgYmVzdCB3ZSBjYW5cblx0Ly8gYnkganVzdCByZXR1cm5pbmcgdGhlIG9yaWdpbmFsIGtleS5cblx0Ly8gVGhlcmUgYXJlIGFsdGVybmF0ZSBzcGVsbGluZ3Mgb2YgdGhlc2UgLSBzbyB0aGUgc2VhcmNoIG5lZWRzIHRvIGJlIGNhc2UgaW5zZW5zaXRpdmUuXG5cdC8vIFRvIG1ha2UgdGhpcyBlZmZpY2llbnQsIHRoZSBmaXJzdCB0aW1lIHRoaXMgaXMgY2FsbGVkIHRoZSBcImtleXNcIiBvYmplY3QgaXMgcmV2ZXJzZWQgc28gdGhpcyBzZWFyY2ggaXMgZmFzdCBpbiB0aGUgZnV0dXJlXG5cdGlmICgha2V5UmV2ZXJzZSkge1xuXHRcdGNyZWF0ZUtleVJldmVyc2UoKVxuXHR9XG5cdC8vIGdldCB0aGUga2V5IHBvcnRpb24gaXRzZWxmIC0gdGhlcmUgbWlnaHQgYmUgb3RoZXIgc3R1ZmYsIGxpa2UgZXh0cmEgc2hhcnBzIGFuZCBmbGF0cywgb3IgdGhlIG1vZGUgd3JpdHRlbiBvdXQuXG5cdHZhciBtb2RlID0ga2V5LnRvTG93ZXJDYXNlKCkubWF0Y2goLyhbYS1nXVtiI10/KShtYWp8bWlufG1peHxkb3J8cGhyfGx5ZHxsb2N8bSk/Lylcblx0aWYgKCFtb2RlIHx8ICFtb2RlWzJdKVxuXHRcdHJldHVybiBrZXk7XG5cdG1vZGUgPSBtb2RlWzFdICsgbW9kZVsyXVxuXHR2YXIgbWFqID0ga2V5UmV2ZXJzZVttb2RlXVxuXHRpZiAobWFqKVxuXHRcdHJldHVybiBtYWo7XG5cdHJldHVybiBrZXk7XG59XG5cbmZ1bmN0aW9uIHJlbGF0aXZlTW9kZShtYWpvcktleSwgbW9kZSkge1xuXHQvLyBUaGUgcmV2ZXJzZSBvZiB0aGUgcmVsYXRpdmVNYWpvci4gVHJhbnNsYXRlIGl0IGJhY2sgdG8gdGhlIG9yaWdpbmFsIG1vZGUuXG5cdC8vIElmIGl0IGlzbid0IGEgcmVjb2duaXplZCBtb2RlIG9yIGl0IGlzIGFscmVhZHkgbWFqb3IsIHRoZW4ganVzdCByZXR1cm4gdGhlIG1ham9yIGtleS5cblx0dmFyIGdyb3VwID0ga2V5c1ttYWpvcktleV1cblx0aWYgKCFncm91cClcblx0XHRyZXR1cm4gbWFqb3JLZXk7XG5cdGlmIChtb2RlID09PSAnJylcblx0XHRyZXR1cm4gbWFqb3JLZXk7XG5cdHZhciBtYXRjaCA9IG1vZGUudG9Mb3dlckNhc2UoKS5tYXRjaCgvXihtYWp8bWlufG1peHxkb3J8cGhyfGx5ZHxsb2N8bSkvKVx0XG5cdGlmICghbWF0Y2gpXG5cdFx0cmV0dXJuIG1ham9yS2V5XG5cdHZhciByZWdNb2RlID0gbWF0Y2hbMV1cdFxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGdyb3VwLm1vZGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIHRoaXNNb2RlID0gZ3JvdXAubW9kZXNbaV1cblx0XHR2YXIgaW5kID0gdGhpc01vZGUudG9Mb3dlckNhc2UoKS5pbmRleE9mKHJlZ01vZGUpXG5cdFx0aWYgKGluZCAhPT0gLTEgJiYgaW5kID09PSB0aGlzTW9kZS5sZW5ndGggLSByZWdNb2RlLmxlbmd0aClcblx0XHRcdHJldHVybiB0aGlzTW9kZS5zdWJzdHJpbmcoMCwgdGhpc01vZGUubGVuZ3RoIC0gcmVnTW9kZS5sZW5ndGgpXG5cdH1cblx0cmV0dXJuIG1ham9yS2V5O1xufVxuXG5mdW5jdGlvbiB0cmFuc3Bvc2VLZXkoa2V5LCBzdGVwcykge1xuXHQvLyBUaGlzIHRha2VzIGEgbWFqb3Iga2V5IGFuZCBhZGRzIHRoZSBkZXNpcmVkIHN0ZXBzLlxuXHQvLyBJdCBhc3NpZ25zIGVhY2gga2V5IGEgbnVtYmVyIHRoYXQgaXMgdGhlIG51bWJlciBvZiBzdGVwcyBmcm9tIEMgc28gdGhhdCB0aGVyZSBjYW4ganVzdCBiZSBhcml0aG1ldGljLlxuXHR2YXIgbWF0Y2ggPSBrZXlzW2tleV1cblx0aWYgKCFtYXRjaClcblx0XHRyZXR1cm4ga2V5O1xuXHR3aGlsZSAoc3RlcHMgPCAwKSBzdGVwcyArPSAxMjtcblx0dmFyIGZyb21DID0gKG1hdGNoLnN0ZXBzRnJvbUMgKyBzdGVwcykgJSAxMjtcblx0Zm9yICh2YXIgaSA9IDA7ICBpIDwgT2JqZWN0LmtleXMoa2V5cykubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgayA9IE9iamVjdC5rZXlzKGtleXMpW2ldXG5cdFx0aWYgKGtleXNba10uc3RlcHNGcm9tQyA9PT0gZnJvbUMpXG5cdFx0XHRyZXR1cm4gaztcblx0fVxuXHRyZXR1cm4ga2V5O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtyZWxhdGl2ZU1ham9yOiByZWxhdGl2ZU1ham9yLCByZWxhdGl2ZU1vZGU6IHJlbGF0aXZlTW9kZSwgdHJhbnNwb3NlS2V5OiB0cmFuc3Bvc2VLZXl9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/const/relative-major.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/data/abc_tune.js":
/*!*************************************************!*\
  !*** ./node_modules/abcjs/src/data/abc_tune.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_tune.js: a computer usable internal structure representing one tune.\n\nvar parseCommon = __webpack_require__(/*! ../parse/abc_common */ \"(ssr)/./node_modules/abcjs/src/parse/abc_common.js\");\nvar spacing = __webpack_require__(/*! ../write/helpers/spacing */ \"(ssr)/./node_modules/abcjs/src/write/helpers/spacing.js\");\nvar sequence = __webpack_require__(/*! ../synth/abc_midi_sequencer */ \"(ssr)/./node_modules/abcjs/src/synth/abc_midi_sequencer.js\");\nvar flatten = __webpack_require__(/*! ../synth/abc_midi_flattener */ \"(ssr)/./node_modules/abcjs/src/synth/abc_midi_flattener.js\");\nvar delineTune = __webpack_require__(/*! ./deline-tune */ \"(ssr)/./node_modules/abcjs/src/data/deline-tune.js\");\n\n/**\n * This is the data for a single ABC tune. It is created and populated by the window.ABCJS.parse.Parse class.\n * Also known as the ABCJS Abstract Syntax Tree\n * @alternateClassName ABCJS.Tune\n */\nvar Tune = function() {\n\tthis.reset = function () {\n\t\tthis.version = \"1.1.0\";\n\t\tthis.media = \"screen\";\n\t\tthis.metaText = {};\n\t\tthis.metaTextInfo = {};\n\t\tthis.formatting = {};\n\t\tthis.lines = [];\n\t\tthis.staffNum = 0;\n\t\tthis.voiceNum = 0;\n\t\tthis.lineNum = 0;\n\t\tthis.runningFonts = {};\n\t\tdelete this.visualTranspose;\n\t};\n\tthis.reset();\n\n\tfunction copy(dest, src, prop, attrs) {\n\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t\tdest[prop][attrs[i]] = src[prop][attrs[i]];\n\t}\n\n\tthis.copyTopInfo = function(src) {\n\t\tvar attrs = ['tempo', 'title', 'header', 'rhythm', 'origin', 'composer', 'author', 'partOrder'];\n\t\tcopy(this, src, \"metaText\", attrs);\n\t\tcopy(this, src, \"metaTextInfo\", attrs);\n\t};\n\n\tthis.copyBottomInfo = function(src) {\n\t\tvar attrs = ['unalignedWords',\n\t\t\t'book',\n\t\t\t'source',\n\t\t\t'discography',\n\t\t\t'notes',\n\t\t\t'transcription',\n\t\t\t'history',\n\t\t\t'abc-copyright',\n\t\t\t'abc-creator',\n\t\t\t'abc-edited-by',\n\t\t\t'footer']\n\t\tcopy(this, src, \"metaText\", attrs);\n\t\tcopy(this, src, \"metaTextInfo\", attrs);\n\t};\n\n\t// The structure consists of a hash with the following two items:\n\t// metaText: a hash of {key, value}, where key is one of: title, author, rhythm, source, transcription, unalignedWords, etc...\n\t// tempo: { noteLength: number (e.g. .125), bpm: number }\n\t// lines: an array of elements, or one of the following:\n\t//\n\t// STAFF: array of elements\n\t// SUBTITLE: string\n\t//\n\t// TODO: actually, the start and end char should modify each part of the note type\n\t// The elements all have a type field and a start and end char\n\t// field. The rest of the fields depend on the type and are listed below:\n\t// REST: duration=1,2,4,8; chord: string\n\t// NOTE: accidental=none,dbl_flat,flat,natural,sharp,dbl_sharp\n\t//\t\tpitch: \"C\" is 0. The numbers refer to the pitch letter.\n\t//\t\tduration: .5 (sixteenth), .75 (dotted sixteenth), 1 (eighth), 1.5 (dotted eighth)\n\t//\t\t\t2 (quarter), 3 (dotted quarter), 4 (half), 6 (dotted half) 8 (whole)\n\t//\t\tchord: { name:chord, position: one of 'default', 'above', 'below' }\n\t//\t\tend_beam = true or undefined if this is the last note in a beam.\n\t//\t\tlyric: array of { syllable: xxx, divider: one of \" -_\" }\n\t//\t\tstartTie = true|undefined\n\t//\t\tendTie = true|undefined\n\t//\t\tstartTriplet = num <- that is the number to print\n\t//\t\tendTriplet = true|undefined (the last note of the triplet)\n\t// TODO: actually, decoration should be an array.\n\t//\t\tdecoration: upbow, downbow, accent\n\t// BAR: type=bar_thin, bar_thin_thick, bar_thin_thin, bar_thick_thin, bar_right_repeat, bar_left_repeat, bar_double_repeat\n\t//\tnumber: 1 or 2: if it is the start of a first or second ending\n\t// CLEF: type=treble,bass\n\t// KEY-SIG:\n\t//\t\taccidentals[]: { acc:sharp|dblsharp|natural|flat|dblflat,  note:a|b|c|d|e|f|g }\n\t// METER: type: common_time,cut_time,specified\n\t//\t\tif specified, { num: 99, den: 99 }\n\n\tthis.getBeatLength = function() {\n\t\t// This returns a fraction: for instance 1/4 for a quarter\n\t\t// There are two types of meters: compound and regular. Compound meter has 3 beats counted as one.\n\t\tvar meter = this.getMeterFraction();\n\t\tvar multiplier = 1;\n\t\tif (meter.num === 6 || meter.num === 9 || meter.num === 12)\n\t\t\tmultiplier = 3;\n\t\telse if (meter.num === 3 && meter.den === 8)\n\t\t\tmultiplier = 3;\n\n\t\treturn multiplier / meter.den;\n\t};\n\n\tfunction computePickupLength(lines, barLength) {\n\t\tvar pickupLength = 0;\n\t\tfor (var i = 0; i < lines.length; i++) {\n\t\t\tif (lines[i].staff) {\n\t\t\t\tfor (var j = 0; j < lines[i].staff.length; j++) {\n\t\t\t\t\tfor (var v = 0; v < lines[i].staff[j].voices.length; v++) {\n\t\t\t\t\t\tvar voice = lines[i].staff[j].voices[v];\n\t\t\t\t\t\tvar tripletMultiplier = 1;\n\t\t\t\t\t\tfor (var el = 0; el < voice.length; el++) {\n\t\t\t\t\t\t\tvar isSpacer = voice[el].rest && voice[el].rest.type === \"spacer\";\n\t\t\t\t\t\t\tif (voice[el].startTriplet)\n\t\t\t\t\t\t\t\ttripletMultiplier = voice[el].tripletMultiplier;\n\t\t\t\t\t\t\tif (voice[el].duration && !isSpacer && voice[el].el_type !== \"tempo\")\n\t\t\t\t\t\t\t\tpickupLength += voice[el].duration * tripletMultiplier;\n\t\t\t\t\t\t\tif (voice[el].endTriplet)\n\t\t\t\t\t\t\t\ttripletMultiplier = 1;\n\t\t\t\t\t\t\tif (pickupLength >= barLength)\n\t\t\t\t\t\t\t\tpickupLength -= barLength;\n\t\t\t\t\t\t\tif (voice[el].el_type === 'bar')\n\t\t\t\t\t\t\t\treturn pickupLength;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn pickupLength;\n\t}\n\tthis.getPickupLength = function() {\n\t\tvar barLength = this.getBarLength();\n\t\tvar pickupLength = computePickupLength(this.lines, barLength);\n\n\t\t// If computed pickup length is very close to 0 or the bar length, we assume\n\t\t// that we actually have a full bar and hence no pickup.\n\t\treturn (pickupLength < 1e-8 || barLength-pickupLength < 1e-8) ? 0 : pickupLength;\n\t};\n\n\tthis.getBarLength = function() {\n\t\tvar meter = this.getMeterFraction();\n\t\treturn meter.num / meter.den;\n\t};\n\n\tthis.getTotalTime = function() {\n\t\treturn this.totalTime;\n\t};\n\n\tthis.getTotalBeats = function() {\n\t\treturn this.totalBeats;\n\t};\n\n\tthis.millisecondsPerMeasure = function(bpmOverride) {\n\t\tvar bpm;\n\t\tif (bpmOverride) {\n\t\t\tbpm = bpmOverride;\n\t\t} else {\n\t\t\tvar tempo = this.metaText ? this.metaText.tempo : null;\n\t\t\tbpm = this.getBpm(tempo);\n\t\t}\n\t\tif (bpm <= 0)\n\t\t\tbpm = 1; // I don't think this can happen, but we don't want a possibility of dividing by zero.\n\n\t\tvar beatsPerMeasure = this.getBeatsPerMeasure();\n\n\t\tvar minutesPerMeasure = beatsPerMeasure / bpm;\n\t\treturn minutesPerMeasure * 60000;\n\t};\n\n\tthis.getBeatsPerMeasure = function() {\n\t\tvar beatLen = this.getBeatLength();\n\t\tvar barLen = this.getBarLength();\n\t\treturn barLen / beatLen;\n\t};\n\n\tthis.getMeter = function() {\n\t\tfor (var i = 0; i < this.lines.length; i++) {\n\t\t\tvar line = this.lines[i];\n\t\t\tif (line.staff) {\n\t\t\t\tfor (var j = 0; j < line.staff.length; j++) {\n\t\t\t\t\tvar meter = line.staff[j].meter;\n\t\t\t\t\tif (meter) {\n\t\t\t\t\t\treturn meter;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { type: \"common_time\" };\n\t};\n\n\tthis.getMeterFraction = function() {\n\t\tvar meter = this.getMeter();\n\t\tvar num = 4;\n\t\tvar den = 4;\n\t\tif (meter) {\n\t\t\tif (meter.type === 'specified') {\n\t\t\t\tnum = parseInt(meter.value[0].num, 10);\n\t\t\t\tden = parseInt(meter.value[0].den,10);\n\t\t\t} else if (meter.type === 'cut_time') {\n\t\t\t\tnum = 2;\n\t\t\t\tden = 2;\n\t\t\t} else if (meter.type === 'common_time') {\n\t\t\t\tnum = 4;\n\t\t\t\tden = 4;\n\t\t\t}\n\t\t}\n\t\tthis.meter = { num: num, den: den };\n\t\treturn this.meter; // TODO-PER: is this saved value used anywhere? A get function shouldn't change state.\n\t};\n\n\tthis.getKeySignature = function() {\n\t\tfor (var i = 0; i < this.lines.length; i++) {\n\t\t\tvar line = this.lines[i];\n\t\t\tif (line.staff) {\n\t\t\t\tfor (var j = 0; j < line.staff.length; j++) {\n\t\t\t\t\tif (line.staff[j].key)\n\t\t\t\t\t\treturn line.staff[j].key;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {  };\n\t};\n\n\tthis.getElementFromChar = function(char) {\n\t\tfor (var i = 0; i < this.lines.length; i++) {\n\t\t\tvar line = this.lines[i];\n\t\t\tif (line.staff) {\n\t\t\t\tfor (var j = 0; j < line.staff.length; j++) {\n\t\t\t\t\tvar staff = line.staff[j];\n\t\t\t\t\tfor (var k = 0; k < staff.voices.length; k++) {\n\t\t\t\t\t\tvar voice = staff.voices[k];\n\t\t\t\t\t\tfor (var ii = 0; ii < voice.length; ii++) {\n\t\t\t\t\t\t\tvar elem = voice[ii];\n\t\t\t\t\t\t\tif (elem.startChar && elem.endChar &&\n\t\t\t\t\t\t\t\telem.startChar <= char && elem.endChar > char)\n\t\t\t\t\t\t\t\treturn elem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tfunction addVerticalInfo(timingEvents) {\n\t\t// Add vertical info to the bar events: put the next event's top, and the event after the next measure's top.\n\t\tvar lastBarTop;\n\t\tvar lastBarBottom;\n\t\tvar lastEventTop;\n\t\tvar lastEventBottom;\n\t\tfor (var e = timingEvents.length - 1; e >= 0; e--) {\n\t\t\tvar ev = timingEvents[e];\n\t\t\tif (ev.type === 'bar') {\n\t\t\t\tev.top = lastEventTop;\n\t\t\t\tev.nextTop = lastBarTop;\n\t\t\t\tlastBarTop = lastEventTop;\n\n\t\t\t\tev.bottom = lastEventBottom;\n\t\t\t\tev.nextBottom = lastBarBottom;\n\t\t\t\tlastBarBottom = lastEventBottom;\n\t\t\t} else if (ev.type === 'event') {\n\t\t\t\tlastEventTop = ev.top;\n\t\t\t\tlastEventBottom = ev.top + ev.height;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction makeSortedArray(hash) {\n\t\tvar arr = [];\n\t\tfor (var k in hash) {\n\t\t\tif (hash.hasOwnProperty(k))\n\t\t\t\tarr.push(hash[k]);\n\t\t}\n\t\tarr = arr.sort(function (a, b) {\n\t\t\tvar diff = a.milliseconds - b.milliseconds;\n\t\t\t// if the events have the same time, make sure a bar comes before a note\n\t\t\tif (diff !== 0) {\n\t\t\t\treturn diff;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn a.type === \"bar\" ? -1 : 1;\n\t\t\t}\n\t\t});\n\t\treturn arr;\n\t}\n\n\tthis.addElementToEvents = function(eventHash, element, voiceTimeMilliseconds, top, height, line, measureNumber, timeDivider, isTiedState, nextIsBar) {\n\t\tif (element.hint)\n\t\t\treturn { isTiedState: undefined, duration: 0 };\n\t\tvar realDuration = element.durationClass ? element.durationClass : element.duration;\n\t\tif (element.abcelem.rest && element.abcelem.rest.type === \"spacer\")\n\t\t\trealDuration = 0;\n\t\tif (realDuration > 0) {\n\t\t\tvar es = [];\n\t\t\t// If there is an invisible rest, then there are not elements, so don't push a null one.\n\t\t\tfor (var i = 0; i < element.elemset.length; i++) {\n\t\t\t\tif (element.elemset[i] !== null)\n\t\t\t\t\tes.push(element.elemset[i]);\n\t\t\t}\n\t\t\tvar isTiedToNext = element.startTie;\n\t\t\tif (isTiedState !== undefined) {\n\t\t\t\teventHash[\"event\" + isTiedState].elements.push(es); // Add the tied note to the first note that it is tied to\n\t\t\t\tif (nextIsBar) {\n\t\t\t\t\tif (!eventHash[\"event\" + voiceTimeMilliseconds]) {\n\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds] = {\n\t\t\t\t\t\t\ttype: \"event\",\n\t\t\t\t\t\t\tmilliseconds: voiceTimeMilliseconds,\n\t\t\t\t\t\t\tline: line,\n\t\t\t\t\t\t\tmeasureNumber: measureNumber,\n\t\t\t\t\t\t\ttop: top,\n\t\t\t\t\t\t\theight: height,\n\t\t\t\t\t\t\tleft: null,\n\t\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\t\telements: [],\n\t\t\t\t\t\t\tstartChar: null,\n\t\t\t\t\t\t\tendChar: null,\n\t\t\t\t\t\t\tstartCharArray: [],\n\t\t\t\t\t\t\tendCharArray: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].measureStart = true;\n\t\t\t\t\tnextIsBar = false;\n\t\t\t\t}\n\t\t\t\tif (!isTiedToNext)\n\t\t\t\t\tisTiedState = undefined;\n\t\t\t} else {\n\t\t\t\t// the last note wasn't tied.\n\t\t\t\tif (!eventHash[\"event\" + voiceTimeMilliseconds]) {\n\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds] = {\n\t\t\t\t\t\ttype: \"event\",\n\t\t\t\t\t\tmilliseconds: voiceTimeMilliseconds,\n\t\t\t\t\t\tline: line,\n\t\t\t\t\t\tmeasureNumber: measureNumber,\n\t\t\t\t\t\ttop: top,\n\t\t\t\t\t\theight: height,\n\t\t\t\t\t\tleft: element.x,\n\t\t\t\t\t\twidth: element.w,\n\t\t\t\t\t\telements: [es],\n\t\t\t\t\t\tstartChar: element.abcelem.startChar,\n\t\t\t\t\t\tendChar: element.abcelem.endChar,\n\t\t\t\t\t\tstartCharArray: [element.abcelem.startChar],\n\t\t\t\t\t\tendCharArray: [element.abcelem.endChar],\n\t\t\t\t\t\tmidiPitches: element.abcelem.midiPitches ? parseCommon.cloneArray(element.abcelem.midiPitches) : []\n\t\t\t\t\t};\n\t\t\t\t\tif (element.abcelem.midiGraceNotePitches)\n\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].midiGraceNotePitches = parseCommon.cloneArray(element.abcelem.midiGraceNotePitches);\n\t\t\t\t} else {\n\t\t\t\t\t// If there is more than one voice then two notes can fall at the same time. Usually they would be lined up in the same place, but if it is a whole rest, then it is placed funny. In any case, the left most element wins.\n\t\t\t\t\tif (eventHash[\"event\" + voiceTimeMilliseconds].left)\n\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].left = Math.min(eventHash[\"event\" + voiceTimeMilliseconds].left, element.x);\n\t\t\t\t\telse\n\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].left = element.x;\n\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].elements.push(es);\n\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].startCharArray.push(element.abcelem.startChar);\n\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].endCharArray.push(element.abcelem.endChar);\n\t\t\t\t\tif (eventHash[\"event\" + voiceTimeMilliseconds].startChar === null)\n\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].startChar =element.abcelem.startChar;\n\t\t\t\t\tif (eventHash[\"event\" + voiceTimeMilliseconds].endChar === null)\n\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].endChar =element.abcelem.endChar;\n\t\t\t\t\tif (element.abcelem.midiPitches && element.abcelem.midiPitches.length) {\n\t\t\t\t\t\tif (!eventHash[\"event\" + voiceTimeMilliseconds].midiPitches)\n\t\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].midiPitches = [];\n\t\t\t\t\t\tfor (var i = 0; i < element.abcelem.midiPitches.length; i++)\n\t\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].midiPitches.push(element.abcelem.midiPitches[i]);\n\t\t\t\t\t}\n\t\t\t\t\tif (element.abcelem.midiGraceNotePitches && element.abcelem.midiGraceNotePitches.length) {\n\t\t\t\t\t\tif (!eventHash[\"event\" + voiceTimeMilliseconds].midiGraceNotePitches)\n\t\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].midiGraceNotePitches = [];\n\t\t\t\t\t\tfor (var j = 0; j < element.abcelem.midiGraceNotePitches.length; j++)\n\t\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].midiGraceNotePitches.push(element.abcelem.midiGraceNotePitches[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (nextIsBar) {\n\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].measureStart = true;\n\t\t\t\t\tnextIsBar = false;\n\t\t\t\t}\n\t\t\t\t// TODO-PER: There doesn't seem to be a harm in letting ties be two different notes and it fixes a bug when a tie goes to a new line. If there aren't other problems with this change, then the variable can be removed completely. \n\t\t\t\t// if (isTiedToNext)\n\t\t\t\t// \tisTiedState = voiceTimeMilliseconds;\n\t\t\t}\n\t\t}\n\t\treturn { isTiedState: isTiedState, duration: realDuration / timeDivider, nextIsBar: nextIsBar || element.type === 'bar' };\n\t};\n\n\tthis.makeVoicesArray = function() {\n\t\t// First make a new array that is arranged by voice so that the repeats that span different lines are handled correctly.\n\t\tvar voicesArr = [];\n\t\tvar measureNumber = [];\n\t\tvar tempos = {};\n\t\tfor (var line = 0; line < this.engraver.staffgroups.length; line++) {\n\t\t\tvar group = this.engraver.staffgroups[line];\n\t\t\tif (group && group.staffs && group.staffs.length > 0) {\n\t\t\t\tvar firstStaff = group.staffs[0];\n\t\t\t\tvar middleC = firstStaff.absoluteY;\n\t\t\t\tvar top = middleC - firstStaff.top * spacing.STEP;\n\t\t\t\tvar lastStaff = group.staffs[group.staffs.length - 1];\n\t\t\t\tmiddleC = lastStaff.absoluteY;\n\t\t\t\tvar bottom = middleC - lastStaff.bottom * spacing.STEP;\n\t\t\t\tvar height = bottom - top;\n\n\t\t\t\tvar voices = group.voices;\n\t\t\t\tfor (var v = 0; v < voices.length; v++) {\n\t\t\t\t\tif (voices[v].staff && voices[v].staff.isTabStaff)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tvar noteFound = false;\n\t\t\t\t\tif (!voicesArr[v])\n\t\t\t\t\t\tvoicesArr[v] = [];\n\t\t\t\t\tif (measureNumber[v] === undefined)\n\t\t\t\t\t\tmeasureNumber[v] = 0;\n\t\t\t\t\tvar elements = voices[v].children;\n\t\t\t\t\tfor (var elem = 0; elem < elements.length; elem++) {\n\t\t\t\t\t\tif (elements[elem].type === \"tempo\")\n\t\t\t\t\t\t\ttempos[measureNumber[v]] = this.getBpm(elements[elem].abcelem);\n\t\t\t\t\t\tvoicesArr[v].push({top: top, height: height, line: group.line, measureNumber: measureNumber[v], elem: elements[elem]});\n\t\t\t\t\t\tif (elements[elem].type === 'bar' && noteFound) // Count the measures by counting the bar lines, but skip a bar line that appears at the left of the music, before any notes.\n\t\t\t\t\t\t\tmeasureNumber[v]++;\n\t\t\t\t\t\tif (elements[elem].type === 'note' || elements[elem].type === 'rest')\n\t\t\t\t\t\t\tnoteFound = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.tempoLocations = tempos; // This should be passed back, but the function is accessible publicly so that would break the interface.\n\t\treturn voicesArr;\n\t};\n\n\tthis.setupEvents = function(startingDelay, timeDivider, startingBpm, warp) {\n\t\tif (!warp) warp = 1;\n\t\tvar timingEvents = [];\n\n\t\tvar eventHash = {};\n\t\t// The time is the number of seconds from the beginning of the piece.\n\t\t// The units we are scanning are in notation units (i.e. 0.25 is a quarter note)\n\t\tvar time = startingDelay;\n\t\tvar isTiedState;\n\t\tvar nextIsBar = true;\n\t\tvar voices = this.makeVoicesArray();\n\t\tvar maxVoiceTimeMilliseconds = 0;\n\t\tfor (var v = 0; v < voices.length; v++) {\n\t\t\tvar voiceTime = time;\n\t\t\tvar voiceTimeMilliseconds = Math.round(voiceTime * 1000);\n\t\t\tvar startingRepeatElem = 0;\n\t\t\tvar endingRepeatElem = -1;\n\t\t\tvar elements = voices[v];\n\t\t\tvar bpm = startingBpm;\n\t\t\ttimeDivider = this.getBeatLength() * bpm / 60;\n\t\t\tvar tempoDone = -1;\n\t\t\tfor (var elem = 0; elem < elements.length; elem++) {\n\t\t\t\tvar thisMeasure = elements[elem].measureNumber;\n\t\t\t\tif (tempoDone !== thisMeasure && this.tempoLocations[thisMeasure]) {\n\t\t\t\t\tbpm = this.tempoLocations[thisMeasure];\n\t\t\t\t\ttimeDivider = warp * this.getBeatLength() * bpm / 60;\n\t\t\t\t\ttempoDone = thisMeasure;\n\t\t\t\t}\n\t\t\t\tvar element = elements[elem].elem;\n\t\t\t\tvar ret = this.addElementToEvents(eventHash, element, voiceTimeMilliseconds, elements[elem].top, elements[elem].height, elements[elem].line, elements[elem].measureNumber, timeDivider, isTiedState, nextIsBar);\n\t\t\t\tisTiedState = ret.isTiedState;\n\t\t\t\tnextIsBar = ret.nextIsBar;\n\t\t\t\tvoiceTime += ret.duration;\n\t\t\t\tvar lastHash;\n\t\t\t\tif (element.duration > 0 && eventHash[\"event\" + voiceTimeMilliseconds]) // This won't exist if this is the end of a tie.\n\t\t\t\t\tlastHash = \"event\" + voiceTimeMilliseconds;\n\t\t\t\tvoiceTimeMilliseconds = Math.round(voiceTime * 1000);\n\t\t\t\tif (element.type === 'bar') {\n\t\t\t\t\tvar barType = element.abcelem.type;\n\t\t\t\t\tvar endRepeat = (barType === \"bar_right_repeat\" || barType === \"bar_dbl_repeat\");\n\t\t\t\t\tvar startEnding = (element.abcelem.startEnding === '1');\n\t\t\t\t\tvar startRepeat = (barType === \"bar_left_repeat\" || barType === \"bar_dbl_repeat\" || barType === \"bar_right_repeat\");\n\t\t\t\t\tif (endRepeat) {\n\t\t\t\t\t\t// Force the end of the previous note to the position of the measure - the cursor won't go past the end repeat\n\t\t\t\t\t\tif (elem > 0) {\n\t\t\t\t\t\t\teventHash[lastHash].endX = element.x;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endingRepeatElem === -1)\n\t\t\t\t\t\t\tendingRepeatElem = elem;\n\t\t\t\t\t\tvar lastVoiceTimeMilliseconds = 0;\n\t\t\t\t\t\ttempoDone = -1;\n\t\t\t\t\t\tfor (var el2 = startingRepeatElem; el2 < endingRepeatElem; el2++) {\n\t\t\t\t\t\t\tthisMeasure = elements[el2].measureNumber;\n\t\t\t\t\t\t\tif (tempoDone !== thisMeasure && this.tempoLocations[thisMeasure]) {\n\t\t\t\t\t\t\t\tbpm = this.tempoLocations[thisMeasure];\n\t\t\t\t\t\t\t\ttimeDivider = warp * this.getBeatLength() * bpm / 60;\n\t\t\t\t\t\t\t\ttempoDone = thisMeasure;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar element2 = elements[el2].elem;\n\t\t\t\t\t\t\tret = this.addElementToEvents(eventHash, element2, voiceTimeMilliseconds, elements[el2].top, elements[el2].height, elements[el2].line, elements[el2].measureNumber, timeDivider, isTiedState, nextIsBar);\n\t\t\t\t\t\t\tisTiedState = ret.isTiedState;\n\t\t\t\t\t\t\tnextIsBar = ret.nextIsBar;\n\t\t\t\t\t\t\tvoiceTime += ret.duration;\n\t\t\t\t\t\t\tlastVoiceTimeMilliseconds = voiceTimeMilliseconds;\n\t\t\t\t\t\t\tvoiceTimeMilliseconds = Math.round(voiceTime * 1000);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (eventHash[\"event\" + lastVoiceTimeMilliseconds]) // This won't exist if it is the beginning of the next line. That's ok because we will just count the end of the last line as the end.\n\t\t\t\t\t\t\teventHash[\"event\" + lastVoiceTimeMilliseconds].endX = elements[endingRepeatElem].elem.x;\n\t\t\t\t\t\tnextIsBar = true;\n\t\t\t\t\t\tendingRepeatElem = -1;\n\t\t\t\t\t}\n\t\t\t\t\tif (startEnding)\n\t\t\t\t\t\tendingRepeatElem = elem;\n\t\t\t\t\tif (startRepeat)\n\t\t\t\t\t\tstartingRepeatElem = elem;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmaxVoiceTimeMilliseconds = Math.max(maxVoiceTimeMilliseconds, voiceTimeMilliseconds)\n\t\t}\n\t\t// now we have all the events, but if there are multiple voices then there may be events out of order or duplicated, so normalize it.\n\t\ttimingEvents = makeSortedArray(eventHash);\n\t\taddVerticalInfo(timingEvents);\n\t\taddEndPoints(this.lines, timingEvents)\n\t\ttimingEvents.push({ type: \"end\", milliseconds: maxVoiceTimeMilliseconds });\n\t\tthis.addUsefulCallbackInfo(timingEvents, bpm*warp);\n\t\treturn timingEvents;\n\t};\n\n\tthis.addUsefulCallbackInfo = function(timingEvents, bpm) {\n\t\tvar millisecondsPerMeasure = this.millisecondsPerMeasure(bpm);\n\t\tfor (var i = 0; i < timingEvents.length; i++) {\n\t\t\tvar ev = timingEvents[i];\n\t\t\tev.millisecondsPerMeasure = millisecondsPerMeasure;\n\t\t}\n\t};\n\n\tfunction skipTies(elements, index) {\n\t\twhile (index < elements.length && elements[index].left === null)\n\t\t\tindex++;\n\t\treturn elements[index];\n\t}\n\tfunction addEndPoints(lines, elements) {\n\t\tif (elements.length < 1)\n\t\t\treturn;\n\t\tfor (var i = 0; i < elements.length-1; i++) {\n\t\t\tvar el = elements[i];\n\t\t\tvar next = skipTies(elements, i+1);\n\t\t\tif (el.left !== null) {\n\t\t\t\t// If there is no left element that is because this is a tie so it should be skipped.\n\t\t\t\tvar endX = (next && el.top === next.top) ? next.left : lines[el.line].staffGroup.w;\n\t\t\t\t// If this is already set, it is because the notes aren't sequential here, like the next thing is a repeat bar line.\n\t\t\t\t// In that case, the right-most position is passed in. There could still be an intervening note in another voice, so always look for the closest position.\n\t\t\t\t// If there is a repeat that stays on the same line, the endX set above won't be right because the next note will be before. In that case, use the endX that was calculated.\n\t\t\t\tif  (el.endX !== undefined) {\n\t\t\t\t\tif (endX > el.left)\n\t\t\t\t\t\tel.endX = Math.min(el.endX, endX);\n\t\t\t\t} else\n\t\t\t\t\tel.endX = endX;\n\t\t\t}\n\t\t}\n\t\tvar lastEl = elements[elements.length-1];\n\t\tlastEl.endX = lines[lastEl.line].staffGroup.w;\n\t}\n\n\tthis.getBpm = function(tempo) {\n\t\tvar bpm;\n\t\tif (!tempo)\n\t\t\ttempo = this.metaText ? this.metaText.tempo : null;\n\t\tif (tempo) {\n\t\t\tbpm = tempo.bpm;\n\t\t\tvar beatLength = this.getBeatLength();\n\t\t\tvar statedBeatLength = tempo.duration && tempo.duration.length > 0 ? tempo.duration[0] : beatLength;\n\t\t\tbpm = bpm * statedBeatLength / beatLength;\n\t\t}\n\t\tif (!bpm) {\n\t\t\tbpm = 180;\n\t\t\t// Compensate for compound meter, where the beat isn't a beat.\n\t\t\tvar meter = this.getMeterFraction();\n\t\t\tif (meter && meter.num !== 3 && (meter.num % 3 === 0)) {\n\t\t\t\tbpm = 120;\n\t\t\t}\n\t\t}\n\t\treturn bpm;\n\t};\n\n\tthis.setTiming = function (bpm, measuresOfDelay) {\n\t\tmeasuresOfDelay = measuresOfDelay || 0;\n\t\tif (!this.engraver || !this.engraver.staffgroups) {\n\t\t\tconsole.log(\"setTiming cannot be called before the tune is drawn.\");\n\t\t\tthis.noteTimings = [];\n\t\t\treturn this.noteTimings;\n\t\t}\n\n\t\tvar tempo = this.metaText ? this.metaText.tempo : null;\n\t\tvar naturalBpm = this.getBpm(tempo);\n\t\tvar warp = 1;\n\t\tif (bpm) {\n\t\t\tif (tempo)\n\t\t\t\twarp = bpm / naturalBpm;\n\t\t} else\n\t\t\tbpm = naturalBpm;\n\n\t\t// Calculate the basic midi data. We only care about the qpm variable here.\n\t\t//this.setUpAudio({qpm: bpm});\n\n\t\tvar beatLength = this.getBeatLength();\n\t\tvar beatsPerSecond = bpm / 60;\n\n\t\tvar measureLength = this.getBarLength();\n\n\t\tvar startingDelay = measureLength / beatLength * measuresOfDelay / beatsPerSecond;\n\t\tif (startingDelay)\n\t\t\tstartingDelay -= this.getPickupLength() / beatLength / beatsPerSecond;\n\t\tvar timeDivider = beatLength * beatsPerSecond;\n\n\t\tthis.noteTimings = this.setupEvents(startingDelay, timeDivider, bpm, warp);\n\t\tif (this.noteTimings.length > 0) {\n\t\t\tthis.totalTime = this.noteTimings[this.noteTimings.length - 1].milliseconds / 1000;\n\t\t\tthis.totalBeats = this.totalTime * beatsPerSecond;\n\t\t} else {\n\t\t\tthis.totalTime = undefined;\n\t\t\tthis.totalBeats = undefined;\n\t\t}\n\t\treturn this.noteTimings;\n\t};\n\n\tthis.setUpAudio = function(options) {\n\t\tif (!options) options = {};\n\t\tvar seq = sequence(this, options);\n\t\treturn flatten(seq, options, this.formatting.percmap, this.formatting.midi);\n\t};\n\tthis.deline = function(options) {\n\t\treturn delineTune(this.lines, options);\n\t}\n\tthis.findSelectableElement = function(target) {\n\t\tif (this.engraver && this.engraver.selectables)\n\t\t\treturn this.engraver.findSelectableElement(target)\n\t\treturn null\n\t}\n\tthis.getSelectableArray = function() {\n\t\tif (this.engraver && this.engraver.selectables)\n\t\t\treturn this.engraver.selectables\n\t\treturn []\n\t}\n};\n\nmodule.exports = Tune;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/data/abc_tune.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/data/deline-tune.js":
/*!****************************************************!*\
  !*** ./node_modules/abcjs/src/data/deline-tune.js ***!
  \****************************************************/
/***/ ((module) => {

eval("function delineTune(inputLines, options) {\n\tif (!options) options = {};\n\tvar lineBreaks = !!options.lineBreaks;\n\tvar outputLines = [];\n\tvar inMusicLine = false;\n\tvar currentMeter = [];\n\tvar currentKey = [];\n\tvar currentClef = [];\n\tvar currentVocalFont = [];\n\tvar currentGChordFont = [];\n\tvar currentTripletFont = [];\n\tvar currentAnnotationFont = [];\n\tfor (var i = 0; i < inputLines.length; i++) {\n\t\tvar inputLine = inputLines[i];\n\t\tif (inputLine.staff) {\n\t\t\tif (inMusicLine && !inputLine.vskip) {\n\t\t\t\tvar outputLine = outputLines[outputLines.length-1];\n\t\t\t\t//findMismatchKeys(inputLine, outputLine, [\"staff\", \"staffGroup\"], \"line\", i)\n\t\t\t\tfor (var s = 0; s < outputLine.staff.length; s++) {\n\t\t\t\t\tvar inputStaff = inputLine.staff[s];\n\t\t\t\t\tvar outputStaff = outputLine.staff[s];\n\t\t\t\t\tif (inputStaff) {\n\t\t\t\t\t\tif (!objEqual(inputStaff.meter, currentMeter[s])) {\n\t\t\t\t\t\t\t// The meter changed for this line, otherwise it wouldn't have been set\n\t\t\t\t\t\t\taddMeterToVoices(inputStaff.meter, inputStaff.voices)\n\t\t\t\t\t\t\tcurrentMeter[s] = inputStaff.meter;\n\t\t\t\t\t\t\tdelete inputStaff.meter;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!objEqual(inputStaff.key, currentKey[s])) {\n\t\t\t\t\t\t\taddKeyToVoices(inputStaff.key, inputStaff.voices);\n\t\t\t\t\t\t\tcurrentKey[s] = inputStaff.key;\n\t\t\t\t\t\t\tdelete inputStaff.key;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (inputStaff.title)\n\t\t\t\t\t\t\toutputStaff.abbrevTitle = inputStaff.title;\n\t\t\t\t\t\tif (!objEqual(inputStaff.clef, currentClef[s])) {\n\t\t\t\t\t\t\taddClefToVoices(inputStaff.clef, inputStaff.voices);\n\t\t\t\t\t\t\tcurrentClef[s] = inputStaff.clef;\n\t\t\t\t\t\t\tdelete inputStaff.clef;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!objEqual(inputStaff.vocalfont, currentVocalFont[s])) {\n\t\t\t\t\t\t\taddFontToVoices(inputStaff.vocalfont, inputStaff.voices, 'vocalfont')\n\t\t\t\t\t\t\tcurrentVocalFont[s] = inputStaff.vocalfont;\n\t\t\t\t\t\t\tdelete inputStaff.vocalfont;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!objEqual(inputStaff.gchordfont, currentGChordFont[s])) {\n\t\t\t\t\t\t\taddFontToVoices(inputStaff.gchordfont, inputStaff.voices, 'gchordfont')\n\t\t\t\t\t\t\tcurrentGChordFont[s] = inputStaff.gchordfont;\n\t\t\t\t\t\t\tdelete inputStaff.gchordfont;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!objEqual(inputStaff.tripletfont, currentTripletFont[s])) {\n\t\t\t\t\t\t\taddFontToVoices(inputStaff.tripletfont, inputStaff.voices, 'tripletfont')\n\t\t\t\t\t\t\tcurrentTripletFont[s] = inputStaff.tripletfont;\n\t\t\t\t\t\t\tdelete inputStaff.tripletfont;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!objEqual(inputStaff.annotationfont, currentAnnotationFont[s])) {\n\t\t\t\t\t\t\taddFontToVoices(inputStaff.annotationfont, inputStaff.voices, 'annotationfont')\n\t\t\t\t\t\t\tcurrentAnnotationFont[s] = inputStaff.annotationfont;\n\t\t\t\t\t\t\tdelete inputStaff.annotationfont;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//findMismatchKeys(inputStaff, outputStaff, [\"voices\", \"title\", \"abbrevTitle\", \"barNumber\", \"meter\", \"key\", \"clef\", \"vocalfont\", \"gchordfont\", \"tripletfont\", \"annotationfont\"], \"staff\", i + ' ' + s)\n\t\t\t\t\tif (inputStaff) {\n\t\t\t\t\t\tfor (var v = 0; v < outputStaff.voices.length; v++) {\n\t\t\t\t\t\t\tvar outputVoice = outputStaff.voices[v];\n\t\t\t\t\t\t\tvar inputVoice = inputStaff.voices[v];\n\t\t\t\t\t\t\tif (lineBreaks)\n\t\t\t\t\t\t\t\toutputVoice.push({el_type: \"break\"});\n\t\t\t\t\t\t\tif (inputVoice)\n\t\t\t\t\t\t\t\toutputStaff.voices[v] = outputVoice.concat(inputVoice)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (var ii = 0; ii < inputLine.staff.length; ii++) {\n\t\t\t\t\tcurrentKey[ii] = inputLine.staff[ii].key;\n\t\t\t\t\tcurrentMeter[ii] = inputLine.staff[ii].meter;\n\t\t\t\t\tcurrentClef[ii] = inputLine.staff[ii].clef;\n\t\t\t\t}\n\t\t\t\t// copy this because we are going to change it and we don't want to change the original.\n\t\t\t\toutputLines.push(cloneLine(inputLine));\n\t\t\t}\n\t\t\tinMusicLine = true;\n\t\t} else {\n\t\t\tinMusicLine = false;\n\t\t\toutputLines.push(inputLine);\n\t\t}\n\t}\n\treturn outputLines;\n}\n// function findMismatchKeys(input, output, ignore, context, context2) {\n// \tif (!input) {\n// \t\treturn;\n// \t}\n// \tvar outputKeys = Object.keys(output);\n// \tvar inputKeys = Object.keys(input);\n// \tfor (var ii = 0; ii < ignore.length; ii++) {\n// \t\tif (outputKeys.indexOf(ignore[ii]) >= 0) {\n// \t\t\toutputKeys.splice(outputKeys.indexOf(ignore[ii]), 1);\n// \t\t}\n// \t\tif (inputKeys.indexOf(ignore[ii]) >= 0) {\n// \t\t\tinputKeys.splice(inputKeys.indexOf(ignore[ii]), 1);\n// \t\t}\n// \t}\n// \tif (inputKeys.join(\",\") !== outputKeys.join(\",\")) {\n// \t\tconsole.log(\"keys mismatch \"+context + ' ' + context2, input, output);\n// \t}\n// \tfor (var k = 0; k < inputKeys.length; k++) {\n// \t\tvar key = inputKeys[k];\n// \t\tif (ignore.indexOf(key) < 0) {\n// \t\t\tvar inputValue = JSON.stringify(input[key], replacer);\n// \t\t\tvar outputValue = JSON.stringify(output[key], replacer);\n// \t\t\tif (inputValue !== outputValue)\n// \t\t\t\tconsole.log(\"value mismatch \"+context + ' ' + context2 + ' ' + key, inputValue, outputValue)\n// \t\t}\n// \t}\n// }\nfunction replacer(key, value) {\n\t// Filtering out properties\n\tif (key === 'abselem') {\n\t\treturn 'abselem';\n\t}\n\treturn value;\n}\n\nfunction addMeterToVoices(meter, voices) {\n\tmeter.el_type = \"meter\";\n\tmeter.startChar = -1;\n\tmeter.endChar = -1;\n\tfor (var i = 0; i < voices.length; i++) {\n\t\tvoices[i].unshift(meter);\n\t}\n}\n\nfunction addKeyToVoices(key, voices) {\n\tkey.el_type = \"key\";\n\tkey.startChar = -1;\n\tkey.endChar = -1;\n\tfor (var i = 0; i < voices.length; i++) {\n\t\tvoices[i].unshift(key);\n\t}\n}\n\nfunction addClefToVoices(clef, voices) {\n\tclef.el_type = \"clef\";\n\tclef.startChar = -1;\n\tclef.endChar = -1;\n\tfor (var i = 0; i < voices.length; i++) {\n\t\tvoices[i].unshift(clef);\n\t}\n}\n\nfunction addFontToVoices(font, voices, type) {\n\tfont.el_type = \"font\";\n\tfont.type = type;\n\tfont.startChar = -1;\n\tfont.endChar = -1;\n\tfor (var i = 0; i < voices.length; i++) {\n\t\tvoices[i].unshift(font);\n\t}\n}\n\nfunction objEqual(input, output) {\n\tif (!input)\n\t\treturn true; // the default is whatever the old output is.\n\tvar inputValue = JSON.stringify(input, replacer);\n\tvar outputValue = JSON.stringify(output, replacer);\n\treturn inputValue === outputValue;\n}\n\nfunction cloneLine(line) {\n\tvar output = {};\n\tvar keys = Object.keys(line);\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tif (keys[i] !== \"staff\")\n\t\t\toutput[keys[i]] = line[keys[i]];\n\t\telse {\n\t\t\toutput.staff = [];\n\t\t\tfor (var j = 0; j < line.staff.length; j++) {\n\t\t\t\tvar staff = {};\n\t\t\t\tvar keys2 = Object.keys(line.staff[j]);\n\t\t\t\tfor (var k = 0; k < keys2.length; k++) {\n\t\t\t\t\tif (keys2[k] !== \"voices\")\n\t\t\t\t\t\tstaff[keys2[k]] = line.staff[j][keys2[k]];\n\t\t\t\t\telse {\n\t\t\t\t\t\tstaff.voices = [];\n\t\t\t\t\t\tfor (var v = 0; v < line.staff[j].voices.length; v++) {\n\t\t\t\t\t\t\tstaff.voices.push([].concat(line.staff[j].voices[v]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toutput.staff.push(staff)\n\t\t\t}\n\t\t}\n\t}\n\treturn output;\n}\n\nmodule.exports = delineTune;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/data/deline-tune.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/edit/abc_editarea.js":
/*!*****************************************************!*\
  !*** ./node_modules/abcjs/src/edit/abc_editarea.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("// abc_editor.js\n\n// window.ABCJS.Editor is the interface class for the area that contains the ABC text. It is responsible for\n// holding the text of the tune and calling the parser and the rendering engines.\n//\n// EditArea is an example of using a textarea as the control that is shown to the user. As long as\n// the same interface is used, window.ABCJS.Editor can use a different type of object.\n//\n// EditArea:\n// - constructor(textareaid)\n//\t\tThis contains the id of a textarea control that will be used.\n// - addSelectionListener(listener)\n//\t\tA callback class that contains the entry point fireSelectionChanged()\n// - addChangeListener(listener)\n//\t\tA callback class that contains the entry point fireChanged()\n// - getSelection()\n//\t\treturns the object { start: , end: } with the current selection in characters\n// - setSelection(start, end)\n//\t\tstart and end are the character positions that should be selected.\n// - getString()\n//\t\treturns the ABC text that is currently displayed.\n// - setString(str)\n//\t\tsets the ABC text that is currently displayed, and resets the initialText variable\n// - getElem()\n//\t\treturns the textarea element\n// - string initialText\n//\t\tContains the starting text. This can be compared against the current text to see if anything changed.\n//\n\n// Polyfill for CustomEvent for old IE versions\ntry {\n\tif (typeof window.CustomEvent !== \"function\") {\n\t\tvar CustomEvent = function (event, params) {\n\t\t\tparams = params || {bubbles: false, cancelable: false, detail: undefined};\n\t\t\tvar evt = document.createEvent('CustomEvent');\n\t\t\tevt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n\t\t\treturn evt;\n\t\t};\n\t\tCustomEvent.prototype = window.Event.prototype;\n\t\twindow.CustomEvent = CustomEvent;\n\t}\n} catch (e) {\n\t// if we aren't in a browser, this code will crash, but it is not needed then either.\n}\n\nvar EditArea = function (textareaid) {\n\tthis.isEditArea = true\n\tif (typeof textareaid === \"string\") {\n\t\tthis.textarea = document.getElementById(textareaid);\n\t\tif (!this.textarea)\n\t\t\tthis.textarea = document.querySelector(textareaid)\n\t} else\n\t\tthis.textarea = textareaid;\n\tthis.initialText = this.textarea.value;\n\tthis.isDragging = false;\n}\n\nEditArea.prototype.addSelectionListener = function (listener) {\n\tthis.textarea.onmousemove = function (ev) {\n\t\tif (this.isDragging)\n\t\t\tlistener.fireSelectionChanged();\n\t};\n};\n\nEditArea.prototype.addChangeListener = function (listener) {\n\tthis.changelistener = listener;\n\tthis.textarea.onkeyup = function () {\n\t\tlistener.fireChanged();\n\t};\n\tthis.textarea.onmousedown = function () {\n\t\tthis.isDragging = true;\n\t\tlistener.fireSelectionChanged();\n\t};\n\tthis.textarea.onmouseup = function () {\n\t\tthis.isDragging = false;\n\t\tlistener.fireChanged();\n\t};\n\tthis.textarea.onchange = function () {\n\t\tlistener.fireChanged();\n\t};\n};\n\n//TODO won't work under IE?\nEditArea.prototype.getSelection = function () {\n\treturn {start: this.textarea.selectionStart, end: this.textarea.selectionEnd};\n};\n\nEditArea.prototype.setSelection = function (start, end) {\n\tif (this.textarea.setSelectionRange)\n\t\tthis.textarea.setSelectionRange(start, end);\n\telse if (this.textarea.createTextRange) {\n\t\t// For IE8\n\t\tvar e = this.textarea.createTextRange();\n\t\te.collapse(true);\n\t\te.moveEnd('character', end);\n\t\te.moveStart('character', start);\n\t\te.select();\n\t}\n\tthis.textarea.focus();\n};\n\nEditArea.prototype.getString = function () {\n\treturn this.textarea.value;\n};\n\nEditArea.prototype.setString = function (str) {\n\tthis.textarea.value = str;\n\tthis.initialText = this.getString();\n\tif (this.changelistener) {\n\t\tthis.changelistener.fireChanged();\n\t}\n};\n\nEditArea.prototype.getElem = function () {\n\treturn this.textarea;\n};\n\nmodule.exports = EditArea;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL2VkaXQvYWJjX2VkaXRhcmVhLmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZ0JBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL2VkaXQvYWJjX2VkaXRhcmVhLmpzPzJhNzgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gYWJjX2VkaXRvci5qc1xuXG4vLyB3aW5kb3cuQUJDSlMuRWRpdG9yIGlzIHRoZSBpbnRlcmZhY2UgY2xhc3MgZm9yIHRoZSBhcmVhIHRoYXQgY29udGFpbnMgdGhlIEFCQyB0ZXh0LiBJdCBpcyByZXNwb25zaWJsZSBmb3Jcbi8vIGhvbGRpbmcgdGhlIHRleHQgb2YgdGhlIHR1bmUgYW5kIGNhbGxpbmcgdGhlIHBhcnNlciBhbmQgdGhlIHJlbmRlcmluZyBlbmdpbmVzLlxuLy9cbi8vIEVkaXRBcmVhIGlzIGFuIGV4YW1wbGUgb2YgdXNpbmcgYSB0ZXh0YXJlYSBhcyB0aGUgY29udHJvbCB0aGF0IGlzIHNob3duIHRvIHRoZSB1c2VyLiBBcyBsb25nIGFzXG4vLyB0aGUgc2FtZSBpbnRlcmZhY2UgaXMgdXNlZCwgd2luZG93LkFCQ0pTLkVkaXRvciBjYW4gdXNlIGEgZGlmZmVyZW50IHR5cGUgb2Ygb2JqZWN0LlxuLy9cbi8vIEVkaXRBcmVhOlxuLy8gLSBjb25zdHJ1Y3Rvcih0ZXh0YXJlYWlkKVxuLy9cdFx0VGhpcyBjb250YWlucyB0aGUgaWQgb2YgYSB0ZXh0YXJlYSBjb250cm9sIHRoYXQgd2lsbCBiZSB1c2VkLlxuLy8gLSBhZGRTZWxlY3Rpb25MaXN0ZW5lcihsaXN0ZW5lcilcbi8vXHRcdEEgY2FsbGJhY2sgY2xhc3MgdGhhdCBjb250YWlucyB0aGUgZW50cnkgcG9pbnQgZmlyZVNlbGVjdGlvbkNoYW5nZWQoKVxuLy8gLSBhZGRDaGFuZ2VMaXN0ZW5lcihsaXN0ZW5lcilcbi8vXHRcdEEgY2FsbGJhY2sgY2xhc3MgdGhhdCBjb250YWlucyB0aGUgZW50cnkgcG9pbnQgZmlyZUNoYW5nZWQoKVxuLy8gLSBnZXRTZWxlY3Rpb24oKVxuLy9cdFx0cmV0dXJucyB0aGUgb2JqZWN0IHsgc3RhcnQ6ICwgZW5kOiB9IHdpdGggdGhlIGN1cnJlbnQgc2VsZWN0aW9uIGluIGNoYXJhY3RlcnNcbi8vIC0gc2V0U2VsZWN0aW9uKHN0YXJ0LCBlbmQpXG4vL1x0XHRzdGFydCBhbmQgZW5kIGFyZSB0aGUgY2hhcmFjdGVyIHBvc2l0aW9ucyB0aGF0IHNob3VsZCBiZSBzZWxlY3RlZC5cbi8vIC0gZ2V0U3RyaW5nKClcbi8vXHRcdHJldHVybnMgdGhlIEFCQyB0ZXh0IHRoYXQgaXMgY3VycmVudGx5IGRpc3BsYXllZC5cbi8vIC0gc2V0U3RyaW5nKHN0cilcbi8vXHRcdHNldHMgdGhlIEFCQyB0ZXh0IHRoYXQgaXMgY3VycmVudGx5IGRpc3BsYXllZCwgYW5kIHJlc2V0cyB0aGUgaW5pdGlhbFRleHQgdmFyaWFibGVcbi8vIC0gZ2V0RWxlbSgpXG4vL1x0XHRyZXR1cm5zIHRoZSB0ZXh0YXJlYSBlbGVtZW50XG4vLyAtIHN0cmluZyBpbml0aWFsVGV4dFxuLy9cdFx0Q29udGFpbnMgdGhlIHN0YXJ0aW5nIHRleHQuIFRoaXMgY2FuIGJlIGNvbXBhcmVkIGFnYWluc3QgdGhlIGN1cnJlbnQgdGV4dCB0byBzZWUgaWYgYW55dGhpbmcgY2hhbmdlZC5cbi8vXG5cbi8vIFBvbHlmaWxsIGZvciBDdXN0b21FdmVudCBmb3Igb2xkIElFIHZlcnNpb25zXG50cnkge1xuXHRpZiAodHlwZW9mIHdpbmRvdy5DdXN0b21FdmVudCAhPT0gXCJmdW5jdGlvblwiKSB7XG5cdFx0dmFyIEN1c3RvbUV2ZW50ID0gZnVuY3Rpb24gKGV2ZW50LCBwYXJhbXMpIHtcblx0XHRcdHBhcmFtcyA9IHBhcmFtcyB8fCB7YnViYmxlczogZmFsc2UsIGNhbmNlbGFibGU6IGZhbHNlLCBkZXRhaWw6IHVuZGVmaW5lZH07XG5cdFx0XHR2YXIgZXZ0ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0N1c3RvbUV2ZW50Jyk7XG5cdFx0XHRldnQuaW5pdEN1c3RvbUV2ZW50KGV2ZW50LCBwYXJhbXMuYnViYmxlcywgcGFyYW1zLmNhbmNlbGFibGUsIHBhcmFtcy5kZXRhaWwpO1xuXHRcdFx0cmV0dXJuIGV2dDtcblx0XHR9O1xuXHRcdEN1c3RvbUV2ZW50LnByb3RvdHlwZSA9IHdpbmRvdy5FdmVudC5wcm90b3R5cGU7XG5cdFx0d2luZG93LkN1c3RvbUV2ZW50ID0gQ3VzdG9tRXZlbnQ7XG5cdH1cbn0gY2F0Y2ggKGUpIHtcblx0Ly8gaWYgd2UgYXJlbid0IGluIGEgYnJvd3NlciwgdGhpcyBjb2RlIHdpbGwgY3Jhc2gsIGJ1dCBpdCBpcyBub3QgbmVlZGVkIHRoZW4gZWl0aGVyLlxufVxuXG52YXIgRWRpdEFyZWEgPSBmdW5jdGlvbiAodGV4dGFyZWFpZCkge1xuXHR0aGlzLmlzRWRpdEFyZWEgPSB0cnVlXG5cdGlmICh0eXBlb2YgdGV4dGFyZWFpZCA9PT0gXCJzdHJpbmdcIikge1xuXHRcdHRoaXMudGV4dGFyZWEgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0ZXh0YXJlYWlkKTtcblx0XHRpZiAoIXRoaXMudGV4dGFyZWEpXG5cdFx0XHR0aGlzLnRleHRhcmVhID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0ZXh0YXJlYWlkKVxuXHR9IGVsc2Vcblx0XHR0aGlzLnRleHRhcmVhID0gdGV4dGFyZWFpZDtcblx0dGhpcy5pbml0aWFsVGV4dCA9IHRoaXMudGV4dGFyZWEudmFsdWU7XG5cdHRoaXMuaXNEcmFnZ2luZyA9IGZhbHNlO1xufVxuXG5FZGl0QXJlYS5wcm90b3R5cGUuYWRkU2VsZWN0aW9uTGlzdGVuZXIgPSBmdW5jdGlvbiAobGlzdGVuZXIpIHtcblx0dGhpcy50ZXh0YXJlYS5vbm1vdXNlbW92ZSA9IGZ1bmN0aW9uIChldikge1xuXHRcdGlmICh0aGlzLmlzRHJhZ2dpbmcpXG5cdFx0XHRsaXN0ZW5lci5maXJlU2VsZWN0aW9uQ2hhbmdlZCgpO1xuXHR9O1xufTtcblxuRWRpdEFyZWEucHJvdG90eXBlLmFkZENoYW5nZUxpc3RlbmVyID0gZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG5cdHRoaXMuY2hhbmdlbGlzdGVuZXIgPSBsaXN0ZW5lcjtcblx0dGhpcy50ZXh0YXJlYS5vbmtleXVwID0gZnVuY3Rpb24gKCkge1xuXHRcdGxpc3RlbmVyLmZpcmVDaGFuZ2VkKCk7XG5cdH07XG5cdHRoaXMudGV4dGFyZWEub25tb3VzZWRvd24gPSBmdW5jdGlvbiAoKSB7XG5cdFx0dGhpcy5pc0RyYWdnaW5nID0gdHJ1ZTtcblx0XHRsaXN0ZW5lci5maXJlU2VsZWN0aW9uQ2hhbmdlZCgpO1xuXHR9O1xuXHR0aGlzLnRleHRhcmVhLm9ubW91c2V1cCA9IGZ1bmN0aW9uICgpIHtcblx0XHR0aGlzLmlzRHJhZ2dpbmcgPSBmYWxzZTtcblx0XHRsaXN0ZW5lci5maXJlQ2hhbmdlZCgpO1xuXHR9O1xuXHR0aGlzLnRleHRhcmVhLm9uY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuXHRcdGxpc3RlbmVyLmZpcmVDaGFuZ2VkKCk7XG5cdH07XG59O1xuXG4vL1RPRE8gd29uJ3Qgd29yayB1bmRlciBJRT9cbkVkaXRBcmVhLnByb3RvdHlwZS5nZXRTZWxlY3Rpb24gPSBmdW5jdGlvbiAoKSB7XG5cdHJldHVybiB7c3RhcnQ6IHRoaXMudGV4dGFyZWEuc2VsZWN0aW9uU3RhcnQsIGVuZDogdGhpcy50ZXh0YXJlYS5zZWxlY3Rpb25FbmR9O1xufTtcblxuRWRpdEFyZWEucHJvdG90eXBlLnNldFNlbGVjdGlvbiA9IGZ1bmN0aW9uIChzdGFydCwgZW5kKSB7XG5cdGlmICh0aGlzLnRleHRhcmVhLnNldFNlbGVjdGlvblJhbmdlKVxuXHRcdHRoaXMudGV4dGFyZWEuc2V0U2VsZWN0aW9uUmFuZ2Uoc3RhcnQsIGVuZCk7XG5cdGVsc2UgaWYgKHRoaXMudGV4dGFyZWEuY3JlYXRlVGV4dFJhbmdlKSB7XG5cdFx0Ly8gRm9yIElFOFxuXHRcdHZhciBlID0gdGhpcy50ZXh0YXJlYS5jcmVhdGVUZXh0UmFuZ2UoKTtcblx0XHRlLmNvbGxhcHNlKHRydWUpO1xuXHRcdGUubW92ZUVuZCgnY2hhcmFjdGVyJywgZW5kKTtcblx0XHRlLm1vdmVTdGFydCgnY2hhcmFjdGVyJywgc3RhcnQpO1xuXHRcdGUuc2VsZWN0KCk7XG5cdH1cblx0dGhpcy50ZXh0YXJlYS5mb2N1cygpO1xufTtcblxuRWRpdEFyZWEucHJvdG90eXBlLmdldFN0cmluZyA9IGZ1bmN0aW9uICgpIHtcblx0cmV0dXJuIHRoaXMudGV4dGFyZWEudmFsdWU7XG59O1xuXG5FZGl0QXJlYS5wcm90b3R5cGUuc2V0U3RyaW5nID0gZnVuY3Rpb24gKHN0cikge1xuXHR0aGlzLnRleHRhcmVhLnZhbHVlID0gc3RyO1xuXHR0aGlzLmluaXRpYWxUZXh0ID0gdGhpcy5nZXRTdHJpbmcoKTtcblx0aWYgKHRoaXMuY2hhbmdlbGlzdGVuZXIpIHtcblx0XHR0aGlzLmNoYW5nZWxpc3RlbmVyLmZpcmVDaGFuZ2VkKCk7XG5cdH1cbn07XG5cbkVkaXRBcmVhLnByb3RvdHlwZS5nZXRFbGVtID0gZnVuY3Rpb24gKCkge1xuXHRyZXR1cm4gdGhpcy50ZXh0YXJlYTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRWRpdEFyZWE7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/edit/abc_editarea.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/edit/abc_editor.js":
/*!***************************************************!*\
  !*** ./node_modules/abcjs/src/edit/abc_editor.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// window.ABCJS.Editor:\n//\n// constructor(editarea, params)\n//\t\tif editarea is a string, then it is an HTML id of a textarea control.\n//\t\tOtherwise, it should be an instantiation of an object that expresses the EditArea interface.\n//\n//\t\tparams is a hash of:\n//\t\tcanvas_id: or paper_id: HTML id to draw in. If not present, then the drawing happens just below the editor.\n//\t\tgenerate_midi: if present, then midi is generated.\n//\t\tmidi_id: if present, the HTML id to place the midi control. Otherwise it is placed in the same div as the paper.\n//\t\tmidi_download_id: if present, the HTML id to place the midi download link. Otherwise it is placed in the same div as the paper.\n//\t\tgenerate_warnings: if present, then parser warnings are displayed on the page.\n//\t\twarnings_id: if present, the HTML id to place the warnings. Otherwise they are placed in the same div as the paper.\n//\t\tonchange: if present, the callback function to call whenever there has been a change.\n//\t\tgui: if present, the paper can send changes back to the editor (presumably because the user changed something directly.)\n//\t\tparser_options: options to send to the parser engine.\n//\t\tmidi_options: options to send to the midi engine.\n//\t\trender_options: options to send to the render engine.\n//\t\tindicate_changed: the dirty flag is set if this is true.\n//\n// - setReadOnly(bool)\n//\t\tadds or removes the class abc_textarea_readonly, and adds or removes the attribute readonly=yes\n// - setDirtyStyle(bool)\n//\t\tadds or removes the class abc_textarea_dirty\n// - modelChanged()\n//\t\tCalled when the model has been changed to trigger re-rendering\n// - parseABC()\n//\t\tCalled internally by fireChanged()\n//\t\treturns true if there has been a change since last call.\n// - updateSelection()\n//\t\tCalled when the user has changed the selection. This calls the engraver to show the selection.\n// - fireSelectionChanged()\n//\t\tCalled by the textarea object when the user has changed the selection.\n// - paramChanged(engraverparams)\n//\t\tCalled to signal that the engraver params have changed, so re-rendering should occur.\n// - fireChanged()\n//\t\tCalled by the textarea object when the user has changed something.\n// - setNotDirty()\n//\t\tCalled by the client app to reset the dirty flag\n// - isDirty()\n//\t\tReturns true or false, whether the textarea contains the same text that it started with.\n// - highlight(abcelem)\n//\t\tCalled by the engraver to highlight an area.\n// - pause(bool)\n//\t\tStops the automatic rendering when the user is typing.\n//\nvar parseCommon = __webpack_require__(/*! ../parse/abc_common */ \"(ssr)/./node_modules/abcjs/src/parse/abc_common.js\");\nvar SynthController = __webpack_require__(/*! ../synth/synth-controller */ \"(ssr)/./node_modules/abcjs/src/synth/synth-controller.js\");\nvar supportsAudio = __webpack_require__(/*! ../synth/supports-audio */ \"(ssr)/./node_modules/abcjs/src/synth/supports-audio.js\");\nvar renderAbc = __webpack_require__(/*! ../api/abc_tunebook_svg */ \"(ssr)/./node_modules/abcjs/src/api/abc_tunebook_svg.js\");\nvar EditArea = __webpack_require__(/*! ./abc_editarea */ \"(ssr)/./node_modules/abcjs/src/edit/abc_editarea.js\");\n\nfunction gatherAbcParams(params) {\n\t// There used to be a bunch of ways parameters can be passed in. This just simplifies it.\n\tvar abcjsParams = {};\n\tvar key;\n\tif (params.abcjsParams) {\n\t\tfor (key in params.abcjsParams) {\n\t\t\tif (params.abcjsParams.hasOwnProperty(key)) {\n\t\t\t\tabcjsParams[key] = params.abcjsParams[key];\n\t\t\t}\n\t\t}\n\t}\n\tif (params.midi_options) {\n\t\tfor (key in params.midi_options) {\n\t\t\tif (params.midi_options.hasOwnProperty(key)) {\n\t\t\t\tabcjsParams[key] = params.midi_options[key];\n\t\t\t}\n\t\t}\n\t}\n\tif (params.parser_options) {\n\t\tfor (key in params.parser_options) {\n\t\t\tif (params.parser_options.hasOwnProperty(key)) {\n\t\t\t\tabcjsParams[key] = params.parser_options[key];\n\t\t\t}\n\t\t}\n\t}\n\tif (params.render_options) {\n\t\tfor (key in params.render_options) {\n\t\t\tif (params.render_options.hasOwnProperty(key)) {\n\t\t\t\tabcjsParams[key] = params.render_options[key];\n\t\t\t}\n\t\t}\n\t}\n\t/*\n\tif (params.tablature_options) {\n\t\tabcjsParams['tablatures'] = params.tablature_options;\n\t}\n\t*/\n\tif (abcjsParams.tablature) {\n\t\tif (params.warnings_id) {\n\t\t\t// store for plugin error handling\n\t\t\tabcjsParams.tablature.warnings_id = params.warnings_id;\n\t\t}\n\t}\n\treturn abcjsParams;\n}\n\nvar Editor = function (editarea, params) {\n\t// Copy all the options that will be passed through\n\tthis.abcjsParams = gatherAbcParams(params);\n\n\tif (params.indicate_changed)\n\t\tthis.indicate_changed = true;\n\n\t// If a string is passed in then it could either be an element's ID or a selector\n\t// If an object is passed in then it could either be an EditArea or a textarea.\n\tif (typeof editarea === \"string\") {\n\t\t// EditArea handles both the ID and the selector\n\t\tthis.editarea = new EditArea(editarea);\n\t} else {\n\t\t// If an edit area was passed in, just use it\n\t\tif (editarea.isEditArea)\n\t\t\tthis.editarea = editarea;\n\t\telse\n\t\t\t// Hopefully we were passed in a textarea or equivalent.\n\t\t\tthis.editarea = new EditArea(editarea)\n\t}\n\tthis.editarea.addSelectionListener(this);\n\tthis.editarea.addChangeListener(this);\n\n\tif (params.canvas_id) {\n\t\tthis.div = params.canvas_id;\n\t} else if (params.paper_id) {\n\t\tthis.div = params.paper_id;\n\t} else {\n\t\tthis.div = document.createElement(\"DIV\");\n\t\tthis.editarea.getElem().parentNode.insertBefore(this.div, this.editarea.getElem());\n\t}\n\tif (typeof this.div === 'string')\n\t\tthis.div = document.getElementById(this.div);\n\n\tif (params.selectionChangeCallback) {\n\t\tthis.selectionChangeCallback = params.selectionChangeCallback;\n\t}\n\n\tthis.clientClickListener = this.abcjsParams.clickListener;\n\tthis.abcjsParams.clickListener = this.highlight.bind(this);\n\n\tif (params.synth) {\n\t\tif (supportsAudio()) {\n\t\t\tthis.synth = {\n\t\t\t\tel: params.synth.el,\n\t\t\t\tcursorControl: params.synth.cursorControl,\n\t\t\t\toptions: params.synth.options\n\t\t\t};\n\t\t}\n\t}\n\t// If the user wants midi, then store the elements that it will be written to. The element could either be passed in as an id,\n\t// an element, or nothing. If nothing is passed in, then just put the midi on top of the generated music.\n\tif (params.generate_midi) {\n\t\tthis.generate_midi = params.generate_midi;\n\t\tif (this.abcjsParams.generateDownload) {\n\t\t\tif (typeof params.midi_download_id === 'string')\n\t\t\t\tthis.downloadMidi = document.getElementById(params.midi_download_id);\n\t\t\telse if (params.midi_download_id) // assume, if the var is not a string it is an element. If not, it will crash soon enough.\n\t\t\t\tthis.downloadMidi = params.midi_download_id;\n\t\t}\n\t\tif (this.abcjsParams.generateInline !== false) { // The default for this is true, so undefined is also true.\n\t\t\tif (typeof params.midi_id === 'string')\n\t\t\t\tthis.inlineMidi = document.getElementById(params.midi_id);\n\t\t\telse if (params.midi_id) // assume, if the var is not a string it is an element. If not, it will crash soon enough.\n\t\t\t\tthis.inlineMidi = params.midi_id;\n\t\t}\n\t}\n\n\tif (params.warnings_id) {\n\t\tif (typeof (params.warnings_id) === \"string\")\n\t\t\tthis.warningsdiv = document.getElementById(params.warnings_id);\n\t\telse\n\t\t\tthis.warningsdiv = params.warnings_id;\n\t} else if (params.generate_warnings) {\n\t\tthis.warningsdiv = document.createElement(\"div\");\n\t\tthis.div.parentNode.insertBefore(this.warningsdiv, this.div);\n\t}\n\n\tthis.onchangeCallback = params.onchange;\n\tthis.redrawCallback = params.redrawCallback;\n\n\tthis.currentAbc = \"\";\n\tthis.tunes = [];\n\tthis.bReentry = false;\n\tthis.parseABC();\n\tthis.modelChanged();\n\n\tthis.addClassName = function (element, className) {\n\t\tvar hasClassName = function (element, className) {\n\t\t\tvar elementClassName = element.className;\n\t\t\treturn (elementClassName.length > 0 && (elementClassName === className ||\n\t\t\t\tnew RegExp(\"(^|\\\\s)\" + className + \"(\\\\s|$)\").test(elementClassName)));\n\t\t};\n\n\t\tif (!hasClassName(element, className))\n\t\t\telement.className += (element.className ? ' ' : '') + className;\n\t\treturn element;\n\t};\n\n\tthis.removeClassName = function (element, className) {\n\t\telement.className = parseCommon.strip(element.className.replace(\n\t\t\tnew RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), ' '));\n\t\treturn element;\n\t};\n\n\tthis.setReadOnly = function (readOnly) {\n\t\tvar readonlyClass = 'abc_textarea_readonly';\n\t\tvar el = this.editarea.getElem();\n\t\tif (readOnly) {\n\t\t\tel.setAttribute('readonly', 'yes');\n\t\t\tthis.addClassName(el, readonlyClass);\n\t\t} else {\n\t\t\tel.removeAttribute('readonly');\n\t\t\tthis.removeClassName(el, readonlyClass);\n\t\t}\n\t};\n};\n\nEditor.prototype.redrawMidi = function () {\n\tif (this.generate_midi && !this.midiPause) {\n\t\tvar event = new window.CustomEvent(\"generateMidi\", {\n\t\t\tdetail: {\n\t\t\t\ttunes: this.tunes,\n\t\t\t\tabcjsParams: this.abcjsParams,\n\t\t\t\tdownloadMidiEl: this.downloadMidi,\n\t\t\t\tinlineMidiEl: this.inlineMidi,\n\t\t\t\tengravingEl: this.div\n\t\t\t}\n\t\t});\n\t\twindow.dispatchEvent(event);\n\t}\n\tif (this.synth) {\n\t\tvar userAction = this.synth.synthControl; // Can't really tell if there was a user action before drawing, but we assume that if the synthControl was created already there was a user action.\n\t\tif (!this.synth.synthControl) {\n\t\t\tthis.synth.synthControl = new SynthController();\n\t\t\tthis.synth.synthControl.load(this.synth.el, this.synth.cursorControl, this.synth.options);\n\t\t}\n\t\tthis.synth.synthControl.setTune(this.tunes[0], userAction, this.synth.options);\n\t}\n};\n\nEditor.prototype.modelChanged = function () {\n\tif (this.bReentry)\n\t\treturn; // TODO is this likely? maybe, if we rewrite abc immediately w/ abc2abc\n\tthis.bReentry = true;\n\ttry {\n\t\tthis.timerId = null;\n\t\tif (this.redrawCallback)\n\t\t\tthis.redrawCallback(true)\n\t\tif (this.synth && this.synth.synthControl)\n\t\t\tthis.synth.synthControl.disable(true);\n\n\t\tthis.tunes = renderAbc(this.div, this.currentAbc, this.abcjsParams);\n\t\tif (this.tunes.length > 0) {\n\t\t\tthis.warnings = this.tunes[0].warnings;\n\t\t}\n\t\tthis.redrawMidi();\n\t\tif (this.redrawCallback)\n\t\t\tthis.redrawCallback(false)\n\t} catch (error) {\n\t\tconsole.error(\"ABCJS error: \", error);\n\t\tif (!this.warnings)\n\t\t\tthis.warnings = [];\n\t\tthis.warnings.push(error.message);\n\t}\n\n\tif (this.warningsdiv) {\n\t\tthis.warningsdiv.innerHTML = (this.warnings) ? this.warnings.join(\"<br />\") : \"No errors\";\n\t}\n\tthis.updateSelection();\n\tthis.bReentry = false;\n};\n\n// Call this to reparse in response to the client changing the parameters on the fly\nEditor.prototype.paramChanged = function (engraverParams) {\n\tif (engraverParams) {\n\t\tfor (var key in engraverParams) {\n\t\t\tif (engraverParams.hasOwnProperty(key)) {\n\t\t\t\tthis.abcjsParams[key] = engraverParams[key];\n\t\t\t}\n\t\t}\n\t}\n\tthis.currentAbc = \"\";\n\tthis.fireChanged();\n};\n\nEditor.prototype.getTunes = function () {\n\treturn this.tunes\n};\n\nEditor.prototype.synthParamChanged = function (options) {\n\tif (!this.synth)\n\t\treturn;\n\tthis.synth.options = {};\n\tif (options) {\n\t\tfor (var key in options) {\n\t\t\tif (options.hasOwnProperty(key)) {\n\t\t\t\tthis.synth.options[key] = options[key];\n\t\t\t}\n\t\t}\n\t}\n\tthis.currentAbc = \"\";\n\tthis.fireChanged();\n};\n\n// return true if the model has changed\nEditor.prototype.parseABC = function () {\n\tvar t = this.editarea.getString();\n\tif (t === this.currentAbc) {\n\t\tthis.updateSelection();\n\t\treturn false;\n\t}\n\n\tthis.currentAbc = t;\n\treturn true;\n};\n\nEditor.prototype.updateSelection = function () {\n\tvar selection = this.editarea.getSelection();\n\ttry {\n\t\tif (this.tunes.length > 0 && this.tunes[0].engraver)\n\t\t\tthis.tunes[0].engraver.rangeHighlight(selection.start, selection.end);\n\t} catch (e) {\n\t} // maybe printer isn't defined yet?\n\tif (this.selectionChangeCallback)\n\t\tthis.selectionChangeCallback(selection.start, selection.end);\n};\n\n// Called when the textarea's selection is in the process of changing (after mouse down, dragging, or keyboard arrows)\nEditor.prototype.fireSelectionChanged = function () {\n\tthis.updateSelection();\n};\n\nEditor.prototype.setDirtyStyle = function (isDirty) {\n\tif (this.indicate_changed === undefined)\n\t\treturn;\n\tvar addClassName = function (element, className) {\n\t\tvar hasClassName = function (element, className) {\n\t\t\tvar elementClassName = element.className;\n\t\t\treturn (elementClassName.length > 0 && (elementClassName === className ||\n\t\t\t\tnew RegExp(\"(^|\\\\s)\" + className + \"(\\\\s|$)\").test(elementClassName)));\n\t\t};\n\n\t\tif (!hasClassName(element, className))\n\t\t\telement.className += (element.className ? ' ' : '') + className;\n\t\treturn element;\n\t};\n\n\tvar removeClassName = function (element, className) {\n\t\telement.className = parseCommon.strip(element.className.replace(\n\t\t\tnew RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), ' '));\n\t\treturn element;\n\t};\n\n\tvar readonlyClass = 'abc_textarea_dirty';\n\tvar el = this.editarea.getElem();\n\tif (isDirty) {\n\t\taddClassName(el, readonlyClass);\n\t} else {\n\t\tremoveClassName(el, readonlyClass);\n\t}\n};\n\n// call when the textarea alerts us that the abc text is changed and needs re-parsing\nEditor.prototype.fireChanged = function () {\n\tif (this.bIsPaused)\n\t\treturn;\n\tif (this.parseABC()) {\n\t\tvar self = this;\n\t\tif (this.timerId)\t// If the user is still typing, cancel the update\n\t\t\tclearTimeout(this.timerId);\n\t\tthis.timerId = setTimeout(function () {\n\t\t\tself.modelChanged();\n\t\t}, 300);\t// Is this a good compromise between responsiveness and not redrawing too much?\n\t\tvar isDirty = this.isDirty();\n\t\tif (this.wasDirty !== isDirty) {\n\t\t\tthis.wasDirty = isDirty;\n\t\t\tthis.setDirtyStyle(isDirty);\n\t\t}\n\t\tif (this.onchangeCallback)\n\t\t\tthis.onchangeCallback(this);\n\t}\n};\n\nEditor.prototype.setNotDirty = function () {\n\tthis.editarea.initialText = this.editarea.getString();\n\tthis.wasDirty = false;\n\tthis.setDirtyStyle(false);\n};\n\nEditor.prototype.isDirty = function () {\n\tif (this.indicate_changed === undefined)\n\t\treturn false;\n\treturn this.editarea.initialText !== this.editarea.getString();\n};\n\nEditor.prototype.highlight = function (abcelem, tuneNumber, classes, analysis, drag, mouseEvent) {\n\t// TODO-PER: The marker appears to get off by one for each tune parsed. I'm not sure why, but adding the tuneNumber in corrects it for the time being.\n//\tvar offset = (tuneNumber !== undefined) ? this.startPos[tuneNumber] + tuneNumber : 0;\n\n\tthis.editarea.setSelection(abcelem.startChar, abcelem.endChar);\n\tif (this.selectionChangeCallback)\n\t\tthis.selectionChangeCallback(abcelem.startChar, abcelem.endChar);\n\tif (this.clientClickListener)\n\t\tthis.clientClickListener(abcelem, tuneNumber, classes, analysis, drag, mouseEvent);\n};\n\nEditor.prototype.pause = function (shouldPause) {\n\tthis.bIsPaused = shouldPause;\n\tif (!shouldPause)\n\t\tthis.fireChanged();\n};\n\nEditor.prototype.millisecondsPerMeasure = function () {\n\tif (!this.synth || !this.synth.synthControl || !this.synth.synthControl.visualObj)\n\t\treturn 0;\n\treturn this.synth.synthControl.visualObj.millisecondsPerMeasure();\n};\n\nEditor.prototype.pauseMidi = function (shouldPause) {\n\tthis.midiPause = shouldPause;\n\tif (!shouldPause)\n\t\tthis.redrawMidi();\n};\n\nmodule.exports = Editor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/edit/abc_editor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/midi/abc_midi_create.js":
/*!********************************************************!*\
  !*** ./node_modules/abcjs/src/midi/abc_midi_create.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_midi_create.js: Turn a linear series of events into a midi file.\n\nvar rendererFactory = __webpack_require__(/*! ../synth/abc_midi_renderer */ \"(ssr)/./node_modules/abcjs/src/synth/abc_midi_renderer.js\");\n\nvar create;\n\n(function() {\n\t\"use strict\";\n\n\tvar baseDuration = 480*4; // nice and divisible, equals 1 whole note\n\n\tcreate = function create(abcTune, options) {\n\t\tif (options === undefined) options = {};\n\t\tvar commands = abcTune.setUpAudio(options);\n\t\tvar midi = rendererFactory();\n\t\tvar title = abcTune.metaText ? abcTune.metaText.title : undefined;\n\t\tif (title && title.length > 128) title = title.substring(0, 124) + '...';\n\t\tvar key = abcTune.getKeySignature();\n\t\tvar time = abcTune.getMeterFraction();\n\n\t\t// MAE 7 July 2024 - Fix for */8 meter tempos\n\t\tvar tempo = commands.tempo;\n\n\t\tvar beatsPerSecond = tempo / 60;\n\n\t\t// Fix tempo for */8 meters\n\t\tif (time.den == 8){\n\n\t\t\t// Compute the tempo based on the actual milliseconds per measure, scaled by the number of eight notes and halved to get tempo in bpm.\n\t\t\tvar msPerMeasure = abcTune.millisecondsPerMeasure();\n\t\t\t\n\t\t\ttempo = (60000 / (msPerMeasure/time.num)) / 2;\n\t\t\t\n\t\t\tbeatsPerSecond = tempo/60;\n\n\t\t}\n\n\t\t//var beatLength = abcTune.getBeatLength();\n\t\tmidi.setGlobalInfo(tempo, title, key, time);\n\t\t\n\t\tfor (var i = 0; i < commands.tracks.length; i++) {\n\t\t\tmidi.startTrack();\n\t\t\tvar notePlacement = {};\n\t\t\tfor (var j = 0; j < commands.tracks[i].length; j++) {\n\t\t\t\tvar event = commands.tracks[i][j];\n\t\t\t\tswitch (event.cmd) {\n\t\t\t\t\tcase 'text':\n\t\t\t\t\t\tmidi.setText(event.type, event.text);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'program':\n\t\t\t\t\t\tvar pan = 0;\n\t\t\t\t\t\tif (options.pan && options.pan.length > i)\n\t\t\t\t\t\t\tpan = options.pan[i];\n\t\t\t\t\t\tif (event.instrument === 128) {\n\t\t\t\t\t\t\t// If we're using the percussion voice, change to Channel 10\n\t\t\t\t\t\t\tmidi.setChannel(9, pan);\n\t\t\t\t\t\t\tmidi.setInstrument(0);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmidi.setChannel(event.channel, pan);\n\t\t\t\t\t\t\tmidi.setInstrument(event.instrument);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'note':\n\t\t\t\t\t\tvar gapLengthInBeats = event.gap * beatsPerSecond;\n\t\t\t\t\t\tvar start = event.start;\n\t\t\t\t\t\t// The staccato and legato are indicated by event.gap.\n\t\t\t\t\t\t// event.gap is in seconds but the durations are in whole notes.\n\t\t\t\t\t\tvar end = start + event.duration - gapLengthInBeats;\n\t\t\t\t\t\tif (!notePlacement[start])\n\t\t\t\t\t\t\tnotePlacement[start] = [];\n\t\t\t\t\t\tnotePlacement[start].push({ pitch: event.pitch, volume: event.volume, cents: event.cents });\n\t\t\t\t\t\tif (!notePlacement[end])\n\t\t\t\t\t\t\tnotePlacement[end] = [];\n\t\t\t\t\t\tnotePlacement[end].push({ pitch: event.pitch, volume: 0 });\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log(\"MIDI create Unknown: \" + event.cmd);\n\t\t\t\t}\n\t\t\t}\n\t\t\taddNotes(midi, notePlacement, baseDuration);\n\t\t\tmidi.endTrack();\n\t\t}\n\n\t\treturn midi.getData();\n\t};\n\n\tfunction addNotes(midi, notePlacement, baseDuration) {\n\t\tvar times = Object.keys(notePlacement);\n\t\tfor (var h = 0; h < times.length; h++)\n\t\t\ttimes[h] = parseFloat(times[h]);\n\t\ttimes.sort(function(a,b) {\n\t\t\treturn a - b;\n\t\t});\n\t\tvar lastTime = 0;\n\t\tfor (var i = 0; i < times.length; i++) {\n\t\t\tvar events = notePlacement[times[i]];\n\t\t\tif (times[i] > lastTime) {\n\t\t\t\tvar distance = (times[i] - lastTime) * baseDuration;\n\t\t\t\tmidi.addRest(distance);\n\t\t\t\tlastTime = times[i];\n\t\t\t}\n\t\t\tfor (var j = 0; j < events.length; j++) {\n\t\t\t\tvar event = events[j];\n\t\t\t\tif (event.volume) {\n\t\t\t\t\tmidi.startNote(event.pitch, event.volume, event.cents);\n\t\t\t\t} else {\n\t\t\t\t\tmidi.endNote(event.pitch);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n})();\n\nmodule.exports = create;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL21pZGkvYWJjX21pZGlfY3JlYXRlLmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUVBLHNCQUFzQixtQkFBTyxDQUFDLDZGQUE0Qjs7QUFFMUQ7O0FBRUE7QUFDQTs7QUFFQSwyQkFBMkI7O0FBRTNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsNEJBQTRCO0FBQzlDO0FBQ0E7QUFDQSxtQkFBbUIsK0JBQStCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyw4REFBOEQ7QUFDaEc7QUFDQTtBQUNBLGdDQUFnQywrQkFBK0I7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0Isa0JBQWtCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLGtCQUFrQixrQkFBa0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG1CQUFtQjtBQUN0QztBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL21pZGkvYWJjX21pZGlfY3JlYXRlLmpzPzExYjkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gICAgYWJjX21pZGlfY3JlYXRlLmpzOiBUdXJuIGEgbGluZWFyIHNlcmllcyBvZiBldmVudHMgaW50byBhIG1pZGkgZmlsZS5cblxudmFyIHJlbmRlcmVyRmFjdG9yeSA9IHJlcXVpcmUoJy4uL3N5bnRoL2FiY19taWRpX3JlbmRlcmVyJyk7XG5cbnZhciBjcmVhdGU7XG5cbihmdW5jdGlvbigpIHtcblx0XCJ1c2Ugc3RyaWN0XCI7XG5cblx0dmFyIGJhc2VEdXJhdGlvbiA9IDQ4MCo0OyAvLyBuaWNlIGFuZCBkaXZpc2libGUsIGVxdWFscyAxIHdob2xlIG5vdGVcblxuXHRjcmVhdGUgPSBmdW5jdGlvbiBjcmVhdGUoYWJjVHVuZSwgb3B0aW9ucykge1xuXHRcdGlmIChvcHRpb25zID09PSB1bmRlZmluZWQpIG9wdGlvbnMgPSB7fTtcblx0XHR2YXIgY29tbWFuZHMgPSBhYmNUdW5lLnNldFVwQXVkaW8ob3B0aW9ucyk7XG5cdFx0dmFyIG1pZGkgPSByZW5kZXJlckZhY3RvcnkoKTtcblx0XHR2YXIgdGl0bGUgPSBhYmNUdW5lLm1ldGFUZXh0ID8gYWJjVHVuZS5tZXRhVGV4dC50aXRsZSA6IHVuZGVmaW5lZDtcblx0XHRpZiAodGl0bGUgJiYgdGl0bGUubGVuZ3RoID4gMTI4KSB0aXRsZSA9IHRpdGxlLnN1YnN0cmluZygwLCAxMjQpICsgJy4uLic7XG5cdFx0dmFyIGtleSA9IGFiY1R1bmUuZ2V0S2V5U2lnbmF0dXJlKCk7XG5cdFx0dmFyIHRpbWUgPSBhYmNUdW5lLmdldE1ldGVyRnJhY3Rpb24oKTtcblxuXHRcdC8vIE1BRSA3IEp1bHkgMjAyNCAtIEZpeCBmb3IgKi84IG1ldGVyIHRlbXBvc1xuXHRcdHZhciB0ZW1wbyA9IGNvbW1hbmRzLnRlbXBvO1xuXG5cdFx0dmFyIGJlYXRzUGVyU2Vjb25kID0gdGVtcG8gLyA2MDtcblxuXHRcdC8vIEZpeCB0ZW1wbyBmb3IgKi84IG1ldGVyc1xuXHRcdGlmICh0aW1lLmRlbiA9PSA4KXtcblxuXHRcdFx0Ly8gQ29tcHV0ZSB0aGUgdGVtcG8gYmFzZWQgb24gdGhlIGFjdHVhbCBtaWxsaXNlY29uZHMgcGVyIG1lYXN1cmUsIHNjYWxlZCBieSB0aGUgbnVtYmVyIG9mIGVpZ2h0IG5vdGVzIGFuZCBoYWx2ZWQgdG8gZ2V0IHRlbXBvIGluIGJwbS5cblx0XHRcdHZhciBtc1Blck1lYXN1cmUgPSBhYmNUdW5lLm1pbGxpc2Vjb25kc1Blck1lYXN1cmUoKTtcblx0XHRcdFxuXHRcdFx0dGVtcG8gPSAoNjAwMDAgLyAobXNQZXJNZWFzdXJlL3RpbWUubnVtKSkgLyAyO1xuXHRcdFx0XG5cdFx0XHRiZWF0c1BlclNlY29uZCA9IHRlbXBvLzYwO1xuXG5cdFx0fVxuXG5cdFx0Ly92YXIgYmVhdExlbmd0aCA9IGFiY1R1bmUuZ2V0QmVhdExlbmd0aCgpO1xuXHRcdG1pZGkuc2V0R2xvYmFsSW5mbyh0ZW1wbywgdGl0bGUsIGtleSwgdGltZSk7XG5cdFx0XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBjb21tYW5kcy50cmFja3MubGVuZ3RoOyBpKyspIHtcblx0XHRcdG1pZGkuc3RhcnRUcmFjaygpO1xuXHRcdFx0dmFyIG5vdGVQbGFjZW1lbnQgPSB7fTtcblx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgY29tbWFuZHMudHJhY2tzW2ldLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdHZhciBldmVudCA9IGNvbW1hbmRzLnRyYWNrc1tpXVtqXTtcblx0XHRcdFx0c3dpdGNoIChldmVudC5jbWQpIHtcblx0XHRcdFx0XHRjYXNlICd0ZXh0Jzpcblx0XHRcdFx0XHRcdG1pZGkuc2V0VGV4dChldmVudC50eXBlLCBldmVudC50ZXh0KTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdGNhc2UgJ3Byb2dyYW0nOlxuXHRcdFx0XHRcdFx0dmFyIHBhbiA9IDA7XG5cdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5wYW4gJiYgb3B0aW9ucy5wYW4ubGVuZ3RoID4gaSlcblx0XHRcdFx0XHRcdFx0cGFuID0gb3B0aW9ucy5wYW5baV07XG5cdFx0XHRcdFx0XHRpZiAoZXZlbnQuaW5zdHJ1bWVudCA9PT0gMTI4KSB7XG5cdFx0XHRcdFx0XHRcdC8vIElmIHdlJ3JlIHVzaW5nIHRoZSBwZXJjdXNzaW9uIHZvaWNlLCBjaGFuZ2UgdG8gQ2hhbm5lbCAxMFxuXHRcdFx0XHRcdFx0XHRtaWRpLnNldENoYW5uZWwoOSwgcGFuKTtcblx0XHRcdFx0XHRcdFx0bWlkaS5zZXRJbnN0cnVtZW50KDApO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0bWlkaS5zZXRDaGFubmVsKGV2ZW50LmNoYW5uZWwsIHBhbik7XG5cdFx0XHRcdFx0XHRcdG1pZGkuc2V0SW5zdHJ1bWVudChldmVudC5pbnN0cnVtZW50KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdGNhc2UgJ25vdGUnOlxuXHRcdFx0XHRcdFx0dmFyIGdhcExlbmd0aEluQmVhdHMgPSBldmVudC5nYXAgKiBiZWF0c1BlclNlY29uZDtcblx0XHRcdFx0XHRcdHZhciBzdGFydCA9IGV2ZW50LnN0YXJ0O1xuXHRcdFx0XHRcdFx0Ly8gVGhlIHN0YWNjYXRvIGFuZCBsZWdhdG8gYXJlIGluZGljYXRlZCBieSBldmVudC5nYXAuXG5cdFx0XHRcdFx0XHQvLyBldmVudC5nYXAgaXMgaW4gc2Vjb25kcyBidXQgdGhlIGR1cmF0aW9ucyBhcmUgaW4gd2hvbGUgbm90ZXMuXG5cdFx0XHRcdFx0XHR2YXIgZW5kID0gc3RhcnQgKyBldmVudC5kdXJhdGlvbiAtIGdhcExlbmd0aEluQmVhdHM7XG5cdFx0XHRcdFx0XHRpZiAoIW5vdGVQbGFjZW1lbnRbc3RhcnRdKVxuXHRcdFx0XHRcdFx0XHRub3RlUGxhY2VtZW50W3N0YXJ0XSA9IFtdO1xuXHRcdFx0XHRcdFx0bm90ZVBsYWNlbWVudFtzdGFydF0ucHVzaCh7IHBpdGNoOiBldmVudC5waXRjaCwgdm9sdW1lOiBldmVudC52b2x1bWUsIGNlbnRzOiBldmVudC5jZW50cyB9KTtcblx0XHRcdFx0XHRcdGlmICghbm90ZVBsYWNlbWVudFtlbmRdKVxuXHRcdFx0XHRcdFx0XHRub3RlUGxhY2VtZW50W2VuZF0gPSBbXTtcblx0XHRcdFx0XHRcdG5vdGVQbGFjZW1lbnRbZW5kXS5wdXNoKHsgcGl0Y2g6IGV2ZW50LnBpdGNoLCB2b2x1bWU6IDAgfSk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdFx0Y29uc29sZS5sb2coXCJNSURJIGNyZWF0ZSBVbmtub3duOiBcIiArIGV2ZW50LmNtZCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGFkZE5vdGVzKG1pZGksIG5vdGVQbGFjZW1lbnQsIGJhc2VEdXJhdGlvbik7XG5cdFx0XHRtaWRpLmVuZFRyYWNrKCk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG1pZGkuZ2V0RGF0YSgpO1xuXHR9O1xuXG5cdGZ1bmN0aW9uIGFkZE5vdGVzKG1pZGksIG5vdGVQbGFjZW1lbnQsIGJhc2VEdXJhdGlvbikge1xuXHRcdHZhciB0aW1lcyA9IE9iamVjdC5rZXlzKG5vdGVQbGFjZW1lbnQpO1xuXHRcdGZvciAodmFyIGggPSAwOyBoIDwgdGltZXMubGVuZ3RoOyBoKyspXG5cdFx0XHR0aW1lc1toXSA9IHBhcnNlRmxvYXQodGltZXNbaF0pO1xuXHRcdHRpbWVzLnNvcnQoZnVuY3Rpb24oYSxiKSB7XG5cdFx0XHRyZXR1cm4gYSAtIGI7XG5cdFx0fSk7XG5cdFx0dmFyIGxhc3RUaW1lID0gMDtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHRpbWVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgZXZlbnRzID0gbm90ZVBsYWNlbWVudFt0aW1lc1tpXV07XG5cdFx0XHRpZiAodGltZXNbaV0gPiBsYXN0VGltZSkge1xuXHRcdFx0XHR2YXIgZGlzdGFuY2UgPSAodGltZXNbaV0gLSBsYXN0VGltZSkgKiBiYXNlRHVyYXRpb247XG5cdFx0XHRcdG1pZGkuYWRkUmVzdChkaXN0YW5jZSk7XG5cdFx0XHRcdGxhc3RUaW1lID0gdGltZXNbaV07XG5cdFx0XHR9XG5cdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGV2ZW50cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHR2YXIgZXZlbnQgPSBldmVudHNbal07XG5cdFx0XHRcdGlmIChldmVudC52b2x1bWUpIHtcblx0XHRcdFx0XHRtaWRpLnN0YXJ0Tm90ZShldmVudC5waXRjaCwgZXZlbnQudm9sdW1lLCBldmVudC5jZW50cyk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0bWlkaS5lbmROb3RlKGV2ZW50LnBpdGNoKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG59KSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/midi/abc_midi_create.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/parse/abc_common.js":
/*!****************************************************!*\
  !*** ./node_modules/abcjs/src/parse/abc_common.js ***!
  \****************************************************/
/***/ ((module) => {

eval("//    abc_common.js: Some common utility functions.\n\nvar parseCommon = {};\n\nparseCommon.cloneArray = function(source) {\n\tvar destination = [];\n\tfor (var i = 0; i < source.length; i++) {\n\t\tdestination.push(Object.assign({},source[i]));\n\t}\n\treturn destination;\n};\n\nparseCommon.cloneHashOfHash = function(source) {\n\tvar destination = {};\n\tfor (var property in source)\n\t\tif (source.hasOwnProperty(property))\n\t\t\tdestination[property] = Object.assign({},source[property]);\n\treturn destination;\n};\n\nparseCommon.cloneHashOfArrayOfHash = function(source) {\n\tvar destination = {};\n\tfor (var property in source)\n\t\tif (source.hasOwnProperty(property))\n\t\t\tdestination[property] = parseCommon.cloneArray(source[property]);\n\treturn destination;\n};\n\nparseCommon.strip = function(str) {\n\treturn str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n};\n\nparseCommon.startsWith = function(str, pattern) {\n\treturn str.indexOf(pattern) === 0;\n};\n\nparseCommon.endsWith = function(str, pattern) {\n\tvar d = str.length - pattern.length;\n\treturn d >= 0 && str.lastIndexOf(pattern) === d;\n};\n\nparseCommon.last = function(arr) {\n\tif (arr.length === 0)\n\t\treturn null;\n\treturn arr[arr.length-1];\n};\n\n\nmodule.exports = parseCommon;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3BhcnNlL2FiY19jb21tb24uanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLGlCQUFpQixtQkFBbUI7QUFDcEMsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQztBQUMzQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvcGFyc2UvYWJjX2NvbW1vbi5qcz80MzA1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vICAgIGFiY19jb21tb24uanM6IFNvbWUgY29tbW9uIHV0aWxpdHkgZnVuY3Rpb25zLlxuXG52YXIgcGFyc2VDb21tb24gPSB7fTtcblxucGFyc2VDb21tb24uY2xvbmVBcnJheSA9IGZ1bmN0aW9uKHNvdXJjZSkge1xuXHR2YXIgZGVzdGluYXRpb24gPSBbXTtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzb3VyY2UubGVuZ3RoOyBpKyspIHtcblx0XHRkZXN0aW5hdGlvbi5wdXNoKE9iamVjdC5hc3NpZ24oe30sc291cmNlW2ldKSk7XG5cdH1cblx0cmV0dXJuIGRlc3RpbmF0aW9uO1xufTtcblxucGFyc2VDb21tb24uY2xvbmVIYXNoT2ZIYXNoID0gZnVuY3Rpb24oc291cmNlKSB7XG5cdHZhciBkZXN0aW5hdGlvbiA9IHt9O1xuXHRmb3IgKHZhciBwcm9wZXJ0eSBpbiBzb3VyY2UpXG5cdFx0aWYgKHNvdXJjZS5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpXG5cdFx0XHRkZXN0aW5hdGlvbltwcm9wZXJ0eV0gPSBPYmplY3QuYXNzaWduKHt9LHNvdXJjZVtwcm9wZXJ0eV0pO1xuXHRyZXR1cm4gZGVzdGluYXRpb247XG59O1xuXG5wYXJzZUNvbW1vbi5jbG9uZUhhc2hPZkFycmF5T2ZIYXNoID0gZnVuY3Rpb24oc291cmNlKSB7XG5cdHZhciBkZXN0aW5hdGlvbiA9IHt9O1xuXHRmb3IgKHZhciBwcm9wZXJ0eSBpbiBzb3VyY2UpXG5cdFx0aWYgKHNvdXJjZS5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpXG5cdFx0XHRkZXN0aW5hdGlvbltwcm9wZXJ0eV0gPSBwYXJzZUNvbW1vbi5jbG9uZUFycmF5KHNvdXJjZVtwcm9wZXJ0eV0pO1xuXHRyZXR1cm4gZGVzdGluYXRpb247XG59O1xuXG5wYXJzZUNvbW1vbi5zdHJpcCA9IGZ1bmN0aW9uKHN0cikge1xuXHRyZXR1cm4gc3RyLnJlcGxhY2UoL15cXHMrLywgJycpLnJlcGxhY2UoL1xccyskLywgJycpO1xufTtcblxucGFyc2VDb21tb24uc3RhcnRzV2l0aCA9IGZ1bmN0aW9uKHN0ciwgcGF0dGVybikge1xuXHRyZXR1cm4gc3RyLmluZGV4T2YocGF0dGVybikgPT09IDA7XG59O1xuXG5wYXJzZUNvbW1vbi5lbmRzV2l0aCA9IGZ1bmN0aW9uKHN0ciwgcGF0dGVybikge1xuXHR2YXIgZCA9IHN0ci5sZW5ndGggLSBwYXR0ZXJuLmxlbmd0aDtcblx0cmV0dXJuIGQgPj0gMCAmJiBzdHIubGFzdEluZGV4T2YocGF0dGVybikgPT09IGQ7XG59O1xuXG5wYXJzZUNvbW1vbi5sYXN0ID0gZnVuY3Rpb24oYXJyKSB7XG5cdGlmIChhcnIubGVuZ3RoID09PSAwKVxuXHRcdHJldHVybiBudWxsO1xuXHRyZXR1cm4gYXJyW2Fyci5sZW5ndGgtMV07XG59O1xuXG5cbm1vZHVsZS5leHBvcnRzID0gcGFyc2VDb21tb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/parse/abc_common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/parse/abc_parse.js":
/*!***************************************************!*\
  !*** ./node_modules/abcjs/src/parse/abc_parse.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_parse.js: parses a string representing ABC Music Notation into a usable internal structure.\n\nvar parseCommon = __webpack_require__(/*! ./abc_common */ \"(ssr)/./node_modules/abcjs/src/parse/abc_common.js\");\nvar parseDirective = __webpack_require__(/*! ./abc_parse_directive */ \"(ssr)/./node_modules/abcjs/src/parse/abc_parse_directive.js\");\nvar ParseHeader = __webpack_require__(/*! ./abc_parse_header */ \"(ssr)/./node_modules/abcjs/src/parse/abc_parse_header.js\");\nvar ParseMusic = __webpack_require__(/*! ./abc_parse_music */ \"(ssr)/./node_modules/abcjs/src/parse/abc_parse_music.js\");\nvar Tokenizer = __webpack_require__(/*! ./abc_tokenizer */ \"(ssr)/./node_modules/abcjs/src/parse/abc_tokenizer.js\");\nvar wrap = __webpack_require__(/*! ./wrap_lines */ \"(ssr)/./node_modules/abcjs/src/parse/wrap_lines.js\");\n\nvar Tune = __webpack_require__(/*! ../data/abc_tune */ \"(ssr)/./node_modules/abcjs/src/data/abc_tune.js\");\nvar TuneBuilder = __webpack_require__(/*! ../parse/tune-builder */ \"(ssr)/./node_modules/abcjs/src/parse/tune-builder.js\");\n\nvar Parse = function() {\n\t\"use strict\";\n\tvar tune = new Tune();\n\tvar tuneBuilder = new TuneBuilder(tune);\n\tvar tokenizer;\n\tvar wordsContinuation = '';\n\tvar symbolContinuation = '';\n\n\tthis.getTune = function() {\n\t\tvar t = {\n\t\t\tformatting: tune.formatting,\n\t\t\tlines: tune.lines,\n\t\t\tmedia: tune.media,\n\t\t\tmetaText: tune.metaText,\n\t\t\tmetaTextInfo: tune.metaTextInfo,\n\t\t\tversion: tune.version,\n\n\t\t\taddElementToEvents: tune.addElementToEvents,\n\t\t\taddUsefulCallbackInfo: tune.addUsefulCallbackInfo,\n\t\t\tgetTotalTime: tune.getTotalTime,\n\t\t\tgetTotalBeats: tune.getTotalBeats,\n\t\t\tgetBarLength: tune.getBarLength,\n\t\t\tgetBeatLength: tune.getBeatLength,\n\t\t\tgetBeatsPerMeasure: tune.getBeatsPerMeasure,\n\t\t\tgetBpm: tune.getBpm,\n\t\t\tgetMeter: tune.getMeter,\n\t\t\tgetMeterFraction: tune.getMeterFraction,\n\t\t\tgetPickupLength: tune.getPickupLength,\n\t\t\tgetKeySignature: tune.getKeySignature,\n\t\t\tgetElementFromChar: tune.getElementFromChar,\n\t\t\tmakeVoicesArray: tune.makeVoicesArray,\n\t\t\tmillisecondsPerMeasure: tune.millisecondsPerMeasure,\n\t\t\tsetupEvents: tune.setupEvents,\n\t\t\tsetTiming: tune.setTiming,\n\t\t\tsetUpAudio: tune.setUpAudio,\n\t\t\tdeline: tune.deline,\n\t\t\tfindSelectableElement: tune.findSelectableElement,\n\t\t\tgetSelectableArray: tune.getSelectableArray,\n\t\t};\n\t\tif (tune.lineBreaks)\n\t\t\tt.lineBreaks = tune.lineBreaks;\n\t\tif (tune.visualTranspose)\n\t\t\tt.visualTranspose = tune.visualTranspose;\n\t\treturn t;\n\t};\n\n\tfunction addPositioning(el, type, value) {\n\t\tif (!el.positioning) el.positioning = {};\n\t\tel.positioning[type] = value;\n\t}\n\n\tfunction addFont(el, type, value) {\n\t\tif (!el.fonts) el.fonts = {};\n\t\tel.fonts[type] = value;\n\t}\n\n\tvar multilineVars = {\n\t\treset: function() {\n\t\t\tfor (var property in this) {\n\t\t\t\tif (this.hasOwnProperty(property) && typeof this[property] !== \"function\") {\n\t\t\t\t\tdelete this[property];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.iChar = 0;\n\t\t\tthis.key = {accidentals: [], root: 'none', acc: '', mode: '' };\n\t\t\tthis.meter = null; // if no meter is specified, free meter is assumed\n\t\t\tthis.origMeter = null;\t// this is for new voices that are created after we set the meter.\n\t\t\tthis.hasMainTitle = false;\n\t\t\tthis.default_length = 0.125;\n\t\t\tthis.clef = { type: 'treble', verticalPos: 0 };\n\t\t\tthis.octave = 0;\n\t\t\tthis.next_note_duration = 0;\n\t\t\tthis.start_new_line = true;\n\t\t\tthis.is_in_header = true;\n\t\t\tthis.partForNextLine = {};\n\t\t\tthis.tempoForNextLine = [];\n\t\t\tthis.havent_set_length = true;\n\t\t\tthis.voices = {};\n\t\t\tthis.staves = [];\n\t\t\tthis.macros = {};\n\t\t\tthis.currBarNumber = 1;\n\t\t\tthis.barCounter = {};\n\t\t\tthis.ignoredDecorations = [];\n\t\t\tthis.score_is_present = false;\t// Can't have original V: lines when there is the score directive\n\t\t\tthis.inEnding = false;\n\t\t\tthis.inTie = [];\n\t\t\tthis.inTieChord = {};\n\t\t\tthis.vocalPosition = \"auto\";\n\t\t\tthis.dynamicPosition = \"auto\";\n\t\t\tthis.chordPosition = \"auto\";\n\t\t\tthis.ornamentPosition = \"auto\";\n\t\t\tthis.volumePosition = \"auto\";\n\t\t\tthis.openSlurs = [];\n\t\t\tthis.freegchord = false;\n\t\t\tthis.endingHoldOver = {};\n\t\t},\n\t\tdifferentFont: function(type, defaultFonts) {\n\t\t\tif (this[type].decoration !== defaultFonts[type].decoration) return true;\n\t\t\tif (this[type].face !== defaultFonts[type].face) return true;\n\t\t\tif (this[type].size !== defaultFonts[type].size) return true;\n\t\t\tif (this[type].style !== defaultFonts[type].style) return true;\n\t\t\tif (this[type].weight !== defaultFonts[type].weight) return true;\n\t\t\treturn false;\n\t\t},\n\t\taddFormattingOptions: function(el, defaultFonts, elType) {\n\t\t\tif (elType === 'note') {\n\t\t\t\tif (this.vocalPosition !== 'auto') addPositioning(el, 'vocalPosition', this.vocalPosition);\n\t\t\t\tif (this.dynamicPosition !== 'auto') addPositioning(el, 'dynamicPosition', this.dynamicPosition);\n\t\t\t\tif (this.chordPosition !== 'auto') addPositioning(el, 'chordPosition', this.chordPosition);\n\t\t\t\tif (this.ornamentPosition !== 'auto') addPositioning(el, 'ornamentPosition', this.ornamentPosition);\n\t\t\t\tif (this.volumePosition !== 'auto') addPositioning(el, 'volumePosition', this.volumePosition);\n\t\t\t\tif (this.differentFont(\"annotationfont\", defaultFonts)) addFont(el, 'annotationfont', this.annotationfont);\n\t\t\t\tif (this.differentFont(\"gchordfont\", defaultFonts)) addFont(el, 'gchordfont', this.gchordfont);\n\t\t\t\tif (this.differentFont(\"vocalfont\", defaultFonts)) addFont(el, 'vocalfont', this.vocalfont);\n\t\t\t\tif (this.differentFont(\"tripletfont\", defaultFonts)) addFont(el, 'tripletfont', this.tripletfont);\n\t\t\t} else if (elType === 'bar') {\n\t\t\t\tif (this.dynamicPosition !== 'auto') addPositioning(el, 'dynamicPosition', this.dynamicPosition);\n\t\t\t\tif (this.chordPosition !== 'auto') addPositioning(el, 'chordPosition', this.chordPosition);\n\t\t\t\tif (this.ornamentPosition !== 'auto') addPositioning(el, 'ornamentPosition', this.ornamentPosition);\n\t\t\t\tif (this.volumePosition !== 'auto') addPositioning(el, 'volumePosition', this.volumePosition);\n\t\t\t\tif (this.differentFont(\"measurefont\", defaultFonts)) addFont(el, 'measurefont', this.measurefont);\n\t\t\t\tif (this.differentFont(\"repeatfont\", defaultFonts)) addFont(el, 'repeatfont', this.repeatfont);\n\t\t\t}\n\t\t},\n\t\tduplicateStartEndingHoldOvers: function() {\n\t\t\tthis.endingHoldOver = {\n\t\t\t\tinTie: [],\n\t\t\t\tinTieChord: {}\n\t\t\t};\n\t\t\tfor (var i = 0; i < this.inTie.length; i++) {\n\t\t\t\tthis.endingHoldOver.inTie.push([]);\n\t\t\t\tif (this.inTie[i]) { // if a voice is suppressed there might be a gap in the array.\n\t\t\t\t\tfor (var j = 0; j < this.inTie[i].length; j++) {\n\t\t\t\t\t\tthis.endingHoldOver.inTie[i].push(this.inTie[i][j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var key in this.inTieChord) {\n\t\t\t\tif (this.inTieChord.hasOwnProperty(key))\n\t\t\t\t\tthis.endingHoldOver.inTieChord[key] = this.inTieChord[key];\n\t\t\t}\n\t\t},\n\t\trestoreStartEndingHoldOvers: function() {\n\t\t\tif (!this.endingHoldOver.inTie)\n\t\t\t\treturn;\n\t\t\tthis.inTie = [];\n\t\t\tthis.inTieChord = {};\n\t\t\tfor (var i = 0; i < this.endingHoldOver.inTie.length; i++) {\n\t\t\t\tthis.inTie.push([]);\n\t\t\t\tfor (var j = 0; j < this.endingHoldOver.inTie[i].length; j++) {\n\t\t\t\t\tthis.inTie[i].push(this.endingHoldOver.inTie[i][j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var key in this.endingHoldOver.inTieChord) {\n\t\t\t\tif (this.endingHoldOver.inTieChord.hasOwnProperty(key))\n\t\t\t\t\tthis.inTieChord[key] = this.endingHoldOver.inTieChord[key];\n\t\t\t}\n\t\t},\n\t};\n\n\tvar addWarning = function(str) {\n\t\tif (!multilineVars.warnings)\n\t\t\tmultilineVars.warnings = [];\n\t\tmultilineVars.warnings.push(str);\n\t};\n\n\tvar addWarningObject = function(warningObject) {\n\t\tif (!multilineVars.warningObjects)\n\t\t\tmultilineVars.warningObjects = [];\n\t\tmultilineVars.warningObjects.push(warningObject);\n\t};\n\n\tvar encode = function(str) {\n\t\tvar ret = str.replace(/\\x12/g, ' ');\n\t\tret = ret.replace(/&/g, '&amp;');\n\t\tret = ret.replace(/</g, '&lt;');\n\t\treturn ret.replace(/>/g, '&gt;');\n\t};\n\n\tvar warn = function(str, line, col_num) {\n\t\tif (!line) line = \" \";\n\t\tvar bad_char = line[col_num];\n\t\tif (bad_char === ' ' || !bad_char)\n\t\t\tbad_char = \"SPACE\";\n\t\tvar clean_line = encode(line.substring(col_num - 64, col_num)) + '<span style=\"text-decoration:underline;font-size:1.3em;font-weight:bold;\">' + bad_char + '</span>' + encode(line.substring(col_num + 1).substring(0,64));\n\t\taddWarning(\"Music Line:\" + tokenizer.lineIndex + \":\" + (col_num+1) + ': ' + str + \":  \" + clean_line);\n\t\taddWarningObject({message:str, line:line, startChar: multilineVars.iChar + col_num, column: col_num});\n\t};\n\n\tvar header;\n\tvar music;\n\n\tthis.getWarnings = function() {\n\t\treturn multilineVars.warnings;\n\t};\n\tthis.getWarningObjects = function() {\n\t\treturn multilineVars.warningObjects;\n\t};\n\n\tvar addWords = function(line, words) {\n\t\tif (words.indexOf('\\x12') >= 0) {\n\t\t\twordsContinuation += words\n\t\t\treturn\n\t\t}\n\t\twords = wordsContinuation + words\n\t\twordsContinuation = ''\n\n\t\tif (!line) { warn(\"Can't add words before the first line of music\", line, 0); return; }\n\t\twords = parseCommon.strip(words);\n\t\tif (words[words.length-1] !== '-')\n\t\t\twords = words + ' ';\t// Just makes it easier to parse below, since every word has a divider after it.\n\t\tvar word_list = [];\n\t\t// first make a list of words from the string we are passed. A word is divided on either a space or dash.\n\t\tvar last_divider = 0;\n\t\tvar replace = false;\n\t\tvar addWord = function(i) {\n\t\t\tvar word = parseCommon.strip(words.substring(last_divider, i));\n\t\t\tword = word.replace(/\\\\([-_*|~])/g, '$1')\n\t\t\tlast_divider = i+1;\n\t\t\tif (word.length > 0) {\n\t\t\t\tif (replace)\n\t\t\t\t\tword = word.replace(/~/g, ' ');\n\t\t\t\tvar div = words[i];\n\t\t\t\tif (div !== '_' && div !== '-')\n\t\t\t\t\tdiv = ' ';\n\t\t\t\tword_list.push({syllable: tokenizer.translateString(word), divider: div});\n\t\t\t\treplace = false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tvar escNext = false;\n\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\tswitch (words[i]) {\n\t\t\t\tcase ' ':\n\t\t\t\tcase '\\x12':\n\t\t\t\t\taddWord(i);\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-':\n\t\t\t\t\tif (!escNext && !addWord(i) && word_list.length > 0) {\n\t\t\t\t\t\tparseCommon.last(word_list).divider = '-';\n\t\t\t\t\t\tword_list.push({skip: true, to: 'next'});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase '_':\n\t\t\t\t\tif (!escNext) {\n\t\t\t\t\t\taddWord(i);\n\t\t\t\t\t\tword_list.push({skip: true, to: 'slur'});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase '*':\n\t\t\t\t\tif (!escNext) {\n\t\t\t\t\t\taddWord(i);\n\t\t\t\t\t\tword_list.push({skip: true, to: 'next'});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase '|':\n\t\t\t\t\tif (!escNext) {\n\t\t\t\t\t\taddWord(i);\n\t\t\t\t\t\tword_list.push({skip: true, to: 'bar'});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase '~':\n\t\t\t\t\tif (!escNext) {\n\t\t\t\t\t\treplace = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tescNext = words[i] === '\\\\'\n\t\t}\n\n\t\tvar inSlur = false;\n\t\tline.forEach(function(el) {\n\t\t\tif (word_list.length !== 0) {\n\t\t\t\tif (word_list[0].skip) {\n\t\t\t\t\tswitch (word_list[0].to) {\n\t\t\t\t\t\tcase 'next': if (el.el_type === 'note' && el.pitches !== null && !inSlur) word_list.shift(); break;\n\t\t\t\t\t\tcase 'slur': if (el.el_type === 'note' && el.pitches !== null) word_list.shift(); break;\n\t\t\t\t\t\tcase 'bar': if (el.el_type === 'bar') word_list.shift(); break;\n\t\t\t\t\t}\n\t\t\t\t\tif (el.el_type !== 'bar') {\n\t\t\t\t\t\tif (el.lyric === undefined)\n\t\t\t\t\t\t\tel.lyric = [{syllable: \"\", divider: \" \"}];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tel.lyric.push({syllable: \"\", divider: \" \"});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (el.el_type === 'note' && el.rest === undefined && !inSlur) {\n\t\t\t\t\t\tvar lyric = word_list.shift();\n\t\t\t\t\t\tif (lyric.syllable)\n\t\t\t\t\t\t\tlyric.syllable = lyric.syllable.replace(/ +/g,'\\xA0');\n\t\t\t\t\t\tif (el.lyric === undefined)\n\t\t\t\t\t\t\tel.lyric = [ lyric ];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tel.lyric.push(lyric);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tvar addSymbols = function(line, words) {\n\t\tif (words.indexOf('\\x12') >= 0) {\n\t\t\tsymbolContinuation += words\n\t\t\treturn\n\t\t}\n\t\twords = symbolContinuation + words\n\t\tsymbolContinuation = ''\n\n\t\t// TODO-PER: Currently copied from w: line. This needs to be read as symbols instead.\n\t\tif (!line) { warn(\"Can't add symbols before the first line of music\", line, 0); return; }\n\t\twords = parseCommon.strip(words);\n\t\tif (words[words.length-1] !== '-')\n\t\t\twords = words + ' ';\t// Just makes it easier to parse below, since every word has a divider after it.\n\t\tvar word_list = [];\n\t\t// first make a list of words from the string we are passed. A word is divided on either a space or dash.\n\t\tvar last_divider = 0;\n\t\tvar replace = false;\n\t\tvar addWord = function(i) {\n\t\t\tvar word = parseCommon.strip(words.substring(last_divider, i));\n\t\t\tlast_divider = i+1;\n\t\t\tif (word.length > 0) {\n\t\t\t\tif (replace)\n\t\t\t\t\tword = word.replace(/~/g, ' ');\n\t\t\t\tvar div = words[i];\n\t\t\t\tif (div !== '_' && div !== '-')\n\t\t\t\t\tdiv = ' ';\n\t\t\t\tword_list.push({syllable: tokenizer.translateString(word), divider: div});\n\t\t\t\treplace = false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\tswitch (words[i]) {\n\t\t\t\tcase ' ':\n\t\t\t\tcase '\\x12':\n\t\t\t\t\taddWord(i);\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-':\n\t\t\t\t\tif (!addWord(i) && word_list.length > 0) {\n\t\t\t\t\t\tparseCommon.last(word_list).divider = '-';\n\t\t\t\t\t\tword_list.push({skip: true, to: 'next'});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase '_':\n\t\t\t\t\taddWord(i);\n\t\t\t\t\tword_list.push({skip: true, to: 'slur'});\n\t\t\t\t\tbreak;\n\t\t\t\tcase '*':\n\t\t\t\t\taddWord(i);\n\t\t\t\t\tword_list.push({skip: true, to: 'next'});\n\t\t\t\t\tbreak;\n\t\t\t\tcase '|':\n\t\t\t\t\taddWord(i);\n\t\t\t\t\tword_list.push({skip: true, to: 'bar'});\n\t\t\t\t\tbreak;\n\t\t\t\tcase '~':\n\t\t\t\t\treplace = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tvar inSlur = false;\n\t\tline.forEach(function(el) {\n\t\t\tif (word_list.length !== 0) {\n\t\t\t\tif (word_list[0].skip) {\n\t\t\t\t\tswitch (word_list[0].to) {\n\t\t\t\t\t\tcase 'next': if (el.el_type === 'note' && el.pitches !== null && !inSlur) word_list.shift(); break;\n\t\t\t\t\t\tcase 'slur': if (el.el_type === 'note' && el.pitches !== null) word_list.shift(); break;\n\t\t\t\t\t\tcase 'bar': if (el.el_type === 'bar') word_list.shift(); break;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (el.el_type === 'note' && el.rest === undefined && !inSlur) {\n\t\t\t\t\t\tvar lyric = word_list.shift();\n\t\t\t\t\t\tif (el.lyric === undefined)\n\t\t\t\t\t\t\tel.lyric = [ lyric ];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tel.lyric.push(lyric);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tvar parseLine = function(line) {\n\t\tif (parseCommon.startsWith(line, '%%')) {\n\t\t\tvar err = parseDirective.addDirective(line.substring(2));\n\t\t\tif (err) warn(err, line, 2);\n\t\t\treturn;\n\t\t}\n\n\t\tvar i = line.indexOf('%');\n\t\tif (i >= 0)\n\t\t\tline = line.substring(0, i);\n\t\tline = line.replace(/\\s+$/, '');\n\n\t\tif (line.length === 0)\n\t\t\treturn;\n\n\t\tif (wordsContinuation) {\n\t\t\taddWords(tuneBuilder.getCurrentVoice(), line.substring(2));\n\t\t\treturn\n\t\t}\n\t\tif (symbolContinuation) {\n\t\t\taddSymbols(tuneBuilder.getCurrentVoice(), line.substring(2));\n\t\t\treturn\n\t\t}\n\t\tif (line.length < 2 || line[1] !== ':' || music.lineContinuation) {\n\t\t\tmusic.parseMusic(line);\n\t\t\treturn\n\t\t}\n\n\t\tvar ret = header.parseHeader(line);\n\t\tif (ret.regular)\n\t\t\tmusic.parseMusic(line);\n\t\tif (ret.newline)\n\t\t\tmusic.startNewLine();\n\t\tif (ret.words)\n\t\t\taddWords(tuneBuilder.getCurrentVoice(), line.substring(2));\n\t\tif (ret.symbols)\n\t\t\taddSymbols(tuneBuilder.getCurrentVoice(), line.substring(2));\n\t};\n\n\tfunction appendLastMeasure(voice, nextVoice) {\n\t\tvoice.push({\n\t\t\tel_type: 'hint'\n\t\t});\n\t\tfor (var i = 0; i < nextVoice.length; i++) {\n\t\t\tvar element = nextVoice[i];\n\t\t\tvar hint = Object.assign({},element);\n\t\t\tvoice.push(hint);\n\t\t\tif (element.el_type === 'bar')\n\t\t\t\t\treturn;\n\t\t}\n\t}\n\n\tfunction addHintMeasure(staff, nextStaff) {\n\t\tfor (var i = 0; i < staff.length; i++) {\n\t\t\tvar stave = staff[i];\n\t\t\tvar nextStave = nextStaff[i];\n\t\t\tif (nextStave) { // Be sure there is the same number of staves on the next line.\n\t\t\t\tfor (var j = 0; j < nextStave.voices.length; j++) {\n\t\t\t\t\tvar nextVoice = nextStave.voices[j];\n\t\t\t\t\tvar voice = stave.voices[j];\n\t\t\t\t\tif (voice) { // Be sure there are the same number of voices on the previous line.\n\t\t\t\t\t\tappendLastMeasure(voice, nextVoice);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addHintMeasures() {\n\t\tfor (var i = 0; i < tune.lines.length; i++) {\n\t\t\tvar line = tune.lines[i].staff;\n\t\t\tif (line) {\n\t\t\t\tvar j = i+1;\n\t\t\t\twhile (j < tune.lines.length && tune.lines[j].staff === undefined)\n\t\t\t\t\tj++;\n\t\t\t\tif (j < tune.lines.length) {\n\t\t\t\t\tvar nextLine = tune.lines[j].staff;\n\t\t\t\t\taddHintMeasure(line, nextLine);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.parse = function(strTune, switches, startPos) {\n\t\t// the switches are optional and cause a difference in the way the tune is parsed.\n\t\t// switches.header_only : stop parsing when the header is finished\n\t\t// switches.stop_on_warning : stop at the first warning encountered.\n\t\t// switches.print: format for the page instead of the browser.\n\t\t// switches.format: a hash of the desired formatting commands.\n\t\t// switches.hint_measures: put the next measure at the end of the current line.\n\t\t// switches.transpose: change the key signature, chords, and notes by a number of half-steps.\n\t\tif (!switches) switches = {};\n\t\tif (!startPos) startPos = 0;\n\t\ttune.reset();\n\n\t\t// Take care of whatever line endings come our way\n\t\t// Tack on newline temporarily to make the last line continuation work\n\t\tstrTune = strTune.replace(/\\r\\n?/g, '\\n') + '\\n';\n\n\t\t// get rid of latex commands. If a line starts with a backslash, then it is replaced by spaces to keep the character count the same.\n\t\tvar arr = strTune.split(\"\\n\\\\\");\n\t\tif (arr.length > 1) {\n\t\t\tfor (var i2 = 1; i2 < arr.length; i2++) {\n\t\t\t\twhile (arr[i2].length > 0 && arr[i2][0] !== \"\\n\") {\n\t\t\t\t\tarr[i2] = arr[i2].substr(1);\n\t\t\t\t\tarr[i2-1] += ' ';\n\t\t\t\t}\n\t\t\t}\n\t\t\tstrTune = arr.join(\"  \"); //. the split removed two characters, so this puts them back\n\t\t}\n\t\t// take care of line continuations right away, but keep the same number of characters\n\t\tstrTune = strTune.replace(/\\\\([ \\t]*)(%.*)*\\n/g, function(all, backslash, comment){\n\t\t\tvar padding = comment ? Array(comment.length +1).join(' ') : \"\";\n\t\t\treturn backslash + \"\\x12\" + padding + '\\n';\n\t\t});\n\t\tvar lines = strTune.split('\\n')\n\t\tif (parseCommon.last(lines).length === 0)\t// remove the blank line we added above.\n\t\t\tlines.pop();\n\t\ttokenizer = new Tokenizer(lines, multilineVars);\n\t\theader = new ParseHeader(tokenizer, warn, multilineVars, tune, tuneBuilder);\n\t\tmusic = new ParseMusic(tokenizer, warn, multilineVars, tune, tuneBuilder, header);\n\n\t\tif (switches.print)\n\t\t\ttune.media = 'print';\n\t\tmultilineVars.reset();\n\t\tmultilineVars.iChar = startPos;\n\t\tif (switches.visualTranspose) {\n\t\t\tmultilineVars.globalTranspose = parseInt(switches.visualTranspose);\n\t\t\tif (multilineVars.globalTranspose === 0)\n\t\t\t\tmultilineVars.globalTranspose = undefined;\n\t\t\telse\n\t\t\t\ttuneBuilder.setVisualTranspose(switches.visualTranspose);\n\t\t} else\n\t\t\tmultilineVars.globalTranspose = undefined;\n\t\tif (switches.lineBreaks) {\n\t\t\t// The line break numbers are 0-based and they reflect the last measure of the current line.\n\t\t\tmultilineVars.lineBreaks = switches.lineBreaks;\n\t\t\t//multilineVars.continueall = true;\n\t\t}\n\t\theader.reset(tokenizer, warn, multilineVars, tune);\n\n\t\ttry {\n\t\t\tif (switches.format) {\n\t\t\t\tparseDirective.globalFormatting(switches.format);\n\t\t\t}\n\t\t\tvar line = tokenizer.nextLine();\n\t\t\twhile (line) {\n\t\t\t\tif (switches.header_only && multilineVars.is_in_header === false)\n\t\t\t\t\tthrow \"normal_abort\";\n\t\t\t\tif (switches.stop_on_warning && multilineVars.warnings)\n\t\t\t\t\tthrow \"normal_abort\";\n\n\t\t\t\tvar wasInHeader = multilineVars.is_in_header;\n\t\t\t\tparseLine(line);\n\t\t\t\tif (wasInHeader && !multilineVars.is_in_header) {\n\t\t\t\t\ttuneBuilder.setRunningFont(\"annotationfont\", multilineVars.annotationfont);\n\t\t\t\t\ttuneBuilder.setRunningFont(\"gchordfont\", multilineVars.gchordfont);\n\t\t\t\t\ttuneBuilder.setRunningFont(\"tripletfont\", multilineVars.tripletfont);\n\t\t\t\t\ttuneBuilder.setRunningFont(\"vocalfont\", multilineVars.vocalfont);\n\t\t\t\t}\n\t\t\t\tline = tokenizer.nextLine();\n\t\t\t}\n\n\t\t\tif (wordsContinuation) {\n\t\t\t\taddWords(tuneBuilder.getCurrentVoice(), '');\n\t\t\t}\n\t\t\tif (symbolContinuation) {\n\t\t\t\taddSymbols(tuneBuilder.getCurrentVoice(), '');\n\t\t\t}\n\t\t\tmultilineVars.openSlurs = tuneBuilder.cleanUp(multilineVars.barsperstaff, multilineVars.staffnonote, multilineVars.openSlurs);\n\n\t\t} catch (err) {\n\t\t\tif (err !== \"normal_abort\")\n\t\t\t\tthrow err;\n\t\t}\n\n\t\tvar ph = 11*72;\n\t\tvar pl = 8.5*72;\n\t\tswitch (multilineVars.papersize) {\n\t\t\t//case \"letter\": ph = 11*72; pl = 8.5*72; break;\n\t\t\tcase \"legal\": ph = 14*72; pl = 8.5*72; break;\n\t\t\tcase \"A4\": ph = 11.7*72; pl = 8.3*72; break;\n\t\t}\n\t\tif (multilineVars.landscape) {\n\t\t\tvar x = ph;\n\t\t\tph = pl;\n\t\t\tpl = x;\n\t\t}\n\t\tif (!tune.formatting.pagewidth)\n\t\t\ttune.formatting.pagewidth = pl;\n\t\tif (!tune.formatting.pageheight)\n\t\t\ttune.formatting.pageheight = ph;\n\n\t\tif (switches.hint_measures) {\n\t\t\taddHintMeasures();\n\t\t}\n\n\t\twrap.wrapLines(tune, multilineVars.lineBreaks, multilineVars.barNumbers);\n\t};\n};\n\nmodule.exports = Parse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/parse/abc_parse.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/parse/abc_parse_book.js":
/*!********************************************************!*\
  !*** ./node_modules/abcjs/src/parse/abc_parse_book.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_parse_book.js: parses a string representing ABC Music Notation into a usable internal structure.\n\nvar parseCommon = __webpack_require__(/*! ./abc_common */ \"(ssr)/./node_modules/abcjs/src/parse/abc_common.js\");\n\nvar bookParser = function(book) {\n\t\"use strict\";\n\n\tvar directives = \"\";\n\tvar initialWhiteSpace = book.match(/(\\s*)/)\n\tbook = parseCommon.strip(book);\n\tvar tuneStrings = book.split(\"\\nX:\");\n\t// Put back the X: that we lost when splitting the tunes.\n\tfor (var i = 1; i < tuneStrings.length; i++)\n\t\ttuneStrings[i] = \"X:\" + tuneStrings[i];\n\t// Keep track of the character position each tune starts with. If the string starts with white space, count that, too.\n\tvar pos = initialWhiteSpace ? initialWhiteSpace[0].length : 0;\n\tvar tunes = [];\n\ttuneStrings.forEach(function(tune) {\n\t\ttunes.push({ abc: tune, startPos: pos});\n\t\tpos += tune.length + 1; // We also lost a newline when splitting, so count that.\n\t});\n\tif (tunes.length > 1 && !parseCommon.startsWith(tunes[0].abc, 'X:')) {\t// If there is only one tune, the X: might be missing, otherwise assume the top of the file is \"intertune\"\n\t\t// There could be file-wide directives in this, if so, we need to insert it into each tune. We can probably get away with\n\t\t// just looking for file-wide directives here (before the first tune) and inserting them at the bottom of each tune, since\n\t\t// the tune is parsed all at once. The directives will be seen before the engraver begins processing.\n\t\tvar dir = tunes.shift();\n\t\tvar arrDir = dir.abc.split('\\n');\n\t\tarrDir.forEach(function(line) {\n\t\t\tif (parseCommon.startsWith(line, '%%'))\n\t\t\t\tdirectives += line + '\\n';\n\t\t});\n\t}\n\tvar header = directives;\n\n\t// Now, the tune ends at a blank line, so truncate it if needed. There may be \"intertune\" stuff.\n\ttunes.forEach(function(tune) {\n\t\tvar end = tune.abc.indexOf('\\n\\n');\n\t\tif (end > 0)\n\t\t\ttune.abc = tune.abc.substring(0, end);\n\t\ttune.pure = tune.abc;\n\t\ttune.abc = directives + tune.abc;\n\n\t\t// for the user's convenience, parse and store the title separately. The title is between the first T: and the next \\n\n\t\ttune.title = \"\";\n\t\tvar title = tune.pure.split(\"T:\");\n\t\tif (title.length > 1) {\n\t\t\ttitle = title[1].split(\"\\n\");\n\t\t\ttune.title = parseCommon.strip(title[0]);\n\t\t}\n\n\t\t// for the user's convenience, parse and store the id separately. The id is between the first X: and the next \\n\n\t\tvar id = tune.pure.substring(2, tune.pure.indexOf(\"\\n\"));\n\t\ttune.id = parseCommon.strip(id);\n\t});\n\n\treturn {\n\t\theader: header,\n\t\ttunes: tunes\n\t};\n};\n\nmodule.exports = bookParser;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3BhcnNlL2FiY19wYXJzZV9ib29rLmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUVBLGtCQUFrQixtQkFBTyxDQUFDLHdFQUFjOztBQUV4QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsd0JBQXdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHlCQUF5QjtBQUN4QywwQkFBMEI7QUFDMUIsRUFBRTtBQUNGLHdFQUF3RTtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3BhcnNlL2FiY19wYXJzZV9ib29rLmpzPzZiYWYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gICAgYWJjX3BhcnNlX2Jvb2suanM6IHBhcnNlcyBhIHN0cmluZyByZXByZXNlbnRpbmcgQUJDIE11c2ljIE5vdGF0aW9uIGludG8gYSB1c2FibGUgaW50ZXJuYWwgc3RydWN0dXJlLlxuXG52YXIgcGFyc2VDb21tb24gPSByZXF1aXJlKCcuL2FiY19jb21tb24nKTtcblxudmFyIGJvb2tQYXJzZXIgPSBmdW5jdGlvbihib29rKSB7XG5cdFwidXNlIHN0cmljdFwiO1xuXG5cdHZhciBkaXJlY3RpdmVzID0gXCJcIjtcblx0dmFyIGluaXRpYWxXaGl0ZVNwYWNlID0gYm9vay5tYXRjaCgvKFxccyopLylcblx0Ym9vayA9IHBhcnNlQ29tbW9uLnN0cmlwKGJvb2spO1xuXHR2YXIgdHVuZVN0cmluZ3MgPSBib29rLnNwbGl0KFwiXFxuWDpcIik7XG5cdC8vIFB1dCBiYWNrIHRoZSBYOiB0aGF0IHdlIGxvc3Qgd2hlbiBzcGxpdHRpbmcgdGhlIHR1bmVzLlxuXHRmb3IgKHZhciBpID0gMTsgaSA8IHR1bmVTdHJpbmdzLmxlbmd0aDsgaSsrKVxuXHRcdHR1bmVTdHJpbmdzW2ldID0gXCJYOlwiICsgdHVuZVN0cmluZ3NbaV07XG5cdC8vIEtlZXAgdHJhY2sgb2YgdGhlIGNoYXJhY3RlciBwb3NpdGlvbiBlYWNoIHR1bmUgc3RhcnRzIHdpdGguIElmIHRoZSBzdHJpbmcgc3RhcnRzIHdpdGggd2hpdGUgc3BhY2UsIGNvdW50IHRoYXQsIHRvby5cblx0dmFyIHBvcyA9IGluaXRpYWxXaGl0ZVNwYWNlID8gaW5pdGlhbFdoaXRlU3BhY2VbMF0ubGVuZ3RoIDogMDtcblx0dmFyIHR1bmVzID0gW107XG5cdHR1bmVTdHJpbmdzLmZvckVhY2goZnVuY3Rpb24odHVuZSkge1xuXHRcdHR1bmVzLnB1c2goeyBhYmM6IHR1bmUsIHN0YXJ0UG9zOiBwb3N9KTtcblx0XHRwb3MgKz0gdHVuZS5sZW5ndGggKyAxOyAvLyBXZSBhbHNvIGxvc3QgYSBuZXdsaW5lIHdoZW4gc3BsaXR0aW5nLCBzbyBjb3VudCB0aGF0LlxuXHR9KTtcblx0aWYgKHR1bmVzLmxlbmd0aCA+IDEgJiYgIXBhcnNlQ29tbW9uLnN0YXJ0c1dpdGgodHVuZXNbMF0uYWJjLCAnWDonKSkge1x0Ly8gSWYgdGhlcmUgaXMgb25seSBvbmUgdHVuZSwgdGhlIFg6IG1pZ2h0IGJlIG1pc3NpbmcsIG90aGVyd2lzZSBhc3N1bWUgdGhlIHRvcCBvZiB0aGUgZmlsZSBpcyBcImludGVydHVuZVwiXG5cdFx0Ly8gVGhlcmUgY291bGQgYmUgZmlsZS13aWRlIGRpcmVjdGl2ZXMgaW4gdGhpcywgaWYgc28sIHdlIG5lZWQgdG8gaW5zZXJ0IGl0IGludG8gZWFjaCB0dW5lLiBXZSBjYW4gcHJvYmFibHkgZ2V0IGF3YXkgd2l0aFxuXHRcdC8vIGp1c3QgbG9va2luZyBmb3IgZmlsZS13aWRlIGRpcmVjdGl2ZXMgaGVyZSAoYmVmb3JlIHRoZSBmaXJzdCB0dW5lKSBhbmQgaW5zZXJ0aW5nIHRoZW0gYXQgdGhlIGJvdHRvbSBvZiBlYWNoIHR1bmUsIHNpbmNlXG5cdFx0Ly8gdGhlIHR1bmUgaXMgcGFyc2VkIGFsbCBhdCBvbmNlLiBUaGUgZGlyZWN0aXZlcyB3aWxsIGJlIHNlZW4gYmVmb3JlIHRoZSBlbmdyYXZlciBiZWdpbnMgcHJvY2Vzc2luZy5cblx0XHR2YXIgZGlyID0gdHVuZXMuc2hpZnQoKTtcblx0XHR2YXIgYXJyRGlyID0gZGlyLmFiYy5zcGxpdCgnXFxuJyk7XG5cdFx0YXJyRGlyLmZvckVhY2goZnVuY3Rpb24obGluZSkge1xuXHRcdFx0aWYgKHBhcnNlQ29tbW9uLnN0YXJ0c1dpdGgobGluZSwgJyUlJykpXG5cdFx0XHRcdGRpcmVjdGl2ZXMgKz0gbGluZSArICdcXG4nO1xuXHRcdH0pO1xuXHR9XG5cdHZhciBoZWFkZXIgPSBkaXJlY3RpdmVzO1xuXG5cdC8vIE5vdywgdGhlIHR1bmUgZW5kcyBhdCBhIGJsYW5rIGxpbmUsIHNvIHRydW5jYXRlIGl0IGlmIG5lZWRlZC4gVGhlcmUgbWF5IGJlIFwiaW50ZXJ0dW5lXCIgc3R1ZmYuXG5cdHR1bmVzLmZvckVhY2goZnVuY3Rpb24odHVuZSkge1xuXHRcdHZhciBlbmQgPSB0dW5lLmFiYy5pbmRleE9mKCdcXG5cXG4nKTtcblx0XHRpZiAoZW5kID4gMClcblx0XHRcdHR1bmUuYWJjID0gdHVuZS5hYmMuc3Vic3RyaW5nKDAsIGVuZCk7XG5cdFx0dHVuZS5wdXJlID0gdHVuZS5hYmM7XG5cdFx0dHVuZS5hYmMgPSBkaXJlY3RpdmVzICsgdHVuZS5hYmM7XG5cblx0XHQvLyBmb3IgdGhlIHVzZXIncyBjb252ZW5pZW5jZSwgcGFyc2UgYW5kIHN0b3JlIHRoZSB0aXRsZSBzZXBhcmF0ZWx5LiBUaGUgdGl0bGUgaXMgYmV0d2VlbiB0aGUgZmlyc3QgVDogYW5kIHRoZSBuZXh0IFxcblxuXHRcdHR1bmUudGl0bGUgPSBcIlwiO1xuXHRcdHZhciB0aXRsZSA9IHR1bmUucHVyZS5zcGxpdChcIlQ6XCIpO1xuXHRcdGlmICh0aXRsZS5sZW5ndGggPiAxKSB7XG5cdFx0XHR0aXRsZSA9IHRpdGxlWzFdLnNwbGl0KFwiXFxuXCIpO1xuXHRcdFx0dHVuZS50aXRsZSA9IHBhcnNlQ29tbW9uLnN0cmlwKHRpdGxlWzBdKTtcblx0XHR9XG5cblx0XHQvLyBmb3IgdGhlIHVzZXIncyBjb252ZW5pZW5jZSwgcGFyc2UgYW5kIHN0b3JlIHRoZSBpZCBzZXBhcmF0ZWx5LiBUaGUgaWQgaXMgYmV0d2VlbiB0aGUgZmlyc3QgWDogYW5kIHRoZSBuZXh0IFxcblxuXHRcdHZhciBpZCA9IHR1bmUucHVyZS5zdWJzdHJpbmcoMiwgdHVuZS5wdXJlLmluZGV4T2YoXCJcXG5cIikpO1xuXHRcdHR1bmUuaWQgPSBwYXJzZUNvbW1vbi5zdHJpcChpZCk7XG5cdH0pO1xuXG5cdHJldHVybiB7XG5cdFx0aGVhZGVyOiBoZWFkZXIsXG5cdFx0dHVuZXM6IHR1bmVzXG5cdH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGJvb2tQYXJzZXI7XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/parse/abc_parse_book.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/parse/abc_parse_directive.js":
/*!*************************************************************!*\
  !*** ./node_modules/abcjs/src/parse/abc_parse_directive.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var parseCommon = __webpack_require__(/*! ./abc_common */ \"(ssr)/./node_modules/abcjs/src/parse/abc_common.js\");\n\nvar parseDirective = {};\n\n(function() {\n\t\"use strict\";\n\tvar tokenizer;\n\tvar warn;\n\tvar multilineVars;\n\tvar tune;\n\tvar tuneBuilder;\n\tparseDirective.initialize = function(tokenizer_, warn_, multilineVars_, tune_, tuneBuilder_) {\n\t\ttokenizer = tokenizer_;\n\t\twarn = warn_;\n\t\tmultilineVars = multilineVars_;\n\t\ttune = tune_;\n\t\ttuneBuilder = tuneBuilder_;\n\t\tinitializeFonts();\n\t};\n\n\tfunction initializeFonts() {\n\t\tmultilineVars.annotationfont  = { face: \"Helvetica\", size: 12, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\tmultilineVars.gchordfont  = { face: \"Helvetica\", size: 12, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\tmultilineVars.historyfont  = { face: \"\\\"Times New Roman\\\"\", size: 16, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\tmultilineVars.infofont  = { face: \"\\\"Times New Roman\\\"\", size: 14, weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\tmultilineVars.measurefont  = { face: \"\\\"Times New Roman\\\"\", size: 14, weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\tmultilineVars.partsfont  = { face: \"\\\"Times New Roman\\\"\", size: 15, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\tmultilineVars.repeatfont  = { face: \"\\\"Times New Roman\\\"\", size: 13, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\tmultilineVars.textfont  = { face: \"\\\"Times New Roman\\\"\", size: 16, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\tmultilineVars.tripletfont = {face: \"Times\", size: 11, weight: \"normal\", style: \"italic\", decoration: \"none\"};\n\t\tmultilineVars.vocalfont  = { face: \"\\\"Times New Roman\\\"\", size: 13, weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\tmultilineVars.wordsfont  = { face: \"\\\"Times New Roman\\\"\", size: 16, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\n\t\t// These fonts are global for the entire tune.\n\t\ttune.formatting.composerfont  = { face: \"\\\"Times New Roman\\\"\", size: 14, weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\ttune.formatting.subtitlefont  = { face: \"\\\"Times New Roman\\\"\", size: 16, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\ttune.formatting.tempofont  = { face: \"\\\"Times New Roman\\\"\", size: 15, weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\ttune.formatting.titlefont  = { face: \"\\\"Times New Roman\\\"\", size: 20, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\ttune.formatting.footerfont  = { face: \"\\\"Times New Roman\\\"\", size: 12, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\ttune.formatting.headerfont  = { face: \"\\\"Times New Roman\\\"\", size: 12, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\ttune.formatting.voicefont  = { face: \"\\\"Times New Roman\\\"\", size: 13, weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\ttune.formatting.tablabelfont  = { face: \"\\\"Trebuchet MS\\\"\", size: 16, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\ttune.formatting.tabnumberfont = { face: \"\\\"Arial\\\"\", size: 11, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\ttune.formatting.tabgracefont = { face: \"\\\"Arial\\\"\", size: 8, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\n\t\t// these are the default fonts for these element types. In the printer, these fonts might change as the tune progresses.\n\t\ttune.formatting.annotationfont  = multilineVars.annotationfont;\n\t\ttune.formatting.gchordfont  = multilineVars.gchordfont;\n\t\ttune.formatting.historyfont  = multilineVars.historyfont;\n\t\ttune.formatting.infofont  = multilineVars.infofont;\n\t\ttune.formatting.measurefont  = multilineVars.measurefont;\n\t\ttune.formatting.partsfont  = multilineVars.partsfont;\n\t\ttune.formatting.repeatfont  = multilineVars.repeatfont;\n\t\ttune.formatting.textfont  = multilineVars.textfont;\n\t\ttune.formatting.tripletfont  = multilineVars.tripletfont;\n\t\ttune.formatting.vocalfont  = multilineVars.vocalfont;\n\t\ttune.formatting.wordsfont  = multilineVars.wordsfont;\n\t}\n\n\tvar fontTypeCanHaveBox = { gchordfont: true, measurefont: true, partsfont: true, annotationfont: true, composerfont: true, historyfont: true, infofont: true, subtitlefont: true, textfont: true, titlefont: true, voicefont: true  };\n\n\tvar fontTranslation = function(fontFace) {\n\t\t// This translates Postscript fonts for a web alternative.\n\t\t// Note that the postscript fonts contain italic and bold info in them, so what is returned is a hash.\n\n\t\tswitch (fontFace) {\n\t\t\tcase \"Arial-Italic\":\n\t\t\t\treturn { face: \"Arial\", weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Arial-Bold\":\n\t\t\t\treturn { face: \"Arial\", weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Bookman-Demi\":\n\t\t\t\treturn { face: \"Bookman,serif\", weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Bookman-DemiItalic\":\n\t\t\t\treturn { face: \"Bookman,serif\", weight: \"bold\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Bookman-Light\":\n\t\t\t\treturn { face: \"Bookman,serif\", weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Bookman-LightItalic\":\n\t\t\t\treturn { face: \"Bookman,serif\", weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Courier\":\n\t\t\t\treturn { face: \"\\\"Courier New\\\"\", weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Courier-Oblique\":\n\t\t\t\treturn { face: \"\\\"Courier New\\\"\", weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Courier-Bold\":\n\t\t\t\treturn { face: \"\\\"Courier New\\\"\", weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Courier-BoldOblique\":\n\t\t\t\treturn { face: \"\\\"Courier New\\\"\", weight: \"bold\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"AvantGarde-Book\":\n\t\t\t\treturn { face: \"AvantGarde,Arial\", weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"AvantGarde-BookOblique\":\n\t\t\t\treturn { face: \"AvantGarde,Arial\", weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"AvantGarde-Demi\":\n\t\t\tcase \"Avant-Garde-Demi\":\n\t\t\t\treturn { face: \"AvantGarde,Arial\", weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"AvantGarde-DemiOblique\":\n\t\t\t\treturn { face: \"AvantGarde,Arial\", weight: \"bold\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Helvetica-Oblique\":\n\t\t\t\treturn { face: \"Helvetica\", weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Helvetica-Bold\":\n\t\t\t\treturn { face: \"Helvetica\", weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Helvetica-BoldOblique\":\n\t\t\t\treturn { face: \"Helvetica\", weight: \"bold\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Helvetica-Narrow\":\n\t\t\t\treturn { face: \"\\\"Helvetica Narrow\\\",Helvetica\", weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Helvetica-Narrow-Oblique\":\n\t\t\t\treturn { face: \"\\\"Helvetica Narrow\\\",Helvetica\", weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Helvetica-Narrow-Bold\":\n\t\t\t\treturn { face: \"\\\"Helvetica Narrow\\\",Helvetica\", weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Helvetica-Narrow-BoldOblique\":\n\t\t\t\treturn { face: \"\\\"Helvetica Narrow\\\",Helvetica\", weight: \"bold\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Palatino-Roman\":\n\t\t\t\treturn { face: \"Palatino\", weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Palatino-Italic\":\n\t\t\t\treturn { face: \"Palatino\", weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Palatino-Bold\":\n\t\t\t\treturn { face: \"Palatino\", weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Palatino-BoldItalic\":\n\t\t\t\treturn { face: \"Palatino\", weight: \"bold\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"NewCenturySchlbk-Roman\":\n\t\t\t\treturn { face: \"\\\"New Century\\\",serif\", weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"NewCenturySchlbk-Italic\":\n\t\t\t\treturn { face: \"\\\"New Century\\\",serif\", weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"NewCenturySchlbk-Bold\":\n\t\t\t\treturn { face: \"\\\"New Century\\\",serif\", weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"NewCenturySchlbk-BoldItalic\":\n\t\t\t\treturn { face: \"\\\"New Century\\\",serif\", weight: \"bold\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Times\":\n\t\t\tcase \"Times-Roman\":\n\t\t\tcase \"Times-Narrow\":\n\t\t\tcase \"Times-Courier\":\n\t\t\tcase \"Times-New-Roman\":\n\t\t\t\treturn { face: \"\\\"Times New Roman\\\"\", weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Times-Italic\":\n\t\t\tcase \"Times-Italics\":\n\t\t\t\treturn { face: \"\\\"Times New Roman\\\"\", weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Times-Bold\":\n\t\t\t\treturn { face: \"\\\"Times New Roman\\\"\", weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Times-BoldItalic\":\n\t\t\t\treturn { face: \"\\\"Times New Roman\\\"\", weight: \"bold\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"ZapfChancery-MediumItalic\":\n\t\t\t\treturn { face: \"\\\"Zapf Chancery\\\",cursive,serif\", weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t};\n\n\tvar getFontParameter = function(tokens, currentSetting, str, position, cmd) {\n\t\t// Every font parameter has the following format:\n\t\t// <face> <utf8> <size> <modifiers> <box>\n\t\t// Where:\n\t\t// face: either a standard web font name, or a postscript font, enumerated in fontTranslation. This could also be an * or be missing if the face shouldn't change.\n\t\t// utf8: This is optional, and specifies utf8. That's all that is supported so the field is just silently ignored.\n\t\t// size: The size, in pixels. This may be omitted if the size is not changing.\n\t\t// modifiers: zero or more of \"bold\", \"italic\", \"underline\"\n\t\t// box: Only applies to the measure numbers, gchords, and the parts. If present, then a box is drawn around the characters.\n\t\t// If face is present, then all the modifiers are cleared. If face is absent, then the modifiers are illegal.\n\t\t// The face can be a single word, a set of words separated by hyphens, or a quoted string.\n\t\t//\n\t\t// So, in practicality, there are three types of font definitions: a number only, an asterisk and a number only, or the full definition (with an optional size).\n\t\tfunction processNumberOnly() {\n\t\t\tvar size = parseInt(tokens[0].token);\n\t\t\ttokens.shift();\n\t\t\tif (!currentSetting) {\n\t\t\t\twarn(\"Can't set just the size of the font since there is no default value.\", str, position);\n\t\t\t\treturn { face: \"\\\"Times New Roman\\\"\", weight: \"normal\", style: \"normal\", decoration: \"none\", size: size};\n\t\t\t}\n\t\t\tif (tokens.length === 0) {\n\t\t\t\treturn { face: currentSetting.face, weight: currentSetting.weight, style: currentSetting.style, decoration: currentSetting.decoration, size: size};\n\t\t\t}\n\t\t\tif (tokens.length === 1 && tokens[0].token === \"box\" && fontTypeCanHaveBox[cmd])\n\t\t\t\treturn { face: currentSetting.face, weight: currentSetting.weight, style: currentSetting.style, decoration: currentSetting.decoration, size: size, box: true};\n\t\t\twarn(\"Extra parameters in font definition.\", str, position);\n\t\t\treturn { face: currentSetting.face, weight: currentSetting.weight, style: currentSetting.style, decoration: currentSetting.decoration, size: size};\n\t\t}\n\n\t\t// format 1: asterisk and number only\n\t\tif (tokens[0].token === '*') {\n\t\t\ttokens.shift();\n\t\t\tif (tokens[0].type === 'number')\n\t\t\t\treturn processNumberOnly();\n\t\t\telse {\n\t\t\t\twarn(\"Expected font size number after *.\", str, position);\n\t\t\t}\n\t\t}\n\n\t\t// format 2: number only\n\t\tif (tokens[0].type === 'number') {\n\t\t\treturn processNumberOnly();\n\t\t}\n\n\t\t// format 3: whole definition\n\t\tvar face = [];\n\t\tvar size;\n\t\tvar weight = \"normal\";\n\t\tvar style = \"normal\";\n\t\tvar decoration = \"none\";\n\t\tvar box = false;\n\t\tvar state = 'face';\n\t\tvar hyphenLast = false;\n\t\twhile (tokens.length) {\n\t\t\tvar currToken = tokens.shift();\n\t\t\tvar word = currToken.token.toLowerCase();\n\t\t\tswitch (state) {\n\t\t\t\tcase 'face':\n\t\t\t\t\tif (hyphenLast || (word !== 'utf' && currToken.type !== 'number' && word !== \"bold\" && word !== \"italic\" && word !== \"underline\" && word !== \"box\")) {\n\t\t\t\t\t\tif (face.length > 0 && currToken.token === '-') {\n\t\t\t\t\t\t\thyphenLast = true;\n\t\t\t\t\t\t\tface[face.length-1] = face[face.length-1] + currToken.token;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (hyphenLast) {\n\t\t\t\t\t\t\t\thyphenLast = false;\n\t\t\t\t\t\t\t\tface[face.length-1] = face[face.length-1] + currToken.token;\n\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\tface.push(currToken.token);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (currToken.type === 'number') {\n\t\t\t\t\t\t\tif (size) {\n\t\t\t\t\t\t\t\twarn(\"Font size specified twice in font definition.\", str, position);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsize = currToken.token;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstate = 'modifier';\n\t\t\t\t\t\t} else if (word === \"bold\")\n\t\t\t\t\t\t\tweight = \"bold\";\n\t\t\t\t\t\telse if (word === \"italic\")\n\t\t\t\t\t\t\tstyle = \"italic\";\n\t\t\t\t\t\telse if (word === \"underline\")\n\t\t\t\t\t\t\tdecoration = \"underline\";\n\t\t\t\t\t\telse if (word === \"box\") {\n\t\t\t\t\t\t\tif (fontTypeCanHaveBox[cmd])\n\t\t\t\t\t\t\t\tbox = true;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\twarn(\"This font style doesn't support \\\"box\\\"\", str, position);\n\t\t\t\t\t\t\tstate = \"finished\";\n\t\t\t\t\t\t} else if (word === \"utf\") {\n\t\t\t\t\t\t\tcurrToken = tokens.shift(); // this gets rid of the \"8\" after \"utf\"\n\t\t\t\t\t\t\tstate = \"size\";\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\twarn(\"Unknown parameter \" + currToken.token + \" in font definition.\", str, position);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"size\":\n\t\t\t\t\tif (currToken.type === 'number') {\n\t\t\t\t\t\tif (size) {\n\t\t\t\t\t\t\twarn(\"Font size specified twice in font definition.\", str, position);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsize = currToken.token;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\twarn(\"Expected font size in font definition.\", str, position);\n\t\t\t\t\t}\n\t\t\t\t\tstate = 'modifier';\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"modifier\":\n\t\t\t\t\tif (word === \"bold\")\n\t\t\t\t\t\tweight = \"bold\";\n\t\t\t\t\telse if (word === \"italic\")\n\t\t\t\t\t\tstyle = \"italic\";\n\t\t\t\t\telse if (word === \"underline\")\n\t\t\t\t\t\tdecoration = \"underline\";\n\t\t\t\t\telse if (word === \"box\") {\n\t\t\t\t\t\tif (fontTypeCanHaveBox[cmd])\n\t\t\t\t\t\t\tbox = true;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\twarn(\"This font style doesn't support \\\"box\\\"\", str, position);\n\t\t\t\t\t\tstate = \"finished\";\n\t\t\t\t\t} else\n\t\t\t\t\t\twarn(\"Unknown parameter \" + currToken.token + \" in font definition.\", str, position);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"finished\":\n\t\t\t\t\twarn(\"Extra characters found after \\\"box\\\" in font definition.\", str, position);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (size === undefined) {\n\t\t\tif (!currentSetting) {\n\t\t\t\twarn(\"Must specify the size of the font since there is no default value.\", str, position);\n\t\t\t\tsize = 12;\n\t\t\t} else\n\t\t\t\tsize = currentSetting.size;\n\t\t} else\n\t\t\tsize = parseFloat(size);\n\n\t\tface = face.join(' ');\n\t\tif (face === '') {\n\t\t\tif (!currentSetting) {\n\t\t\t\twarn(\"Must specify the name of the font since there is no default value.\", str, position);\n\t\t\t\tface = \"sans-serif\";\n\t\t\t} else\n\t\t\t\tface = currentSetting.face;\n\t\t}\n\t\tvar psFont = fontTranslation(face);\n\t\tvar font = {};\n\t\tif (psFont) {\n\t\t\tfont.face = psFont.face;\n\t\t\tfont.weight = psFont.weight;\n\t\t\tfont.style = psFont.style;\n\t\t\tfont.decoration = psFont.decoration;\n\t\t\tfont.size = size;\n\t\t\tif (box)\n\t\t\t\tfont.box = true;\n\t\t\treturn font;\n\t\t}\n\t\tfont.face = face;\n\t\tfont.weight = weight;\n\t\tfont.style = style;\n\t\tfont.decoration = decoration;\n\t\tfont.size = size;\n\t\tif (box)\n\t\t\tfont.box = true;\n\t\treturn font;\n\t};\n\n\tvar getChangingFont = function(cmd, tokens, str) {\n\t\tif (tokens.length === 0)\n\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires a font as a parameter.\";\n\t\tmultilineVars[cmd] = getFontParameter(tokens, multilineVars[cmd], str, 0, cmd);\n\t\tif (multilineVars.is_in_header) // If the font appears in the header, then it becomes the default font.\n\t\t\ttune.formatting[cmd] = multilineVars[cmd];\n\t\treturn null;\n\t};\n\tvar getGlobalFont = function(cmd, tokens, str) {\n\t\tif (tokens.length === 0)\n\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires a font as a parameter.\";\n\t\ttune.formatting[cmd] = getFontParameter(tokens, tune.formatting[cmd], str, 0, cmd);\n\t\treturn null;\n\t};\n\n\tvar setScale = function(cmd, tokens) {\n\t\tvar scratch = \"\";\n\t\ttokens.forEach(function(tok) {\n\t\t\tscratch += tok.token;\n\t\t});\n\t\tvar num = parseFloat(scratch);\n\t\tif (isNaN(num) || num === 0)\n\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires a number as a parameter.\";\n\t\ttune.formatting.scale = num;\n\n\t};\n\t// starts at 35\n\tvar drumNames = [\n\t\t\"acoustic-bass-drum\",\n\t\t\"bass-drum-1\",\n\t\t\"side-stick\",\n\t\t\"acoustic-snare\",\n\t\t\"hand-clap\",\n\t\t\"electric-snare\",\n\t\t\"low-floor-tom\",\n\t\t\"closed-hi-hat\",\n\t\t\"high-floor-tom\",\n\t\t\"pedal-hi-hat\",\n\t\t\"low-tom\",\n\t\t\"open-hi-hat\",\n\t\t\"low-mid-tom\",\n\t\t\"hi-mid-tom\",\n\t\t\"crash-cymbal-1\",\n\t\t\"high-tom\",\n\t\t\"ride-cymbal-1\",\n\t\t\"chinese-cymbal\",\n\t\t\"ride-bell\",\n\t\t\"tambourine\",\n\t\t\"splash-cymbal\",\n\t\t\"cowbell\",\n\t\t\"crash-cymbal-2\",\n\t\t\"vibraslap\",\n\t\t\"ride-cymbal-2\",\n\t\t\"hi-bongo\",\n\t\t\"low-bongo\",\n\t\t\"mute-hi-conga\",\n\t\t\"open-hi-conga\",\n\t\t\"low-conga\",\n\t\t\"high-timbale\",\n\t\t\"low-timbale\",\n\t\t\"high-agogo\",\n\t\t\"low-agogo\",\n\t\t\"cabasa\",\n\t\t\"maracas\",\n\t\t\"short-whistle\",\n\t\t\"long-whistle\",\n\t\t\"short-guiro\",\n\t\t\"long-guiro\",\n\t\t\"claves\",\n\t\t\"hi-wood-block\",\n\t\t\"low-wood-block\",\n\t\t\"mute-cuica\",\n\t\t\"open-cuica\",\n\t\t\"mute-triangle\",\n\t\t\"open-triangle\",\n\t];\n\n\tvar interpretPercMap = function(restOfString) {\n\t\tvar tokens = restOfString.split(/\\s+/); // Allow multiple spaces.\n\t\tif (tokens.length !== 2 && tokens.length !== 3)\n\t\t\treturn { error: 'Expected parameters \"abc-note\", \"drum-sound\", and optionally \"note-head\"'};\n\t\tvar key = tokens[0];\n\t\t// The percussion sound can either be a MIDI number or a drum name. If it is not a number then check for a name.\n\t\tvar pitch = parseInt(tokens[1], 10);\n\t\tif ((isNaN(pitch) || pitch < 35 || pitch > 81) && tokens[1]) {\n\t\t\tpitch = drumNames.indexOf(tokens[1].toLowerCase()) + 35;\n\t\t}\n\t\tif ((isNaN(pitch) || pitch < 35 || pitch > 81))\n\t\t\treturn { error: 'Expected drum name, received \"' + tokens[1] + '\"' };\n\t\tvar value = { sound: pitch };\n\t\tif (tokens.length === 3)\n\t\t\tvalue.noteHead = tokens[2];\n\t\treturn { key: key, value: value };\n\t};\n\n\tvar getRequiredMeasurement = function(cmd, tokens) {\n\t\tvar points = tokenizer.getMeasurement(tokens);\n\t\tif (points.used === 0 || tokens.length !== 0)\n\t\t\treturn { error: \"Directive \\\"\" + cmd + \"\\\" requires a measurement as a parameter.\"};\n\t\treturn points.value;\n\t};\n\tvar oneParameterMeasurement = function(cmd, tokens) {\n\t\tvar points = tokenizer.getMeasurement(tokens);\n\t\tif (points.used === 0 || tokens.length !== 0)\n\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires a measurement as a parameter.\";\n\t\ttune.formatting[cmd] = points.value;\n\t\treturn null;\n\t};\n\n\tvar addMultilineVar = function(key, cmd, tokens, min, max) {\n\t\tif (tokens.length !== 1 || tokens[0].type !== 'number')\n\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires a number as a parameter.\";\n\t\tvar i = tokens[0].intt;\n\t\tif (min !== undefined && i < min)\n\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires a number greater than or equal to \" + min + \" as a parameter.\";\n\t\tif (max !== undefined && i > max)\n\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires a number less than or equal to \" + max + \" as a parameter.\";\n\t\tmultilineVars[key] = i;\n\t\treturn null;\n\t};\n\n\tvar addMultilineVarBool = function(key, cmd, tokens) {\n\t\tif (tokens.length === 1 && (tokens[0].token === 'true' || tokens[0].token === 'false')) {\n\t\t\tmultilineVars[key] = tokens[0].token === 'true';\n\t\t\treturn null;\n\t\t}\n\t\tvar str = addMultilineVar(key, cmd, tokens, 0, 1);\n\t\tif (str !== null) return str;\n\t\tmultilineVars[key] = (multilineVars[key] === 1);\n\t\treturn null;\n\t};\n\n\tvar addMultilineVarOneParamChoice = function(key, cmd, tokens, choices) {\n\t\tif (tokens.length !== 1)\n\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires one of [ \" + choices.join(\", \") + \" ] as a parameter.\";\n\t\tvar choice = tokens[0].token;\n\t\tvar found = false;\n\t\tfor (var i = 0; !found && i < choices.length; i++) {\n\t\t\tif (choices[i] === choice)\n\t\t\t\tfound = true;\n\t\t}\n\t\tif (!found)\n\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires one of [ \" + choices.join(\", \") + \" ] as a parameter.\";\n\t\tmultilineVars[key] = choice;\n\t\treturn null;\n\t};\n\n\tvar midiCmdParam0 = [\n\t\t\"nobarlines\",\n\t\t\"barlines\",\n\t\t\"beataccents\",\n\t\t\"nobeataccents\",\n\t\t\"droneon\",\n\t\t\"droneoff\",\n\t\t\"drumon\",\n\t\t\"drumoff\",\n\t\t\"fermatafixed\",\n\t\t\"fermataproportional\",\n\t\t\"gchordon\",\n\t\t\"gchordoff\",\n\t\t\"controlcombo\",\n\t\t\"temperamentnormal\",\n\t\t\"noportamento\"\n\t];\n\tvar midiCmdParam1String = [\n\t\t\"gchord\",\n\t\t\"ptstress\",\n\t\t\"beatstring\"\n\t];\n\tvar midiCmdParam1Integer = [\n\t\t\"bassvol\",\n\t\t\"chordvol\",\n\t\t\"c\",\n\t\t\"channel\",\n\t\t\"beatmod\",\n\t\t\"deltaloudness\",\n\t\t\"drumbars\",\n\t\t\"gracedivider\",\n\t\t\"makechordchannels\",\n\t\t\"randomchordattack\",\n\t\t\"chordattack\",\n\t\t\"stressmodel\",\n\t\t\"transpose\",\n\t\t\"rtranspose\",\n\t\t\"vol\",\n\t\t\"volinc\",\n\t\t\"gchordbars\"\t\n\t];\n\tvar midiCmdParam1Integer1OptionalInteger = [\n\t\t\"program\"\n\t];\n\tvar midiCmdParam2Integer = [\n\t\t\"ratio\",\n\t\t\"snt\",\n\t\t\"bendvelocity\",\n\t\t\"pitchbend\",\n\t\t\"control\",\n\t\t\"temperamentlinear\"\n\t];\n\tvar midiCmdParam4Integer = [\n\t\t\"beat\"\n\t];\n\tvar midiCmdParam5Integer = [\n\t\t\"drone\"\n\t];\n\tvar midiCmdParam1String1Integer = [\n\t\t\"portamento\"\n\t];\n\tvar midiCmdParamFraction = [\n\t\t\"expand\",\n\t\t\"grace\",\n\t\t\"trim\"\n\t];\n\tvar midiCmdParam1StringVariableIntegers = [\n\t\t\"drum\",\n\t\t\"chordname\"\n\t];\n  \tvar midiCmdParam1Integer1OptionalString = [\n  \t\t\"bassprog\", \"chordprog\"\n  \t];\n\n\n\tvar parseMidiCommand = function(midi, tune, restOfString) {\n\t\tvar midi_cmd = midi.shift().token;\n\t\tvar midi_params = [];\n\t\tif (midiCmdParam0.indexOf(midi_cmd) >= 0) {\n\t\t\t// NO PARAMETERS\n\t\t\tif (midi.length !== 0)\n\t\t\t\twarn(\"Unexpected parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t} else if (midiCmdParam1String.indexOf(midi_cmd) >= 0) {\n\t\t\t// ONE STRING PARAMETER\n\t\t\tif (midi.length !== 1)\n\t\t\t\twarn(\"Expected one parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse\n\t\t\t\tmidi_params.push(midi[0].token);\n\t\t} else if (midiCmdParam1Integer.indexOf(midi_cmd) >= 0) {\n\t\t\t// ONE INT PARAMETER\n\t\t\tif (midi.length !== 1)\n\t\t\t\twarn(\"Expected one parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi[0].type !== \"number\")\n\t\t\t\twarn(\"Expected one integer parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse\n\t\t\t\tmidi_params.push(midi[0].intt);\n\t\t} else if (midiCmdParam1Integer1OptionalInteger.indexOf(midi_cmd) >= 0) {\n\t\t\t// ONE INT PARAMETER, ONE OPTIONAL PARAMETER\n\t\t\tif (midi.length !== 1 && midi.length !== 2)\n\t\t\t\twarn(\"Expected one or two parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi[0].type !== \"number\")\n\t\t\t\twarn(\"Expected integer parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi.length === 2 && midi[1].type !== \"number\")\n\t\t\t\twarn(\"Expected integer parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse {\n\t\t\t\tmidi_params.push(midi[0].intt);\n\t\t\t\tif (midi.length === 2)\n\t\t\t\t\tmidi_params.push(midi[1].intt);\n\t\t\t}\n\t\t} else if (midiCmdParam2Integer.indexOf(midi_cmd) >= 0) {\n\t\t\t// TWO INT PARAMETERS\n\t\t\tif (midi.length !== 2)\n\t\t\t\twarn(\"Expected two parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi[0].type !== \"number\" || midi[1].type !== \"number\")\n\t\t\t\twarn(\"Expected two integer parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse {\n\t\t\t\tmidi_params.push(midi[0].intt);\n\t\t\t\tmidi_params.push(midi[1].intt);\n\t\t\t}\n\t\t} else if (midiCmdParam1String1Integer.indexOf(midi_cmd) >= 0) {\n\t\t\t// ONE STRING PARAMETER, ONE INT PARAMETER\n\t\t\tif (midi.length !== 2)\n\t\t\t\twarn(\"Expected two parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi[0].type !== \"alpha\" || midi[1].type !== \"number\")\n\t\t\t\twarn(\"Expected one string and one integer parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse {\n\t\t\t\tmidi_params.push(midi[0].token);\n\t\t\t\tmidi_params.push(midi[1].intt);\n\t\t\t}\n\t\t} else if (midi_cmd === 'drummap') {\n\t\t\t// BUILD AN OBJECT OF ABC NOTE => MIDI NOTE\n\t\t\tif (midi.length === 2 && midi[0].type === 'alpha' && midi[1].type === 'number') {\n\t\t\t\tif (!tune.formatting) tune.formatting = {};\n\t\t\t\tif (!tune.formatting.midi) tune.formatting.midi = {};\n\t\t\t\tif (!tune.formatting.midi.drummap) tune.formatting.midi.drummap = {};\n\t\t\t\ttune.formatting.midi.drummap[midi[0].token] = midi[1].intt;\n\t\t\t\tmidi_params = tune.formatting.midi.drummap;\n\t\t\t} else if (midi.length === 3 && midi[0].type === 'punct' && midi[1].type === 'alpha' && midi[2].type === 'number') {\n\t\t\t\tif (!tune.formatting) tune.formatting = {};\n\t\t\t\tif (!tune.formatting.midi) tune.formatting.midi = {};\n\t\t\t\tif (!tune.formatting.midi.drummap) tune.formatting.midi.drummap = {};\n\t\t\t\ttune.formatting.midi.drummap[midi[0].token+midi[1].token] = midi[2].intt;\n\t\t\t\tmidi_params = tune.formatting.midi.drummap;\n\t\t\t} else {\n\t\t\t\twarn(\"Expected one note name and one integer parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\t}\n\t\t} else if (midiCmdParamFraction.indexOf(midi_cmd) >= 0) {\n\t\t\t// ONE FRACTION PARAMETER\n\t\t\tif (midi.length !== 3)\n\t\t\t\twarn(\"Expected fraction parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi[0].type !== \"number\" || midi[1].token !== \"/\" || midi[2].type !== \"number\")\n\t\t\t\twarn(\"Expected fraction parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse {\n\t\t\t\tmidi_params.push(midi[0].intt);\n\t\t\t\tmidi_params.push(midi[2].intt);\n\t\t\t}\n\t\t} else if (midiCmdParam4Integer.indexOf(midi_cmd) >= 0) {\n\t\t\t// FOUR INT PARAMETERS\n\t\t\tif (midi.length !== 4)\n\t\t\t\twarn(\"Expected four parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi[0].type !== \"number\" || midi[1].type !== \"number\" || midi[2].type !== \"number\" || midi[3].type !== \"number\")\n\t\t\t\twarn(\"Expected four integer parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse {\n\t\t\t\tmidi_params.push(midi[0].intt);\n\t\t\t\tmidi_params.push(midi[1].intt);\n\t\t\t\tmidi_params.push(midi[2].intt);\n\t\t\t\tmidi_params.push(midi[3].intt);\n\t\t\t}\n\t\t} else if (midiCmdParam5Integer.indexOf(midi_cmd) >= 0) {\n\t\t\t// FIVE INT PARAMETERS\n\t\t\tif (midi.length !== 5)\n\t\t\t\twarn(\"Expected five parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi[0].type !== \"number\" || midi[1].type !== \"number\" || midi[2].type !== \"number\" || midi[3].type !== \"number\" || midi[4].type !== \"number\")\n\t\t\t\twarn(\"Expected five integer parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse {\n\t\t\t\tmidi_params.push(midi[0].intt);\n\t\t\t\tmidi_params.push(midi[1].intt);\n\t\t\t\tmidi_params.push(midi[2].intt);\n\t\t\t\tmidi_params.push(midi[3].intt);\n\t\t\t\tmidi_params.push(midi[4].intt);\n\t\t\t}\n\t\t} else if (midiCmdParam1Integer1OptionalInteger.indexOf(midi_cmd) >= 0) {\n\t\t\t// ONE INT PARAMETER, ONE OPTIONAL OCTAVE PARAMETER\n\t\t\tif (midi.length !== 1 || midi.length !== 4)\n\t\t\t\twarn(\"Expected one or two parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi[0].type !== \"number\")\n\t\t\t\twarn(\"Expected integer parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi.length === 4) {\n\t\t\t\tif (midi[1].token !== \"octave\")\n\t\t\t\t\twarn(\"Expected octave parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\t\tif (midi[2].token !== \"=\")\n\t\t\t\t\twarn(\"Expected octave parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\t\tif (midi[3].type !== \"number\")\n\t\t\t\t\twarn(\"Expected integer parameter for octave in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\t} else {\n\t\t\t\tmidi_params.push(midi[0].intt);\n\t\t\t\tif (midi.length === 4)\n\t\t\t\t\tmidi_params.push(midi[3].intt);\n\t\t\t}\n\t\t} else if (midiCmdParam1StringVariableIntegers.indexOf(midi_cmd) >= 0) {\n\t\t\t// ONE STRING, VARIABLE INT PARAMETERS\n\t\t\tif (midi.length < 2)\n\t\t\t\twarn(\"Expected string parameter and at least one integer parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi[0].type !== \"alpha\")\n\t\t\t\twarn(\"Expected string parameter and at least one integer parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse {\n\t\t\t\tvar p = midi.shift();\n\t\t\t\tmidi_params.push(p.token);\n\t\t\t\twhile (midi.length > 0) {\n\t\t\t\t\tp = midi.shift();\n\t\t\t\t\tif (p.type !== \"number\")\n\t\t\t\t\t\twarn(\"Expected integer parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\t\t\tmidi_params.push(p.intt);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t    else if (midiCmdParam1Integer1OptionalString.indexOf(midi_cmd) >= 0){\n\n\t      // ONE INT PARAMETER, ONE OPTIONAL string\n\t    \tif (midi.length !== 1 && midi.length !== 2) \n\t\t\t\twarn(\"Expected one or two parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi[0].type !== \"number\") \n\t\t\t\twarn(\"Expected integer parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi.length === 2 && midi[1].type !== \"alpha\") \n\t\t\t\twarn(\"Expected alpha parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse {\n\t        \tmidi_params.push(midi[0].intt);\n\n\t        // Currently only bassprog and chordprog with optional octave shifts use this path\n\t        if (midi.length === 2){\n\t          var cmd = midi[1].token;\n\t          if (cmd.indexOf(\"octave=\") != -1){\n\t            cmd = cmd.replace(\"octave=\",\"\");\n\t            cmd = parseInt(cmd);\n\t            if (!isNaN(cmd)){\n\t              // Limit range from -1 to 3 octaves\n\t              if (cmd < -1){\n\t\t\t\t\twarn(\"Expected octave= in MIDI \" + midi_cmd + ' to be >= -1 (recv:'+cmd+')');\n\t                cmd = -1;\n\t              }\n\t              if (cmd > 3){\n\t\t\t\t\twarn(\"Expected octave= in MIDI \" + midi_cmd + ' to be <= 3 (recv:'+cmd+')');\n\t                cmd = 3;\n\t              }\n\t              midi_params.push(cmd);\n\t            } else\n\t            warn(\"Expected octave value in MIDI\" + midi_cmd);\n\t          }\n\t          else{\n\t            warn(\"Expected octave= in MIDI\" + midi_cmd);\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t\tif (tuneBuilder.hasBeginMusic())\n\t\t\ttuneBuilder.appendElement('midi', -1, -1, { cmd: midi_cmd, params: midi_params });\n\t\telse {\n\t\t\tif (tune.formatting['midi'] === undefined)\n\t\t\t\ttune.formatting['midi'] = {};\n\t\t\ttune.formatting['midi'][midi_cmd] = midi_params;\n\t\t}\n\t};\n\n\tparseDirective.parseFontChangeLine = function(textstr) {\n\t\t// We don't want to match two dollar signs, so change those temporarily\n\t\ttextstr = textstr.replace(/\\$\\$/g,\"\\x03\")\n\t\tvar textParts = textstr.split('$');\n\t\tif (textParts.length > 1 && multilineVars.setfont) {\n\t\t\tvar textarr = [ ];\n\t\t\tif (textParts[0] !== '') // did the original string start with `$`?\n\t\t\t\ttextarr.push({ text: textParts[0] })\n\t\t\tfor (var i = 1; i < textParts.length; i++) {\n\t\t\t\tif (textParts[i][0] === '0')\n\t\t\t\t\ttextarr.push({ text: textParts[i].substring(1).replace(/\\x03/g,\"$$\") });\n\t\t\t\telse {\n\t\t\t\t\tvar whichFont = parseInt(textParts[i][0],10)\n\t\t\t\t\tif (multilineVars.setfont[whichFont])\n\t\t\t\t\t\ttextarr.push({font: multilineVars.setfont[whichFont], text: textParts[i].substring(1).replace(/\\x03/g,\"$$\") });\n\t\t\t\t\telse\n\t\t\t\t\t\ttextarr[textarr.length-1].text += '$' + textParts[i].replace(/\\x03/g,\"$$\");\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t\treturn textarr;\n\t\t}\n\t\treturn textstr.replace(/\\x03/g,\"$$\");\n\t};\n\n\tvar positionChoices = [ 'auto', 'above', 'below', 'hidden' ];\n\tparseDirective.addDirective = function(str) {\n\t\tvar tokens = tokenizer.tokenize(str, 0, str.length);\t// 3 or more % in a row, or just spaces after %% is just a comment\n\t\tif (tokens.length === 0 || tokens[0].type !== 'alpha') return null;\n\t\tvar restOfString = str.substring(str.indexOf(tokens[0].token)+tokens[0].token.length);\n\t\trestOfString = tokenizer.stripComment(restOfString);\n\t\tvar cmd = tokens.shift().token.toLowerCase();\n\t\tvar scratch = \"\";\n\t\tvar line;\n\t\tswitch (cmd)\n\t\t{\n\t\t\t// The following directives were added to abc_parser_lint, but haven't been implemented here.\n\t\t\t// Most of them are direct translations from the directives that will be parsed in. See abcm2ps's format.txt for info on each of these.\n\t\t\t//\t\t\t\t\talignbars: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\taligncomposer: { type: \"string\", Enum: [ 'left', 'center','right' ], optional: true },\n\t\t\t//\t\t\t\t\tbstemdown: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\tcontinueall: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\tdynalign: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\texprabove: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\texprbelow: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\tgchordbox: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\tgracespacebefore: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tgracespaceinside: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tgracespaceafter: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tinfospace: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tlineskipfac: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tmaxshrink: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tmaxstaffsep: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tmaxsysstaffsep: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tnotespacingfactor: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tparskipfac: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tslurheight: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tsplittune: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\tsquarebreve: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\tstemheight: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tstraightflags: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\tstretchstaff: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\ttitleformat: { type: \"string\", optional: true },\n\t\t\tcase \"bagpipes\":tune.formatting.bagpipes = true;break;\n\t\t\tcase \"flatbeams\":tune.formatting.flatbeams = true;break;\n\t\t\tcase \"jazzchords\":tune.formatting.jazzchords = true;break;\n\t\t\tcase \"accentAbove\":tune.formatting.accentAbove = true;break;\n\t\t\tcase \"germanAlphabet\":tune.formatting.germanAlphabet = true;break;\n\t\t\tcase \"landscape\":multilineVars.landscape = true;break;\n\t\t\tcase \"papersize\":multilineVars.papersize = restOfString;break;\n\t\t\tcase \"graceslurs\":\n\t\t\t\tif (tokens.length !== 1)\n\t\t\t\t\treturn \"Directive graceslurs requires one parameter: 0 or 1\";\n\t\t\t\tif (tokens[0].token === '0' || tokens[0].token === 'false')\n\t\t\t\t\ttune.formatting.graceSlurs = false;\n\t\t\t\telse if (tokens[0].token === '1' || tokens[0].token === 'true')\n\t\t\t\t\ttune.formatting.graceSlurs = true;\n\t\t\t\telse\n\t\t\t\t\treturn \"Directive graceslurs requires one parameter: 0 or 1 (received \" + tokens[0].token + ')';\n\t\t\t\tbreak;\n\t\t\tcase \"lineThickness\":\n\t\t\t\tvar lt = parseStretchLast(tokens);\n\t\t\t\tif (lt.value !== undefined)\n\t\t\t\t\ttune.formatting.lineThickness = lt.value;\n\t\t\t\tif (lt.error)\n\t\t\t\t\treturn lt.error;\n\t\t\t\tbreak;\n\t\t\tcase \"stretchlast\":\n\t\t\t\tvar sl = parseStretchLast(tokens);\n\t\t\t\tif (sl.value !== undefined)\n\t\t\t\t\ttune.formatting.stretchlast = sl.value;\n\t\t\t\tif (sl.error)\n\t\t\t\t\treturn sl.error;\n\t\t\t\tbreak;\n\t\t\tcase \"titlecaps\":multilineVars.titlecaps = true;break;\n\t\t\tcase \"titleleft\":tune.formatting.titleleft = true;break;\n\t\t\tcase \"measurebox\":tune.formatting.measurebox = true;break;\n\n\t\t\tcase \"vocal\": return addMultilineVarOneParamChoice(\"vocalPosition\", cmd, tokens, positionChoices);\n\t\t\tcase \"dynamic\": return addMultilineVarOneParamChoice(\"dynamicPosition\", cmd, tokens, positionChoices);\n\t\t\tcase \"gchord\": return addMultilineVarOneParamChoice(\"chordPosition\", cmd, tokens, positionChoices);\n\t\t\tcase \"ornament\": return addMultilineVarOneParamChoice(\"ornamentPosition\", cmd, tokens, positionChoices);\n\t\t\tcase \"volume\": return addMultilineVarOneParamChoice(\"volumePosition\", cmd, tokens, positionChoices);\n\n\t\t\tcase \"botmargin\":\n\t\t\tcase \"botspace\":\n\t\t\tcase \"composerspace\":\n\t\t\tcase \"indent\":\n\t\t\tcase \"leftmargin\":\n\t\t\tcase \"linesep\":\n\t\t\tcase \"musicspace\":\n\t\t\tcase \"partsspace\":\n\t\t\tcase \"pageheight\":\n\t\t\tcase \"pagewidth\":\n\t\t\tcase \"rightmargin\":\n\t\t\tcase \"stafftopmargin\":\n\t\t\tcase \"staffsep\":\n\t\t\tcase \"staffwidth\":\n\t\t\tcase \"subtitlespace\":\n\t\t\tcase \"sysstaffsep\":\n\t\t\tcase \"systemsep\":\n\t\t\tcase \"textspace\":\n\t\t\tcase \"titlespace\":\n\t\t\tcase \"topmargin\":\n\t\t\tcase \"topspace\":\n\t\t\tcase \"vocalspace\":\n\t\t\tcase \"wordsspace\":\n\t\t\t\treturn oneParameterMeasurement(cmd, tokens);\n\t\t\tcase \"voicescale\":\n\t\t\t\tif (tokens.length !== 1 || tokens[0].type !== 'number')\n\t\t\t\t\treturn \"voicescale requires one float as a parameter\";\n\t\t\t\tvar voiceScale = tokens.shift();\n\t\t\t\tif (multilineVars.currentVoice) {\n\t\t\t\t\tmultilineVars.currentVoice.scale = voiceScale.floatt;\n\t\t\t\t\ttuneBuilder.changeVoiceScale(multilineVars.currentVoice.scale);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\tcase \"voicecolor\":\n\t\t\t\tif (tokens.length !== 1) // this could either be of type alpha or quote, but it's ok if it is a number\n\t\t\t\t\treturn \"voicecolor requires one string as a parameter\";\n\t\t\t\tvar voiceColor = tokens.shift();\n\t\t\t\tif (multilineVars.currentVoice) {\n\t\t\t\t\tmultilineVars.currentVoice.color = voiceColor.token;\n\t\t\t\t\ttuneBuilder.changeVoiceColor(multilineVars.currentVoice.color);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\tcase \"vskip\":\n\t\t\t\tvar vskip = Math.round(getRequiredMeasurement(cmd, tokens));\n\t\t\t\tif (vskip.error)\n\t\t\t\t\treturn vskip.error;\n\t\t\t\ttuneBuilder.addSpacing(vskip);\n\t\t\t\treturn null;\n\t\t\tcase \"scale\":\n\t\t\t\tsetScale(cmd, tokens);\n\t\t\t\tbreak;\n\t\t\tcase \"sep\":\n\t\t\t\tif (tokens.length === 0)\n\t\t\t\t\ttuneBuilder.addSeparator(14,14,85, { startChar: multilineVars.iChar, endChar: multilineVars.iChar+5}); // If no parameters are given, then there is a default size.\n\t\t\t\telse {\n\t\t\t\t\tvar points = tokenizer.getMeasurement(tokens);\n\t\t\t\t\tif (points.used === 0)\n\t\t\t\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires 3 numbers: space above, space below, length of line\";\n\t\t\t\t\tvar spaceAbove = points.value;\n\n\t\t\t\t\tpoints = tokenizer.getMeasurement(tokens);\n\t\t\t\t\tif (points.used === 0)\n\t\t\t\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires 3 numbers: space above, space below, length of line\";\n\t\t\t\t\tvar spaceBelow = points.value;\n\n\t\t\t\t\tpoints = tokenizer.getMeasurement(tokens);\n\t\t\t\t\tif (points.used === 0 || tokens.length !== 0)\n\t\t\t\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires 3 numbers: space above, space below, length of line\";\n\t\t\t\t\tvar lenLine = points.value;\n\t\t\t\t\ttuneBuilder.addSeparator(spaceAbove, spaceBelow, lenLine, { startChar: multilineVars.iChar, endChar: multilineVars.iChar+restOfString.length});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"barsperstaff\":\n\t\t\t\tscratch = addMultilineVar('barsperstaff', cmd, tokens);\n\t\t\t\tif (scratch !== null) return scratch;\n\t\t\t\tbreak;\n\t\t\tcase \"staffnonote\":\n\t\t\t\t// The sense of the boolean is opposite here. \"0\" means true.\n\t\t\t\tif (tokens.length !== 1)\n\t\t\t\t\treturn \"Directive staffnonote requires one parameter: 0 or 1\";\n\t\t\t\tif (tokens[0].token === '0')\n\t\t\t\t\tmultilineVars.staffnonote = true;\n\t\t\t\telse if (tokens[0].token === '1')\n\t\t\t\t\tmultilineVars.staffnonote = false;\n\t\t\t\telse\n\t\t\t\t\treturn \"Directive staffnonote requires one parameter: 0 or 1 (received \" + tokens[0].token + ')';\n\t\t\t\tbreak;\n\t\t\tcase \"printtempo\":\n\t\t\t\tscratch = addMultilineVarBool('printTempo', cmd, tokens);\n\t\t\t\tif (scratch !== null) return scratch;\n\t\t\t\tbreak;\n\t\t\tcase \"partsbox\":\n\t\t\t\tscratch = addMultilineVarBool('partsBox', cmd, tokens);\n\t\t\t\tif (scratch !== null) return scratch;\n\t\t\t\tmultilineVars.partsfont.box = multilineVars.partsBox;\n\t\t\t\tbreak;\n\t\t\tcase \"freegchord\":\n\t\t\t\tscratch = addMultilineVarBool('freegchord', cmd, tokens);\n\t\t\t\tif (scratch !== null) return scratch;\n\t\t\t\tbreak;\n\t\t\tcase \"measurenb\":\n\t\t\tcase \"barnumbers\":\n\t\t\t\tscratch = addMultilineVar('barNumbers', cmd, tokens);\n\t\t\t\tif (scratch !== null) return scratch;\n\t\t\t\tbreak;\n\t\t\tcase \"setbarnb\":\n\t\t\t\tif (tokens.length !== 1 || tokens[0].type !== 'number') {\n\t\t\t\t\treturn 'Directive setbarnb requires a number as a parameter.';\n\t\t\t\t}\n\t\t\t\tmultilineVars.currBarNumber = tuneBuilder.setBarNumberImmediate(tokens[0].intt);\n\t\t\t\tbreak;\n\t\t\tcase \"keywarn\":\n\t\t\t\tif (tokens.length !== 1 || tokens[0].type !== 'number' || (tokens[0].intt !== 1 && tokens[0].intt !== 0)) {\n\t\t\t\t\treturn 'Directive ' + cmd + ' requires 0 or 1 as a parameter.';\n\t\t\t\t}\n\t\t\t\tmultilineVars[cmd] = tokens[0].intt === 1\n\t\t\t\tbreak;\n\t\t\tcase \"begintext\":\n\t\t\t\tvar textBlock = '';\n\t\t\t\tline = tokenizer.nextLine();\n\t\t\t\twhile(line && line.indexOf('%%endtext') !== 0) {\n\t\t          // MAE 9 May 2025 - for text blocks with just white space\n\t\t          if (parseCommon.startsWith(line, \"%%\")){\n\n\t\t            var theLine = line.substring(2);\n\t\t            theLine = theLine.trim() + \"\\n\";\n\t\t            textBlock += theLine;\n\n\t\t          }\n\t\t          else{\n\t\t            textBlock += line.trim() + \"\\n\";\n\t\t          }\n\t\t\t\t\tline = tokenizer.nextLine();\n\t\t\t\t}\n\t\t\t\ttuneBuilder.addText(textBlock, { startChar: multilineVars.iChar, endChar: multilineVars.iChar+textBlock.length+7});\n\t\t\t\tbreak;\n\t\t\tcase \"continueall\":\n\t\t\t\tmultilineVars.continueall = true;\n\t\t\t\tbreak;\n\t\t\tcase \"beginps\":\n\t\t\t\tline = tokenizer.nextLine();\n\t\t\t\twhile(line && line.indexOf('%%endps') !== 0) {\n\t\t\t\t\ttokenizer.nextLine();\n\t\t\t\t}\n\t\t\t\twarn(\"Postscript ignored\", str, 0);\n\t\t\t\tbreak;\n\t\t\tcase \"deco\":\n\t\t\t\tif (restOfString.length > 0)\n\t\t\t\t\tmultilineVars.ignoredDecorations.push(restOfString.substring(0, restOfString.indexOf(' ')));\n\t\t\t\twarn(\"Decoration redefinition ignored\", str, 0);\n\t\t\t\tbreak;\n\t\t\tcase \"text\":\n\t\t\t\tvar textstr = tokenizer.translateString(restOfString);\n\t\t\t\ttuneBuilder.addText(parseDirective.parseFontChangeLine(textstr), { startChar: multilineVars.iChar, endChar: multilineVars.iChar+restOfString.length+7});\n\t\t\t\tbreak;\n\t\t\tcase \"center\":\n\t\t\t\tvar centerstr = tokenizer.translateString(restOfString);\n\t\t\t\ttuneBuilder.addCentered(parseDirective.parseFontChangeLine(centerstr));\n\t\t\t\tbreak;\n\t\t\tcase \"font\":\n\t\t\t\t// don't need to do anything for this; it is a useless directive\n\t\t\t\tbreak;\n\t\t\tcase \"setfont\":\n\t\t\t\tvar sfTokens = tokenizer.tokenize(restOfString, 0, restOfString.length);\n//\t\t\t\tvar sfDone = false;\n\t\t\t\tif (sfTokens.length >= 4) {\n\t\t\t\t\tif (sfTokens[0].token === '-' && sfTokens[1].type === 'number') {\n\t\t\t\t\t\tvar sfNum = parseInt(sfTokens[1].token);\n\t\t\t\t\t\tif (sfNum >= 1 && sfNum <= 9) {\n\t\t\t\t\t\t\tif (!multilineVars.setfont)\n\t\t\t\t\t\t\t\tmultilineVars.setfont = [];\n\t\t\t\t\t\t\tsfTokens.shift();\n\t\t\t\t\t\t\tsfTokens.shift();\n\t\t\t\t\t\t\tmultilineVars.setfont[sfNum] = getFontParameter(sfTokens, multilineVars.setfont[sfNum], str, 0, 'setfont');\n//\t\t\t\t\t\t\tvar sfSize = sfTokens.pop();\n//\t\t\t\t\t\t\tif (sfSize.type === 'number') {\n//\t\t\t\t\t\t\t\tsfSize = parseInt(sfSize.token);\n//\t\t\t\t\t\t\t\tvar sfFontName = '';\n//\t\t\t\t\t\t\t\tfor (var sfi = 2; sfi < sfTokens.length; sfi++)\n//\t\t\t\t\t\t\t\t\tsfFontName += sfTokens[sfi].token;\n//\t\t\t\t\t\t\t\tmultilineVars.setfont[sfNum] = { face: sfFontName, size: sfSize };\n//\t\t\t\t\t\t\t\tsfDone = true;\n//\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n//\t\t\t\tif (!sfDone)\n//\t\t\t\t\treturn \"Bad parameters: \" + cmd;\n\t\t\t\tbreak;\n\t\t\tcase \"gchordfont\":\n\t\t\tcase \"partsfont\":\n\t\t\tcase \"tripletfont\":\n\t\t\tcase \"vocalfont\":\n\t\t\tcase \"textfont\":\n\t\t\tcase \"annotationfont\":\n\t\t\tcase \"historyfont\":\n\t\t\tcase \"infofont\":\n\t\t\tcase \"measurefont\":\n\t\t\tcase \"repeatfont\":\n\t\t\tcase \"wordsfont\":\n\t\t\t\treturn getChangingFont(cmd, tokens, str);\n\t\t\tcase \"composerfont\":\n\t\t\tcase \"subtitlefont\":\n\t\t\tcase \"tempofont\":\n\t\t\tcase \"titlefont\":\n\t\t\tcase \"voicefont\":\n\t\t\tcase \"footerfont\":\n\t\t\tcase \"headerfont\":\n\t\t\t\treturn getGlobalFont(cmd, tokens, str);\n\t\t\tcase \"barlabelfont\":\n\t\t\tcase \"barnumberfont\":\n\t\t\tcase \"barnumfont\":\n\t\t\t\treturn getChangingFont(\"measurefont\", tokens, str);\n\t\t\tcase \"staves\":\n\t\t\tcase \"score\":\n\t\t\t\tmultilineVars.score_is_present = true;\n\t\t\t\tvar addVoice = function(id, newStaff, bracket, brace, continueBar) {\n\t\t\t\t\tif (newStaff || multilineVars.staves.length === 0) {\n\t\t\t\t\t\tmultilineVars.staves.push({index: multilineVars.staves.length, numVoices: 0});\n\t\t\t\t\t}\n\t\t\t\t\tvar staff = parseCommon.last(multilineVars.staves);\n\t\t\t\t\tif (bracket !== undefined && staff.bracket === undefined) staff.bracket = bracket;\n\t\t\t\t\tif (brace !== undefined && staff.brace === undefined) staff.brace = brace;\n\t\t\t\t\tif (continueBar) staff.connectBarLines = 'end';\n\t\t\t\t\tif (multilineVars.voices[id] === undefined) {\n\t\t\t\t\t\tmultilineVars.voices[id] = {staffNum: staff.index, index: staff.numVoices};\n\t\t\t\t\t\tstaff.numVoices++;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tvar openParen = false;\n\t\t\t\tvar openBracket = false;\n\t\t\t\tvar openBrace = false;\n\t\t\t\tvar justOpenParen = false;\n\t\t\t\tvar justOpenBracket = false;\n\t\t\t\tvar justOpenBrace = false;\n\t\t\t\tvar continueBar = false;\n\t\t\t\tvar lastVoice;\n\t\t\t\tvar addContinueBar = function() {\n\t\t\t\t\tcontinueBar = true;\n\t\t\t\t\tif (lastVoice) {\n\t\t\t\t\t\tvar ty = 'start';\n\t\t\t\t\t\tif (lastVoice.staffNum > 0) {\n\t\t\t\t\t\t\tif (multilineVars.staves[lastVoice.staffNum-1].connectBarLines === 'start' ||\n\t\t\t\t\t\t\t\tmultilineVars.staves[lastVoice.staffNum-1].connectBarLines === 'continue')\n\t\t\t\t\t\t\t\tty = 'continue';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmultilineVars.staves[lastVoice.staffNum].connectBarLines = ty;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\twhile (tokens.length) {\n\t\t\t\t\tvar t = tokens.shift();\n\t\t\t\t\tswitch (t.token) {\n\t\t\t\t\t\tcase '(':\n\t\t\t\t\t\t\tif (openParen) warn(\"Can't nest parenthesis in %%score\", str, t.start);\n\t\t\t\t\t\t\telse {openParen = true;justOpenParen = true;}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ')':\n\t\t\t\t\t\t\tif (!openParen || justOpenParen) warn(\"Unexpected close parenthesis in %%score\", str, t.start);\n\t\t\t\t\t\t\telse openParen = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '[':\n\t\t\t\t\t\t\tif (openBracket) warn(\"Can't nest brackets in %%score\", str, t.start);\n\t\t\t\t\t\t\telse {openBracket = true;justOpenBracket = true;}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ']':\n\t\t\t\t\t\t\tif (!openBracket || justOpenBracket) warn(\"Unexpected close bracket in %%score\", str, t.start);\n\t\t\t\t\t\t\telse {openBracket = false;multilineVars.staves[lastVoice.staffNum].bracket = 'end';}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '{':\n\t\t\t\t\t\t\tif (openBrace ) warn(\"Can't nest braces in %%score\", str, t.start);\n\t\t\t\t\t\t\telse {openBrace = true;justOpenBrace = true;}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '}':\n\t\t\t\t\t\t\tif (!openBrace || justOpenBrace) warn(\"Unexpected close brace in %%score\", str, t.start);\n\t\t\t\t\t\t\telse {openBrace = false;multilineVars.staves[lastVoice.staffNum].brace = 'end';}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '|':\n\t\t\t\t\t\t\taddContinueBar();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tvar vc = \"\";\n\t\t\t\t\t\t\twhile (t.type === 'alpha' || t.type === 'number') {\n\t\t\t\t\t\t\t\tvc += t.token;\n\t\t\t\t\t\t\t\tif (t.continueId)\n\t\t\t\t\t\t\t\t\tt = tokens.shift();\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar newStaff = !openParen || justOpenParen;\n\t\t\t\t\t\t\tvar bracket = justOpenBracket ? 'start' : openBracket ? 'continue' : undefined;\n\t\t\t\t\t\t\tvar brace = justOpenBrace ? 'start' : openBrace ? 'continue' : undefined;\n\t\t\t\t\t\t\taddVoice(vc, newStaff, bracket, brace, continueBar);\n\t\t\t\t\t\t\tjustOpenParen = false;\n\t\t\t\t\t\t\tjustOpenBracket = false;\n\t\t\t\t\t\t\tjustOpenBrace = false;\n\t\t\t\t\t\t\tcontinueBar = false;\n\t\t\t\t\t\t\tlastVoice = multilineVars.voices[vc];\n\t\t\t\t\t\t\tif (cmd === 'staves')\n\t\t\t\t\t\t\t\taddContinueBar();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"maxstaves\":\n\t\t\t\tvar nStaves = tokenizer.getInt(restOfString)\n\t\t\t\tif (nStaves.digits === 0)\n\t\t\t\t\twarn(\"Expected number of staves in maxstaves\")\n\t\t\t\telse{\n\t\t\t\t\tif (nStaves.value > 0){\n\t\t\t\t\t\ttune.formatting.maxStaves = nStaves.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"newpage\":\n\t\t\t\tvar pgNum = tokenizer.getInt(restOfString);\n\t\t\t\ttuneBuilder.addNewPage(pgNum.digits === 0 ? -1 : pgNum.value);\n\t\t\t\tbreak;\n\n\t\t\tcase \"abc\":\n\t\t\t\tvar arr = restOfString.split(' ');\n\t\t\t\tswitch (arr[0]) {\n\t\t\t\t\tcase \"-copyright\":\n\t\t\t\t\tcase \"-creator\":\n\t\t\t\t\tcase \"-edited-by\":\n\t\t\t\t\tcase \"-version\":\n\t\t\t\t\tcase \"-charset\":\n\t\t\t\t\t\tvar subCmd = arr.shift();\n\t\t\t\t\t\ttuneBuilder.addMetaText(cmd+subCmd, arr.join(' '), { startChar: multilineVars.iChar, endChar: multilineVars.iChar+restOfString.length+5});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn \"Unknown directive: \" + cmd+arr[0];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"header\":\n\t\t\tcase \"footer\":\n\t\t\t\tvar footerStr = tokenizer.getMeat(restOfString, 0, restOfString.length);\n\t\t\t\tfooterStr = restOfString.substring(footerStr.start, footerStr.end);\n\t\t\t\tif (footerStr[0] === '\"' && footerStr[footerStr.length-1] === '\"' )\n\t\t\t\t\tfooterStr = footerStr.substring(1, footerStr.length-1);\n\t\t\t\tvar footerArr = footerStr.split('\\t');\n\t\t\t\tvar footer = {};\n\t\t\t\tif (footerArr.length === 1)\n\t\t\t\t\tfooter = { left: \"\", center: footerArr[0], right: \"\" };\n\t\t\t\telse if (footerArr.length === 2)\n\t\t\t\t\tfooter = { left: footerArr[0], center: footerArr[1], right: \"\" };\n\t\t\t\telse\n\t\t\t\t\tfooter = { left: footerArr[0], center: footerArr[1], right: footerArr[2] };\n\t\t\t\tif (footerArr.length > 3)\n\t\t\t\t\twarn(\"Too many tabs in \" + cmd + \": \" + footerArr.length + \" found.\", restOfString, 0);\n\n\t\t\t\ttuneBuilder.addMetaTextObj(cmd, footer, { startChar: multilineVars.iChar, endChar: multilineVars.iChar+str.length});\n\t\t\t\tbreak;\n\n\t\t\tcase \"midi\":\n\t\t\t\tvar midi = tokenizer.tokenize(restOfString, 0, restOfString.length, true);\n\t\t\t\tif (midi.length > 0 && midi[0].token === '=')\n\t\t\t\t\tmidi.shift();\n\t\t\t\tif (midi.length === 0)\n\t\t\t\t\twarn(\"Expected midi command\", restOfString, 0);\n\t\t\t\telse\n\t\t\t\t\tparseMidiCommand(midi, tune, restOfString);\n\t\t\t\tbreak;\n\t\t\tcase \"percmap\":\n\t\t\t\tvar percmap = interpretPercMap(restOfString);\n\t\t\t\tif (percmap.error)\n\t\t\t\t\twarn(percmap.error, str, 8);\n\t\t\t\telse {\n\t\t\t\t\tif (!tune.formatting.percmap)\n\t\t\t\t\t\ttune.formatting.percmap = {};\n\t\t\t\t\ttune.formatting.percmap[percmap.key] = percmap.value;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"visualtranspose\":\n\t\t\t\tvar halfSteps = tokenizer.getInt(restOfString)\n\t\t\t\tif (halfSteps.digits === 0)\n\t\t\t\t\twarn(\"Expected number of half steps in visualTranspose\")\n\t\t\t\telse\n\t\t\t\t\tmultilineVars.globalTranspose = halfSteps.value\n\t\t\t\tbreak;\n\n\t\t\tcase \"map\":\n\t\t\tcase \"playtempo\":\n\t\t\tcase \"auquality\":\n\t\t\tcase \"continuous\":\n\t\t\tcase \"nobarcheck\":\n\t\t\t\t// TODO-PER: Actually handle the parameters of these\n\t\t\t\ttune.formatting[cmd] = restOfString;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn \"Unknown directive: \" + cmd;\n\t\t}\n\t\treturn null;\n\t};\n\tparseDirective.globalFormatting = function(formatHash) {\n\t\tfor (var cmd in formatHash) {\n\t\t\tif (formatHash.hasOwnProperty(cmd)) {\n\t\t\t\tvar value = ''+formatHash[cmd];\n\t\t\t\tvar tokens = tokenizer.tokenize(value, 0, value.length);\n\t\t\t\tvar scratch;\n\t\t\t\tswitch (cmd) {\n\t\t\t\t\tcase \"titlefont\":\n\t\t\t\t\tcase \"gchordfont\":\n\t\t\t\t\tcase \"composerfont\":\n\t\t\t\t\tcase \"footerfont\":\n\t\t\t\t\tcase \"headerfont\":\n\t\t\t\t\tcase \"historyfont\":\n\t\t\t\t\tcase \"infofont\":\n\t\t\t\t\tcase \"measurefont\":\n\t\t\t\t\tcase \"partsfont\":\n\t\t\t\t\tcase \"repeatfont\":\n\t\t\t\t\tcase \"subtitlefont\":\n\t\t\t\t\tcase \"tempofont\":\n\t\t\t\t\tcase \"textfont\":\n\t\t\t\t\tcase \"voicefont\":\n\t\t\t\t\tcase \"tripletfont\":\n\t\t\t\t\tcase \"vocalfont\":\n\t\t\t\t\tcase \"wordsfont\":\n\t\t\t\t\tcase \"annotationfont\":\n\t\t\t\t\tcase \"tablabelfont\":\n\t\t\t\t\tcase \"tabnumberfont\":\n\t\t\t\t\tcase \"tabgracefont\":\n\t\t\t\t\t\tgetChangingFont(cmd, tokens, value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"scale\":\n\t\t\t\t\t\tsetScale(cmd, tokens);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"partsbox\":\n\t\t\t\t\t\tscratch = addMultilineVarBool('partsBox', cmd, tokens);\n\t\t\t\t\t\tif (scratch !== null) warn(scratch);\n\t\t\t\t\t\tmultilineVars.partsfont.box = multilineVars.partsBox;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"freegchord\":\n\t\t\t\t\t\tscratch = addMultilineVarBool('freegchord', cmd, tokens);\n\t\t\t\t\t\tif (scratch !== null) warn(scratch);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"fontboxpadding\":\n\t\t\t\t\t\tif (tokens.length !== 1 || tokens[0].type !== 'number')\n\t\t\t\t\t\t\twarn(\"Directive \\\"\" + cmd + \"\\\" requires a number as a parameter.\");\n\t\t\t\t\t\ttune.formatting.fontboxpadding = tokens[0].floatt;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"stafftopmargin\":\n\t\t\t\t\t\tif (tokens.length !== 1 || tokens[0].type !== 'number')\n\t\t\t\t\t\t\twarn(\"Directive \\\"\" + cmd + \"\\\" requires a number as a parameter.\");\n\t\t\t\t\t\ttune.formatting.stafftopmargin = tokens[0].floatt;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"stretchlast\":\n\t\t\t\t\t\tvar sl = parseStretchLast(tokens);\n\t\t\t\t\t\tif (sl.value !== undefined)\n\t\t\t\t\t\t\ttune.formatting.stretchlast = sl.value;\n\t\t\t\t\t\tif (sl.error)\n\t\t\t\t\t\t\treturn sl.error;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\twarn(\"Formatting directive unrecognized: \", cmd, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction parseStretchLast(tokens) {\n\t\tif (tokens.length === 0)\n\t\t\treturn { value: 1 }; // if there is no value then the presence of this is the same as \"true\"\n\t\telse if (tokens.length === 1) {\n\t\t\tif (tokens[0].type === \"number\") {\n\t\t\t\tif (tokens[0].floatt >= 0 || tokens[0].floatt <= 1)\n\t\t\t\t\treturn {value: tokens[0].floatt};\n\t\t\t} else if (tokens[0].token === 'false') {\n\t\t\t\treturn { value: 0 };\n\t\t\t} else if (tokens[0].token === 'true') {\n\t\t\t\treturn {value: 1};\n\t\t\t}\n\t\t}\n\t\treturn { error: \"Directive stretchlast requires zero or one parameter: false, true, or number between 0 and 1 (received \" + tokens[0].token + ')' };\n\t}\n})();\n\nmodule.exports = parseDirective;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/parse/abc_parse_directive.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/parse/abc_parse_header.js":
/*!**********************************************************!*\
  !*** ./node_modules/abcjs/src/parse/abc_parse_header.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_parse_header.js: parses a the header fields from a string representing ABC Music Notation into a usable internal structure.\n\nvar parseCommon = __webpack_require__(/*! ./abc_common */ \"(ssr)/./node_modules/abcjs/src/parse/abc_common.js\");\nvar parseDirective = __webpack_require__(/*! ./abc_parse_directive */ \"(ssr)/./node_modules/abcjs/src/parse/abc_parse_directive.js\");\nvar parseKeyVoice = __webpack_require__(/*! ./abc_parse_key_voice */ \"(ssr)/./node_modules/abcjs/src/parse/abc_parse_key_voice.js\");\n\nvar ParseHeader = function(tokenizer, warn, multilineVars, tune, tuneBuilder) {\n\tthis.reset = function(tokenizer, warn, multilineVars, tune) {\n\t\tparseKeyVoice.initialize(tokenizer, warn, multilineVars, tune, tuneBuilder);\n\t\tparseDirective.initialize(tokenizer, warn, multilineVars, tune, tuneBuilder);\n\t};\n\tthis.reset(tokenizer, warn, multilineVars, tune);\n\n\tthis.setTitle = function(title, origSize) {\n\t\tif (multilineVars.hasMainTitle)\n\t\t\ttuneBuilder.addSubtitle(title, { startChar: multilineVars.iChar, endChar: multilineVars.iChar+origSize+2});\t// display secondary title\n\t\telse\n\t\t{\n\t\t\ttuneBuilder.addMetaText(\"title\", title, { startChar: multilineVars.iChar, endChar: multilineVars.iChar+origSize+2});\n\t\t\tmultilineVars.hasMainTitle = true;\n\t\t}\n\t};\n\n\tthis.setMeter = function(line) {\n\t\tline = tokenizer.stripComment(line);\n\t\tif (line === 'C') {\n\t\t\tif (multilineVars.havent_set_length === true) {\n\t\t\t\tmultilineVars.default_length = 0.125;\n\t\t\t\tmultilineVars.havent_set_length = false;\n\t\t\t}\n\t\t\treturn {type: 'common_time'};\n\t\t} else if (line === 'C|') {\n\t\t\tif (multilineVars.havent_set_length === true) {\n\t\t\t\tmultilineVars.default_length = 0.125;\n\t\t\t\tmultilineVars.havent_set_length = false;\n\t\t\t}\n\t\t\treturn {type: 'cut_time'};\n\t\t} else if (line === 'o') {\n\t\t\tif (multilineVars.havent_set_length === true) {\n\t\t\t\tmultilineVars.default_length = 0.125;\n\t\t\t\tmultilineVars.havent_set_length = false;\n\t\t\t}\n\t\t\treturn {type: 'tempus_perfectum'};\n\t\t} else if (line === 'c') {\n\t\t\tif (multilineVars.havent_set_length === true) {\n\t\t\t\tmultilineVars.default_length = 0.125;\n\t\t\t\tmultilineVars.havent_set_length = false;\n\t\t\t}\n\t\t\treturn {type: 'tempus_imperfectum'};\n\t\t} else if (line === 'o.') {\n\t\t\tif (multilineVars.havent_set_length === true) {\n\t\t\t\tmultilineVars.default_length = 0.125;\n\t\t\t\tmultilineVars.havent_set_length = false;\n\t\t\t}\n\t\t\treturn {type: 'tempus_perfectum_prolatio'};\n\t\t} else if (line === 'c.') {\n\t\t\tif (multilineVars.havent_set_length === true) {\n\t\t\t\tmultilineVars.default_length = 0.125;\n\t\t\t\tmultilineVars.havent_set_length = false;\n\t\t\t}\n\t\t\treturn {type: 'tempus_imperfectum_prolatio'};\n\t\t} else if (line.length === 0 || line.toLowerCase() === 'none') {\n\t\t\tif (multilineVars.havent_set_length === true) {\n\t\t\t\tmultilineVars.default_length = 0.125;\n\t\t\t\tmultilineVars.havent_set_length = false;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar tokens = tokenizer.tokenize(line, 0, line.length);\n\t\t\t// the form is [open_paren] decimal [ plus|dot decimal ]... [close_paren] slash decimal [plus same_as_before]\n\t\t\ttry {\n\t\t\t\tvar parseNum = function() {\n\t\t\t\t\t// handles this much: [open_paren] decimal [ plus|dot decimal ]... [close_paren]\n\t\t\t\t\tvar ret = {value: 0, num: \"\"};\n\n\t\t\t\t\tvar tok = tokens.shift();\n\t\t\t\t\tif (tok.token === '(')\n\t\t\t\t\t\ttok = tokens.shift();\n\t\t\t\t\twhile (1) {\n\t\t\t\t\t\tif (tok.type !== 'number') throw \"Expected top number of meter\";\n\t\t\t\t\t\tret.value += parseInt(tok.token);\n\t\t\t\t\t\tret.num += tok.token;\n\t\t\t\t\t\tif (tokens.length === 0 || tokens[0].token === '/') return ret;\n\t\t\t\t\t\ttok = tokens.shift();\n\t\t\t\t\t\tif (tok.token === ')') {\n\t\t\t\t\t\t\tif (tokens.length === 0 || tokens[0].token === '/') return ret;\n\t\t\t\t\t\t\tthrow \"Unexpected paren in meter\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tok.token !== '.' && tok.token !== '+') throw \"Expected top number of meter\";\n\t\t\t\t\t\tret.num += tok.token;\n\t\t\t\t\t\tif (tokens.length === 0) throw \"Expected top number of meter\";\n\t\t\t\t\t\ttok = tokens.shift();\n\t\t\t\t\t}\n\t\t\t\t\treturn ret;\t// just to suppress warning\n\t\t\t\t};\n\n\t\t\t\tvar parseFraction = function() {\n\t\t\t\t\t// handles this much: parseNum slash decimal\n\t\t\t\t\tvar ret = parseNum();\n\t\t\t\t\tif (tokens.length === 0) return ret;\n\t\t\t\t\tvar tok = tokens.shift();\n\t\t\t\t\tif (tok.token !== '/') throw \"Expected slash in meter\";\n\t\t\t\t\ttok = tokens.shift();\n\t\t\t\t\tif (tok.type !== 'number') throw \"Expected bottom number of meter\";\n\t\t\t\t\tret.den = tok.token;\n\t\t\t\t\tret.value = ret.value / parseInt(ret.den);\n\t\t\t\t\treturn ret;\n\t\t\t\t};\n\n\t\t\t\tif (tokens.length === 0) throw \"Expected meter definition in M: line\";\n\t\t\t\tvar meter = {type: 'specified', value: [ ]};\n\t\t\t\tvar totalLength = 0;\n\t\t\t\twhile (1) {\n\t\t\t\t\tvar ret = parseFraction();\n\t\t\t\t\ttotalLength += ret.value;\n\t\t\t\t\tvar mv = { num: ret.num };\n\t\t\t\t\tif (ret.den !== undefined)\n\t\t\t\t\t\tmv.den = ret.den;\n\t\t\t\t\tmeter.value.push(mv);\n\t\t\t\t\tif (tokens.length === 0) break;\n\t\t\t\t\t//var tok = tokens.shift();\n\t\t\t\t\t//if (tok.token !== '+') throw \"Extra characters in M: line\";\n\t\t\t\t}\n\n\t\t\t\tif (multilineVars.havent_set_length === true) {\n\t\t\t\t\tmultilineVars.default_length = totalLength < 0.75 ? 0.0625 : 0.125;\n\t\t\t\t\tmultilineVars.havent_set_length = false;\n\t\t\t\t}\n\t\t\t\treturn meter;\n\t\t\t} catch (e) {\n\t\t\t\twarn(e, line, 0);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tthis.calcTempo = function(relTempo) {\n\t\tvar dur = 1/4;\n\t\tif (multilineVars.meter && multilineVars.meter.type === 'specified') {\n\t\t\tdur = 1 / parseInt(multilineVars.meter.value[0].den);\n\t\t} else if (multilineVars.origMeter && multilineVars.origMeter.type === 'specified') {\n\t\t\tdur = 1 / parseInt(multilineVars.origMeter.value[0].den);\n\t\t}\n\t\t//var dur = multilineVars.default_length ? multilineVars.default_length : 1;\n\t\tfor (var i = 0; i < relTempo.duration; i++)\n\t\t\trelTempo.duration[i] = dur * relTempo.duration[i];\n\t\treturn relTempo;\n\t};\n\n\tthis.resolveTempo = function() {\n\t\tif (multilineVars.tempo) {\t// If there's a tempo waiting to be resolved\n\t\t\tthis.calcTempo(multilineVars.tempo);\n\t\t\ttune.metaText.tempo = multilineVars.tempo;\n\t\t\tdelete multilineVars.tempo;\n\t\t}\n\t};\n\n\tthis.addUserDefinition = function(line, start, end) {\n\t\tvar equals = line.indexOf('=', start);\n\t\tif (equals === -1) {\n\t\t\twarn(\"Need an = in a macro definition\", line, start);\n\t\t\treturn;\n\t\t}\n\n\t\tvar before = parseCommon.strip(line.substring(start, equals));\n\t\tvar after = parseCommon.strip(line.substring(equals+1));\n\n\t\tif (before.length !== 1) {\n\t\t\twarn(\"Macro definitions can only be one character\", line, start);\n\t\t\treturn;\n\t\t}\n\t\tvar legalChars = \"HIJKLMNOPQRSTUVWXYhijklmnopqrstuvw~\";\n\t\tif (legalChars.indexOf(before) === -1) {\n\t\t\twarn(\"Macro definitions must be H-Y, h-w, or tilde\", line, start);\n\t\t\treturn;\n\t\t}\n\t\tif (after.length === 0) {\n\t\t\twarn(\"Missing macro definition\", line, start);\n\t\t\treturn;\n\t\t}\n\t\tif (multilineVars.macros === undefined)\n\t\t\tmultilineVars.macros = {};\n\t\tmultilineVars.macros[before] = after;\n\t};\n\n\tthis.setDefaultLength = function(line, start, end) {\n\t\tvar len = line.substring(start, end).replace(/ /g, \"\");\n\t\tvar len_arr = len.split('/');\n\t\tif (len_arr.length === 2) {\n\t\t\tvar n = parseInt(len_arr[0]);\n\t\t\tvar d = parseInt(len_arr[1]);\n\t\t\tif (d > 0) {\n\t\t\t\tmultilineVars.default_length = n / d;\t// a whole note is 1\n\t\t\t\tmultilineVars.havent_set_length = false;\n\t\t\t}\n\t\t} else if (len_arr.length === 1 && len_arr[0] === '1') {\n\t\t\tmultilineVars.default_length = 1;\n\t\t\tmultilineVars.havent_set_length = false;\n\t\t}\n\t};\n\n\n\tvar tempoString = {\n\n\t\tlarghissimo: 20,\n\t\tadagissimo: 24,\n\t\tsostenuto: 28,\n\t\tgrave: 32,\n\t\tlargo: 40,\n\t\tlento: 50,\n\t\tlarghetto: 60,\n\t\tadagio: 68,\n\t\tadagietto: 74,\n\t\tandante: 80,\n\t\tandantino: 88,\n\t\t\"marcia moderato\": 84,\n\t\t\"andante moderato\": 100,\n\t\tmoderato: 112,\n\t\tallegretto: 116,\n\t\t\"allegro moderato\": 120,\n\t\tallegro: 126,\n\t\tanimato: 132,\n\t\tagitato: 140,\n\t\tveloce: 148,\n\t\t\"mosso vivo\": 156,\n\t\tvivace: 164,\n\t\tvivacissimo: 172,\n\t\tallegrissimo: 176,\n\t\tpresto: 184,\n\t\tprestissimo: 210,\n\t};\n\n\tthis.setTempo = function(line, start, end, iChar) {\n\t\t//Q - tempo; can be used to specify the notes per minute, e.g. If\n\t\t//the meter denominator is a 4 note then Q:120 or Q:C=120\n\t\t//is 120 quarter notes per minute. Similarly  Q:C3=40 would be 40\n\t\t//dotted half notes per minute. An absolute tempo may also be\n\t\t//set, e.g. Q:1/8=120 is 120 eighth notes per minute,\n\t\t//irrespective of the meter's denominator.\n\t\t//\n\t\t// This is either a number, \"C=number\", \"Cnumber=number\", or fraction [fraction...]=number\n\t\t// It depends on the M: field, which may either not be present, or may appear after this.\n\t\t// If M: is not present, an eighth note is used.\n\t\t// That means that this field can't be calculated until the end, if it is the first three types, since we don't know if we'll see an M: field.\n\t\t// So, if it is the fourth type, set it here, otherwise, save the info in the multilineVars.\n\t\t// The temporary variables we keep are the duration and the bpm. In the first two forms, the duration is 1.\n\t\t// In addition, a quoted string may both precede and follow. If a quoted string is present, then the duration part is optional.\n\t\ttry {\n\t\t\tvar tokens = tokenizer.tokenize(line, start, end);\n\n\t\t\tif (tokens.length === 0) throw \"Missing parameter in Q: field\";\n\n\t\t\tvar tempo = { startChar: iChar+start-2, endChar: iChar+end };\n\t\t\tvar delaySet = true;\n\t\t\tvar token = tokens.shift();\n\t\t\tif (token.type === 'quote') {\n\t\t\t\ttempo.preString = token.token;\n\t\t\t\ttoken = tokens.shift();\n\t\t\t\tif (tokens.length === 0) {\t// It's ok to just get a string for the tempo\n\t\t\t\t\t// If the string is a well-known tempo, put in the bpm\n\t\t\t\t\tif (tempoString[tempo.preString.toLowerCase()]) {\n\t\t\t\t\t\ttempo.bpm = tempoString[tempo.preString.toLowerCase()];\n\t\t\t\t\t\ttempo.suppressBpm = true;\n\t\t\t\t\t}\n\t\t\t\t\treturn {type: 'immediate', tempo: tempo};\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (token.type === 'alpha' && token.token === 'C')\t { // either type 2 or type 3\n\t\t\t\tif (tokens.length === 0) throw \"Missing tempo after C in Q: field\";\n\t\t\t\ttoken = tokens.shift();\n\t\t\t\tif (token.type === 'punct' && token.token === '=') {\n\t\t\t\t\t// This is a type 2 format. The duration is an implied 1\n\t\t\t\t\tif (tokens.length === 0) throw \"Missing tempo after = in Q: field\";\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.type !== 'number') throw \"Expected number after = in Q: field\";\n\t\t\t\t\ttempo.duration = [1];\n\t\t\t\t\ttempo.bpm = parseInt(token.token);\n\t\t\t\t} else if (token.type === 'number') {\n\t\t\t\t\t// This is a type 3 format.\n\t\t\t\t\ttempo.duration = [parseInt(token.token)];\n\t\t\t\t\tif (tokens.length === 0) throw \"Missing = after duration in Q: field\";\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.type !== 'punct' || token.token !== '=') throw \"Expected = after duration in Q: field\";\n\t\t\t\t\tif (tokens.length === 0) throw \"Missing tempo after = in Q: field\";\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.type !== 'number') throw \"Expected number after = in Q: field\";\n\t\t\t\t\ttempo.bpm = parseInt(token.token);\n\t\t\t\t} else throw \"Expected number or equal after C in Q: field\";\n\n\t\t\t} else if (token.type === 'number') {\t// either type 1 or type 4\n\t\t\t\tvar num = parseInt(token.token);\n\t\t\t\tif (tokens.length === 0 || tokens[0].type === 'quote') {\n\t\t\t\t\t// This is type 1\n\t\t\t\t\ttempo.duration = [1];\n\t\t\t\t\ttempo.bpm = num;\n\t\t\t\t} else {\t// This is type 4\n\t\t\t\t\tdelaySet = false;\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.type !== 'punct' && token.token !== '/') throw \"Expected fraction in Q: field\";\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.type !== 'number') throw \"Expected fraction in Q: field\";\n\t\t\t\t\tvar den = parseInt(token.token);\n\t\t\t\t\ttempo.duration = [num/den];\n\t\t\t\t\t// We got the first fraction, keep getting more as long as we find them.\n\t\t\t\t\twhile (tokens.length > 0  && tokens[0].token !== '=' && tokens[0].type !== 'quote') {\n\t\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\t\tif (token.type !== 'number') throw \"Expected fraction in Q: field\";\n\t\t\t\t\t\tnum = parseInt(token.token);\n\t\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\t\tif (token.type !== 'punct' && token.token !== '/') throw \"Expected fraction in Q: field\";\n\t\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\t\tif (token.type !== 'number') throw \"Expected fraction in Q: field\";\n\t\t\t\t\t\tden = parseInt(token.token);\n\t\t\t\t\t\ttempo.duration.push(num/den);\n\t\t\t\t\t}\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.type !== 'punct' && token.token !== '=') throw \"Expected = in Q: field\";\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.type !== 'number') throw \"Expected tempo in Q: field\";\n\t\t\t\t\ttempo.bpm = parseInt(token.token);\n\t\t\t\t}\n\t\t\t} else throw \"Unknown value in Q: field\";\n\t\t\tif (tokens.length !== 0) {\n\t\t\t\ttoken = tokens.shift();\n\t\t\t\tif (token.type === 'quote') {\n\t\t\t\t\ttempo.postString = token.token;\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t}\n\t\t\t\tif (tokens.length !== 0) throw \"Unexpected string at end of Q: field\";\n\t\t\t}\n\t\t\tif (multilineVars.printTempo === false)\n\t\t\t\ttempo.suppress = true;\n\t\t\treturn {type: delaySet?'delaySet':'immediate', tempo: tempo};\n\t\t} catch (msg) {\n\t\t\twarn(msg, line, start);\n\t\t\treturn {type: 'none'};\n\t\t}\n\t};\n\n\tthis.letter_to_inline_header = function(line, i, startLine)\n\t{\n\t\tvar needsNewLine = false\n\t\tvar ws = tokenizer.eatWhiteSpace(line, i);\n\t\ti +=ws;\n\t\tif (line.length >= i+5 && line[i] === '[' && line[i+2] === ':') {\n\t\t\tvar e = line.indexOf(']', i);\n\t\t\tvar startChar = multilineVars.iChar + i;\n\t\t\tvar endChar = multilineVars.iChar + e + 1;\n\t\t\tswitch(line.substring(i, i+3))\n\t\t\t{\n\t\t\t\tcase \"[I:\":\n\t\t\t\t\tvar err = parseDirective.addDirective(line.substring(i+3, e));\n\t\t\t\t\tif (err) warn(err, line, i);\n\t\t\t\t\treturn [ e-i+1+ws ];\n\t\t\t\tcase \"[M:\":\n\t\t\t\t\tvar meter = this.setMeter(line.substring(i+3, e));\n\t\t\t\t\tif (tuneBuilder.hasBeginMusic() && meter)\n\t\t\t\t\t\ttuneBuilder.appendStartingElement('meter', startChar, endChar, meter);\n\t\t\t\t\telse\n\t\t\t\t\t\tmultilineVars.meter = meter;\n\t\t\t\t\treturn [ e-i+1+ws ];\n\t\t\t\tcase \"[K:\":\n\t\t\t\t\tvar result = parseKeyVoice.parseKey(line.substring(i+3, e), true);\n\t\t\t\t\tif (result.foundClef && tuneBuilder.hasBeginMusic())\n\t\t\t\t\t\ttuneBuilder.appendStartingElement('clef', startChar, endChar, multilineVars.clef);\n\t\t\t\t\tif (result.foundKey && tuneBuilder.hasBeginMusic())\n\t\t\t\t\t\ttuneBuilder.appendStartingElement('key', startChar, endChar, parseKeyVoice.fixKey(multilineVars.clef, multilineVars.key));\n\t\t\t\t\treturn [ e-i+1+ws ];\n\t\t\t\tcase \"[P:\":\n\t\t\t\t\tvar part = parseDirective.parseFontChangeLine(line.substring(i+3, e))\n\t\t\t\t\tif (startLine || tune.lines.length <= tune.lineNum)\n\t\t\t\t\t\tmultilineVars.partForNextLine = { title: part, startChar: startChar, endChar: endChar };\n\t\t\t\t\telse\n\t\t\t\t\t\ttuneBuilder.appendElement('part', startChar, endChar, {title: part});\n\t\t\t\t\treturn [ e-i+1+ws ];\n\t\t\t\tcase \"[L:\":\n\t\t\t\t\tthis.setDefaultLength(line, i+3, e);\n\t\t\t\t\treturn [ e-i+1+ws ];\n\t\t\t\tcase \"[Q:\":\n\t\t\t\t\tif (e > 0) {\n\t\t\t\t\t\tvar tempo = this.setTempo(line, i+3, e, multilineVars.iChar);\n\t\t\t\t\t\tif (tempo.type === 'delaySet') {\n\t\t\t\t\t\t\tif (tuneBuilder.hasBeginMusic())\n\t\t\t\t\t\t\t\ttuneBuilder.appendElement('tempo', startChar, endChar, this.calcTempo(tempo.tempo));\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tmultilineVars.tempoForNextLine = ['tempo', startChar, endChar, this.calcTempo(tempo.tempo)]\n\t\t\t\t\t\t} else if (tempo.type === 'immediate') {\n\t\t\t\t\t\t\tif (!startLine && tuneBuilder.hasBeginMusic())\n\t\t\t\t\t\t\t\ttuneBuilder.appendElement('tempo', startChar, endChar, tempo.tempo);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tmultilineVars.tempoForNextLine = ['tempo', startChar, endChar, tempo.tempo]\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn [ e-i+1+ws, line[i+1], line.substring(i+3, e)];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"[V:\":\n\t\t\t\t\tif (e > 0) {\n\t\t\t\t\t\tneedsNewLine = parseKeyVoice.parseVoice(line, i+3, e);\n\t\t\t\t\t\t//startNewLine();\n\t\t\t\t\t\treturn [ e-i+1+ws, line[i+1], line.substring(i+3, e), needsNewLine];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"[r:\":\n\t\t\t\t\treturn [ e-i+1+ws ];\n\n\t\t\t\tdefault:\n\t\t\t\t\t// TODO: complain about unhandled header\n\t\t\t}\n\t\t}\n\t\treturn [ 0 ];\n\t};\n\n\tthis.letter_to_body_header = function(line, i)\n\t{\n\t\tvar needsNewLine = false\n\t\tif (line.length >= i+3) {\n\t\t\tswitch(line.substring(i, i+2))\n\t\t\t{\n\t\t\t\tcase \"I:\":\n\t\t\t\t\tvar err = parseDirective.addDirective(line.substring(i+2));\n\t\t\t\t\tif (err) warn(err, line, i);\n\t\t\t\t\treturn [ line.length ];\n\t\t\t\tcase \"M:\":\n\t\t\t\t\tvar meter = this.setMeter(line.substring(i+2));\n\t\t\t\t\tif (tuneBuilder.hasBeginMusic() && meter)\n\t\t\t\t\t\ttuneBuilder.appendStartingElement('meter', multilineVars.iChar + i, multilineVars.iChar + line.length, meter);\n\t\t\t\t\treturn [ line.length ];\n\t\t\t\tcase \"K:\":\n\t\t\t\t\tvar result = parseKeyVoice.parseKey(line.substring(i+2), tuneBuilder.hasBeginMusic());\n\t\t\t\t\tif (result.foundClef && tuneBuilder.hasBeginMusic() && multilineVars.keywarn !== false)\n\t\t\t\t\t\ttuneBuilder.appendStartingElement('clef', multilineVars.iChar + i, multilineVars.iChar + line.length, multilineVars.clef);\n\t\t\t\t\tif (result.foundKey && tuneBuilder.hasBeginMusic() && multilineVars.keywarn !== false)\n\t\t\t\t\t\ttuneBuilder.appendStartingElement('key', multilineVars.iChar + i, multilineVars.iChar + line.length, parseKeyVoice.fixKey(multilineVars.clef, multilineVars.key));\n\t\t\t\t\treturn [ line.length ];\n\t\t\t\tcase \"P:\":\n\t\t\t\t\tif (tuneBuilder.hasBeginMusic())\n\t\t\t\t\t\ttuneBuilder.appendElement('part', multilineVars.iChar + i, multilineVars.iChar + line.length, {title: line.substring(i+2)});\n\t\t\t\t\treturn [ line.length ];\n\t\t\t\tcase \"L:\":\n\t\t\t\t\tthis.setDefaultLength(line, i+2, line.length);\n\t\t\t\t\treturn [ line.length ];\n\t\t\t\tcase \"Q:\":\n\t\t\t\t\tvar e = line.indexOf('\\x12', i+2);\n\t\t\t\t\tif (e === -1) e = line.length;\n\t\t\t\t\tvar tempo = this.setTempo(line, i+2, e, multilineVars.iChar);\n\t\t\t\t\tif (tempo.type === 'delaySet') tuneBuilder.appendElement('tempo', multilineVars.iChar + i, multilineVars.iChar + line.length, this.calcTempo(tempo.tempo));\n\t\t\t\t\telse if (tempo.type === 'immediate') tuneBuilder.appendElement('tempo', multilineVars.iChar + i, multilineVars.iChar + line.length, tempo.tempo);\n\t\t\t\treturn [ e, line[i], parseCommon.strip(line.substring(i+2))];\n\t\t\t\tcase \"V:\":\n\t\t\t\t\tneedsNewLine = parseKeyVoice.parseVoice(line, i+2, line.length);\n//\t\t\t\t\t\tstartNewLine();\n\t\t\t\t\treturn [ line.length, line[i], parseCommon.strip(line.substring(i+2)), needsNewLine];\n\t\t\t\tdefault:\n\t\t\t\t\t// TODO: complain about unhandled header\n\t\t\t}\n\t\t}\n\t\treturn [ 0 ];\n\t};\n\n\tvar metaTextHeaders = {\n\t\tA: 'author',\n\t\tB: 'book',\n\t\tC: 'composer',\n\t\tD: 'discography',\n\t\tF: 'url',\n\t\tG: 'group',\n\t\tI: 'instruction',\n\t\tN: 'notes',\n\t\tO: 'origin',\n\t\tR: 'rhythm',\n\t\tS: 'source',\n\t\tW: 'unalignedWords',\n\t\tZ: 'transcription'\n\t};\n\n\tthis.parseHeader = function(line) {\n\t\tvar field = metaTextHeaders[line[0]];\n\t\tvar origSize = line.length-2\n\t\tvar restOfLine = tokenizer.translateString(tokenizer.stripComment(line.substring(2)))\n\t\tif (field === 'unalignedWords' || field === 'notes') {\n\t\t\t// These fields can be multi-line\n\t\t\ttuneBuilder.addMetaTextArray(field, parseDirective.parseFontChangeLine(restOfLine), { startChar: multilineVars.iChar, endChar: multilineVars.iChar+line.length});\n\t\t} else if (field !== undefined) {\n\t\t\t// these fields are single line\n\t\t\ttuneBuilder.addMetaText(field, parseDirective.parseFontChangeLine(restOfLine), { startChar: multilineVars.iChar, endChar: multilineVars.iChar+line.length});\n\t\t} else {\n\t\t\tvar startChar = multilineVars.iChar;\n\t\t\tvar endChar = startChar + line.length;\n\t\t\tswitch(line[0])\n\t\t\t{\n\t\t\t\tcase  'H':\n\t\t\t\t\t// History is a little different because once it starts it continues until another header field is encountered\n\t\t\t\t\ttuneBuilder.addMetaTextArray(\"history\", parseDirective.parseFontChangeLine(restOfLine), { startChar: multilineVars.iChar, endChar: multilineVars.iChar+line.length});\n\t\t\t\t\tline = tokenizer.peekLine()\n\t\t\t\t\twhile (line && line[1] !== ':') {\n\t\t\t\t\t\ttokenizer.nextLine()\n\t\t\t\t\t\ttuneBuilder.addMetaTextArray(\"history\", parseDirective.parseFontChangeLine(tokenizer.translateString(tokenizer.stripComment(line))), { startChar: multilineVars.iChar, endChar: multilineVars.iChar+line.length});\n\t\t\t\t\t\tline = tokenizer.peekLine()\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase  'K':\n\t\t\t\t\t// since the key is the last thing that can happen in the header, we can resolve the tempo now\n\t\t\t\t\tthis.resolveTempo();\n\t\t\t\t\tvar result = parseKeyVoice.parseKey(line.substring(2), false);\n\t\t\t\t\tif (!multilineVars.is_in_header && tuneBuilder.hasBeginMusic() && multilineVars.keywarn !== false) {\n\t\t\t\t\t\tif (result.foundClef)\n\t\t\t\t\t\t\ttuneBuilder.appendStartingElement('clef', startChar, endChar, multilineVars.clef);\n\t\t\t\t\t\tif (result.foundKey)\n\t\t\t\t\t\t\ttuneBuilder.appendStartingElement('key', startChar, endChar, parseKeyVoice.fixKey(multilineVars.clef, multilineVars.key));\n\t\t\t\t\t}\n\t\t\t\t\tmultilineVars.is_in_header = false;\t// The first key signifies the end of the header.\n\t\t\t\t\tbreak;\n\t\t\t\tcase  'L':\n\t\t\t\t\tthis.setDefaultLength(line, 2, line.length);\n\t\t\t\t\tbreak;\n\t\t\t\tcase  'M':\n\t\t\t\t\tmultilineVars.origMeter = multilineVars.meter = this.setMeter(line.substring(2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase  'P':\n\t\t\t\t\t// TODO-PER: There is more to do with parts, but the writer doesn't care.\n\t\t\t\t\tif (multilineVars.is_in_header)\n\t\t\t\t\t\ttuneBuilder.addMetaText(\"partOrder\", parseDirective.parseFontChangeLine(restOfLine), { startChar: multilineVars.iChar, endChar: multilineVars.iChar+line.length});\n\t\t\t\t\telse\n\t\t\t\t\t\tmultilineVars.partForNextLine = { title: restOfLine, startChar: startChar, endChar: endChar};\n\t\t\t\t\tbreak;\n\t\t\t\tcase  'Q':\n\t\t\t\t\tvar tempo = this.setTempo(line, 2, line.length, multilineVars.iChar);\n\t\t\t\t\tif (tempo.type === 'delaySet') multilineVars.tempo = tempo.tempo;\n\t\t\t\t\telse if (tempo.type === 'immediate') {\n\t\t\t\t\t\tif (!tune.metaText.tempo)\n\t\t\t\t\t\t\ttune.metaText.tempo = tempo.tempo;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tmultilineVars.tempoForNextLine = ['tempo', startChar, endChar, tempo.tempo]\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase  'T':\n\t\t\t\t\tif (multilineVars.titlecaps)\n\t\t\t\t\t\trestOfLine = restOfLine.toUpperCase();\t\t\n\t\t\t\t\tthis.setTitle(parseDirective.parseFontChangeLine(tokenizer.theReverser(restOfLine)), origSize);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'U':\n\t\t\t\t\tthis.addUserDefinition(line, 2, line.length);\n\t\t\t\t\tbreak;\n\t\t\t\tcase  'V':\n\t\t\t\t\tparseKeyVoice.parseVoice(line, 2, line.length);\n\t\t\t\t\tif (!multilineVars.is_in_header)\n\t\t\t\t\t\treturn {newline: true};\n\t\t\t\t\tbreak;\n\t\t\t\tcase  's':\n\t\t\t\t\treturn {symbols: true};\n\t\t\t\tcase  'w':\n\t\t\t\t\treturn {words: true};\n\t\t\t\tcase 'X':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'E':\n\t\t\t\tcase 'm':\n\t\t\t\t\twarn(\"Ignored header\", line, 0);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn {regular: true};\n\t\t\t}\n\t\t}\n\t\treturn {};\n\t};\n};\n\nmodule.exports = ParseHeader;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/parse/abc_parse_header.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/parse/abc_parse_key_voice.js":
/*!*************************************************************!*\
  !*** ./node_modules/abcjs/src/parse/abc_parse_key_voice.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var parseDirective = __webpack_require__(/*! ./abc_parse_directive */ \"(ssr)/./node_modules/abcjs/src/parse/abc_parse_directive.js\");\nvar transpose = __webpack_require__(/*! ./abc_transpose */ \"(ssr)/./node_modules/abcjs/src/parse/abc_transpose.js\");\n\nvar parseKeyVoice = {};\n\n(function() {\n\tvar tokenizer;\n\tvar warn;\n\tvar multilineVars;\n\tvar tune;\n\tvar tuneBuilder;\n\tparseKeyVoice.initialize = function(tokenizer_, warn_, multilineVars_, tune_, tuneBuilder_) {\n\t\ttokenizer = tokenizer_;\n\t\twarn = warn_;\n\t\tmultilineVars = multilineVars_;\n\t\ttune = tune_;\n\t\ttuneBuilder = tuneBuilder_;\n\t};\n\n\tparseKeyVoice.standardKey = function(keyName, root, acc, localTranspose) {\n\t\treturn transpose.keySignature(multilineVars, keyName, root, acc, localTranspose);\n\t};\n\n\tvar clefLines = {\n\t\t'treble': { clef: 'treble', pitch: 4, mid: 0 },\n\t\t'treble+8': { clef: 'treble+8', pitch: 4, mid: 0 },\n\t\t'treble-8': { clef: 'treble-8', pitch: 4, mid: 0 },\n\t\t'treble^8': { clef: 'treble+8', pitch: 4, mid: 0 },\n\t\t'treble_8': { clef: 'treble-8', pitch: 4, mid: 0 },\n\t\t'treble1': { clef: 'treble', pitch: 2, mid: 2 },\n\t\t'treble2': { clef: 'treble', pitch: 4, mid: 0 },\n\t\t'treble3': { clef: 'treble', pitch: 6, mid: -2 },\n\t\t'treble4': { clef: 'treble', pitch: 8, mid: -4 },\n\t\t'treble5': { clef: 'treble', pitch: 10, mid: -6 },\n\t\t'perc': { clef: 'perc', pitch: 6, mid: 0 },\n\t\t'none': { clef: 'none', mid: 0 },\n\t\t'bass': { clef: 'bass', pitch: 8, mid: -12 },\n\t\t'bass+8': { clef: 'bass+8', pitch: 8, mid: -12 },\n\t\t'bass-8': { clef: 'bass-8', pitch: 8, mid: -12 },\n\t\t'bass^8': { clef: 'bass+8', pitch: 8, mid: -12 },\n\t\t'bass_8': { clef: 'bass-8', pitch: 8, mid: -12 },\n\t\t'bass+16': { clef: 'bass', pitch: 8, mid: -12 },\n\t\t'bass-16': { clef: 'bass', pitch: 8, mid: -12 },\n\t\t'bass^16': { clef: 'bass', pitch: 8, mid: -12 },\n\t\t'bass_16': { clef: 'bass', pitch: 8, mid: -12 },\n\t\t'bass1': { clef: 'bass', pitch: 2, mid: -6 },\n\t\t'bass2': { clef: 'bass', pitch: 4, mid: -8 },\n\t\t'bass3': { clef: 'bass', pitch: 6, mid: -10 },\n\t\t'bass4': { clef: 'bass', pitch: 8, mid: -12 },\n\t\t'bass5': { clef: 'bass', pitch: 10, mid: -14 },\n\t\t'tenor': { clef: 'alto', pitch: 8, mid: -8 },\n\t\t'tenor1': { clef: 'alto', pitch: 2, mid: -2 },\n\t\t'tenor2': { clef: 'alto', pitch: 4, mid: -4 },\n\t\t'tenor3': { clef: 'alto', pitch: 6, mid: -6 },\n\t\t'tenor4': { clef: 'alto', pitch: 8, mid: -8 },\n\t\t'tenor5': { clef: 'alto', pitch: 10, mid: -10 },\n\t\t'alto': { clef: 'alto', pitch: 6, mid: -6 },\n\t\t'alto1': { clef: 'alto', pitch: 2, mid: -2 },\n\t\t'alto2': { clef: 'alto', pitch: 4, mid: -4 },\n\t\t'alto3': { clef: 'alto', pitch: 6, mid: -6 },\n\t\t'alto4': { clef: 'alto', pitch: 8, mid: -8 },\n\t\t'alto5': { clef: 'alto', pitch: 10, mid: -10 },\n\t\t'alto+8': { clef: 'alto+8', pitch: 6, mid: -6 },\n\t\t'alto-8': { clef: 'alto-8', pitch: 6, mid: -6 },\n\t\t'alto^8': { clef: 'alto+8', pitch: 6, mid: -6 },\n\t\t'alto_8': { clef: 'alto-8', pitch: 6, mid: -6 }\n\t};\n\n\tvar calcMiddle = function(clef, oct) {\n\t\tvar value = clefLines[clef];\n\t\tvar mid = value ? value.mid : 0;\n\t\treturn mid+oct;\n\t};\n\n\tparseKeyVoice.fixClef = function(clef) {\n\t\tvar value = clefLines[clef.type];\n\t\tif (value) {\n\t\t\tclef.clefPos = value.pitch;\n\t\t\tclef.type = value.clef;\n\t\t}\n\t};\n\n\tparseKeyVoice.deepCopyKey = function(key) {\n\t\tvar ret = { accidentals: [], root: key.root, acc: key.acc, mode: key.mode };\n\t\tkey.accidentals.forEach(function(k) {\n\t\tret.accidentals.push(Object.assign({},k));\n\t\t});\n\t\treturn ret;\n\t};\n\n\tvar pitches = {A: 5, B: 6, C: 0, D: 1, E: 2, F: 3, G: 4, a: 12, b: 13, c: 7, d: 8, e: 9, f: 10, g: 11};\n\n\tparseKeyVoice.addPosToKey = function(clef, key) {\n\t\t// Shift the key signature from the treble positions to whatever position is needed for the clef.\n\t\t// This may put the key signature unnaturally high or low, so if it does, then shift it.\n\t\tvar mid = clef.verticalPos;\n\t\tkey.accidentals.forEach(function(acc) {\n\t\t\tvar pitch = pitches[acc.note];\n\t\t\tpitch = pitch - mid;\n\t\t\tacc.verticalPos = pitch;\n\t\t});\n\t\tif (key.impliedNaturals)\n\t\t\tkey.impliedNaturals.forEach(function(acc) {\n\t\t\t\tvar pitch = pitches[acc.note];\n\t\t\t\tpitch = pitch - mid;\n\t\t\t\tacc.verticalPos = pitch;\n\t\t\t});\n\n\t\tif (mid < -10) {\n\t\t\tkey.accidentals.forEach(function(acc) {\n\t\t\t\tacc.verticalPos -= 7;\n\t\t\t\tif (acc.verticalPos >= 11 || (acc.verticalPos === 10 && acc.acc === 'flat'))\n\t\t\t\t\tacc.verticalPos -= 7;\n\t\t\t\tif (acc.note === 'A' && acc.acc === 'sharp' )\n\t\t\t\t\tacc.verticalPos -=7;\n\t\t\t\tif ((acc.note === 'G' || acc.note === 'F') && acc.acc === 'flat' )\n\t\t\t\t\tacc.verticalPos -=7;\n\t\t\t});\n\t\t\tif (key.impliedNaturals)\n\t\t\t\tkey.impliedNaturals.forEach(function(acc) {\n\t\t\t\t\tacc.verticalPos -= 7;\n\t\t\t\t\tif (acc.verticalPos >= 11 || (acc.verticalPos === 10 && acc.acc === 'flat'))\n\t\t\t\t\t\tacc.verticalPos -= 7;\n\t\t\t\t\tif (acc.note === 'A' && acc.acc === 'sharp' )\n\t\t\t\t\t\tacc.verticalPos -=7;\n\t\t\t\t\tif ((acc.note === 'G' || acc.note === 'F') && acc.acc === 'flat' )\n\t\t\t\t\t\tacc.verticalPos -=7;\n\t\t\t\t});\n\t\t} else if (mid < -4) {\n\t\t\tkey.accidentals.forEach(function(acc) {\n\t\t\t\tacc.verticalPos -= 7;\n\t\t\t\tif (mid === -8 && (acc.note === 'f' || acc.note === 'g') && acc.acc === 'sharp' )\n\t\t\t\t\tacc.verticalPos -=7;\n\t\t\t});\n\t\t\tif (key.impliedNaturals)\n\t\t\t\tkey.impliedNaturals.forEach(function(acc) {\n\t\t\t\t\tacc.verticalPos -= 7;\n\t\t\t\t\tif (mid === -8 && (acc.note === 'f' || acc.note === 'g') && acc.acc === 'sharp' )\n\t\t\t\t\t\tacc.verticalPos -=7;\n\t\t\t\t});\n\t\t} else if (mid >= 7) {\n\t\t\tkey.accidentals.forEach(function(acc) {\n\t\t\t\tacc.verticalPos += 7;\n\t\t\t});\n\t\t\tif (key.impliedNaturals)\n\t\t\t\tkey.impliedNaturals.forEach(function(acc) {\n\t\t\t\t\tacc.verticalPos += 7;\n\t\t\t\t});\n\t\t}\n\t};\n\n\tparseKeyVoice.fixKey = function(clef, key) {\n\t\tvar fixedKey = Object.assign({},key);\n\t\tparseKeyVoice.addPosToKey(clef, fixedKey);\n\t\treturn fixedKey;\n\t};\n\n\tvar parseMiddle = function(str) {\n\t\tvar i = 0;\n\t\tvar p = str[i++];\n\t\tif (p === '^' || p === '_')\n\t\t\tp = str[i++];\n\t  var mid = pitches[p];\n\t\tif (mid === undefined)\n\t\t\tmid = 6; // If a legal middle note wasn't received, just ignore it.\n\t\tfor ( ; i < str.length; i++) {\n\t\t\tif (str[i] === ',') mid -= 7;\n\t\t\telse if (str[i] === \"'\") mid += 7;\n\t\t\telse break;\n\t\t}\n\t\treturn { mid: mid - 6, str: str.substring(i) };\t// We get the note in the middle of the staff. We want the note that appears as the first ledger line below the staff.\n\t};\n\n\tvar normalizeAccidentals = function(accs) {\n\t\tfor (var i = 0; i < accs.length; i++) {\n\t\t\tif (accs[i].note === 'b')\n\t\t\t\taccs[i].note = 'B';\n\t\t\telse if (accs[i].note === 'a')\n\t\t\t\taccs[i].note = 'A';\n\t\t\telse if (accs[i].note === 'F')\n\t\t\t\taccs[i].note = 'f';\n\t\t\telse if (accs[i].note === 'E')\n\t\t\t\taccs[i].note = 'e';\n\t\t\telse if (accs[i].note === 'D')\n\t\t\t\taccs[i].note = 'd';\n\t\t\telse if (accs[i].note === 'C')\n\t\t\t\taccs[i].note = 'c';\n\t\t\telse if (accs[i].note === 'G' && accs[i].acc === 'sharp')\n\t\t\t\taccs[i].note = 'g';\n\t\t\telse if (accs[i].note === 'g' && accs[i].acc === 'flat')\n\t\t\t\taccs[i].note = 'G';\n\t\t}\n\t};\n\n\tparseKeyVoice.parseKey = function(str, isInline)\t// (and clef)\n\t{\n\t\t// returns:\n\t\t//\t\t{ foundClef: true, foundKey: true }\n\t\t// Side effects:\n\t\t//\t\tcalls warn() when there is a syntax error\n\t\t//\t\tsets these members of multilineVars:\n\t\t//\t\t\tclef\n\t\t//\t\t\tkey\n\t\t//\t\t\tstyle\n\t\t//\n\t\t// The format is:\n\t\t// K: [⟨key⟩] [⟨modifiers⟩*]\n\t\t// modifiers are any of the following in any order:\n\t\t//  [⟨clef⟩] [middle=⟨pitch⟩] [transpose=[-]⟨number⟩] [stafflines=⟨number⟩] [staffscale=⟨number⟩][style=⟨style⟩]\n\t\t// key is none|HP|Hp|⟨specified_key⟩\n\t\t// clef is [clef=] [⟨clef type⟩] [⟨line number⟩] [+8|-8]\n\t\t// specified_key is ⟨pitch⟩[#|b][mode(first three chars are significant)][accidentals*]\n\t\tif (str.length === 0) {\n\t\t\t// an empty K: field is the same as K:none\n\t\t\tstr = 'none';\n\t\t}\n\t\tvar tokens = tokenizer.tokenize(str, 0, str.length);\n\t\tvar ret = {};\n\n\t\t// Be sure that a key was passed in\n\t\tif (tokens.length === 0) {\n\t\t\twarn(\"Must pass in key signature.\", str, 0);\n\t\t\treturn ret;\n\t\t}\n\n\t\t// first the key\n\t\tswitch (tokens[0].token) {\n\t\t\tcase 'HP':\n\t\t\t\tparseDirective.addDirective(\"bagpipes\");\n\t\t\t\tmultilineVars.key = { root: \"HP\", accidentals: [], acc: \"\", mode: \"\" };\n\t\t\t\tret.foundKey = true;\n\t\t\t\ttokens.shift();\n\t\t\t\tbreak;\n\t\t\tcase 'Hp':\n\t\t\t\tparseDirective.addDirective(\"bagpipes\");\n\t\t\t\tmultilineVars.key = { root: \"Hp\", accidentals: [{acc: 'natural', note: 'g'}, {acc: 'sharp', note: 'f'}, {acc: 'sharp', note: 'c'}], acc: \"\", mode: \"\" };\n\t\t\t\tret.foundKey = true;\n\t\t\t\ttokens.shift();\n\t\t\t\tbreak;\n\t\t\tcase 'none':\n\t\t\t\t// we got the none key - that's the same as C to us\n\t\t\t\tmultilineVars.key = { root: \"none\", accidentals: [], acc: \"\", mode: \"\" };\n\t\t\t\tret.foundKey = true;\n\t\t\t\ttokens.shift();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tvar retPitch = tokenizer.getKeyPitch(tokens[0].token);\n\t\t\t\tif (retPitch.len > 0) {\n\t\t\t\t\tret.foundKey = true;\n\t\t\t\t\tvar acc = \"\";\n\t\t\t\t\tvar mode = \"\";\n\t\t\t\t\t// The accidental and mode might be attached to the pitch, so we might want to just remove the first character.\n\t\t\t\t\tif (tokens[0].token.length > 1)\n\t\t\t\t\t\ttokens[0].token = tokens[0].token.substring(1);\n\t\t\t\t\telse\n\t\t\t\t\t\ttokens.shift();\n\t\t\t\t\tvar key = retPitch.token;\n\t\t\t\t\t// We got a pitch to start with, so we might also have an accidental and a mode\n\t\t\t\t\tif (tokens.length > 0) {\n\t\t\t\t\t\tvar retAcc = tokenizer.getSharpFlat(tokens[0].token);\n\t\t\t\t\t\tif (retAcc.len > 0) {\n\t\t\t\t\t\t\tif (tokens[0].token.length > 1)\n\t\t\t\t\t\t\t\ttokens[0].token = tokens[0].token.substring(1);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\ttokens.shift();\n\t\t\t\t\t\t\tkey += retAcc.token;\n\t\t\t\t\t\t\tacc = retAcc.token;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tokens.length > 0) {\n\t\t\t\t\t\t\tvar retMode = tokenizer.getMode(tokens[0].token);\n\t\t\t\t\t\t\tif (retMode.len > 0) {\n\t\t\t\t\t\t\t\ttokens.shift();\n\t\t\t\t\t\t\t\tkey += retMode.token;\n\t\t\t\t\t\t\t\tmode = retMode.token;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Be sure that the key specified is in the list: not all keys are physically possible, like Cbmin.\n\t\t\t\t\t\tif (parseKeyVoice.standardKey(key, retPitch.token, acc, 0) === undefined) {\n\t\t\t\t\t\t\twarn(\"Unsupported key signature: \" + key, str, 0);\n\t\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// We need to do a deep copy because we are going to modify it\n\t\t\t\t\tvar oldKey = parseKeyVoice.deepCopyKey(multilineVars.key);\n\t\t\t\t\t//TODO-PER: HACK! To get the local transpose to work, the transposition is done for each line. This caused the global transposition variable to be factored in twice, so, instead of rewriting that right now, I'm just subtracting one of them here.\n\t\t\t\t\tvar keyCompensate = !isInline && multilineVars.globalTranspose ? -multilineVars.globalTranspose : 0;\n\t\t\t\t\t//console.log(\"parse\", JSON.stringify(multilineVars), isInline)\n\t\t\t\t\tvar savedOrigKey;\n\t\t\t\t\tif (isInline)\n\t\t\t\t\t\tsavedOrigKey = multilineVars.globalTransposeOrigKeySig\n\t\t\t\t\tmultilineVars.key = parseKeyVoice.deepCopyKey(parseKeyVoice.standardKey(key, retPitch.token, acc, keyCompensate));\n\t\t\t\t\tif (isInline)\n\t\t\t\t\t\tmultilineVars.globalTransposeOrigKeySig = savedOrigKey\n\t\t\t\t\tmultilineVars.key.mode = mode;\n\t\t\t\t\tif (oldKey && multilineVars.keywarn !== false) {\n\t\t\t\t\t\t// Add natural in all places that the old key had an accidental.\n\t\t\t\t\t\tvar kk;\n\t\t\t\t\t\tfor (var k = 0; k < multilineVars.key.accidentals.length; k++) {\n\t\t\t\t\t\t\tfor (kk = 0; kk < oldKey.accidentals.length; kk++) {\n\t\t\t\t\t\t\t\tif (oldKey.accidentals[kk].note && multilineVars.key.accidentals[k].note.toLowerCase() === oldKey.accidentals[kk].note.toLowerCase())\n\t\t\t\t\t\t\t\t\toldKey.accidentals[kk].note = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (kk = 0; kk < oldKey.accidentals.length; kk++) {\n\t\t\t\t\t\t\tif (oldKey.accidentals[kk].note) {\n\t\t\t\t\t\t\t\tif (!multilineVars.key.impliedNaturals)\n\t\t\t\t\t\t\t\t\tmultilineVars.key.impliedNaturals = [];\n\t\t\t\t\t\t\t\tmultilineVars.key.impliedNaturals.push({ acc: 'natural', note: oldKey.accidentals[kk].note });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// There are two special cases of deprecated syntax. Ignore them if they occur\n\t\tif (tokens.length === 0) return ret;\n\t\tif (tokens[0].token === 'exp') tokens.shift();\n\t\tif (tokens.length === 0) return ret;\n\t\tif (tokens[0].token === 'oct') tokens.shift();\n\n\t\t// now see if there are extra accidentals\n\t\tif (tokens.length === 0) return ret;\n\t\tvar accs = tokenizer.getKeyAccidentals2(tokens);\n\t\tif (accs.warn)\n\t\t\twarn(accs.warn, str, 0);\n\t\t// If we have extra accidentals, first replace ones that are of the same pitch before adding them to the end.\n\t\tif (accs.accs) {\n\t\t\tif (!ret.foundKey) {\t\t// if there are only extra accidentals, make sure this is set.\n\t\t\t\tret.foundKey = true;\n\t\t\t\tmultilineVars.key = { root: \"none\", acc: \"\", mode: \"\", accidentals: [] };\n\t\t\t}\n\t\t\tnormalizeAccidentals(accs.accs);\n\t\t\tfor (var i = 0; i < accs.accs.length; i++) {\n\t\t\t\tvar found = false;\n\t\t\t\tfor (var j = 0; j < multilineVars.key.accidentals.length && !found; j++) {\n\t\t\t\t\tif (multilineVars.key.accidentals[j].note === accs.accs[i].note) {\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tif (multilineVars.key.accidentals[j].acc !== accs.accs[i].acc) {\n\t\t\t\t\t\t\t// If the accidental is different, then replace it. If it is the same, then the declaration was redundant, so just ignore it.\n\t\t\t\t\t\t\tmultilineVars.key.accidentals[j].acc = accs.accs[i].acc;\n\t\t\t\t\t\t\tif (!multilineVars.key.explicitAccidentals)\n\t\t\t\t\t\t\t\tmultilineVars.key.explicitAccidentals = [];\n\t\t\t\t\t\t\tmultilineVars.key.explicitAccidentals.push(accs.accs[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!found) {\n\t\t\t\t\tif (!multilineVars.key.explicitAccidentals)\n\t\t\t\t\t\tmultilineVars.key.explicitAccidentals = [];\n\t\t\t\t\tmultilineVars.key.explicitAccidentals.push(accs.accs[i]);\n\t\t\t\t\tmultilineVars.key.accidentals.push(accs.accs[i]);\n\t\t\t\t\tif (multilineVars.key.impliedNaturals) {\n\t\t\t\t\t\tfor (var kkk = 0; kkk < multilineVars.key.impliedNaturals.length; kkk++) {\n\t\t\t\t\t\t\tif (multilineVars.key.impliedNaturals[kkk].note === accs.accs[i].note)\n\t\t\t\t\t\t\t\tmultilineVars.key.impliedNaturals.splice(kkk, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Now see if any optional parameters are present. They have the form \"key=value\", except that \"clef=\" is optional\n\t\tvar token;\n\t\twhile (tokens.length > 0) {\n\t\t\tswitch (tokens[0].token) {\n\t\t\t\tcase \"m\":\n\t\t\t\tcase \"middle\":\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected = after middle\", str, 0); return ret; }\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.token !== \"=\") { warn(\"Expected = after middle\", str, token.start); break; }\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected parameter after middle=\", str, 0); return ret; }\n\t\t\t\t\tvar pitch = tokenizer.getPitchFromTokens(tokens);\n\t\t\t\t\tif (pitch.warn)\n\t\t\t\t\t\twarn(pitch.warn, str, 0);\n\t\t\t\t\tif (pitch.position)\n\t\t\t\t\t\tmultilineVars.clef.verticalPos = pitch.position - 6;\t// we get the position from the middle line, but want to offset it to the first ledger line.\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"transpose\":\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected = after transpose\", str, 0); return ret; }\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.token !== \"=\") { warn(\"Expected = after transpose\", str, token.start); break; }\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected parameter after transpose=\", str, 0); return ret; }\n\t\t\t\t\tif (tokens[0].type !== 'number') { warn(\"Expected number after transpose\", str, tokens[0].start); break; }\n\t\t\t\t\tmultilineVars.clef.transpose = tokens[0].intt;\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"stafflines\":\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected = after stafflines\", str, 0); return ret; }\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.token !== \"=\") { warn(\"Expected = after stafflines\", str, token.start); break; }\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected parameter after stafflines=\", str, 0); return ret; }\n\t\t\t\t\tif (tokens[0].type !== 'number') { warn(\"Expected number after stafflines\", str, tokens[0].start); break; }\n\t\t\t\t\tmultilineVars.clef.stafflines = tokens[0].intt;\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"staffscale\":\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected = after staffscale\", str, 0); return ret; }\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.token !== \"=\") { warn(\"Expected = after staffscale\", str, token.start); break; }\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected parameter after staffscale=\", str, 0); return ret; }\n\t\t\t\t\tif (tokens[0].type !== 'number') { warn(\"Expected number after staffscale\", str, tokens[0].start); break; }\n\t\t\t\t\tmultilineVars.clef.staffscale = tokens[0].floatt;\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"octave\":\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected = after octave\", str, 0); return ret; }\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.token !== \"=\") { warn(\"Expected = after octave\", str, token.start); break; }\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected parameter after octave=\", str, 0); return ret; }\n\t\t\t\t\tif (tokens[0].type !== 'number') { warn(\"Expected number after octave\", str, tokens[0].start); break; }\n\t\t\t\t\tmultilineVars.octave = tokens[0].intt;\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"style\":\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected = after style\", str, 0); return ret; }\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.token !== \"=\") { warn(\"Expected = after style\", str, token.start); break; }\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected parameter after style=\", str, 0); return ret; }\n\t\t\t\t\tswitch (tokens[0].token) {\n\t\t\t\t\t\tcase \"normal\":\n\t\t\t\t\t\tcase \"harmonic\":\n\t\t\t\t\t\tcase \"rhythm\":\n\t\t\t\t\t\tcase \"x\":\n\t\t\t\t\t\tcase \"triangle\":\n\t\t\t\t\t\t\tmultilineVars.style = tokens[0].token;\n\t\t\t\t\t\t\ttokens.shift();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\twarn(\"error parsing style element: \" + tokens[0].token, str, tokens[0].start);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"clef\":\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected = after clef\", str, 0); return ret; }\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.token !== \"=\") { warn(\"Expected = after clef\", str, token.start); break; }\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected parameter after clef=\", str, 0); return ret; }\n\t\t\t\t\t//break; yes, we want to fall through. That allows \"clef=\" to be optional.\n\t\t\t\tcase \"treble\":\n\t\t\t\tcase \"bass\":\n\t\t\t\tcase \"alto\":\n\t\t\t\tcase \"tenor\":\n\t\t\t\tcase \"perc\":\n\t\t\t\tcase \"none\":\n\t\t\t\t\t// clef is [clef=] [⟨clef type⟩] [⟨line number⟩] [+8|-8]\n\t\t\t\t\tvar clef = tokens.shift();\n\t\t\t\t\tswitch (clef.token) {\n\t\t\t\t\t\tcase 'treble':\n\t\t\t\t\t\tcase 'tenor':\n\t\t\t\t\t\tcase 'alto':\n\t\t\t\t\t\tcase 'bass':\n\t\t\t\t\t\tcase 'perc':\n\t\t\t\t\t\tcase 'none':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'C': clef.token = 'alto'; break;\n\t\t\t\t\t\tcase 'F': clef.token = 'bass'; break;\n\t\t\t\t\t\tcase 'G': clef.token = 'treble'; break;\n\t\t\t\t\t\tcase 'c': clef.token = 'alto'; break;\n\t\t\t\t\t\tcase 'f': clef.token = 'bass'; break;\n\t\t\t\t\t\tcase 'g': clef.token = 'treble'; break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\twarn(\"Expected clef name. Found \" + clef.token, str, clef.start);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (tokens.length > 0 && tokens[0].type === 'number') {\n\t\t\t\t\t\tclef.token += tokens[0].token;\n\t\t\t\t\t\ttokens.shift();\n\t\t\t\t\t}\n\t\t\t\t\tif (tokens.length > 1 && (tokens[0].token === '-' || tokens[0].token === '+' || tokens[0].token === '^' || tokens[0].token === '_') && tokens[1].token === '8') {\n\t\t\t\t\t\tclef.token += tokens[0].token + tokens[1].token;\n\t\t\t\t\t\ttokens.shift();\n\t\t\t\t\t\ttokens.shift();\n\t\t\t\t\t}\n\t\t\t\t\tmultilineVars.clef = {type: clef.token, verticalPos: calcMiddle(clef.token, 0)};\n\t\t\t\t\tif (multilineVars.currentVoice && multilineVars.currentVoice.transpose !== undefined)\n\t\t\t\t\t\tmultilineVars.clef.transpose = multilineVars.currentVoice.transpose;\n\t\t\t\t\tret.foundClef = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\twarn(\"Unknown parameter: \" + tokens[0].token, str, tokens[0].start);\n\t\t\t\t\ttokens.shift();\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t};\n\n\tvar setCurrentVoice = function(id) {\n\t\tvar currentVoice = multilineVars.voices[id]\n\t\tif (multilineVars.currentVoice) {\n\t\t\tif (multilineVars.currentVoice.index === currentVoice.index && multilineVars.currentVoice.staffNum === currentVoice.staffNum)\n\t\t\t\treturn // there was no change so don't reset it.\n\t\t}\n\t\tmultilineVars.currentVoice = currentVoice;\n\t\treturn tuneBuilder.setCurrentVoice(currentVoice.staffNum, currentVoice.index, id);\n\t};\n\n\tparseKeyVoice.parseVoice = function(line, i, e) {\n\t\t//First truncate the string to the first non-space character after V: through either the\n\t\t//end of the line or a % character. Then remove trailing spaces, too.\n\t\tvar ret = tokenizer.getMeat(line, i, e);\n\t\tvar start = ret.start;\n\t\tvar end = ret.end;\n\t\t//The first thing on the line is the ID. It can be any non-space string and terminates at the\n\t\t//first space.\n\t\tvar id = tokenizer.getToken(line, start, end);\n\t\tif (id.length === 0) {\n\t\t\twarn(\"Expected a voice id\", line, start);\n\t\t\treturn;\n\t\t}\n\t\tvar isNew = false;\n\t\tif (multilineVars.voices[id] === undefined) {\n\t\t\tmultilineVars.voices[id] = {};\n\t\t\tisNew = true;\n\t\t\tif (multilineVars.score_is_present)\n\t\t\t\twarn(\"Can't have an unknown V: id when the %score directive is present\", line, start);\n\t\t}\n\t\tstart += id.length;\n\t\tstart += tokenizer.eatWhiteSpace(line, start);\n\n\t\tvar staffInfo = {startStaff: isNew};\n\t\tvar addNextTokenToStaffInfo = function(name) {\n\t\t\tvar attr = tokenizer.getVoiceToken(line, start, end);\n\t\t\tif (attr.warn !== undefined)\n\t\t\t\twarn(\"Expected value for \" + name + \" in voice: \" + attr.warn, line, start);\n\t\t\telse if (attr.err !== undefined)\n\t\t\t\twarn(\"Expected value for \" + name + \" in voice: \" + attr.err, line, start);\n\t\t\telse if (attr.token.length === 0 && line[start] !== '\"')\n\t\t\t\twarn(\"Expected value for \" + name + \" in voice\", line, start);\n\t\t\telse\n\t\t\t\tstaffInfo[name] = attr.token;\n\t\t\tstart += attr.len;\n\t\t};\n\t\tvar addNextTokenToVoiceInfo = function(id, name, type) {\n\t\t\tvar attr = tokenizer.getVoiceToken(line, start, end);\n\t\t\tif (attr.warn !== undefined)\n\t\t\t\twarn(\"Expected value for \" + name + \" in voice: \" + attr.warn, line, start);\n\t\t\telse if (attr.err !== undefined)\n\t\t\t\twarn(\"Expected value for \" + name + \" in voice: \" + attr.err, line, start);\n\t\t\telse if (attr.token.length === 0 && line[start] !== '\"')\n\t\t\t\twarn(\"Expected value for \" + name + \" in voice\", line, start);\n\t\t\telse {\n\t\t\t\tif (type === 'number')\n\t\t\t\t\tattr.token = parseFloat(attr.token);\n\t\t\t\tmultilineVars.voices[id][name] = attr.token;\n\t\t\t}\n\t\t\tstart += attr.len;\n\t\t};\n\t\tvar getNextToken = function(name, type) {\n\t\t\tvar attr = tokenizer.getVoiceToken(line, start, end);\n\t\t\tif (attr.warn !== undefined)\n\t\t\t\twarn(\"Expected value for \" + name + \" in voice: \" + attr.warn, line, start);\n\t\t\telse if (attr.err !== undefined)\n\t\t\t\twarn(\"Expected value for \" + name + \" in voice: \" + attr.err, line, start);\n\t\t\telse if (attr.token.length === 0 && line[start] !== '\"')\n\t\t\t\twarn(\"Expected value for \" + name + \" in voice\", line, start);\n\t\t\telse {\n\t\t\t\tif (type === 'number')\n\t\t\t\t\tattr.token = parseFloat(attr.token);\n\t\t\t\treturn attr.token;\n\t\t\t}\n\t\t\tstart += attr.len;\n\t\t};\n\t\tvar addNextNoteTokenToVoiceInfo = function(id, name) {\n\t\t\tvar noteToTransposition = {\n\t\t\t\t\"_B\": 2,\n\t\t\t\t\"_E\": 9,\n\t\t\t\t\"_b\": -10,\n\t\t\t\t\"_e\": -3\n\t\t\t};\n\t\t\tvar attr = tokenizer.getVoiceToken(line, start, end);\n\t\t\tif (attr.warn !== undefined)\n\t\t\t\twarn(\"Expected one of (_B, _E, _b, _e) for \" + name + \" in voice: \" + attr.warn, line, start);\n\t\t\telse if (attr.token.length === 0 && line[start] !== '\"')\n\t\t\t\twarn(\"Expected one of (_B, _E, _b, _e) for \" + name + \" in voice\", line, start);\n\t\t\telse {\n\t\t\t\tvar t = noteToTransposition[attr.token];\n\t\t\t\tif (!t)\n\t\t\t\t\twarn(\"Expected one of (_B, _E, _b, _e) for \" + name + \" in voice\", line, start);\n\t\t\t\telse\n\t\t\t\t\tmultilineVars.voices[id][name] = t;\n\t\t\t}\n\t\t\tstart += attr.len;\n\t\t};\n\n\t\t//Then the following items can occur in any order:\n\t\twhile (start < end) {\n\t\t\tvar token = tokenizer.getVoiceToken(line, start, end);\n\t\t\tstart += token.len;\n\n\t\t\tif (token.warn) {\n\t\t\t\twarn(\"Error parsing voice: \" + token.warn, line, start);\n\t\t\t} else {\n\t\t\t\tvar attr = null;\n\t\t\t\tswitch (token.token) {\n\t\t\t\t\tcase 'clef':\n\t\t\t\t\tcase 'cl':\n\t\t\t\t\t\taddNextTokenToStaffInfo('clef');\n\t\t\t\t\t\t// TODO-PER: check for a legal clef; do octavizing\n\t\t\t\t\t\tvar oct = 0;\n\t//\t\t\t\t\t\t\tfor (var ii = 0; ii < staffInfo.clef.length; ii++) {\n\t//\t\t\t\t\t\t\t\tif (staffInfo.clef[ii] === ',') oct -= 7;\n\t//\t\t\t\t\t\t\t\telse if (staffInfo.clef[ii] === \"'\") oct += 7;\n\t//\t\t\t\t\t\t\t}\n\t\t\t\t\t\tif (staffInfo.clef !== undefined) {\n\t\t\t\t\t\t  staffInfo.clef = staffInfo.clef.replace(/[',]/g, \"\"); //'//comment for emacs formatting of regexp\n\t\t\t\t\t\t\tif (staffInfo.clef.indexOf('+16') !== -1) {\n\t\t\t\t\t\t\t\toct += 14;\n\t\t\t\t\t\t\t\tstaffInfo.clef = staffInfo.clef.replace('+16', '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstaffInfo.verticalPos = calcMiddle(staffInfo.clef, oct);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'treble':\n\t\t\t\t\tcase 'bass':\n\t\t\t\t\tcase 'tenor':\n\t\t\t\t\tcase 'alto':\n\t\t\t\t\tcase 'perc':\n\t\t\t\t\tcase 'none':\n\t\t\t\t\tcase 'treble\\'':\n\t\t\t\t\tcase 'bass\\'':\n\t\t\t\t\tcase 'tenor\\'':\n\t\t\t\t\tcase 'alto\\'':\n\t\t\t\t\tcase 'none\\'':\n\t\t\t\t\tcase 'treble\\'\\'':\n\t\t\t\t\tcase 'bass\\'\\'':\n\t\t\t\t\tcase 'tenor\\'\\'':\n\t\t\t\t\tcase 'alto\\'\\'':\n\t\t\t\t\tcase 'none\\'\\'':\n\t\t\t\t\tcase 'treble,':\n\t\t\t\t\tcase 'bass,':\n\t\t\t\t\tcase 'tenor,':\n\t\t\t\t\tcase 'alto,':\n\t\t\t\t\tcase 'none,':\n\t\t\t\t\tcase 'treble,,':\n\t\t\t\t\tcase 'bass,,':\n\t\t\t\t\tcase 'tenor,,':\n\t\t\t\t\tcase 'alto,,':\n\t\t\t\t\tcase 'none,,':\n// MAE 26 May 2025 Start of additional clefs\n\t\t\t\t\tcase 'treble+8':\n\t\t\t\t\tcase 'treble-8':\n\t\t\t\t\tcase 'treble^8':\n\t\t\t\t\tcase 'treble_8':\n\t\t\t\t\tcase 'treble1':\n\t\t\t\t\tcase 'treble2':\n\t\t\t\t\tcase 'treble3':\n\t\t\t\t\tcase 'treble4':\n\t\t\t\t\tcase 'treble5':\n\t\t\t\t\tcase 'bass+8':\n\t\t\t\t\tcase 'bass-8':\n\t\t\t\t\tcase 'bass^8':\n\t\t\t\t\tcase 'bass_8':\n\t\t\t\t\tcase 'bass+16':\n\t\t\t\t\tcase 'bass-16':\n\t\t\t\t\tcase 'bass^16':\n\t\t\t\t\tcase 'bass_16':\n\t\t\t\t\tcase 'bass1':\n\t\t\t\t\tcase 'bass2':\n\t\t\t\t\tcase 'bass3':\n\t\t\t\t\tcase 'bass4':\n\t\t\t\t\tcase 'bass5':\n\t\t\t\t\tcase 'tenor1':\n\t\t\t\t\tcase 'tenor2':\n\t\t\t\t\tcase 'tenor3':\n\t\t\t\t\tcase 'tenor4':\n\t\t\t\t\tcase 'tenor5':\n\t\t\t\t\tcase 'alto1':\n\t\t\t\t\tcase 'alto2':\n\t\t\t\t\tcase 'alto3':\n\t\t\t\t\tcase 'alto4':\n\t\t\t\t\tcase 'alto5':\n\t\t\t\t\tcase 'alto+8':\n\t\t\t\t\tcase 'alto-8':\n\t\t\t\t\tcase 'alto^8':\n\t\t\t\t\tcase 'alto_8':\n// MAE 26 May 2025 End of additional clefs\n\n\t\t\t\t\t\t// TODO-PER: handle the octave indicators on the clef by changing the middle property\n\t\t\t\t\t\tvar oct2 = 0;\n\t\t\t\t\t\tstaffInfo.clef = token.token.replace(/[',]/g, \"\"); //'//comment for emacs formatting of regexp\n\t\t\t\t\t\tstaffInfo.verticalPos = calcMiddle(staffInfo.clef, oct2);\n\t\t\t\t\t\tmultilineVars.voices[id].clef = token.token;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'staves':\n\t\t\t\t\tcase 'stave':\n\t\t\t\t\tcase 'stv':\n\t\t\t\t\t\taddNextTokenToStaffInfo('staves');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'brace':\n\t\t\t\t\tcase 'brc':\n\t\t\t\t\t\taddNextTokenToStaffInfo('brace');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'bracket':\n\t\t\t\t\tcase 'brk':\n\t\t\t\t\t\taddNextTokenToStaffInfo('bracket');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'name':\n\t\t\t\t\tcase 'nm':\n\t\t\t\t\t\taddNextTokenToStaffInfo('name');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'subname':\n\t\t\t\t\tcase 'sname':\n\t\t\t\t\tcase 'snm':\n\t\t\t\t\t\taddNextTokenToStaffInfo('subname');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'merge':\n\t\t\t\t\t\tstaffInfo.startStaff = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'stem':\n\t\t\t\t\tcase 'stems':\n\t\t\t\t\t\tattr = tokenizer.getVoiceToken(line, start, end);\n\t\t\t\t\t\tif (attr.warn !== undefined)\n\t\t\t\t\t\t\twarn(\"Expected value for stems in voice: \" + attr.warn, line, start);\n\t\t\t\t\t\telse if (attr.err !== undefined)\n\t\t\t\t\t\t\twarn(\"Expected value for stems in voice: \" + attr.err, line, start);\n\t\t\t\t\t\telse if (attr.token === 'up' || attr.token === 'down')\n\t\t\t\t\t\t\tmultilineVars.voices[id].stem = attr.token;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\twarn(\"Expected up or down for voice stem\", line, start);\n\t\t\t\t\t\tstart += attr.len;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'up':\n\t\t\t\t\tcase 'down':\n\t\t\t\t\t\tmultilineVars.voices[id].stem = token.token;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'middle':\n\t\t\t\t\tcase 'm':\n\t\t\t\t\t\taddNextTokenToStaffInfo('verticalPos');\n\t\t\t\t\t\tstaffInfo.verticalPos = parseMiddle(staffInfo.verticalPos).mid;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'gchords':\n\t\t\t\t\tcase 'gch':\n\t\t\t\t\t\tmultilineVars.voices[id].suppressChords = true;\n\t\t\t\t\t\t// gchords can stand on its own, or it could be gchords=0.\n\t\t\t\t\t\tattr = tokenizer.getVoiceToken(line, start, end);\n\t\t\t\t\t\tif (attr.token === \"0\")\n\t\t\t\t\t\t\tstart = start + attr.len;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'space':\n\t\t\t\t\tcase 'spc':\n\t\t\t\t\t\taddNextTokenToStaffInfo('spacing');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\taddNextTokenToVoiceInfo(id, 'scale', 'number');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'score':\n\t\t\t\t\t\taddNextNoteTokenToVoiceInfo(id, 'scoreTranspose');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transpose':\n\t\t\t\t\t\taddNextTokenToVoiceInfo(id, 'transpose', 'number');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'stafflines':\n\t\t\t\t\t\taddNextTokenToVoiceInfo(id, 'stafflines', 'number');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'staffscale':\n\t\t\t\t\t\t// TODO-PER: This is passed to the engraver, but the engraver ignores it.\n\t\t\t\t\t\taddNextTokenToVoiceInfo(id, 'staffscale', 'number');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'octave':\n\t\t\t\t\t\taddNextTokenToVoiceInfo(id, 'octave', 'number');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'volume':\n\t\t\t\t\t\t// TODO-PER: This is accepted, but not implemented, yet.\n\t\t\t\t\t\taddNextTokenToVoiceInfo(id, 'volume', 'number');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'cue':\n\t\t\t\t\t\t// TODO-PER: This is accepted, but not implemented, yet.\n\t\t\t\t\t\tvar cue = getNextToken('cue', 'string');\n\t\t\t\t\t\tif (cue === 'on')\n\t\t\t\t\t\t\tmultilineVars.voices[id].scale = 0.6;\n\t\t\t\t\t\telse multilineVars.voices[id].scale = 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"style\":\n\t\t\t\t\t\tattr = tokenizer.getVoiceToken(line, start, end);\n\t\t\t\t\t\tif (attr.warn !== undefined)\n\t\t\t\t\t\t\twarn(\"Expected value for style in voice: \" + attr.warn, line, start);\n\t\t\t\t\t\telse if (attr.err !== undefined)\n\t\t\t\t\t\t\twarn(\"Expected value for style in voice: \" + attr.err, line, start);\n\t\t\t\t\t\telse if (attr.token === 'normal' || attr.token === 'harmonic' || attr.token === 'rhythm' || attr.token === 'x' || attr.token === 'triangle')\n\t\t\t\t\t\t\tmultilineVars.voices[id].style = attr.token;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\twarn(\"Expected one of [normal, harmonic, rhythm, x, triangle] for voice style\", line, start);\n\t\t\t\t\t\tstart += attr.len;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// default:\n\t\t\t\t\t// Use this to find V: usages that aren't handled.\n\t\t\t\t\t// \tconsole.log(\"parse voice\", token, tune.metaText.title);\n\t\t\t\t}\n\t\t\t}\n\t\t\tstart += tokenizer.eatWhiteSpace(line, start);\n\t\t}\n\n\t\t// now we've filled up staffInfo, figure out what to do with this voice\n\t\t// TODO-PER: It is unclear from the standard and the examples what to do with brace, bracket, and staves, so they are ignored for now.\n\t\tif (staffInfo.startStaff || multilineVars.staves.length === 0) {\n\t\t\tmultilineVars.staves.push({index: multilineVars.staves.length, meter: multilineVars.origMeter});\n\t\t\tif (!multilineVars.score_is_present)\n\t\t\t\tmultilineVars.staves[multilineVars.staves.length-1].numVoices = 0;\n\t\t}\n\t\tif (multilineVars.voices[id].staffNum === undefined) {\n\t\t\t// store where to write this for quick access later.\n\t\t\tmultilineVars.voices[id].staffNum = multilineVars.staves.length-1;\n\t\t\tvar vi = 0;\n\t\t\tfor(var v in multilineVars.voices) {\n\t\t\t\tif(multilineVars.voices.hasOwnProperty(v)) {\n\t\t\t\t\tif (multilineVars.voices[v].staffNum === multilineVars.voices[id].staffNum)\n\t\t\t\t\t\tvi++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmultilineVars.voices[id].index = vi-1;\n\t\t}\n\t\tvar s = multilineVars.staves[multilineVars.voices[id].staffNum];\n\t\tif (!multilineVars.score_is_present)\n\t\t\ts.numVoices++;\n\t\tif (staffInfo.clef) s.clef = {type: staffInfo.clef, verticalPos: staffInfo.verticalPos};\n\t\tif (staffInfo.spacing) s.spacing_below_offset = staffInfo.spacing;\n\t\tif (staffInfo.verticalPos) s.verticalPos = staffInfo.verticalPos;\n\n\t\tif (staffInfo.name) {if (s.name) s.name.push(staffInfo.name); else s.name = [ staffInfo.name ];}\n\t\tif (staffInfo.subname) {if (s.subname) s.subname.push(staffInfo.subname); else s.subname = [ staffInfo.subname ];}\n\n\t\treturn setCurrentVoice(id);\n\t};\n\n})();\n\nmodule.exports = parseKeyVoice;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/parse/abc_parse_key_voice.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/parse/abc_parse_music.js":
/*!*********************************************************!*\
  !*** ./node_modules/abcjs/src/parse/abc_parse_music.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var parseKeyVoice = __webpack_require__(/*! ./abc_parse_key_voice */ \"(ssr)/./node_modules/abcjs/src/parse/abc_parse_key_voice.js\");\nvar transpose = __webpack_require__(/*! ./abc_transpose */ \"(ssr)/./node_modules/abcjs/src/parse/abc_transpose.js\");\n\nvar tokenizer;\nvar warn;\nvar multilineVars;\nvar tune;\nvar tuneBuilder;\nvar header;\n\nvar {\n  legalAccents,\n  volumeDecorations,\n  dynamicDecorations,\n  accentPseudonyms,\n  accentDynamicPseudonyms,\n  nonDecorations,\n  durations,\n  pitches,\n  rests,\n  accMap,\n  tripletQ\n} = __webpack_require__(/*! ./abc_parse_settings */ \"(ssr)/./node_modules/abcjs/src/parse/abc_parse_settings.js\")\n\nvar MusicParser = function(_tokenizer, _warn, _multilineVars, _tune, _tuneBuilder, _header) {\n\ttokenizer = _tokenizer;\n\twarn = _warn;\n\tmultilineVars = _multilineVars;\n\ttune = _tune;\n\ttuneBuilder = _tuneBuilder;\n\theader = _header;\n\tthis.lineContinuation = false;\n}\n\n//\n// Parse line of music\n//\n// This is a stream of <(bar-marking|header|note-group)...> in any order, with optional spaces between each element\n// core-note is <open-slur, accidental, pitch:required, octave, duration, close-slur&|tie> with no spaces within that\n// chord is <open-bracket:required, core-note:required... close-bracket:required duration> with no spaces within that\n// grace-notes is <open-brace:required, (open-slur|core-note:required|close-slur)..., close-brace:required> spaces are allowed\n// note-group is <grace-notes, chord symbols&|decorations..., grace-notes, slur&|triplet, chord|core-note, end-slur|tie> spaces are allowed between items\n// bar-marking is <ampersand> or <chord symbols&|decorations..., bar:required> spaces allowed\n// header is <open-bracket:required, K|M|L|V:required, colon:required, field:required, close-bracket:required> spaces can occur between the colon, in the field, and before the close bracket\n// header can also be the only thing on a line. This is true even if it is a continuation line. In this case the brackets are not required.\n// a space is a back-tick, a space, or a tab. If it is a back-tick, then there is no end-beam.\n\n// Line preprocessing: anything after a % is ignored (the double %% should have been taken care of before this)\n// Then, all leading and trailing spaces are ignored.\n// If there was a line continuation, the \\n was replaced by a \\r and the \\ was replaced by a space. This allows the construct\n// of having a header mid-line conceptually, but actually be at the start of the line. This is equivolent to putting the header in [ ].\n\n// TODO-PER: How to handle ! for line break?\n// TODO-PER: dots before bar, dots before slur\n// TODO-PER: U: redefinable symbols.\n\n// Ambiguous symbols:\n// \"[\" can be the start of a chord, the start of a header element or part of a bar line.\n// --- if it is immediately followed by \"|\", it is a bar line\n// --- if it is immediately followed by K: L: M: V: it is a header (note: there are other headers mentioned in the standard, but I'm not sure how they would be used.)\n// --- otherwise it is the beginning of a chord\n// \"(\" can be the start of a slur or a triplet\n// --- if it is followed by a number from 2-9, then it is a triplet\n// --- otherwise it is a slur\n// \"]\"\n// --- if there is a chord open, then this is the close\n// --- if it is after a [|, then it is an invisible bar line\n// --- otherwise, it is par of a bar\n// \".\" can be a bar modifier or a slur modifier, or a decoration\n// --- if it comes immediately before a bar, it is a bar modifier\n// --- if it comes immediately before a slur, it is a slur modifier\n// --- otherwise it is a decoration for the next note.\n// number:\n// --- if it is after a bar, with no space, it is an ending marker\n// --- if it is after a ( with no space, it is a triplet count\n// --- if it is after a pitch or octave or slash, then it is a duration\n\n// Unambiguous symbols (except inside quoted strings):\n// vertical-bar, colon: part of a bar\n// ABCDEFGabcdefg: pitch\n// xyzZ: rest\n// comma, prime: octave\n// close-paren: end-slur\n// hyphen: tie\n// tilde, v, u, bang, plus, THLMPSO: decoration\n// carat, underscore, equal: accidental\n// ampersand: time reset\n// open-curly, close-curly: grace notes\n// double-quote: chord symbol\n// less-than, greater-than, slash: duration\n// back-tick, space, tab: space\n\nvar isInTie = function(multilineVars, overlayLevel, el) {\n\tif (multilineVars.inTie[overlayLevel] === undefined)\n\t\treturn false;\n\t// If this is single voice music then the voice index isn't set, so we use the first voice.\n\tvar voiceIndex = multilineVars.currentVoice ? multilineVars.currentVoice.staffNum * 100 + multilineVars.currentVoice.index : 0;\n\tif (multilineVars.inTie[overlayLevel][voiceIndex]) {\n\t\tif (el.pitches !== undefined || el.rest.type !== 'spacer')\n\t\t\treturn true;\n\t}\n\treturn false;\n};\n\nvar el = { };\nMusicParser.prototype.parseMusic = function(line) {\n\theader.resolveTempo();\n\t//multilineVars.havent_set_length = false;\t// To late to set this now.\n\tmultilineVars.is_in_header = false;\t// We should have gotten a key header by now, but just in case, this is definitely out of the header.\n\tvar i = 0;\n\tvar startOfLine = multilineVars.iChar;\n\t// see if there is nothing but a comment on this line. If so, just ignore it. A full line comment is optional white space followed by %\n\twhile (tokenizer.isWhiteSpace(line[i]) && i < line.length)\n\t\ti++;\n\tif (i === line.length || line[i] === '%')\n\t\treturn;\n\n\t// Start with the standard staff, clef and key symbols on each line\n\tvar delayStartNewLine = multilineVars.start_new_line;\n\tif (multilineVars.continueall === undefined)\n\t\tmultilineVars.start_new_line = true;\n\telse\n\t\tmultilineVars.start_new_line = false;\n\tvar tripletNotesLeft = 0;\n\n\t// See if the line starts with a header field\n\tvar retHeader = header.letter_to_body_header(line, i);\n\tif (retHeader[0] > 0) {\n\t\ti += retHeader[0];\n\t\t// fixes bug on this: c[V:2]d\n\t\tif (retHeader[1] === 'V')\n\t\t\tthis.startNewLine();\n\t\t\t// delayStartNewLine = true;\n\t\t// TODO-PER: Handle inline headers\n\t}\n\n\tvar overlayLevel = 0;\n\twhile (i < line.length)\n\t{\n\t\tvar startI = i;\n\t\tif (line[i] === '%')\n\t\t\tbreak;\n\n\t\tvar retInlineHeader = header.letter_to_inline_header(line, i, delayStartNewLine);\n\t\tif (retInlineHeader[0] > 0) {\n\t\t\ti += retInlineHeader[0];\n\t\t\t//console.log(\"inline header\", retInlineHeader)\n\t\t\tif (retInlineHeader[1] === 'V')\n\t\t\t\tdelayStartNewLine = true; // fixes bug on this: c[V:2]d\n\t\t\t// TODO-PER: Handle inline headers\n\t\t\t//multilineVars.start_new_line = false;\n\t\t} else {\n\t\t\t// Wait until here to actually start the line because we know we're past the inline statements.\n\t\t\tif (!tuneBuilder.hasBeginMusic() || (delayStartNewLine && !this.lineContinuation)) {\n\t\t\t\tthis.startNewLine();\n\t\t\t\tdelayStartNewLine = false;\n\t\t\t}\n\n\t\t\t// We need to decide if the following characters are a bar-marking or a note-group.\n\t\t\t// Unfortunately, that is ambiguous. Both can contain chord symbols and decorations.\n\t\t\t// If there is a grace note either before or after the chord symbols and decorations, then it is definitely a note-group.\n\t\t\t// If there is a bar marker, it is definitely a bar-marking.\n\t\t\t// If there is either a core-note or chord, it is definitely a note-group.\n\t\t\t// So, loop while we find grace-notes, chords-symbols, or decorations. [It is an error to have more than one grace-note group in a row; the others can be multiple]\n\t\t\t// Then, if there is a grace-note, we know where to go.\n\t\t\t// Else see if we have a chord, core-note, slur, triplet, or bar.\n\n\t\t\tvar ret;\n\t\t\twhile (1) {\n\t\t\t\tret = tokenizer.eatWhiteSpace(line, i);\n\t\t\t\tif (ret > 0) {\n\t\t\t\t\ti += ret;\n\t\t\t\t}\n\t\t\t\tif (i > 0 && line[i-1] === '\\x12') {\n\t\t\t\t\t// there is one case where a line continuation isn't the same as being on the same line, and that is if the next character after it is a header.\n\t\t\t\t\tret = header.letter_to_body_header(line, i);\n\t\t\t\t\tif (ret[0] > 0) {\n\t\t\t\t\t\tif (ret[1] === 'V')\n\t\t\t\t\t\t\tthis.startNewLine(); // fixes bug on this: c\\\\nV:2]\\\\nd\n\t\t\t\t\t\t// TODO: insert header here\n\t\t\t\t\t\ti = ret[0];\n\t\t\t\t\t\tmultilineVars.start_new_line = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// gather all the grace notes, chord symbols and decorations\n\t\t\t\tret = letter_to_spacer(line, i);\n\t\t\t\tif (ret[0] > 0) {\n\t\t\t\t\ti += ret[0];\n\t\t\t\t}\n\n\t\t\t\tret = letter_to_chord(line, i);\n\t\t\t\tif (ret[0] > 0) {\n\t\t\t\t\t// There could be more than one chord here if they have different positions.\n\t\t\t\t\t// If two chords have the same position, then connect them with newline.\n\t\t\t\t\tif (!el.chord)\n\t\t\t\t\t\tel.chord = [];\n\t\t\t\t\tvar chordName = tokenizer.translateString(ret[1]);\n\t\t\t\t\tchordName = chordName.replace(/;/g, \"\\n\");\n\t\t\t\t\tvar addedChord = false;\n\t\t\t\t\tfor (var ci = 0; ci < el.chord.length; ci++) {\n\t\t\t\t\t\tif (el.chord[ci].position === ret[2]) {\n\t\t\t\t\t\t\taddedChord = true;\n\t\t\t\t\t\t\tel.chord[ci].name += \"\\n\" + chordName;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (addedChord === false) {\n\t\t\t\t\t\tif (ret[2] === null && ret[3])\n\t\t\t\t\t\t\tel.chord.push({name: chordName, rel_position: ret[3]});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tel.chord.push({name: chordName, position: ret[2]});\n\t\t\t\t\t}\n\n\t\t\t\t\ti += ret[0];\n\t\t\t\t\tvar ii = tokenizer.skipWhiteSpace(line.substring(i));\n\t\t\t\t\tif (ii > 0)\n\t\t\t\t\t\tel.force_end_beam_last = true;\n\t\t\t\t\ti += ii;\n\t\t\t\t} else {\n\t\t\t\t\tif (nonDecorations.indexOf(line[i]) === -1)\n\t\t\t\t\t\tret = letter_to_accent(line, i);\n\t\t\t\t\telse ret = [ 0 ];\n\t\t\t\t\tif (ret[0] > 0) {\n\t\t\t\t\t\tif (ret[1] === null) {\n\t\t\t\t\t\t\tif (i + 1 < line.length)\n\t\t\t\t\t\t\t\tthis.startNewLine();\t// There was a ! in the middle of the line. Start a new line if there is anything after it.\n\t\t\t\t\t\t} else if (ret[1].length > 0) {\n\t\t\t\t\t\t\tif (ret[1].indexOf(\"style=\") === 0) {\n\t\t\t\t\t\t\t\tel.style = ret[1].substr(6);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (el.decoration === undefined)\n\t\t\t\t\t\t\t\t\tel.decoration = [];\n\t\t\t\t\t\t\t\tif (ret[1] === 'beambr1')\n\t\t\t\t\t\t\t\t\tel.beambr = 1;\n\t\t\t\t\t\t\t\telse if (ret[1] === \"beambr2\")\n\t\t\t\t\t\t\t\t\tel.beambr = 2;\n\t\t\t\t\t\t\t\telse el.decoration.push(ret[1]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti += ret[0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tret = letter_to_grace(line, i);\n\t\t\t\t\t\t// TODO-PER: Be sure there aren't already grace notes defined. That is an error.\n\t\t\t\t\t\tif (ret[0] > 0) {\n\t\t\t\t\t\t\tel.gracenotes = ret[1];\n\t\t\t\t\t\t\ti += ret[0];\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tret = letter_to_bar(line, i);\n\t\t\tif (ret[0] > 0) {\n\t\t\t\t// This is definitely a bar\n\t\t\t\toverlayLevel = 0;\n\t\t\t\tif (el.gracenotes !== undefined) {\n\t\t\t\t\t// Attach the grace note to an invisible note\n\t\t\t\t\tel.rest = { type: 'spacer' };\n\t\t\t\t\tel.duration = 0.125; // TODO-PER: I don't think the duration of this matters much, but figure out if it does.\n\t\t\t\t\tmultilineVars.addFormattingOptions(el, tune.formatting, 'note');\n\t\t\t\t\ttuneBuilder.appendElement('note', startOfLine+i, startOfLine+i+ret[0], el);\n\t\t\t\t\tmultilineVars.measureNotEmpty = true;\n\t\t\t\t\tel = {};\n\t\t\t\t}\n\t\t\t\tvar bar = {type: ret[1]};\n\t\t\t\tif (bar.type.length === 0)\n\t\t\t\t\twarn(\"Unknown bar type\", line, i);\n\t\t\t\telse {\n\t\t\t\t\tif (multilineVars.inEnding && bar.type !== 'bar_thin') {\n\t\t\t\t\t\tbar.endEnding = true;\n\t\t\t\t\t\tmultilineVars.inEnding = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (ret[2]) {\n\t\t\t\t\t\tbar.startEnding = ret[2];\n\t\t\t\t\t\tif (multilineVars.inEnding)\n\t\t\t\t\t\t\tbar.endEnding = true;\n\t\t\t\t\t\tmultilineVars.inEnding = true;\n\t\t\t\t\t\tif (ret[1] === \"bar_right_repeat\") {\n\t\t\t\t\t\t\t// restore the tie and slur state from the start repeat\n\t\t\t\t\t\t\tmultilineVars.restoreStartEndingHoldOvers();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// save inTie, inTieChord\n\t\t\t\t\t\t\tmultilineVars.duplicateStartEndingHoldOvers();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (el.decoration !== undefined)\n\t\t\t\t\t\tbar.decoration = el.decoration;\n\t\t\t\t\tif (el.chord !== undefined)\n\t\t\t\t\t\tbar.chord = el.chord;\n\t\t\t\t\tif (bar.startEnding && multilineVars.barFirstEndingNum === undefined)\n\t\t\t\t\t\tmultilineVars.barFirstEndingNum = multilineVars.currBarNumber;\n\t\t\t\t\telse if (bar.startEnding && bar.endEnding && multilineVars.barFirstEndingNum)\n\t\t\t\t\t\tmultilineVars.currBarNumber = multilineVars.barFirstEndingNum;\n\t\t\t\t\telse if (bar.endEnding)\n\t\t\t\t\t\tmultilineVars.barFirstEndingNum = undefined;\n\t\t\t\t\tif (bar.type !== 'bar_invisible' && multilineVars.measureNotEmpty) {\n\t\t\t\t\t\tif (isFirstVoice()) {\n\t\t\t\t\t\t\tmultilineVars.currBarNumber++;\n\t\t\t\t\t\t\tif (multilineVars.barNumbers && multilineVars.currBarNumber % multilineVars.barNumbers === 0)\n\t\t\t\t\t\t\t\tbar.barNumber = multilineVars.currBarNumber;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tmultilineVars.addFormattingOptions(el, tune.formatting, 'bar');\n\t\t\t\t\ttuneBuilder.appendElement('bar', startOfLine+startI, startOfLine+i+ret[0], bar);\n\t\t\t\t\tmultilineVars.measureNotEmpty = false;\n\t\t\t\t\tel = {};\n\t\t\t\t}\n\t\t\t\ti += ret[0];\n\t\t\t} else if (line[i] === '&') {\t// backtrack to beginning of measure\n\t\t\t\tret = letter_to_overlay(line, i);\n\t\t\t\tif (ret[0] > 0) {\n\t\t\t\t\ttuneBuilder.appendElement('overlay', startOfLine, startOfLine+1, {});\n\t\t\t\t\ti += 1;\n\t\t\t\t\toverlayLevel++;\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// This is definitely a note group\n\t\t\t\t//\n\t\t\t\t// Look for as many open slurs and triplets as there are. (Note: only the first triplet is valid.)\n\t\t\t\tret = letter_to_open_slurs_and_triplets(line, i);\n\t\t\t\tif (ret.consumed > 0) {\n\t\t\t\t\tif (ret.startSlur !== undefined)\n\t\t\t\t\t\tel.startSlur = ret.startSlur;\n\t\t\t\t\tif (ret.dottedSlur)\n\t\t\t\t\t\tel.dottedSlur = true;\n\t\t\t\t\tif (ret.triplet !== undefined) {\n\t\t\t\t\t\tif (tripletNotesLeft > 0)\n\t\t\t\t\t\t\twarn(\"Can't nest triplets\", line, i);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tel.startTriplet = ret.triplet;\n\t\t\t\t\t\t\tel.tripletMultiplier = ret.tripletQ / ret.triplet;\n\t\t\t\t\t\t\tel.tripletR = ret.num_notes;\n\t\t\t\t\t\t\ttripletNotesLeft = ret.num_notes === undefined ? ret.triplet : ret.num_notes;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ti += ret.consumed;\n\t\t\t\t}\n\n\t\t\t\t// handle chords.\n\t\t\t\tif (line[i] === '[') {\n\t\t\t\t\tvar chordStartChar = i;\n\t\t\t\t\ti++;\n\t\t\t\t\tvar chordDuration = null;\n\t\t\t\t\tvar rememberEndBeam = false;\n\n\t\t\t\t\tvar done = false;\n\t\t\t\t\twhile (!done) {\n\t\t\t\t\t\tvar accent = letter_to_accent(line, i);\n\t\t\t\t\t\tif (accent[0] > 0) {\n\t\t\t\t\t\t\ti += accent[0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar chordNote = getCoreNote(line, i, {}, false);\n\t\t\t\t\t\tif (chordNote !== null && chordNote.pitch !== undefined) {\n\t\t\t\t\t\t\tif (accent[0] > 0) { // If we found a decoration above, it modifies the entire chord. \"style\" is handled below.\n\t\t\t\t\t\t\t\tif (accent[1].indexOf(\"style=\") !== 0) {\n\t\t\t\t\t\t\t\t\tif (el.decoration === undefined)\n\t\t\t\t\t\t\t\t\t\tel.decoration = [];\n\t\t\t\t\t\t\t\t\tel.decoration.push(accent[1]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (chordNote.end_beam) {\n\t\t\t\t\t\t\t\tel.end_beam = true;\n\t\t\t\t\t\t\t\tdelete chordNote.end_beam;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (el.pitches === undefined) {\n\t\t\t\t\t\t\t\tel.duration = chordNote.duration;\n\t\t\t\t\t\t\t\tel.pitches = [ chordNote ];\n\t\t\t\t\t\t\t} else\t// Just ignore the note lengths of all but the first note. The standard isn't clear here, but this seems less confusing.\n\t\t\t\t\t\t\t\tel.pitches.push(chordNote);\n\t\t\t\t\t\t\tdelete chordNote.duration;\n\t\t\t\t\t\t\tif (accent[0] > 0) { // If we found a style above, it modifies the individual pitch, not the entire chord.\n\t\t\t\t\t\t\t\tif (accent[1].indexOf(\"style=\") === 0) {\n\t\t\t\t\t\t\t\t\tel.pitches[el.pitches.length-1].style = accent[1].substr(6);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (multilineVars.inTieChord[el.pitches.length]) {\n\t\t\t\t\t\t\t\tchordNote.endTie = true;\n\t\t\t\t\t\t\t\tmultilineVars.inTieChord[el.pitches.length] = undefined;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (chordNote.startTie)\n\t\t\t\t\t\t\t\tmultilineVars.inTieChord[el.pitches.length] = true;\n\n\t\t\t\t\t\t\ti  = chordNote.endChar;\n\t\t\t\t\t\t\tdelete chordNote.endChar;\n\t\t\t\t\t\t} else if (line[i] === ' ') {\n\t\t\t\t\t\t\t// Spaces are not allowed in chords, but we can recover from it by ignoring it.\n\t\t\t\t\t\t\twarn(\"Spaces are not allowed in chords\", line, i);\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (i < line.length && line[i] === ']') {\n\t\t\t\t\t\t\t\t// consume the close bracket\n\t\t\t\t\t\t\t\ti++;\n\n\t\t\t\t\t\t\t\tif (multilineVars.next_note_duration !== 0) {\n\t\t\t\t\t\t\t\t\tel.duration = el.duration * multilineVars.next_note_duration;\n\t\t\t\t\t\t\t\t\tmultilineVars.next_note_duration = 0;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (isInTie(multilineVars,  overlayLevel, el)) {\n\t\t\t\t\t\t\t\t\tel.pitches.forEach(function(pitch) { pitch.endTie = true; });\n\t\t\t\t\t\t\t\t\tsetIsInTie(multilineVars,  overlayLevel, false);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (tripletNotesLeft > 0 && !(el.rest && el.rest.type === \"spacer\")) {\n\t\t\t\t\t\t\t\t\ttripletNotesLeft--;\n\t\t\t\t\t\t\t\t\tif (tripletNotesLeft === 0) {\n\t\t\t\t\t\t\t\t\t\tel.endTriplet = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar postChordDone = false;\n\t\t\t\t\t\t\t\twhile (i < line.length && !postChordDone) {\n\t\t\t\t\t\t\t\t\tswitch (line[i]) {\n\t\t\t\t\t\t\t\t\t\tcase ' ':\n\t\t\t\t\t\t\t\t\t\tcase '\\t':\n\t\t\t\t\t\t\t\t\t\t\taddEndBeam(el);\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase ')':\n\t\t\t\t\t\t\t\t\t\t\tif (el.endSlur === undefined) el.endSlur = 1; else el.endSlur++;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase '-':\n\t\t\t\t\t\t\t\t\t\t\tel.pitches.forEach(function(pitch) { pitch.startTie = {}; });\n\t\t\t\t\t\t\t\t\t\t\tsetIsInTie(multilineVars,  overlayLevel, true);\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase '>':\n\t\t\t\t\t\t\t\t\t\tcase '<':\n\t\t\t\t\t\t\t\t\t\t\tvar br2 = getBrokenRhythm(line, i);\n\t\t\t\t\t\t\t\t\t\t\ti += br2[0] - 1;\t// index gets incremented below, so we'll let that happen\n\t\t\t\t\t\t\t\t\t\t\tmultilineVars.next_note_duration = br2[2];\n\t\t\t\t\t\t\t\t\t\t\tif (chordDuration)\n\t\t\t\t\t\t\t\t\t\t\t\tchordDuration = chordDuration * br2[1];\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\tchordDuration = br2[1];\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase '1':\n\t\t\t\t\t\t\t\t\t\tcase '2':\n\t\t\t\t\t\t\t\t\t\tcase '3':\n\t\t\t\t\t\t\t\t\t\tcase '4':\n\t\t\t\t\t\t\t\t\t\tcase '5':\n\t\t\t\t\t\t\t\t\t\tcase '6':\n\t\t\t\t\t\t\t\t\t\tcase '7':\n\t\t\t\t\t\t\t\t\t\tcase '8':\n\t\t\t\t\t\t\t\t\t\tcase '9':\n\t\t\t\t\t\t\t\t\t\tcase '/':\n\t\t\t\t\t\t\t\t\t\t\tvar fraction = tokenizer.getFraction(line, i);\n\t\t\t\t\t\t\t\t\t\t\tchordDuration = fraction.value;\n\t\t\t\t\t\t\t\t\t\t\ti = fraction.index;\n\t\t\t\t\t\t\t\t\t\t\tvar ch = line[i]\n\t\t\t\t\t\t\t\t\t\t\tif (ch === ' ')\n\t\t\t\t\t\t\t\t\t\t\t\trememberEndBeam = true;\n\t\t\t\t\t\t\t\t\t\t\tif (ch === '-' || ch === ')' || ch === ' ' || ch === '<' || ch === '>')\n\t\t\t\t\t\t\t\t\t\t\t\ti--; // Subtracting one because one is automatically added below\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\tpostChordDone = true;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase '0':\n\t\t\t\t\t\t\t\t\t\t\tchordDuration = 0;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tpostChordDone = true;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!postChordDone) {\n\t\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\twarn(\"Expected ']' to end the chords\", line, i);\n\n\t\t\t\t\t\t\tif (el.pitches !== undefined) {\n\t\t\t\t\t\t\t\tif (chordDuration !== null) {\n\t\t\t\t\t\t\t\t\tel.duration = el.duration * chordDuration;\n\t\t\t\t\t\t\t\t\tif (rememberEndBeam)\n\t\t\t\t\t\t\t\t\t\taddEndBeam(el);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tmultilineVars.addFormattingOptions(el, tune.formatting, 'note');\n\t\t\t\t\t\t\t\ttuneBuilder.appendElement('note', startOfLine+startI, startOfLine+i, el);\n\t\t\t\t\t\t\t\tmultilineVars.measureNotEmpty = true;\n\t\t\t\t\t\t\t\tel = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\t// Single pitch\n\t\t\t\t\tvar el2 = {};\n\t\t\t\t\tvar core = getCoreNote(line, i, el2, true);\n\t\t\t\t\tif (el2.endTie !== undefined) setIsInTie(multilineVars,  overlayLevel, true);\n\t\t\t\t\tif (core !== null) {\n\t\t\t\t\t\tif (core.pitch !== undefined) {\n\t\t\t\t\t\t\tel.pitches = [ { } ];\n\t\t\t\t\t\t\t// TODO-PER: straighten this out so there is not so much copying: getCoreNote shouldn't change e'\n\t\t\t\t\t\t\tif (core.accidental !== undefined) el.pitches[0].accidental = core.accidental;\n\t\t\t\t\t\t\tel.pitches[0].pitch = core.pitch;\n\t\t\t\t\t\t\tel.pitches[0].name = core.name;\n\t\t\t\t\t\t\tif (core.midipitch || core.midipitch === 0)\n\t\t\t\t\t\t\t\tel.pitches[0].midipitch = core.midipitch;\n\t\t\t\t\t\t\tif (core.endSlur !== undefined) el.pitches[0].endSlur = core.endSlur;\n\t\t\t\t\t\t\tif (core.endTie !== undefined) el.pitches[0].endTie = core.endTie;\n\t\t\t\t\t\t\tif (core.startSlur !== undefined) el.pitches[0].startSlur = core.startSlur;\n\t\t\t\t\t\t\tif (el.startSlur !== undefined) el.pitches[0].startSlur = el.startSlur;\n\t\t\t\t\t\t\tif (el.dottedSlur !== undefined) el.pitches[0].dottedSlur = true;\n\t\t\t\t\t\t\tif (core.startTie !== undefined) el.pitches[0].startTie = core.startTie;\n\t\t\t\t\t\t\tif (el.startTie !== undefined) el.pitches[0].startTie = el.startTie;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tel.rest = core.rest;\n\t\t\t\t\t\t\tif (core.rest.type === 'multimeasure' && isFirstVoice())\n\t\t\t\t\t\t\t\tmultilineVars.currBarNumber += core.rest.text - 1 // The minus one is because the measure with the rest is already counted once normally.\n\t\t\t\t\t\t\tif (core.endSlur !== undefined) el.endSlur = core.endSlur;\n\t\t\t\t\t\t\tif (core.endTie !== undefined) el.rest.endTie = core.endTie;\n\t\t\t\t\t\t\tif (core.startSlur !== undefined) el.startSlur = core.startSlur;\n\t\t\t\t\t\t\tif (core.startTie !== undefined) el.rest.startTie = core.startTie;\n\t\t\t\t\t\t\tif (el.startTie !== undefined) el.rest.startTie = el.startTie;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (core.chord !== undefined) el.chord = core.chord;\n\t\t\t\t\t\tif (core.duration !== undefined) el.duration = core.duration;\n\t\t\t\t\t\tif (core.decoration !== undefined) el.decoration = core.decoration;\n\t\t\t\t\t\tif (core.graceNotes !== undefined) el.graceNotes = core.graceNotes;\n\t\t\t\t\t\tdelete el.startSlur;\n\t\t\t\t\t\tdelete el.dottedSlur;\n\t\t\t\t\t\tif (isInTie(multilineVars,  overlayLevel, el)) {\n\t\t\t\t\t\t\tif (el.pitches !== undefined) {\n\t\t\t\t\t\t\t\tel.pitches[0].endTie = true;\n\t\t\t\t\t\t\t} else if (el.rest.type !== 'spacer') {\n\t\t\t\t\t\t\t\tel.rest.endTie = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsetIsInTie(multilineVars,  overlayLevel, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (core.startTie || el.startTie)\n\t\t\t\t\t\t\tsetIsInTie(multilineVars,  overlayLevel, true);\n\t\t\t\t\t\ti  = core.endChar;\n\n\t\t\t\t\t\tif (tripletNotesLeft > 0 && !(core.rest && core.rest.type === \"spacer\")) {\n\t\t\t\t\t\t\ttripletNotesLeft--;\n\t\t\t\t\t\t\tif (tripletNotesLeft === 0) {\n\t\t\t\t\t\t\t\tel.endTriplet = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (core.end_beam)\n\t\t\t\t\t\t\taddEndBeam(el);\n\n\t\t\t\t\t\t// If there is a whole rest, then it should be the duration of the measure, not it's own duration. We need to special case it.\n\t\t\t\t\t\t// If the time signature length is greater than 4/4, though, then a whole rest has no special treatment.\n\t\t\t\t\t\tif (el.rest && el.rest.type === 'rest' && el.duration === 1 && durationOfMeasure(multilineVars) <= 1) {\n\t\t\t\t\t\t\tel.rest.type = 'whole';\n\n\t\t\t\t\t\t\tel.duration = durationOfMeasure(multilineVars);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Create a warning if this is not a displayable duration.\n\t\t\t\t\t\t// The first item on a line is a regular note value, each item after that represents a dot placed after the previous note.\n\t\t\t\t\t\t// Only durations less than a whole note are tested because whole note durations have some tricky rules.\n\n\t\t\t\t\t\tif (el.duration < 1 && durations.indexOf(el.duration) === -1 && el.duration !== 0) {\n\t\t\t\t\t\t\tif (!el.rest || el.rest.type !== 'spacer')\n\t\t\t\t\t\t\t\twarn(\"Duration not representable: \" + line.substring(startI, i), line, i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmultilineVars.addFormattingOptions(el, tune.formatting, 'note');\n\t\t\t\t\t\tvar succeeded = tuneBuilder.appendElement('note', startOfLine+startI, startOfLine+i, el);\n\t\t\t\t\t\tif (!succeeded) {\n\t\t\t\t\t\t\tthis.startNewLine()\n\t\t\t\t\t\t\ttuneBuilder.appendElement('note', startOfLine+startI, startOfLine+i, el);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmultilineVars.measureNotEmpty = true;\n\t\t\t\t\t\tel = {};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (i === startI) {\t// don't know what this is, so ignore it.\n\t\t\t\t\tif (line[i] !== ' ' && line[i] !== '`')\n\t\t\t\t\t\twarn(\"Unknown character ignored\", line, i);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tthis.lineContinuation = line.indexOf('\\x12') >= 0 || (retHeader[0] > 0)\n\tif (!this.lineContinuation) { el = { } }\n};\n\nvar setIsInTie =function(multilineVars, overlayLevel, value) {\n\t// If this is single voice music then the voice index isn't set, so we use the first voice.\n\tvar voiceIndex = multilineVars.currentVoice ? multilineVars.currentVoice.staffNum * 100 + multilineVars.currentVoice.index : 0;\n\tif (multilineVars.inTie[overlayLevel] === undefined)\n\t\tmultilineVars.inTie[overlayLevel] = [];\n\tmultilineVars.inTie[overlayLevel][voiceIndex] = value;\n};\n\nvar letter_to_chord = function(line, i) {\n\tif (line[i] === '\"')\n\t{\n\t\tvar chord = tokenizer.getBrackettedSubstring(line, i, 5);\n\t\tif (!chord[2])\n\t\t\twarn(\"Missing the closing quote while parsing the chord symbol\", line , i);\n\t\t// If it starts with ^, then the chord appears above.\n\t\t// If it starts with _ then the chord appears below.\n\t\t// (note that the 2.0 draft standard defines them as not chords, but annotations and also defines @.)\n\t\tif (chord[0] > 0 && chord[1].length > 0 && chord[1][0] === '^') {\n\t\t\tchord[1] = chord[1].substring(1);\n\t\t\tchord[2] = 'above';\n\t\t} else if (chord[0] > 0 && chord[1].length > 0 && chord[1][0] === '_') {\n\t\t\tchord[1] = chord[1].substring(1);\n\t\t\tchord[2] = 'below';\n\t\t} else if (chord[0] > 0 && chord[1].length > 0 && chord[1][0] === '<') {\n\t\t\tchord[1] = chord[1].substring(1);\n\t\t\tchord[2] = 'left';\n\t\t} else if (chord[0] > 0 && chord[1].length > 0 && chord[1][0] === '>') {\n\t\t\tchord[1] = chord[1].substring(1);\n\t\t\tchord[2] = 'right';\n\t\t} else if (chord[0] > 0 && chord[1].length > 0 && chord[1][0] === '@') {\n\t\t      // @-15,5.7\t\t\n\t\t      chord[1] = chord[1].substring(1);\n\t\t      var x = tokenizer.getFloat(chord[1]);\n\t\t      if (x.digits === 0){\n\t\t\twarn(\"Missing first position in absolutely positioned annotation.\", line, i);\n\t\t\tchord[1] = chord[1].replace(\"@\",\"\");\n\t\t\tchord[2] = 'above';\n\t\t\treturn chord;\n\t\t      }\n\t\t      chord[1] = chord[1].substring(x.digits);\n\t\t      if (chord[1][0] !== ','){\n\t\t\twarn(\"Missing comma absolutely positioned annotation.\", line, i);\n\t\t\tchord[1] = chord[1].replace(\"@\",\"\");\n\t\t\tchord[2] = 'above';\n\t\t\treturn chord;\n\t\t      }\n\t\t      chord[1] = chord[1].substring(1);\n\t\t      var y = tokenizer.getFloat(chord[1]);\n\t\t      if (y.digits === 0){\n\t\t\twarn(\"Missing second position in absolutely positioned annotation.\", line, i);\n\t\t\tchord[1] = chord[1].replace(\"@\",\"\");\n\t\t\tchord[2] = 'above';\n\t\t\treturn chord;\n\t\t      }\n\t\t      chord[1] = chord[1].substring(y.digits);\n\t\t      var ws = tokenizer.skipWhiteSpace(chord[1]);\n\t\t      chord[1] = chord[1].substring(ws);\n\t\t      chord[2] = null;\n\t\t      chord[3] = {\n\t\t\tx: x.value,\n\t\t\ty: y.value\n\t\t      };\t\n\t\t} else {\n\t\t\tif (multilineVars.freegchord !== true) {\n\t\t\t\tchord[1] = chord[1].replace(/([ABCDEFG0-9])b/g, \"$1♭\");\n\t\t\t\tchord[1] = chord[1].replace(/([ABCDEFG0-9])#/g, \"$1♯\");\n\t\t\t\tchord[1] = chord[1].replace(/^([ABCDEFG])([♯♭]?)o([^A-Za-z])/g, \"$1$2°$3\");\n\t\t\t\tchord[1] = chord[1].replace(/^([ABCDEFG])([♯♭]?)o$/g, \"$1$2°\");\n\t\t\t\tchord[1] = chord[1].replace(/^([ABCDEFG])([♯♭]?)0([^A-Za-z])/g, \"$1$2ø$3\");\n\t\t\t\tchord[1] = chord[1].replace(/^([ABCDEFG])([♯♭]?)\\^([^A-Za-z])/g, \"$1$2∆$3\");\n\t\t\t}\n\t\t\tchord[2] = 'default';\n\t\t\tchord[1] = transpose.chordName(multilineVars, chord[1]);\n\t\t}\n\t\treturn chord;\n\t}\n\treturn [0, \"\"];\n};\n\nvar letter_to_grace =  function(line, i) {\n\t// Grace notes are an array of: startslur, note, endslur, space; where note is accidental, pitch, duration\n\tif (line[i] === '{') {\n\t\t// fetch the gracenotes string and consume that into the array\n\t\tvar gra = tokenizer.getBrackettedSubstring(line, i, 1, '}');\n\t\tif (!gra[2])\n\t\t\twarn(\"Missing the closing '}' while parsing grace note\", line, i);\n\t\t// If there is a slur after the grace construction, then move it to the last note inside the grace construction\n\t\tif (line[i+gra[0]] === ')') {\n\t\t\tgra[0]++;\n\t\t\tgra[1] += ')';\n\t\t}\n\n\t\tvar gracenotes = [];\n\t\tvar ii = 0;\n\t\tvar inTie = false;\n\t\twhile (ii < gra[1].length) {\n\t\t\tvar acciaccatura = false;\n\t\t\tif (gra[1][ii] === '/') {\n\t\t\t\tacciaccatura = true;\n\t\t\t\tii++;\n\t\t\t}\n\t\t\tvar note = getCoreNote(gra[1], ii, {}, false);\n\t\t\tif (note !== null) {\n\t\t\t\t// The grace note durations should not be affected by the default length: they should be based on 1/16, so if that isn't the default, then multiply here.\n\t\t\t\tnote.duration = note.duration / (multilineVars.default_length * 8);\n\t\t\t\tif (acciaccatura)\n\t\t\t\t\tnote.acciaccatura = true;\n\t\t\t\tif (note.rest) {\n\t\t\t\t\t// don't allow rests inside gracenotes\n\t\t\t\t\twarn(\"Rests not allowed as grace notes '\" + gra[1][ii] + \"' while parsing grace note\", line, i);\n\t\t\t\t} else\n\t\t\t\t\tgracenotes.push(note);\n\n\t\t\t\tif (inTie) {\n\t\t\t\t\tnote.endTie = true;\n\t\t\t\t\tinTie = false;\n\t\t\t\t}\n\t\t\t\tif (note.startTie)\n\t\t\t\t\tinTie = true;\n\n\t\t\t\tii  = note.endChar;\n\t\t\t\tdelete note.endChar;\n\n\t\t\t\tif (note.end_beam) {\n\t\t\t\t\tnote.endBeam = true;\n\t\t\t\t\tdelete note.end_beam;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// We shouldn't get anything but notes or a space here, so report an error\n\t\t\t\tif (gra[1][ii] === ' ') {\n\t\t\t\t\tif (gracenotes.length > 0)\n\t\t\t\t\t\tgracenotes[gracenotes.length-1].endBeam = true;\n\t\t\t\t} else\n\t\t\t\t\twarn(\"Unknown character '\" + gra[1][ii] + \"' while parsing grace note\", line, i);\n\t\t\t\tii++;\n\t\t\t}\n\t\t}\n\t\tif (gracenotes.length)\n\t\t\treturn [gra[0], gracenotes];\n\t}\n\treturn [ 0 ];\n};\n\nfunction letter_to_overlay(line, i) {\n\tif (line[i] === '&') {\n\t\tvar start = i;\n\t\twhile (line[i] && line[i] !== ':' && line[i] !== '|')\n\t\t\ti++;\n\t\treturn [ i-start, line.substring(start+1, i) ];\n\t}\n\treturn [ 0 ];\n}\n\nfunction durationOfMeasure(multilineVars) {\n\t// TODO-PER: This could be more complicated if one of the unusual measures is used.\n\tvar meter = multilineVars.origMeter;\n\tif (!meter || meter.type !== 'specified')\n\t\treturn 1;\n\tif (!meter.value || meter.value.length === 0)\n\t\treturn 1;\n\treturn parseInt(meter.value[0].num, 10) / parseInt(meter.value[0].den, 10);\n}\n\n\n\n\nvar letter_to_accent = function(line, i) {\n\tvar macro = multilineVars.macros[line[i]];\n\n\tif (macro !== undefined) {\n\t\tif (macro[0] === '!' || macro[0] === '+')\n\t\t\tmacro = macro.substring(1);\n\t\tif (macro[macro.length-1] === '!' || macro[macro.length-1] === '+')\n\t\t\tmacro = macro.substring(0, macro.length-1);\n\t\tif (legalAccents.includes(macro))\n\t\t\treturn [ 1, macro ];\n\t\telse if (volumeDecorations.includes(macro)) {\n\t\t\tif (multilineVars.volumePosition === 'hidden')\n\t\t\t\tmacro = \"\";\n\t\t\treturn [1, macro];\n\t\t} else if (dynamicDecorations.includes(macro)) {\n\t\t\tif (multilineVars.dynamicPosition === 'hidden')\n\t\t\t\tmacro = \"\";\n\t\t\treturn [1, macro];\n\t\t} else {\n\t\t\tif (!multilineVars.ignoredDecorations.includes(macro))\n\t\t\t\twarn(\"Unknown macro: \" + macro, line, i);\n\t\t\treturn [1, '' ];\n\t\t}\n\t}\n\tswitch (line[i])\n\t{\n\t\tcase '.':\n\t\t\tif (line[i+1] === '(' || line[i+1] === '-') // a dot then open paren is a dotted slur; likewise dot dash is dotted tie.\n\t\t\t\tbreak;\n\t\t\treturn [1, 'staccato'];\n\t\tcase 'u':return [1, 'upbow'];\n\t\tcase 'v':return [1, 'downbow'];\n\t\tcase '~':return [1, 'irishroll'];\n\t\tcase '!':\n\t\tcase '+':\n\t\t\tvar ret = tokenizer.getBrackettedSubstring(line, i, 5);\n\t\t\t// Be sure that the accent is recognizable.\n\t\t\tif (ret[1].length > 1 && (ret[1][0] === '^' || ret[1][0] ==='_'))\n\t\t\t\tret[1] = ret[1].substring(1);\t// TODO-PER: The test files have indicators forcing the ornament to the top or bottom, but that isn't in the standard. We'll just ignore them.\n\t\t\tif (legalAccents.includes(ret[1]))\n\t\t\t\treturn ret;\n\t\t\tif (volumeDecorations.includes(ret[1])) {\n\t\t\t\tif (multilineVars.volumePosition === 'hidden' )\n\t\t\t\t\tret[1] = '';\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tif (dynamicDecorations.includes(ret[1])) {\n\t\t\t\tif (multilineVars.dynamicPosition === 'hidden' )\n\t\t\t\t\tret[1] = '';\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\tvar ind = accentPseudonyms.findIndex(function (acc) { return ret[1] === acc[0]})\n\t\t\tif (ind >= 0) {\n\t\t\t\tret[1] = accentPseudonyms[ind][1];\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\tind = accentDynamicPseudonyms.findIndex(function (acc) { return ret[1] === acc[0]})\n\t\t\tif (ind >= 0) {\n\t\t\t\tret[1] = accentDynamicPseudonyms[ind][1];\n\t\t\t\tif (multilineVars.dynamicPosition === 'hidden' )\n\t\t\t\t\tret[1] = '';\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// We didn't find the accent in the list, so consume the space, but don't return an accent.\n\t\t\t// Although it is possible that ! was used as a line break, so accept that.\n\t\t\tif (line[i] === '!' && (ret[0] === 1 || line[i+ret[0]-1] !== '!'))\n\t\t\t\treturn [1, null ];\n\t\t\twarn(\"Unknown decoration: \" + ret[1], line, i);\n\t\t\tret[1] = \"\";\n\t\t\treturn ret;\n\t\tcase 'H':return [1, 'fermata'];\n\t\tcase 'J':return [1, 'slide'];\n\t\tcase 'L':return [1, 'accent'];\n\t\tcase 'M':return [1, 'mordent'];\n\t\tcase 'O':return[1, 'coda'];\n\t\tcase 'P':return[1, 'pralltriller'];\n\t\tcase 'R':return [1, 'roll'];\n\t\tcase 'S':return [1, 'segno'];\n\t\tcase 'T':return [1, 'trill'];\n\t\tcase 't':return [1, 'trillh'];\n\t\t\n\t}\n\treturn [0, 0];\n};\n\nvar letter_to_spacer = function(line, i) {\n\tvar start = i;\n\twhile (tokenizer.isWhiteSpace(line[i]))\n\t\ti++;\n\treturn [ i-start ];\n};\n\n// returns the class of the bar line\n// the number of the repeat\n// and the number of characters used up\n// if 0 is returned, then the next element was not a bar line\nvar letter_to_bar = function(line, curr_pos) {\n\tvar ret = tokenizer.getBarLine(line, curr_pos);\n\tif (ret.len === 0)\n\t\treturn [0,\"\"];\n\tif (ret.warn) {\n\t\twarn(ret.warn, line, curr_pos);\n\t\treturn [ret.len,\"\"];\n\t}\n\n\t// Now see if this is a repeated ending\n\t// A repeated ending is all of the characters 1,2,3,4,5,6,7,8,9,0,-, and comma\n\t// It can also optionally start with '[', which is ignored.\n\t// Also, it can have white space before the '['.\n\tfor (var ws = 0; ws < line.length; ws++)\n\t\tif (line[curr_pos + ret.len + ws] !== ' ')\n\t\t\tbreak;\n\tvar orig_bar_len = ret.len;\n\tif (line[curr_pos+ret.len+ws] === '[') {\n\t\tret.len += ws + 1;\n\t}\n\n\t// It can also be a quoted string. It is unclear whether that construct requires '[', but it seems like it would. otherwise it would be confused with a regular chord.\n\tif (line[curr_pos+ret.len] === '\"' && line[curr_pos+ret.len-1] === '[') {\n\t\tvar ending = tokenizer.getBrackettedSubstring(line, curr_pos+ret.len, 5);\n\t\treturn [ret.len+ending[0], ret.token, ending[1]];\n\t}\n\tvar retRep = tokenizer.getTokenOf(line.substring(curr_pos+ret.len), \"1234567890-,\");\n\tif (retRep.len === 0 || retRep.token[0] === '-')\n\t\treturn [orig_bar_len, ret.token];\n\n\treturn [ret.len+retRep.len, ret.token, retRep.token];\n};\n\nvar letter_to_open_slurs_and_triplets =  function(line, i) {\n\t// consume spaces, and look for all the open parens. If there is a number after the open paren,\n\t// that is a triplet. Otherwise that is a slur. Collect all the slurs and the first triplet.\n\tvar ret = {};\n\tvar start = i;\n\tif (line[i] === '.' && line[i+1] === '(') {\n\t\tret.dottedSlur = true;\n\t\ti++;\n\t}\n\twhile (line[i] === '(' || tokenizer.isWhiteSpace(line[i])) {\n\t\tif (line[i] === '(') {\n\t\t\tif (i+1 < line.length && (line[i+1] >= '2' && line[i+1] <= '9')) {\n\t\t\t\tif (ret.triplet !== undefined)\n\t\t\t\t\twarn(\"Can't nest triplets\", line, i);\n\t\t\t\telse {\n\t\t\t\t\tret.triplet = line[i+1] - '0';\n\t\t\t\t\tret.tripletQ = tripletQ[ret.triplet];\n\t\t\t\t\tret.num_notes = ret.triplet;\n\t\t\t\t\tif (i+2 < line.length && line[i+2] === ':') {\n\t\t\t\t\t\t// We are expecting \"(p:q:r\" or \"(p:q\" or \"(p::r\"\n\t\t\t\t\t\t// That is: \"put p notes into the time of q for the next r notes\"\n\t\t\t\t\t\t// if r is missing, then it is equal to p.\n\t\t\t\t\t\t// if q is missing, it is determined from this table:\n\t\t\t\t\t\t// (2 notes in the time of 3\n\t\t\t\t\t\t// (3 notes in the time of 2\n\t\t\t\t\t\t// (4 notes in the time of 3\n\t\t\t\t\t\t// (5 notes in the time of n | if time sig is (6/8, 9/8, 12/8), n=3, else n=2\n\t\t\t\t\t\t// (6 notes in the time of 2\n\t\t\t\t\t\t// (7 notes in the time of n\n\t\t\t\t\t\t// (8 notes in the time of 3\n\t\t\t\t\t\t// (9 notes in the time of n\n\t\t\t\t\t\tif (i+3 < line.length && line[i+3] === ':') {\n\t\t\t\t\t\t\t// The second number, 'q', is not present.\n\t\t\t\t\t\t\tif (i+4 < line.length && (line[i+4] >= '1' && line[i+4] <= '9')) {\n\t\t\t\t\t\t\t\tret.num_notes = line[i+4] - '0';\n\t\t\t\t\t\t\t\ti += 3;\n\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\twarn(\"expected number after the two colons after the triplet to mark the duration\", line, i);\n\t\t\t\t\t\t} else if (i+3 < line.length && (line[i+3] >= '1' && line[i+3] <= '9')) {\n\t\t\t\t\t\t\tret.tripletQ = line[i+3] - '0';\n\t\t\t\t\t\t\tif (i+4 < line.length && line[i+4] === ':') {\n\t\t\t\t\t\t\t\tif (i+5 < line.length && (line[i+5] >= '1' && line[i+5] <= '9')) {\n\t\t\t\t\t\t\t\t\tret.num_notes = line[i+5] - '0';\n\t\t\t\t\t\t\t\t\ti += 4;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ti += 2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\twarn(\"expected number after the triplet to mark the duration\", line, i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (ret.startSlur === undefined)\n\t\t\t\t\tret.startSlur = 1;\n\t\t\t\telse\n\t\t\t\t\tret.startSlur++;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\tret.consumed = i-start;\n\treturn ret;\n};\n\nMusicParser.prototype.startNewLine = function() {\n\tvar params = { startChar: -1, endChar: -1};\n\tif (multilineVars.partForNextLine.title)\n\t\tparams.part = multilineVars.partForNextLine;\n\tparams.clef = multilineVars.currentVoice && multilineVars.staves[multilineVars.currentVoice.staffNum].clef !== undefined ? Object.assign({},multilineVars.staves[multilineVars.currentVoice.staffNum].clef) : Object.assign({},multilineVars.clef);\n\tvar scoreTranspose = multilineVars.currentVoice ? multilineVars.currentVoice.scoreTranspose : 0;\n\tparams.key = parseKeyVoice.standardKey(multilineVars.key.root+multilineVars.key.acc+multilineVars.key.mode, multilineVars.key.root, multilineVars.key.acc, scoreTranspose);\n\tparams.key.mode = multilineVars.key.mode;\n\tif (multilineVars.key.impliedNaturals)\n\t\tparams.key.impliedNaturals = multilineVars.key.impliedNaturals;\n\tif (multilineVars.key.explicitAccidentals) {\n\t\tfor (var i = 0; i < multilineVars.key.explicitAccidentals.length; i++) {\n\t\t\tvar found = false;\n\t\t\tfor (var j = 0; j < params.key.accidentals.length; j++) {\n\t\t\t\tif (params.key.accidentals[j].note === multilineVars.key.explicitAccidentals[i].note) {\n\t\t\t\t\t// If the note is already in the list, override it with the new value\n\t\t\t\t\tparams.key.accidentals[j].acc = multilineVars.key.explicitAccidentals[i].acc;\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found)\n\t\t\t\tparams.key.accidentals.push(multilineVars.key.explicitAccidentals[i]);\n\t\t}\n\t}\n\tmultilineVars.targetKey = params.key;\n\tif (params.key.explicitAccidentals)\n\t\tdelete params.key.explicitAccidentals;\n\tparseKeyVoice.addPosToKey(params.clef, params.key);\n\tif (multilineVars.meter !== null) {\n\t\tif (multilineVars.currentVoice) {\n\t\t\tmultilineVars.staves.forEach(function(st) {\n\t\t\t\tst.meter = multilineVars.meter;\n\t\t\t});\n\t\t\tparams.meter = multilineVars.staves[multilineVars.currentVoice.staffNum].meter;\n\t\t\tmultilineVars.staves[multilineVars.currentVoice.staffNum].meter = null;\n\t\t} else\n\t\t\tparams.meter = multilineVars.meter;\n\t\tmultilineVars.meter = null;\n\t} else if (multilineVars.currentVoice && multilineVars.staves[multilineVars.currentVoice.staffNum].meter) {\n\t\t// Make sure that each voice gets the meter marking.\n\t\tparams.meter = multilineVars.staves[multilineVars.currentVoice.staffNum].meter;\n\t\tmultilineVars.staves[multilineVars.currentVoice.staffNum].meter = null;\n\t}\n\tif (multilineVars.currentVoice && multilineVars.currentVoice.name)\n\t\tparams.name = multilineVars.currentVoice.name;\n\tif (multilineVars.vocalfont)\n\t\tparams.vocalfont = multilineVars.vocalfont;\n\tif (multilineVars.tripletfont)\n\t\tparams.tripletfont = multilineVars.tripletfont;\n\tif (multilineVars.gchordfont)\n\t\tparams.gchordfont = multilineVars.gchordfont;\n\tif (multilineVars.style)\n\t\tparams.style = multilineVars.style;\n\tif (multilineVars.currentVoice) {\n\t\tvar staff = multilineVars.staves[multilineVars.currentVoice.staffNum];\n\t\tif (staff.brace) params.brace = staff.brace;\n\t\tif (staff.bracket) params.bracket = staff.bracket;\n\t\tif (staff.connectBarLines) params.connectBarLines = staff.connectBarLines;\n\t\tif (staff.name) params.name = staff.name[multilineVars.currentVoice.index];\n\t\tif (staff.subname) params.subname = staff.subname[multilineVars.currentVoice.index];\n\t\tif (multilineVars.currentVoice.stem)\n\t\t\tparams.stem = multilineVars.currentVoice.stem;\n\t\tif (multilineVars.currentVoice.stafflines)\n\t\t\tparams.stafflines = multilineVars.currentVoice.stafflines;\n\t\tif (multilineVars.currentVoice.staffscale)\n\t\t\tparams.staffscale = multilineVars.currentVoice.staffscale;\n\t\tif (multilineVars.currentVoice.scale)\n\t\t\tparams.scale = multilineVars.currentVoice.scale;\n\t\tif (multilineVars.currentVoice.color)\n\t\t\tparams.color = multilineVars.currentVoice.color;\n\t\tif (multilineVars.currentVoice.style)\n\t\t\tparams.style = multilineVars.currentVoice.style;\n\t\tif (multilineVars.currentVoice.transpose)\n\t\t\tparams.clef.transpose = multilineVars.currentVoice.transpose;\n\t\tparams.currentVoice = multilineVars.currentVoice\n\t\tvar voices = Object.keys(multilineVars.voices)\n\t\tfor (var mv = 0; mv < voices.length; mv++) {\n\t\t\tif (params.currentVoice.staffNum === multilineVars.voices[voices[mv]].staffNum && params.currentVoice.index === multilineVars.voices[voices[mv]].index)\n\t\t\t\tparams.currentVoiceName = voices[mv]\n\t\t}\n\t}\n\tif (multilineVars.barNumbers === 0 && isFirstVoice() && multilineVars.currBarNumber !== 1)\n\t\tparams.barNumber = multilineVars.currBarNumber;\n\ttuneBuilder.startNewLine(params);\n\tif (multilineVars.key.impliedNaturals)\n\t\tdelete multilineVars.key.impliedNaturals;\n\n\tmultilineVars.partForNextLine = {};\n\tif (multilineVars.tempoForNextLine.length === 4)\n\t\ttuneBuilder.appendElement(multilineVars.tempoForNextLine[0],multilineVars.tempoForNextLine[1],multilineVars.tempoForNextLine[2],multilineVars.tempoForNextLine[3]);\n\tmultilineVars.tempoForNextLine = [];\n}\n\n// TODO-PER: make this a method in el.\nvar addEndBeam = function(el) {\n\tif (el.duration !== undefined && el.duration < 0.25)\n\t\tel.end_beam = true;\n\treturn el;\n};\n\nvar getCoreNote = function(line, index, el, canHaveBrokenRhythm) {\n\t//var el = { startChar: index };\n\tvar isComplete = function(state) {\n\t\treturn (state === 'octave' || state === 'duration' || state === 'Zduration' || state === 'broken_rhythm' || state === 'end_slur');\n\t};\n\tvar dottedTie;\n\tif (line[index] === '.' && line[index+1] === '-') {\n\t\tdottedTie = true;\n\t\tindex++;\n\t}\n\tvar state = 'startSlur';\n\tvar durationSetByPreviousNote = false;\n\twhile (1) {\n\t\tswitch(line[index]) {\n\t\t\tcase '(':\n\t\t\t\tif (state === 'startSlur') {\n\t\t\t\t\tif (el.startSlur === undefined) el.startSlur = 1; else el.startSlur++;\n\t\t\t\t} else if (isComplete(state)) {el.endChar = index;return el;}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase ')':\n\t\t\t\tif (isComplete(state)) {\n\t\t\t\t\tif (el.endSlur === undefined) el.endSlur = 1; else el.endSlur++;\n\t\t\t\t} else return null;\n\t\t\t\tbreak;\n\t\t\tcase '^':\n\t\t\t\tif (state === 'startSlur') {el.accidental = 'sharp';state = 'sharp2';}\n\t\t\t\telse if (state === 'sharp2') {el.accidental = 'dblsharp';state = 'pitch';}\n\t\t\t\telse if (isComplete(state)) {el.endChar = index;return el;}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase '_':\n\t\t\t\tif (state === 'startSlur') {el.accidental = 'flat';state = 'flat2';}\n\t\t\t\telse if (state === 'flat2') {el.accidental = 'dblflat';state = 'pitch';}\n\t\t\t\telse if (isComplete(state)) {el.endChar = index;return el;}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase '=':\n\t\t\t\tif (state === 'startSlur') {el.accidental = 'natural';state = 'pitch';}\n\t\t\t\telse if (isComplete(state)) {el.endChar = index;return el;}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase 'A':\n\t\t\tcase 'B':\n\t\t\tcase 'C':\n\t\t\tcase 'D':\n\t\t\tcase 'E':\n\t\t\tcase 'F':\n\t\t\tcase 'G':\n\t\t\tcase 'a':\n\t\t\tcase 'b':\n\t\t\tcase 'c':\n\t\t\tcase 'd':\n\t\t\tcase 'e':\n\t\t\tcase 'f':\n\t\t\tcase 'g':\n\t\t\t\tif (state === 'startSlur' || state === 'sharp2' || state === 'flat2' || state === 'pitch') {\n\t\t\t\t\tel.pitch = pitches[line[index]];\n\t\t\t\t\tel.pitch += 7 * (multilineVars.currentVoice && multilineVars.currentVoice.octave !== undefined ? multilineVars.currentVoice.octave : multilineVars.octave);\n\t\t\t\t\tel.name = line[index];\n\t\t\t\t\tif (el.accidental)\n\t\t\t\t\t\tel.name = accMap[el.accidental] + el.name;\n\t\t\t\t\ttranspose.note(multilineVars, el);\n\t\t\t\t\tstate = 'octave';\n\t\t\t\t\t// At this point we have a valid note. The rest is optional. Set the duration in case we don't get one below\n\t\t\t\t\tif (canHaveBrokenRhythm && multilineVars.next_note_duration !== 0) {\n\t\t\t\t\t\tel.duration = multilineVars.default_length * multilineVars.next_note_duration;\n\t\t\t\t\t\tmultilineVars.next_note_duration = 0;\n\t\t\t\t\t\tdurationSetByPreviousNote = true;\n\t\t\t\t\t} else\n\t\t\t\t\t\tel.duration = multilineVars.default_length;\n\t\t\t\t\t// If the clef is percussion, there is probably some translation of the pitch to a particular drum kit item.\n\t\t\t\t\tif ((multilineVars.clef && multilineVars.clef.type === \"perc\") ||\n\t\t\t\t\t\t(multilineVars.currentVoice && multilineVars.currentVoice.clef === \"perc\")) {\n\t\t\t\t\t\tvar key = line[index];\n\t\t\t\t\t\tif (el.accidental) {\n\t\t\t\t\t\t\tkey = accMap[el.accidental] + key;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tune.formatting && tune.formatting.midi && tune.formatting.midi.drummap)\n\t\t\t\t\t\tel.midipitch = tune.formatting.midi.drummap[key];\n\t\t\t\t\t}\n\t\t\t\t} else if (isComplete(state)) {el.endChar = index;return el;}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase ',':\n\t\t\t\tif (state === 'octave') {el.pitch -= 7; el.name += ','; }\n\t\t\t\telse if (isComplete(state)) {el.endChar = index;return el;}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase '\\'':\n\t\t\t\tif (state === 'octave') {el.pitch += 7; el.name += \"'\";  }\n\t\t\t\telse if (isComplete(state)) {el.endChar = index;return el;}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase 'x':\n\t\t\tcase 'X':\n\t\t\tcase 'y':\n\t\t\tcase 'z':\n\t\t\tcase 'Z':\n\t\t\t\tif (state === 'startSlur') {\n\t\t\t\t\tel.rest = { type: rests[line[index]] };\n\t\t\t\t\t// There shouldn't be some of the properties that notes have. If some sneak in due to bad syntax in the abc file,\n\t\t\t\t\t// just nix them here.\n\t\t\t\t\tdelete el.accidental;\n\t\t\t\t\tdelete el.startSlur;\n\t\t\t\t\tdelete el.startTie;\n\t\t\t\t\tdelete el.endSlur;\n\t\t\t\t\tdelete el.endTie;\n\t\t\t\t\tdelete el.end_beam;\n\t\t\t\t\tdelete el.grace_notes;\n\t\t\t\t\t// At this point we have a valid note. The rest is optional. Set the duration in case we don't get one below\n\t\t\t\t\tif (el.rest.type.indexOf('multimeasure') >= 0) {\n\t\t\t\t\t\tel.duration = tune.getBarLength();\n\t\t\t\t\t\tel.rest.text = 1;\n\t\t\t\t\t\tstate = 'Zduration';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (canHaveBrokenRhythm && multilineVars.next_note_duration !== 0) {\n\t\t\t\t\t\t\tel.duration = multilineVars.default_length * multilineVars.next_note_duration;\n\t\t\t\t\t\t\tmultilineVars.next_note_duration = 0;\n\t\t\t\t\t\t\tdurationSetByPreviousNote = true;\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tel.duration = multilineVars.default_length;\n\t\t\t\t\t\tstate = 'duration';\n\t\t\t\t\t}\n\t\t\t\t} else if (isComplete(state)) {el.endChar = index;return el;}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase '1':\n\t\t\tcase '2':\n\t\t\tcase '3':\n\t\t\tcase '4':\n\t\t\tcase '5':\n\t\t\tcase '6':\n\t\t\tcase '7':\n\t\t\tcase '8':\n\t\t\tcase '9':\n\t\t\tcase '0':\n\t\t\tcase '/':\n\t\t\t\tif (state === 'octave' || state === 'duration') {\n\t\t\t\t\tvar fraction = tokenizer.getFraction(line, index);\n\t\t\t\t\t//if (!durationSetByPreviousNote)\n\t\t\t\t\tel.duration = el.duration * fraction.value;\n\t\t\t\t\t// TODO-PER: We can test the returned duration here and give a warning if it isn't the one expected.\n\t\t\t\t\tel.endChar = fraction.index;\n\t\t\t\t\twhile (fraction.index < line.length && (tokenizer.isWhiteSpace(line[fraction.index]) || line[fraction.index] === '-')) {\n\t\t\t\t\t\tif (line[fraction.index] === '-')\n\t\t\t\t\t\t\tel.startTie = {};\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tel = addEndBeam(el);\n\t\t\t\t\t\tfraction.index++;\n\t\t\t\t\t}\n\t\t\t\t\tindex = fraction.index-1;\n\t\t\t\t\tstate = 'broken_rhythm';\n\t\t\t\t} else if (state === 'sharp2') {\n\t\t\t\t\tel.accidental = 'quartersharp';state = 'pitch';\n\t\t\t\t} else if (state === 'flat2') {\n\t\t\t\t\tel.accidental = 'quarterflat';state = 'pitch';\n\t\t\t\t} else if (state === 'Zduration') {\n\t\t\t\t\tvar num = tokenizer.getNumber(line, index);\n\t\t\t\t\tel.duration = num.num * tune.getBarLength();\n\t\t\t\t\tel.rest.text = num.num;\n\t\t\t\t\tel.endChar = num.index;\n\t\t\t\t\treturn el;\n\t\t\t\t} else return null;\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\tif (state === 'startSlur') {\n\t\t\t\t\t// This is the first character, so it must have been meant for the previous note. Correct that here.\n\t\t\t\t\ttuneBuilder.addTieToLastNote(dottedTie);\n\t\t\t\t\tel.endTie = true;\n\t\t\t\t} else if (state === 'octave' || state === 'duration' || state === 'end_slur') {\n\t\t\t\t\tel.startTie = {};\n\t\t\t\t\tif (!durationSetByPreviousNote && canHaveBrokenRhythm)\n\t\t\t\t\t\tstate = 'broken_rhythm';\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Peek ahead to the next character. If it is a space, then we have an end beam.\n\t\t\t\t\t\tif (tokenizer.isWhiteSpace(line[index + 1]))\n\t\t\t\t\t\t\taddEndBeam(el);\n\t\t\t\t\t\tel.endChar = index+1;\n\t\t\t\t\t\treturn el;\n\t\t\t\t\t}\n\t\t\t\t} else if (state === 'broken_rhythm') {el.endChar = index;return el;}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase ' ':\n\t\t\tcase '\\t':\n\t\t\t\tif (isComplete(state)) {\n\t\t\t\t\tel.end_beam = true;\n\t\t\t\t\t// look ahead to see if there is a tie\n\t\t\t\t\tdottedTie = false;\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (line[index] === '.' && line[index+1] === '-') {\n\t\t\t\t\t\t\tdottedTie = true;\n\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (line[index] === '-') {\n\t\t\t\t\t\t\tel.startTie = {};\n\t\t\t\t\t\t\tif (dottedTie)\n\t\t\t\t\t\t\t\tel.startTie.style = \"dotted\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t} while (index < line.length &&\n\t\t\t\t\t\t(tokenizer.isWhiteSpace(line[index]) || line[index] === '-') ||\n\t\t\t\t\t\t(line[index] === '.' && line[index+1] === '-'));\n\t\t\t\t\tel.endChar = index;\n\t\t\t\t\tif (!durationSetByPreviousNote && canHaveBrokenRhythm && (line[index] === '<' || line[index] === '>')) {\t// TODO-PER: Don't need the test for < and >, but that makes the endChar work out for the regression test.\n\t\t\t\t\t\tindex--;\n\t\t\t\t\t\tstate = 'broken_rhythm';\n\t\t\t\t\t} else\n\t\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase '>':\n\t\t\tcase '<':\n\t\t\t\tif (isComplete(state)) {\n\t\t\t\t\tif (canHaveBrokenRhythm) {\n\t\t\t\t\t\tvar br2 = getBrokenRhythm(line, index);\n\t\t\t\t\t\tindex += br2[0] - 1;\t// index gets incremented below, so we'll let that happen\n\t\t\t\t\t\tmultilineVars.next_note_duration = br2[2];\n\t\t\t\t\t\tel.duration = br2[1]*el.duration;\n\t\t\t\t\t\tstate = 'end_slur';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tel.endChar = index;\n\t\t\t\t\t\treturn el;\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\treturn null;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (isComplete(state)) {\n\t\t\t\t\tel.endChar = index;\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t}\n\t\tindex++;\n\t\tif (index === line.length) {\n\t\t\tif (isComplete(state)) {el.endChar = index;return el;}\n\t\t\telse return null;\n\t\t}\n\t}\n\treturn null;\n};\n\nvar getBrokenRhythm = function(line, index) {\n\tswitch (line[index]) {\n\t\tcase '>':\n\t\t\tif (index < line.length - 2 && line[index + 1] === '>' && line[index + 2] === '>')\t// triple >>>\n\t\t\t\treturn [3, 1.875, 0.125];\n\t\t\telse if (index < line.length - 1 && line[index + 1] === '>')\t// double >>\n\t\t\t\treturn [2, 1.75, 0.25];\n\t\t\telse\n\t\t\t\treturn [1, 1.5, 0.5];\n\t\tcase '<':\n\t\t\tif (index < line.length - 2 && line[index + 1] === '<' && line[index + 2] === '<')\t// triple <<<\n\t\t\t\treturn [3, 0.125, 1.875];\n\t\t\telse if (index < line.length - 1 && line[index + 1] === '<')\t// double <<\n\t\t\t\treturn [2, 0.25, 1.75];\n\t\t\telse\n\t\t\t\treturn [1, 0.5, 1.5];\n\t}\n\treturn null;\n};\n\nfunction isFirstVoice() {\n\treturn multilineVars.currentVoice === undefined || (multilineVars.currentVoice.staffNum ===  0 && multilineVars.currentVoice.index ===  0);\n}\n\nmodule.exports = MusicParser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3BhcnNlL2FiY19wYXJzZV9tdXNpYy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0IsbUJBQU8sQ0FBQywwRkFBdUI7QUFDbkQsZ0JBQWdCLG1CQUFPLENBQUMsOEVBQWlCOztBQUV6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSxFQUFFLG1CQUFPLENBQUMsd0ZBQXNCOztBQUVsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEM7QUFDNUMscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMklBQTJJO0FBQzNJO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBLHNCQUFzQixzQkFBc0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isc0NBQXNDO0FBQzVEO0FBQ0Esc0JBQXNCLGtDQUFrQztBQUN4RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QixRQUFRO0FBQ1I7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQiwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyw0QkFBNEI7QUFDakM7QUFDQTtBQUNBLHdFQUF3RTtBQUN4RTtBQUNBO0FBQ0E7O0FBRUEsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDZDQUE2QztBQUM3QztBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4Q0FBOEMsc0JBQXNCO0FBQ3BFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBeUQ7QUFDekQ7QUFDQTtBQUNBLGdEQUFnRCxzQkFBc0I7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9COztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtFQUFrRTtBQUNsRSxtQkFBbUI7QUFDbkI7QUFDQSwyREFBMkQ7QUFDM0Q7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwRkFBMEY7QUFDMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlEQUF5RCx5QkFBeUI7QUFDbEY7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNERBQTRELHlCQUF5QjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isa0JBQWtCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBLDRJQUE0SSxtRkFBbUY7QUFDL047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGtEQUFrRDtBQUNwRTtBQUNBLG1CQUFtQixtQ0FBbUM7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixvQkFBb0I7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQ7QUFDdkQsTUFBTSw2QkFBNkIsbUJBQW1CO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1EO0FBQ25ELE1BQU07QUFDTjtBQUNBO0FBQ0EsZ0NBQWdDLHdCQUF3QjtBQUN4RCxrQ0FBa0MsMkJBQTJCO0FBQzdELGlDQUFpQyxtQkFBbUI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHVCQUF1QjtBQUN2RCxpQ0FBaUMsMEJBQTBCO0FBQzNELGlDQUFpQyxtQkFBbUI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLDBCQUEwQjtBQUMxRCxpQ0FBaUMsbUJBQW1CO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sNkJBQTZCLG1CQUFtQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsZUFBZTtBQUM1QyxpQ0FBaUMsbUJBQW1CO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixlQUFlO0FBQzVDLGlDQUFpQyxtQkFBbUI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLE1BQU0sNkJBQTZCLG1CQUFtQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixvQ0FBb0M7QUFDcEMsTUFBTTtBQUNOLG1DQUFtQztBQUNuQyxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHFDQUFxQyxtQkFBbUI7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsOEdBQThHO0FBQzlHO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixtQkFBbUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvcGFyc2UvYWJjX3BhcnNlX211c2ljLmpzPzUyMmIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHBhcnNlS2V5Vm9pY2UgPSByZXF1aXJlKCcuL2FiY19wYXJzZV9rZXlfdm9pY2UnKTtcbnZhciB0cmFuc3Bvc2UgPSByZXF1aXJlKCcuL2FiY190cmFuc3Bvc2UnKTtcblxudmFyIHRva2VuaXplcjtcbnZhciB3YXJuO1xudmFyIG11bHRpbGluZVZhcnM7XG52YXIgdHVuZTtcbnZhciB0dW5lQnVpbGRlcjtcbnZhciBoZWFkZXI7XG5cbnZhciB7XG4gIGxlZ2FsQWNjZW50cyxcbiAgdm9sdW1lRGVjb3JhdGlvbnMsXG4gIGR5bmFtaWNEZWNvcmF0aW9ucyxcbiAgYWNjZW50UHNldWRvbnltcyxcbiAgYWNjZW50RHluYW1pY1BzZXVkb255bXMsXG4gIG5vbkRlY29yYXRpb25zLFxuICBkdXJhdGlvbnMsXG4gIHBpdGNoZXMsXG4gIHJlc3RzLFxuICBhY2NNYXAsXG4gIHRyaXBsZXRRXG59ID0gcmVxdWlyZSgnLi9hYmNfcGFyc2Vfc2V0dGluZ3MnKVxuXG52YXIgTXVzaWNQYXJzZXIgPSBmdW5jdGlvbihfdG9rZW5pemVyLCBfd2FybiwgX211bHRpbGluZVZhcnMsIF90dW5lLCBfdHVuZUJ1aWxkZXIsIF9oZWFkZXIpIHtcblx0dG9rZW5pemVyID0gX3Rva2VuaXplcjtcblx0d2FybiA9IF93YXJuO1xuXHRtdWx0aWxpbmVWYXJzID0gX211bHRpbGluZVZhcnM7XG5cdHR1bmUgPSBfdHVuZTtcblx0dHVuZUJ1aWxkZXIgPSBfdHVuZUJ1aWxkZXI7XG5cdGhlYWRlciA9IF9oZWFkZXI7XG5cdHRoaXMubGluZUNvbnRpbnVhdGlvbiA9IGZhbHNlO1xufVxuXG4vL1xuLy8gUGFyc2UgbGluZSBvZiBtdXNpY1xuLy9cbi8vIFRoaXMgaXMgYSBzdHJlYW0gb2YgPChiYXItbWFya2luZ3xoZWFkZXJ8bm90ZS1ncm91cCkuLi4+IGluIGFueSBvcmRlciwgd2l0aCBvcHRpb25hbCBzcGFjZXMgYmV0d2VlbiBlYWNoIGVsZW1lbnRcbi8vIGNvcmUtbm90ZSBpcyA8b3Blbi1zbHVyLCBhY2NpZGVudGFsLCBwaXRjaDpyZXF1aXJlZCwgb2N0YXZlLCBkdXJhdGlvbiwgY2xvc2Utc2x1ciZ8dGllPiB3aXRoIG5vIHNwYWNlcyB3aXRoaW4gdGhhdFxuLy8gY2hvcmQgaXMgPG9wZW4tYnJhY2tldDpyZXF1aXJlZCwgY29yZS1ub3RlOnJlcXVpcmVkLi4uIGNsb3NlLWJyYWNrZXQ6cmVxdWlyZWQgZHVyYXRpb24+IHdpdGggbm8gc3BhY2VzIHdpdGhpbiB0aGF0XG4vLyBncmFjZS1ub3RlcyBpcyA8b3Blbi1icmFjZTpyZXF1aXJlZCwgKG9wZW4tc2x1cnxjb3JlLW5vdGU6cmVxdWlyZWR8Y2xvc2Utc2x1cikuLi4sIGNsb3NlLWJyYWNlOnJlcXVpcmVkPiBzcGFjZXMgYXJlIGFsbG93ZWRcbi8vIG5vdGUtZ3JvdXAgaXMgPGdyYWNlLW5vdGVzLCBjaG9yZCBzeW1ib2xzJnxkZWNvcmF0aW9ucy4uLiwgZ3JhY2Utbm90ZXMsIHNsdXImfHRyaXBsZXQsIGNob3JkfGNvcmUtbm90ZSwgZW5kLXNsdXJ8dGllPiBzcGFjZXMgYXJlIGFsbG93ZWQgYmV0d2VlbiBpdGVtc1xuLy8gYmFyLW1hcmtpbmcgaXMgPGFtcGVyc2FuZD4gb3IgPGNob3JkIHN5bWJvbHMmfGRlY29yYXRpb25zLi4uLCBiYXI6cmVxdWlyZWQ+IHNwYWNlcyBhbGxvd2VkXG4vLyBoZWFkZXIgaXMgPG9wZW4tYnJhY2tldDpyZXF1aXJlZCwgS3xNfEx8VjpyZXF1aXJlZCwgY29sb246cmVxdWlyZWQsIGZpZWxkOnJlcXVpcmVkLCBjbG9zZS1icmFja2V0OnJlcXVpcmVkPiBzcGFjZXMgY2FuIG9jY3VyIGJldHdlZW4gdGhlIGNvbG9uLCBpbiB0aGUgZmllbGQsIGFuZCBiZWZvcmUgdGhlIGNsb3NlIGJyYWNrZXRcbi8vIGhlYWRlciBjYW4gYWxzbyBiZSB0aGUgb25seSB0aGluZyBvbiBhIGxpbmUuIFRoaXMgaXMgdHJ1ZSBldmVuIGlmIGl0IGlzIGEgY29udGludWF0aW9uIGxpbmUuIEluIHRoaXMgY2FzZSB0aGUgYnJhY2tldHMgYXJlIG5vdCByZXF1aXJlZC5cbi8vIGEgc3BhY2UgaXMgYSBiYWNrLXRpY2ssIGEgc3BhY2UsIG9yIGEgdGFiLiBJZiBpdCBpcyBhIGJhY2stdGljaywgdGhlbiB0aGVyZSBpcyBubyBlbmQtYmVhbS5cblxuLy8gTGluZSBwcmVwcm9jZXNzaW5nOiBhbnl0aGluZyBhZnRlciBhICUgaXMgaWdub3JlZCAodGhlIGRvdWJsZSAlJSBzaG91bGQgaGF2ZSBiZWVuIHRha2VuIGNhcmUgb2YgYmVmb3JlIHRoaXMpXG4vLyBUaGVuLCBhbGwgbGVhZGluZyBhbmQgdHJhaWxpbmcgc3BhY2VzIGFyZSBpZ25vcmVkLlxuLy8gSWYgdGhlcmUgd2FzIGEgbGluZSBjb250aW51YXRpb24sIHRoZSBcXG4gd2FzIHJlcGxhY2VkIGJ5IGEgXFxyIGFuZCB0aGUgXFwgd2FzIHJlcGxhY2VkIGJ5IGEgc3BhY2UuIFRoaXMgYWxsb3dzIHRoZSBjb25zdHJ1Y3Rcbi8vIG9mIGhhdmluZyBhIGhlYWRlciBtaWQtbGluZSBjb25jZXB0dWFsbHksIGJ1dCBhY3R1YWxseSBiZSBhdCB0aGUgc3RhcnQgb2YgdGhlIGxpbmUuIFRoaXMgaXMgZXF1aXZvbGVudCB0byBwdXR0aW5nIHRoZSBoZWFkZXIgaW4gWyBdLlxuXG4vLyBUT0RPLVBFUjogSG93IHRvIGhhbmRsZSAhIGZvciBsaW5lIGJyZWFrP1xuLy8gVE9ETy1QRVI6IGRvdHMgYmVmb3JlIGJhciwgZG90cyBiZWZvcmUgc2x1clxuLy8gVE9ETy1QRVI6IFU6IHJlZGVmaW5hYmxlIHN5bWJvbHMuXG5cbi8vIEFtYmlndW91cyBzeW1ib2xzOlxuLy8gXCJbXCIgY2FuIGJlIHRoZSBzdGFydCBvZiBhIGNob3JkLCB0aGUgc3RhcnQgb2YgYSBoZWFkZXIgZWxlbWVudCBvciBwYXJ0IG9mIGEgYmFyIGxpbmUuXG4vLyAtLS0gaWYgaXQgaXMgaW1tZWRpYXRlbHkgZm9sbG93ZWQgYnkgXCJ8XCIsIGl0IGlzIGEgYmFyIGxpbmVcbi8vIC0tLSBpZiBpdCBpcyBpbW1lZGlhdGVseSBmb2xsb3dlZCBieSBLOiBMOiBNOiBWOiBpdCBpcyBhIGhlYWRlciAobm90ZTogdGhlcmUgYXJlIG90aGVyIGhlYWRlcnMgbWVudGlvbmVkIGluIHRoZSBzdGFuZGFyZCwgYnV0IEknbSBub3Qgc3VyZSBob3cgdGhleSB3b3VsZCBiZSB1c2VkLilcbi8vIC0tLSBvdGhlcndpc2UgaXQgaXMgdGhlIGJlZ2lubmluZyBvZiBhIGNob3JkXG4vLyBcIihcIiBjYW4gYmUgdGhlIHN0YXJ0IG9mIGEgc2x1ciBvciBhIHRyaXBsZXRcbi8vIC0tLSBpZiBpdCBpcyBmb2xsb3dlZCBieSBhIG51bWJlciBmcm9tIDItOSwgdGhlbiBpdCBpcyBhIHRyaXBsZXRcbi8vIC0tLSBvdGhlcndpc2UgaXQgaXMgYSBzbHVyXG4vLyBcIl1cIlxuLy8gLS0tIGlmIHRoZXJlIGlzIGEgY2hvcmQgb3BlbiwgdGhlbiB0aGlzIGlzIHRoZSBjbG9zZVxuLy8gLS0tIGlmIGl0IGlzIGFmdGVyIGEgW3wsIHRoZW4gaXQgaXMgYW4gaW52aXNpYmxlIGJhciBsaW5lXG4vLyAtLS0gb3RoZXJ3aXNlLCBpdCBpcyBwYXIgb2YgYSBiYXJcbi8vIFwiLlwiIGNhbiBiZSBhIGJhciBtb2RpZmllciBvciBhIHNsdXIgbW9kaWZpZXIsIG9yIGEgZGVjb3JhdGlvblxuLy8gLS0tIGlmIGl0IGNvbWVzIGltbWVkaWF0ZWx5IGJlZm9yZSBhIGJhciwgaXQgaXMgYSBiYXIgbW9kaWZpZXJcbi8vIC0tLSBpZiBpdCBjb21lcyBpbW1lZGlhdGVseSBiZWZvcmUgYSBzbHVyLCBpdCBpcyBhIHNsdXIgbW9kaWZpZXJcbi8vIC0tLSBvdGhlcndpc2UgaXQgaXMgYSBkZWNvcmF0aW9uIGZvciB0aGUgbmV4dCBub3RlLlxuLy8gbnVtYmVyOlxuLy8gLS0tIGlmIGl0IGlzIGFmdGVyIGEgYmFyLCB3aXRoIG5vIHNwYWNlLCBpdCBpcyBhbiBlbmRpbmcgbWFya2VyXG4vLyAtLS0gaWYgaXQgaXMgYWZ0ZXIgYSAoIHdpdGggbm8gc3BhY2UsIGl0IGlzIGEgdHJpcGxldCBjb3VudFxuLy8gLS0tIGlmIGl0IGlzIGFmdGVyIGEgcGl0Y2ggb3Igb2N0YXZlIG9yIHNsYXNoLCB0aGVuIGl0IGlzIGEgZHVyYXRpb25cblxuLy8gVW5hbWJpZ3VvdXMgc3ltYm9scyAoZXhjZXB0IGluc2lkZSBxdW90ZWQgc3RyaW5ncyk6XG4vLyB2ZXJ0aWNhbC1iYXIsIGNvbG9uOiBwYXJ0IG9mIGEgYmFyXG4vLyBBQkNERUZHYWJjZGVmZzogcGl0Y2hcbi8vIHh5elo6IHJlc3Rcbi8vIGNvbW1hLCBwcmltZTogb2N0YXZlXG4vLyBjbG9zZS1wYXJlbjogZW5kLXNsdXJcbi8vIGh5cGhlbjogdGllXG4vLyB0aWxkZSwgdiwgdSwgYmFuZywgcGx1cywgVEhMTVBTTzogZGVjb3JhdGlvblxuLy8gY2FyYXQsIHVuZGVyc2NvcmUsIGVxdWFsOiBhY2NpZGVudGFsXG4vLyBhbXBlcnNhbmQ6IHRpbWUgcmVzZXRcbi8vIG9wZW4tY3VybHksIGNsb3NlLWN1cmx5OiBncmFjZSBub3Rlc1xuLy8gZG91YmxlLXF1b3RlOiBjaG9yZCBzeW1ib2xcbi8vIGxlc3MtdGhhbiwgZ3JlYXRlci10aGFuLCBzbGFzaDogZHVyYXRpb25cbi8vIGJhY2stdGljaywgc3BhY2UsIHRhYjogc3BhY2VcblxudmFyIGlzSW5UaWUgPSBmdW5jdGlvbihtdWx0aWxpbmVWYXJzLCBvdmVybGF5TGV2ZWwsIGVsKSB7XG5cdGlmIChtdWx0aWxpbmVWYXJzLmluVGllW292ZXJsYXlMZXZlbF0gPT09IHVuZGVmaW5lZClcblx0XHRyZXR1cm4gZmFsc2U7XG5cdC8vIElmIHRoaXMgaXMgc2luZ2xlIHZvaWNlIG11c2ljIHRoZW4gdGhlIHZvaWNlIGluZGV4IGlzbid0IHNldCwgc28gd2UgdXNlIHRoZSBmaXJzdCB2b2ljZS5cblx0dmFyIHZvaWNlSW5kZXggPSBtdWx0aWxpbmVWYXJzLmN1cnJlbnRWb2ljZSA/IG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlLnN0YWZmTnVtICogMTAwICsgbXVsdGlsaW5lVmFycy5jdXJyZW50Vm9pY2UuaW5kZXggOiAwO1xuXHRpZiAobXVsdGlsaW5lVmFycy5pblRpZVtvdmVybGF5TGV2ZWxdW3ZvaWNlSW5kZXhdKSB7XG5cdFx0aWYgKGVsLnBpdGNoZXMgIT09IHVuZGVmaW5lZCB8fCBlbC5yZXN0LnR5cGUgIT09ICdzcGFjZXInKVxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdH1cblx0cmV0dXJuIGZhbHNlO1xufTtcblxudmFyIGVsID0geyB9O1xuTXVzaWNQYXJzZXIucHJvdG90eXBlLnBhcnNlTXVzaWMgPSBmdW5jdGlvbihsaW5lKSB7XG5cdGhlYWRlci5yZXNvbHZlVGVtcG8oKTtcblx0Ly9tdWx0aWxpbmVWYXJzLmhhdmVudF9zZXRfbGVuZ3RoID0gZmFsc2U7XHQvLyBUbyBsYXRlIHRvIHNldCB0aGlzIG5vdy5cblx0bXVsdGlsaW5lVmFycy5pc19pbl9oZWFkZXIgPSBmYWxzZTtcdC8vIFdlIHNob3VsZCBoYXZlIGdvdHRlbiBhIGtleSBoZWFkZXIgYnkgbm93LCBidXQganVzdCBpbiBjYXNlLCB0aGlzIGlzIGRlZmluaXRlbHkgb3V0IG9mIHRoZSBoZWFkZXIuXG5cdHZhciBpID0gMDtcblx0dmFyIHN0YXJ0T2ZMaW5lID0gbXVsdGlsaW5lVmFycy5pQ2hhcjtcblx0Ly8gc2VlIGlmIHRoZXJlIGlzIG5vdGhpbmcgYnV0IGEgY29tbWVudCBvbiB0aGlzIGxpbmUuIElmIHNvLCBqdXN0IGlnbm9yZSBpdC4gQSBmdWxsIGxpbmUgY29tbWVudCBpcyBvcHRpb25hbCB3aGl0ZSBzcGFjZSBmb2xsb3dlZCBieSAlXG5cdHdoaWxlICh0b2tlbml6ZXIuaXNXaGl0ZVNwYWNlKGxpbmVbaV0pICYmIGkgPCBsaW5lLmxlbmd0aClcblx0XHRpKys7XG5cdGlmIChpID09PSBsaW5lLmxlbmd0aCB8fCBsaW5lW2ldID09PSAnJScpXG5cdFx0cmV0dXJuO1xuXG5cdC8vIFN0YXJ0IHdpdGggdGhlIHN0YW5kYXJkIHN0YWZmLCBjbGVmIGFuZCBrZXkgc3ltYm9scyBvbiBlYWNoIGxpbmVcblx0dmFyIGRlbGF5U3RhcnROZXdMaW5lID0gbXVsdGlsaW5lVmFycy5zdGFydF9uZXdfbGluZTtcblx0aWYgKG11bHRpbGluZVZhcnMuY29udGludWVhbGwgPT09IHVuZGVmaW5lZClcblx0XHRtdWx0aWxpbmVWYXJzLnN0YXJ0X25ld19saW5lID0gdHJ1ZTtcblx0ZWxzZVxuXHRcdG11bHRpbGluZVZhcnMuc3RhcnRfbmV3X2xpbmUgPSBmYWxzZTtcblx0dmFyIHRyaXBsZXROb3Rlc0xlZnQgPSAwO1xuXG5cdC8vIFNlZSBpZiB0aGUgbGluZSBzdGFydHMgd2l0aCBhIGhlYWRlciBmaWVsZFxuXHR2YXIgcmV0SGVhZGVyID0gaGVhZGVyLmxldHRlcl90b19ib2R5X2hlYWRlcihsaW5lLCBpKTtcblx0aWYgKHJldEhlYWRlclswXSA+IDApIHtcblx0XHRpICs9IHJldEhlYWRlclswXTtcblx0XHQvLyBmaXhlcyBidWcgb24gdGhpczogY1tWOjJdZFxuXHRcdGlmIChyZXRIZWFkZXJbMV0gPT09ICdWJylcblx0XHRcdHRoaXMuc3RhcnROZXdMaW5lKCk7XG5cdFx0XHQvLyBkZWxheVN0YXJ0TmV3TGluZSA9IHRydWU7XG5cdFx0Ly8gVE9ETy1QRVI6IEhhbmRsZSBpbmxpbmUgaGVhZGVyc1xuXHR9XG5cblx0dmFyIG92ZXJsYXlMZXZlbCA9IDA7XG5cdHdoaWxlIChpIDwgbGluZS5sZW5ndGgpXG5cdHtcblx0XHR2YXIgc3RhcnRJID0gaTtcblx0XHRpZiAobGluZVtpXSA9PT0gJyUnKVxuXHRcdFx0YnJlYWs7XG5cblx0XHR2YXIgcmV0SW5saW5lSGVhZGVyID0gaGVhZGVyLmxldHRlcl90b19pbmxpbmVfaGVhZGVyKGxpbmUsIGksIGRlbGF5U3RhcnROZXdMaW5lKTtcblx0XHRpZiAocmV0SW5saW5lSGVhZGVyWzBdID4gMCkge1xuXHRcdFx0aSArPSByZXRJbmxpbmVIZWFkZXJbMF07XG5cdFx0XHQvL2NvbnNvbGUubG9nKFwiaW5saW5lIGhlYWRlclwiLCByZXRJbmxpbmVIZWFkZXIpXG5cdFx0XHRpZiAocmV0SW5saW5lSGVhZGVyWzFdID09PSAnVicpXG5cdFx0XHRcdGRlbGF5U3RhcnROZXdMaW5lID0gdHJ1ZTsgLy8gZml4ZXMgYnVnIG9uIHRoaXM6IGNbVjoyXWRcblx0XHRcdC8vIFRPRE8tUEVSOiBIYW5kbGUgaW5saW5lIGhlYWRlcnNcblx0XHRcdC8vbXVsdGlsaW5lVmFycy5zdGFydF9uZXdfbGluZSA9IGZhbHNlO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBXYWl0IHVudGlsIGhlcmUgdG8gYWN0dWFsbHkgc3RhcnQgdGhlIGxpbmUgYmVjYXVzZSB3ZSBrbm93IHdlJ3JlIHBhc3QgdGhlIGlubGluZSBzdGF0ZW1lbnRzLlxuXHRcdFx0aWYgKCF0dW5lQnVpbGRlci5oYXNCZWdpbk11c2ljKCkgfHwgKGRlbGF5U3RhcnROZXdMaW5lICYmICF0aGlzLmxpbmVDb250aW51YXRpb24pKSB7XG5cdFx0XHRcdHRoaXMuc3RhcnROZXdMaW5lKCk7XG5cdFx0XHRcdGRlbGF5U3RhcnROZXdMaW5lID0gZmFsc2U7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFdlIG5lZWQgdG8gZGVjaWRlIGlmIHRoZSBmb2xsb3dpbmcgY2hhcmFjdGVycyBhcmUgYSBiYXItbWFya2luZyBvciBhIG5vdGUtZ3JvdXAuXG5cdFx0XHQvLyBVbmZvcnR1bmF0ZWx5LCB0aGF0IGlzIGFtYmlndW91cy4gQm90aCBjYW4gY29udGFpbiBjaG9yZCBzeW1ib2xzIGFuZCBkZWNvcmF0aW9ucy5cblx0XHRcdC8vIElmIHRoZXJlIGlzIGEgZ3JhY2Ugbm90ZSBlaXRoZXIgYmVmb3JlIG9yIGFmdGVyIHRoZSBjaG9yZCBzeW1ib2xzIGFuZCBkZWNvcmF0aW9ucywgdGhlbiBpdCBpcyBkZWZpbml0ZWx5IGEgbm90ZS1ncm91cC5cblx0XHRcdC8vIElmIHRoZXJlIGlzIGEgYmFyIG1hcmtlciwgaXQgaXMgZGVmaW5pdGVseSBhIGJhci1tYXJraW5nLlxuXHRcdFx0Ly8gSWYgdGhlcmUgaXMgZWl0aGVyIGEgY29yZS1ub3RlIG9yIGNob3JkLCBpdCBpcyBkZWZpbml0ZWx5IGEgbm90ZS1ncm91cC5cblx0XHRcdC8vIFNvLCBsb29wIHdoaWxlIHdlIGZpbmQgZ3JhY2Utbm90ZXMsIGNob3Jkcy1zeW1ib2xzLCBvciBkZWNvcmF0aW9ucy4gW0l0IGlzIGFuIGVycm9yIHRvIGhhdmUgbW9yZSB0aGFuIG9uZSBncmFjZS1ub3RlIGdyb3VwIGluIGEgcm93OyB0aGUgb3RoZXJzIGNhbiBiZSBtdWx0aXBsZV1cblx0XHRcdC8vIFRoZW4sIGlmIHRoZXJlIGlzIGEgZ3JhY2Utbm90ZSwgd2Uga25vdyB3aGVyZSB0byBnby5cblx0XHRcdC8vIEVsc2Ugc2VlIGlmIHdlIGhhdmUgYSBjaG9yZCwgY29yZS1ub3RlLCBzbHVyLCB0cmlwbGV0LCBvciBiYXIuXG5cblx0XHRcdHZhciByZXQ7XG5cdFx0XHR3aGlsZSAoMSkge1xuXHRcdFx0XHRyZXQgPSB0b2tlbml6ZXIuZWF0V2hpdGVTcGFjZShsaW5lLCBpKTtcblx0XHRcdFx0aWYgKHJldCA+IDApIHtcblx0XHRcdFx0XHRpICs9IHJldDtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoaSA+IDAgJiYgbGluZVtpLTFdID09PSAnXFx4MTInKSB7XG5cdFx0XHRcdFx0Ly8gdGhlcmUgaXMgb25lIGNhc2Ugd2hlcmUgYSBsaW5lIGNvbnRpbnVhdGlvbiBpc24ndCB0aGUgc2FtZSBhcyBiZWluZyBvbiB0aGUgc2FtZSBsaW5lLCBhbmQgdGhhdCBpcyBpZiB0aGUgbmV4dCBjaGFyYWN0ZXIgYWZ0ZXIgaXQgaXMgYSBoZWFkZXIuXG5cdFx0XHRcdFx0cmV0ID0gaGVhZGVyLmxldHRlcl90b19ib2R5X2hlYWRlcihsaW5lLCBpKTtcblx0XHRcdFx0XHRpZiAocmV0WzBdID4gMCkge1xuXHRcdFx0XHRcdFx0aWYgKHJldFsxXSA9PT0gJ1YnKVxuXHRcdFx0XHRcdFx0XHR0aGlzLnN0YXJ0TmV3TGluZSgpOyAvLyBmaXhlcyBidWcgb24gdGhpczogY1xcXFxuVjoyXVxcXFxuZFxuXHRcdFx0XHRcdFx0Ly8gVE9ETzogaW5zZXJ0IGhlYWRlciBoZXJlXG5cdFx0XHRcdFx0XHRpID0gcmV0WzBdO1xuXHRcdFx0XHRcdFx0bXVsdGlsaW5lVmFycy5zdGFydF9uZXdfbGluZSA9IGZhbHNlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHQvLyBnYXRoZXIgYWxsIHRoZSBncmFjZSBub3RlcywgY2hvcmQgc3ltYm9scyBhbmQgZGVjb3JhdGlvbnNcblx0XHRcdFx0cmV0ID0gbGV0dGVyX3RvX3NwYWNlcihsaW5lLCBpKTtcblx0XHRcdFx0aWYgKHJldFswXSA+IDApIHtcblx0XHRcdFx0XHRpICs9IHJldFswXTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldCA9IGxldHRlcl90b19jaG9yZChsaW5lLCBpKTtcblx0XHRcdFx0aWYgKHJldFswXSA+IDApIHtcblx0XHRcdFx0XHQvLyBUaGVyZSBjb3VsZCBiZSBtb3JlIHRoYW4gb25lIGNob3JkIGhlcmUgaWYgdGhleSBoYXZlIGRpZmZlcmVudCBwb3NpdGlvbnMuXG5cdFx0XHRcdFx0Ly8gSWYgdHdvIGNob3JkcyBoYXZlIHRoZSBzYW1lIHBvc2l0aW9uLCB0aGVuIGNvbm5lY3QgdGhlbSB3aXRoIG5ld2xpbmUuXG5cdFx0XHRcdFx0aWYgKCFlbC5jaG9yZClcblx0XHRcdFx0XHRcdGVsLmNob3JkID0gW107XG5cdFx0XHRcdFx0dmFyIGNob3JkTmFtZSA9IHRva2VuaXplci50cmFuc2xhdGVTdHJpbmcocmV0WzFdKTtcblx0XHRcdFx0XHRjaG9yZE5hbWUgPSBjaG9yZE5hbWUucmVwbGFjZSgvOy9nLCBcIlxcblwiKTtcblx0XHRcdFx0XHR2YXIgYWRkZWRDaG9yZCA9IGZhbHNlO1xuXHRcdFx0XHRcdGZvciAodmFyIGNpID0gMDsgY2kgPCBlbC5jaG9yZC5sZW5ndGg7IGNpKyspIHtcblx0XHRcdFx0XHRcdGlmIChlbC5jaG9yZFtjaV0ucG9zaXRpb24gPT09IHJldFsyXSkge1xuXHRcdFx0XHRcdFx0XHRhZGRlZENob3JkID0gdHJ1ZTtcblx0XHRcdFx0XHRcdFx0ZWwuY2hvcmRbY2ldLm5hbWUgKz0gXCJcXG5cIiArIGNob3JkTmFtZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKGFkZGVkQ2hvcmQgPT09IGZhbHNlKSB7XG5cdFx0XHRcdFx0XHRpZiAocmV0WzJdID09PSBudWxsICYmIHJldFszXSlcblx0XHRcdFx0XHRcdFx0ZWwuY2hvcmQucHVzaCh7bmFtZTogY2hvcmROYW1lLCByZWxfcG9zaXRpb246IHJldFszXX0pO1xuXHRcdFx0XHRcdFx0ZWxzZVxuXHRcdFx0XHRcdFx0XHRlbC5jaG9yZC5wdXNoKHtuYW1lOiBjaG9yZE5hbWUsIHBvc2l0aW9uOiByZXRbMl19KTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRpICs9IHJldFswXTtcblx0XHRcdFx0XHR2YXIgaWkgPSB0b2tlbml6ZXIuc2tpcFdoaXRlU3BhY2UobGluZS5zdWJzdHJpbmcoaSkpO1xuXHRcdFx0XHRcdGlmIChpaSA+IDApXG5cdFx0XHRcdFx0XHRlbC5mb3JjZV9lbmRfYmVhbV9sYXN0ID0gdHJ1ZTtcblx0XHRcdFx0XHRpICs9IGlpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGlmIChub25EZWNvcmF0aW9ucy5pbmRleE9mKGxpbmVbaV0pID09PSAtMSlcblx0XHRcdFx0XHRcdHJldCA9IGxldHRlcl90b19hY2NlbnQobGluZSwgaSk7XG5cdFx0XHRcdFx0ZWxzZSByZXQgPSBbIDAgXTtcblx0XHRcdFx0XHRpZiAocmV0WzBdID4gMCkge1xuXHRcdFx0XHRcdFx0aWYgKHJldFsxXSA9PT0gbnVsbCkge1xuXHRcdFx0XHRcdFx0XHRpZiAoaSArIDEgPCBsaW5lLmxlbmd0aClcblx0XHRcdFx0XHRcdFx0XHR0aGlzLnN0YXJ0TmV3TGluZSgpO1x0Ly8gVGhlcmUgd2FzIGEgISBpbiB0aGUgbWlkZGxlIG9mIHRoZSBsaW5lLiBTdGFydCBhIG5ldyBsaW5lIGlmIHRoZXJlIGlzIGFueXRoaW5nIGFmdGVyIGl0LlxuXHRcdFx0XHRcdFx0fSBlbHNlIGlmIChyZXRbMV0ubGVuZ3RoID4gMCkge1xuXHRcdFx0XHRcdFx0XHRpZiAocmV0WzFdLmluZGV4T2YoXCJzdHlsZT1cIikgPT09IDApIHtcblx0XHRcdFx0XHRcdFx0XHRlbC5zdHlsZSA9IHJldFsxXS5zdWJzdHIoNik7XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKGVsLmRlY29yYXRpb24gPT09IHVuZGVmaW5lZClcblx0XHRcdFx0XHRcdFx0XHRcdGVsLmRlY29yYXRpb24gPSBbXTtcblx0XHRcdFx0XHRcdFx0XHRpZiAocmV0WzFdID09PSAnYmVhbWJyMScpXG5cdFx0XHRcdFx0XHRcdFx0XHRlbC5iZWFtYnIgPSAxO1xuXHRcdFx0XHRcdFx0XHRcdGVsc2UgaWYgKHJldFsxXSA9PT0gXCJiZWFtYnIyXCIpXG5cdFx0XHRcdFx0XHRcdFx0XHRlbC5iZWFtYnIgPSAyO1xuXHRcdFx0XHRcdFx0XHRcdGVsc2UgZWwuZGVjb3JhdGlvbi5wdXNoKHJldFsxXSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGkgKz0gcmV0WzBdO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRyZXQgPSBsZXR0ZXJfdG9fZ3JhY2UobGluZSwgaSk7XG5cdFx0XHRcdFx0XHQvLyBUT0RPLVBFUjogQmUgc3VyZSB0aGVyZSBhcmVuJ3QgYWxyZWFkeSBncmFjZSBub3RlcyBkZWZpbmVkLiBUaGF0IGlzIGFuIGVycm9yLlxuXHRcdFx0XHRcdFx0aWYgKHJldFswXSA+IDApIHtcblx0XHRcdFx0XHRcdFx0ZWwuZ3JhY2Vub3RlcyA9IHJldFsxXTtcblx0XHRcdFx0XHRcdFx0aSArPSByZXRbMF07XG5cdFx0XHRcdFx0XHR9IGVsc2Vcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHJldCA9IGxldHRlcl90b19iYXIobGluZSwgaSk7XG5cdFx0XHRpZiAocmV0WzBdID4gMCkge1xuXHRcdFx0XHQvLyBUaGlzIGlzIGRlZmluaXRlbHkgYSBiYXJcblx0XHRcdFx0b3ZlcmxheUxldmVsID0gMDtcblx0XHRcdFx0aWYgKGVsLmdyYWNlbm90ZXMgIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdC8vIEF0dGFjaCB0aGUgZ3JhY2Ugbm90ZSB0byBhbiBpbnZpc2libGUgbm90ZVxuXHRcdFx0XHRcdGVsLnJlc3QgPSB7IHR5cGU6ICdzcGFjZXInIH07XG5cdFx0XHRcdFx0ZWwuZHVyYXRpb24gPSAwLjEyNTsgLy8gVE9ETy1QRVI6IEkgZG9uJ3QgdGhpbmsgdGhlIGR1cmF0aW9uIG9mIHRoaXMgbWF0dGVycyBtdWNoLCBidXQgZmlndXJlIG91dCBpZiBpdCBkb2VzLlxuXHRcdFx0XHRcdG11bHRpbGluZVZhcnMuYWRkRm9ybWF0dGluZ09wdGlvbnMoZWwsIHR1bmUuZm9ybWF0dGluZywgJ25vdGUnKTtcblx0XHRcdFx0XHR0dW5lQnVpbGRlci5hcHBlbmRFbGVtZW50KCdub3RlJywgc3RhcnRPZkxpbmUraSwgc3RhcnRPZkxpbmUraStyZXRbMF0sIGVsKTtcblx0XHRcdFx0XHRtdWx0aWxpbmVWYXJzLm1lYXN1cmVOb3RFbXB0eSA9IHRydWU7XG5cdFx0XHRcdFx0ZWwgPSB7fTtcblx0XHRcdFx0fVxuXHRcdFx0XHR2YXIgYmFyID0ge3R5cGU6IHJldFsxXX07XG5cdFx0XHRcdGlmIChiYXIudHlwZS5sZW5ndGggPT09IDApXG5cdFx0XHRcdFx0d2FybihcIlVua25vd24gYmFyIHR5cGVcIiwgbGluZSwgaSk7XG5cdFx0XHRcdGVsc2Uge1xuXHRcdFx0XHRcdGlmIChtdWx0aWxpbmVWYXJzLmluRW5kaW5nICYmIGJhci50eXBlICE9PSAnYmFyX3RoaW4nKSB7XG5cdFx0XHRcdFx0XHRiYXIuZW5kRW5kaW5nID0gdHJ1ZTtcblx0XHRcdFx0XHRcdG11bHRpbGluZVZhcnMuaW5FbmRpbmcgPSBmYWxzZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKHJldFsyXSkge1xuXHRcdFx0XHRcdFx0YmFyLnN0YXJ0RW5kaW5nID0gcmV0WzJdO1xuXHRcdFx0XHRcdFx0aWYgKG11bHRpbGluZVZhcnMuaW5FbmRpbmcpXG5cdFx0XHRcdFx0XHRcdGJhci5lbmRFbmRpbmcgPSB0cnVlO1xuXHRcdFx0XHRcdFx0bXVsdGlsaW5lVmFycy5pbkVuZGluZyA9IHRydWU7XG5cdFx0XHRcdFx0XHRpZiAocmV0WzFdID09PSBcImJhcl9yaWdodF9yZXBlYXRcIikge1xuXHRcdFx0XHRcdFx0XHQvLyByZXN0b3JlIHRoZSB0aWUgYW5kIHNsdXIgc3RhdGUgZnJvbSB0aGUgc3RhcnQgcmVwZWF0XG5cdFx0XHRcdFx0XHRcdG11bHRpbGluZVZhcnMucmVzdG9yZVN0YXJ0RW5kaW5nSG9sZE92ZXJzKCk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHQvLyBzYXZlIGluVGllLCBpblRpZUNob3JkXG5cdFx0XHRcdFx0XHRcdG11bHRpbGluZVZhcnMuZHVwbGljYXRlU3RhcnRFbmRpbmdIb2xkT3ZlcnMoKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKGVsLmRlY29yYXRpb24gIT09IHVuZGVmaW5lZClcblx0XHRcdFx0XHRcdGJhci5kZWNvcmF0aW9uID0gZWwuZGVjb3JhdGlvbjtcblx0XHRcdFx0XHRpZiAoZWwuY2hvcmQgIT09IHVuZGVmaW5lZClcblx0XHRcdFx0XHRcdGJhci5jaG9yZCA9IGVsLmNob3JkO1xuXHRcdFx0XHRcdGlmIChiYXIuc3RhcnRFbmRpbmcgJiYgbXVsdGlsaW5lVmFycy5iYXJGaXJzdEVuZGluZ051bSA9PT0gdW5kZWZpbmVkKVxuXHRcdFx0XHRcdFx0bXVsdGlsaW5lVmFycy5iYXJGaXJzdEVuZGluZ051bSA9IG11bHRpbGluZVZhcnMuY3VyckJhck51bWJlcjtcblx0XHRcdFx0XHRlbHNlIGlmIChiYXIuc3RhcnRFbmRpbmcgJiYgYmFyLmVuZEVuZGluZyAmJiBtdWx0aWxpbmVWYXJzLmJhckZpcnN0RW5kaW5nTnVtKVxuXHRcdFx0XHRcdFx0bXVsdGlsaW5lVmFycy5jdXJyQmFyTnVtYmVyID0gbXVsdGlsaW5lVmFycy5iYXJGaXJzdEVuZGluZ051bTtcblx0XHRcdFx0XHRlbHNlIGlmIChiYXIuZW5kRW5kaW5nKVxuXHRcdFx0XHRcdFx0bXVsdGlsaW5lVmFycy5iYXJGaXJzdEVuZGluZ051bSA9IHVuZGVmaW5lZDtcblx0XHRcdFx0XHRpZiAoYmFyLnR5cGUgIT09ICdiYXJfaW52aXNpYmxlJyAmJiBtdWx0aWxpbmVWYXJzLm1lYXN1cmVOb3RFbXB0eSkge1xuXHRcdFx0XHRcdFx0aWYgKGlzRmlyc3RWb2ljZSgpKSB7XG5cdFx0XHRcdFx0XHRcdG11bHRpbGluZVZhcnMuY3VyckJhck51bWJlcisrO1xuXHRcdFx0XHRcdFx0XHRpZiAobXVsdGlsaW5lVmFycy5iYXJOdW1iZXJzICYmIG11bHRpbGluZVZhcnMuY3VyckJhck51bWJlciAlIG11bHRpbGluZVZhcnMuYmFyTnVtYmVycyA9PT0gMClcblx0XHRcdFx0XHRcdFx0XHRiYXIuYmFyTnVtYmVyID0gbXVsdGlsaW5lVmFycy5jdXJyQmFyTnVtYmVyO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRtdWx0aWxpbmVWYXJzLmFkZEZvcm1hdHRpbmdPcHRpb25zKGVsLCB0dW5lLmZvcm1hdHRpbmcsICdiYXInKTtcblx0XHRcdFx0XHR0dW5lQnVpbGRlci5hcHBlbmRFbGVtZW50KCdiYXInLCBzdGFydE9mTGluZStzdGFydEksIHN0YXJ0T2ZMaW5lK2krcmV0WzBdLCBiYXIpO1xuXHRcdFx0XHRcdG11bHRpbGluZVZhcnMubWVhc3VyZU5vdEVtcHR5ID0gZmFsc2U7XG5cdFx0XHRcdFx0ZWwgPSB7fTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpICs9IHJldFswXTtcblx0XHRcdH0gZWxzZSBpZiAobGluZVtpXSA9PT0gJyYnKSB7XHQvLyBiYWNrdHJhY2sgdG8gYmVnaW5uaW5nIG9mIG1lYXN1cmVcblx0XHRcdFx0cmV0ID0gbGV0dGVyX3RvX292ZXJsYXkobGluZSwgaSk7XG5cdFx0XHRcdGlmIChyZXRbMF0gPiAwKSB7XG5cdFx0XHRcdFx0dHVuZUJ1aWxkZXIuYXBwZW5kRWxlbWVudCgnb3ZlcmxheScsIHN0YXJ0T2ZMaW5lLCBzdGFydE9mTGluZSsxLCB7fSk7XG5cdFx0XHRcdFx0aSArPSAxO1xuXHRcdFx0XHRcdG92ZXJsYXlMZXZlbCsrO1xuXHRcdFx0XHR9XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdC8vIFRoaXMgaXMgZGVmaW5pdGVseSBhIG5vdGUgZ3JvdXBcblx0XHRcdFx0Ly9cblx0XHRcdFx0Ly8gTG9vayBmb3IgYXMgbWFueSBvcGVuIHNsdXJzIGFuZCB0cmlwbGV0cyBhcyB0aGVyZSBhcmUuIChOb3RlOiBvbmx5IHRoZSBmaXJzdCB0cmlwbGV0IGlzIHZhbGlkLilcblx0XHRcdFx0cmV0ID0gbGV0dGVyX3RvX29wZW5fc2x1cnNfYW5kX3RyaXBsZXRzKGxpbmUsIGkpO1xuXHRcdFx0XHRpZiAocmV0LmNvbnN1bWVkID4gMCkge1xuXHRcdFx0XHRcdGlmIChyZXQuc3RhcnRTbHVyICE9PSB1bmRlZmluZWQpXG5cdFx0XHRcdFx0XHRlbC5zdGFydFNsdXIgPSByZXQuc3RhcnRTbHVyO1xuXHRcdFx0XHRcdGlmIChyZXQuZG90dGVkU2x1cilcblx0XHRcdFx0XHRcdGVsLmRvdHRlZFNsdXIgPSB0cnVlO1xuXHRcdFx0XHRcdGlmIChyZXQudHJpcGxldCAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0XHRpZiAodHJpcGxldE5vdGVzTGVmdCA+IDApXG5cdFx0XHRcdFx0XHRcdHdhcm4oXCJDYW4ndCBuZXN0IHRyaXBsZXRzXCIsIGxpbmUsIGkpO1xuXHRcdFx0XHRcdFx0ZWxzZSB7XG5cdFx0XHRcdFx0XHRcdGVsLnN0YXJ0VHJpcGxldCA9IHJldC50cmlwbGV0O1xuXHRcdFx0XHRcdFx0XHRlbC50cmlwbGV0TXVsdGlwbGllciA9IHJldC50cmlwbGV0USAvIHJldC50cmlwbGV0O1xuXHRcdFx0XHRcdFx0XHRlbC50cmlwbGV0UiA9IHJldC5udW1fbm90ZXM7XG5cdFx0XHRcdFx0XHRcdHRyaXBsZXROb3Rlc0xlZnQgPSByZXQubnVtX25vdGVzID09PSB1bmRlZmluZWQgPyByZXQudHJpcGxldCA6IHJldC5udW1fbm90ZXM7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGkgKz0gcmV0LmNvbnN1bWVkO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gaGFuZGxlIGNob3Jkcy5cblx0XHRcdFx0aWYgKGxpbmVbaV0gPT09ICdbJykge1xuXHRcdFx0XHRcdHZhciBjaG9yZFN0YXJ0Q2hhciA9IGk7XG5cdFx0XHRcdFx0aSsrO1xuXHRcdFx0XHRcdHZhciBjaG9yZER1cmF0aW9uID0gbnVsbDtcblx0XHRcdFx0XHR2YXIgcmVtZW1iZXJFbmRCZWFtID0gZmFsc2U7XG5cblx0XHRcdFx0XHR2YXIgZG9uZSA9IGZhbHNlO1xuXHRcdFx0XHRcdHdoaWxlICghZG9uZSkge1xuXHRcdFx0XHRcdFx0dmFyIGFjY2VudCA9IGxldHRlcl90b19hY2NlbnQobGluZSwgaSk7XG5cdFx0XHRcdFx0XHRpZiAoYWNjZW50WzBdID4gMCkge1xuXHRcdFx0XHRcdFx0XHRpICs9IGFjY2VudFswXTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0dmFyIGNob3JkTm90ZSA9IGdldENvcmVOb3RlKGxpbmUsIGksIHt9LCBmYWxzZSk7XG5cdFx0XHRcdFx0XHRpZiAoY2hvcmROb3RlICE9PSBudWxsICYmIGNob3JkTm90ZS5waXRjaCAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0XHRcdGlmIChhY2NlbnRbMF0gPiAwKSB7IC8vIElmIHdlIGZvdW5kIGEgZGVjb3JhdGlvbiBhYm92ZSwgaXQgbW9kaWZpZXMgdGhlIGVudGlyZSBjaG9yZC4gXCJzdHlsZVwiIGlzIGhhbmRsZWQgYmVsb3cuXG5cdFx0XHRcdFx0XHRcdFx0aWYgKGFjY2VudFsxXS5pbmRleE9mKFwic3R5bGU9XCIpICE9PSAwKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoZWwuZGVjb3JhdGlvbiA9PT0gdW5kZWZpbmVkKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRlbC5kZWNvcmF0aW9uID0gW107XG5cdFx0XHRcdFx0XHRcdFx0XHRlbC5kZWNvcmF0aW9uLnB1c2goYWNjZW50WzFdKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0aWYgKGNob3JkTm90ZS5lbmRfYmVhbSkge1xuXHRcdFx0XHRcdFx0XHRcdGVsLmVuZF9iZWFtID0gdHJ1ZTtcblx0XHRcdFx0XHRcdFx0XHRkZWxldGUgY2hvcmROb3RlLmVuZF9iZWFtO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdGlmIChlbC5waXRjaGVzID09PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0XHRcdFx0XHRlbC5kdXJhdGlvbiA9IGNob3JkTm90ZS5kdXJhdGlvbjtcblx0XHRcdFx0XHRcdFx0XHRlbC5waXRjaGVzID0gWyBjaG9yZE5vdGUgXTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlXHQvLyBKdXN0IGlnbm9yZSB0aGUgbm90ZSBsZW5ndGhzIG9mIGFsbCBidXQgdGhlIGZpcnN0IG5vdGUuIFRoZSBzdGFuZGFyZCBpc24ndCBjbGVhciBoZXJlLCBidXQgdGhpcyBzZWVtcyBsZXNzIGNvbmZ1c2luZy5cblx0XHRcdFx0XHRcdFx0XHRlbC5waXRjaGVzLnB1c2goY2hvcmROb3RlKTtcblx0XHRcdFx0XHRcdFx0ZGVsZXRlIGNob3JkTm90ZS5kdXJhdGlvbjtcblx0XHRcdFx0XHRcdFx0aWYgKGFjY2VudFswXSA+IDApIHsgLy8gSWYgd2UgZm91bmQgYSBzdHlsZSBhYm92ZSwgaXQgbW9kaWZpZXMgdGhlIGluZGl2aWR1YWwgcGl0Y2gsIG5vdCB0aGUgZW50aXJlIGNob3JkLlxuXHRcdFx0XHRcdFx0XHRcdGlmIChhY2NlbnRbMV0uaW5kZXhPZihcInN0eWxlPVwiKSA9PT0gMCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0ZWwucGl0Y2hlc1tlbC5waXRjaGVzLmxlbmd0aC0xXS5zdHlsZSA9IGFjY2VudFsxXS5zdWJzdHIoNik7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0aWYgKG11bHRpbGluZVZhcnMuaW5UaWVDaG9yZFtlbC5waXRjaGVzLmxlbmd0aF0pIHtcblx0XHRcdFx0XHRcdFx0XHRjaG9yZE5vdGUuZW5kVGllID0gdHJ1ZTtcblx0XHRcdFx0XHRcdFx0XHRtdWx0aWxpbmVWYXJzLmluVGllQ2hvcmRbZWwucGl0Y2hlcy5sZW5ndGhdID0gdW5kZWZpbmVkO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdGlmIChjaG9yZE5vdGUuc3RhcnRUaWUpXG5cdFx0XHRcdFx0XHRcdFx0bXVsdGlsaW5lVmFycy5pblRpZUNob3JkW2VsLnBpdGNoZXMubGVuZ3RoXSA9IHRydWU7XG5cblx0XHRcdFx0XHRcdFx0aSAgPSBjaG9yZE5vdGUuZW5kQ2hhcjtcblx0XHRcdFx0XHRcdFx0ZGVsZXRlIGNob3JkTm90ZS5lbmRDaGFyO1xuXHRcdFx0XHRcdFx0fSBlbHNlIGlmIChsaW5lW2ldID09PSAnICcpIHtcblx0XHRcdFx0XHRcdFx0Ly8gU3BhY2VzIGFyZSBub3QgYWxsb3dlZCBpbiBjaG9yZHMsIGJ1dCB3ZSBjYW4gcmVjb3ZlciBmcm9tIGl0IGJ5IGlnbm9yaW5nIGl0LlxuXHRcdFx0XHRcdFx0XHR3YXJuKFwiU3BhY2VzIGFyZSBub3QgYWxsb3dlZCBpbiBjaG9yZHNcIiwgbGluZSwgaSk7XG5cdFx0XHRcdFx0XHRcdGkrKztcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdGlmIChpIDwgbGluZS5sZW5ndGggJiYgbGluZVtpXSA9PT0gJ10nKSB7XG5cdFx0XHRcdFx0XHRcdFx0Ly8gY29uc3VtZSB0aGUgY2xvc2UgYnJhY2tldFxuXHRcdFx0XHRcdFx0XHRcdGkrKztcblxuXHRcdFx0XHRcdFx0XHRcdGlmIChtdWx0aWxpbmVWYXJzLm5leHRfbm90ZV9kdXJhdGlvbiAhPT0gMCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0ZWwuZHVyYXRpb24gPSBlbC5kdXJhdGlvbiAqIG11bHRpbGluZVZhcnMubmV4dF9ub3RlX2R1cmF0aW9uO1xuXHRcdFx0XHRcdFx0XHRcdFx0bXVsdGlsaW5lVmFycy5uZXh0X25vdGVfZHVyYXRpb24gPSAwO1xuXHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdGlmIChpc0luVGllKG11bHRpbGluZVZhcnMsICBvdmVybGF5TGV2ZWwsIGVsKSkge1xuXHRcdFx0XHRcdFx0XHRcdFx0ZWwucGl0Y2hlcy5mb3JFYWNoKGZ1bmN0aW9uKHBpdGNoKSB7IHBpdGNoLmVuZFRpZSA9IHRydWU7IH0pO1xuXHRcdFx0XHRcdFx0XHRcdFx0c2V0SXNJblRpZShtdWx0aWxpbmVWYXJzLCAgb3ZlcmxheUxldmVsLCBmYWxzZSk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0aWYgKHRyaXBsZXROb3Rlc0xlZnQgPiAwICYmICEoZWwucmVzdCAmJiBlbC5yZXN0LnR5cGUgPT09IFwic3BhY2VyXCIpKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHR0cmlwbGV0Tm90ZXNMZWZ0LS07XG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAodHJpcGxldE5vdGVzTGVmdCA9PT0gMCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRlbC5lbmRUcmlwbGV0ID0gdHJ1ZTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHR2YXIgcG9zdENob3JkRG9uZSA9IGZhbHNlO1xuXHRcdFx0XHRcdFx0XHRcdHdoaWxlIChpIDwgbGluZS5sZW5ndGggJiYgIXBvc3RDaG9yZERvbmUpIHtcblx0XHRcdFx0XHRcdFx0XHRcdHN3aXRjaCAobGluZVtpXSkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRjYXNlICcgJzpcblx0XHRcdFx0XHRcdFx0XHRcdFx0Y2FzZSAnXFx0Jzpcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRhZGRFbmRCZWFtKGVsKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0XHRcdFx0Y2FzZSAnKSc6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKGVsLmVuZFNsdXIgPT09IHVuZGVmaW5lZCkgZWwuZW5kU2x1ciA9IDE7IGVsc2UgZWwuZW5kU2x1cisrO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRjYXNlICctJzpcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRlbC5waXRjaGVzLmZvckVhY2goZnVuY3Rpb24ocGl0Y2gpIHsgcGl0Y2guc3RhcnRUaWUgPSB7fTsgfSk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0c2V0SXNJblRpZShtdWx0aWxpbmVWYXJzLCAgb3ZlcmxheUxldmVsLCB0cnVlKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0XHRcdFx0Y2FzZSAnPic6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGNhc2UgJzwnOlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHZhciBicjIgPSBnZXRCcm9rZW5SaHl0aG0obGluZSwgaSk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0aSArPSBicjJbMF0gLSAxO1x0Ly8gaW5kZXggZ2V0cyBpbmNyZW1lbnRlZCBiZWxvdywgc28gd2UnbGwgbGV0IHRoYXQgaGFwcGVuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0bXVsdGlsaW5lVmFycy5uZXh0X25vdGVfZHVyYXRpb24gPSBicjJbMl07XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKGNob3JkRHVyYXRpb24pXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRjaG9yZER1cmF0aW9uID0gY2hvcmREdXJhdGlvbiAqIGJyMlsxXTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRlbHNlXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRjaG9yZER1cmF0aW9uID0gYnIyWzFdO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRjYXNlICcxJzpcblx0XHRcdFx0XHRcdFx0XHRcdFx0Y2FzZSAnMic6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGNhc2UgJzMnOlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRjYXNlICc0Jzpcblx0XHRcdFx0XHRcdFx0XHRcdFx0Y2FzZSAnNSc6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGNhc2UgJzYnOlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRjYXNlICc3Jzpcblx0XHRcdFx0XHRcdFx0XHRcdFx0Y2FzZSAnOCc6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGNhc2UgJzknOlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRjYXNlICcvJzpcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR2YXIgZnJhY3Rpb24gPSB0b2tlbml6ZXIuZ2V0RnJhY3Rpb24obGluZSwgaSk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Y2hvcmREdXJhdGlvbiA9IGZyYWN0aW9uLnZhbHVlO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGkgPSBmcmFjdGlvbi5pbmRleDtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR2YXIgY2ggPSBsaW5lW2ldXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKGNoID09PSAnICcpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZW1lbWJlckVuZEJlYW0gPSB0cnVlO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGlmIChjaCA9PT0gJy0nIHx8IGNoID09PSAnKScgfHwgY2ggPT09ICcgJyB8fCBjaCA9PT0gJzwnIHx8IGNoID09PSAnPicpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpLS07IC8vIFN1YnRyYWN0aW5nIG9uZSBiZWNhdXNlIG9uZSBpcyBhdXRvbWF0aWNhbGx5IGFkZGVkIGJlbG93XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZWxzZVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cG9zdENob3JkRG9uZSA9IHRydWU7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGNhc2UgJzAnOlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGNob3JkRHVyYXRpb24gPSAwO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHBvc3RDaG9yZERvbmUgPSB0cnVlO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCFwb3N0Q2hvcmREb25lKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGkrKztcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gZWxzZVxuXHRcdFx0XHRcdFx0XHRcdHdhcm4oXCJFeHBlY3RlZCAnXScgdG8gZW5kIHRoZSBjaG9yZHNcIiwgbGluZSwgaSk7XG5cblx0XHRcdFx0XHRcdFx0aWYgKGVsLnBpdGNoZXMgIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdFx0XHRcdGlmIChjaG9yZER1cmF0aW9uICE9PSBudWxsKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRlbC5kdXJhdGlvbiA9IGVsLmR1cmF0aW9uICogY2hvcmREdXJhdGlvbjtcblx0XHRcdFx0XHRcdFx0XHRcdGlmIChyZW1lbWJlckVuZEJlYW0pXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGFkZEVuZEJlYW0oZWwpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdG11bHRpbGluZVZhcnMuYWRkRm9ybWF0dGluZ09wdGlvbnMoZWwsIHR1bmUuZm9ybWF0dGluZywgJ25vdGUnKTtcblx0XHRcdFx0XHRcdFx0XHR0dW5lQnVpbGRlci5hcHBlbmRFbGVtZW50KCdub3RlJywgc3RhcnRPZkxpbmUrc3RhcnRJLCBzdGFydE9mTGluZStpLCBlbCk7XG5cdFx0XHRcdFx0XHRcdFx0bXVsdGlsaW5lVmFycy5tZWFzdXJlTm90RW1wdHkgPSB0cnVlO1xuXHRcdFx0XHRcdFx0XHRcdGVsID0ge307XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0ZG9uZSA9IHRydWU7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0Ly8gU2luZ2xlIHBpdGNoXG5cdFx0XHRcdFx0dmFyIGVsMiA9IHt9O1xuXHRcdFx0XHRcdHZhciBjb3JlID0gZ2V0Q29yZU5vdGUobGluZSwgaSwgZWwyLCB0cnVlKTtcblx0XHRcdFx0XHRpZiAoZWwyLmVuZFRpZSAhPT0gdW5kZWZpbmVkKSBzZXRJc0luVGllKG11bHRpbGluZVZhcnMsICBvdmVybGF5TGV2ZWwsIHRydWUpO1xuXHRcdFx0XHRcdGlmIChjb3JlICE9PSBudWxsKSB7XG5cdFx0XHRcdFx0XHRpZiAoY29yZS5waXRjaCAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0XHRcdGVsLnBpdGNoZXMgPSBbIHsgfSBdO1xuXHRcdFx0XHRcdFx0XHQvLyBUT0RPLVBFUjogc3RyYWlnaHRlbiB0aGlzIG91dCBzbyB0aGVyZSBpcyBub3Qgc28gbXVjaCBjb3B5aW5nOiBnZXRDb3JlTm90ZSBzaG91bGRuJ3QgY2hhbmdlIGUnXG5cdFx0XHRcdFx0XHRcdGlmIChjb3JlLmFjY2lkZW50YWwgIT09IHVuZGVmaW5lZCkgZWwucGl0Y2hlc1swXS5hY2NpZGVudGFsID0gY29yZS5hY2NpZGVudGFsO1xuXHRcdFx0XHRcdFx0XHRlbC5waXRjaGVzWzBdLnBpdGNoID0gY29yZS5waXRjaDtcblx0XHRcdFx0XHRcdFx0ZWwucGl0Y2hlc1swXS5uYW1lID0gY29yZS5uYW1lO1xuXHRcdFx0XHRcdFx0XHRpZiAoY29yZS5taWRpcGl0Y2ggfHwgY29yZS5taWRpcGl0Y2ggPT09IDApXG5cdFx0XHRcdFx0XHRcdFx0ZWwucGl0Y2hlc1swXS5taWRpcGl0Y2ggPSBjb3JlLm1pZGlwaXRjaDtcblx0XHRcdFx0XHRcdFx0aWYgKGNvcmUuZW5kU2x1ciAhPT0gdW5kZWZpbmVkKSBlbC5waXRjaGVzWzBdLmVuZFNsdXIgPSBjb3JlLmVuZFNsdXI7XG5cdFx0XHRcdFx0XHRcdGlmIChjb3JlLmVuZFRpZSAhPT0gdW5kZWZpbmVkKSBlbC5waXRjaGVzWzBdLmVuZFRpZSA9IGNvcmUuZW5kVGllO1xuXHRcdFx0XHRcdFx0XHRpZiAoY29yZS5zdGFydFNsdXIgIT09IHVuZGVmaW5lZCkgZWwucGl0Y2hlc1swXS5zdGFydFNsdXIgPSBjb3JlLnN0YXJ0U2x1cjtcblx0XHRcdFx0XHRcdFx0aWYgKGVsLnN0YXJ0U2x1ciAhPT0gdW5kZWZpbmVkKSBlbC5waXRjaGVzWzBdLnN0YXJ0U2x1ciA9IGVsLnN0YXJ0U2x1cjtcblx0XHRcdFx0XHRcdFx0aWYgKGVsLmRvdHRlZFNsdXIgIT09IHVuZGVmaW5lZCkgZWwucGl0Y2hlc1swXS5kb3R0ZWRTbHVyID0gdHJ1ZTtcblx0XHRcdFx0XHRcdFx0aWYgKGNvcmUuc3RhcnRUaWUgIT09IHVuZGVmaW5lZCkgZWwucGl0Y2hlc1swXS5zdGFydFRpZSA9IGNvcmUuc3RhcnRUaWU7XG5cdFx0XHRcdFx0XHRcdGlmIChlbC5zdGFydFRpZSAhPT0gdW5kZWZpbmVkKSBlbC5waXRjaGVzWzBdLnN0YXJ0VGllID0gZWwuc3RhcnRUaWU7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRlbC5yZXN0ID0gY29yZS5yZXN0O1xuXHRcdFx0XHRcdFx0XHRpZiAoY29yZS5yZXN0LnR5cGUgPT09ICdtdWx0aW1lYXN1cmUnICYmIGlzRmlyc3RWb2ljZSgpKVxuXHRcdFx0XHRcdFx0XHRcdG11bHRpbGluZVZhcnMuY3VyckJhck51bWJlciArPSBjb3JlLnJlc3QudGV4dCAtIDEgLy8gVGhlIG1pbnVzIG9uZSBpcyBiZWNhdXNlIHRoZSBtZWFzdXJlIHdpdGggdGhlIHJlc3QgaXMgYWxyZWFkeSBjb3VudGVkIG9uY2Ugbm9ybWFsbHkuXG5cdFx0XHRcdFx0XHRcdGlmIChjb3JlLmVuZFNsdXIgIT09IHVuZGVmaW5lZCkgZWwuZW5kU2x1ciA9IGNvcmUuZW5kU2x1cjtcblx0XHRcdFx0XHRcdFx0aWYgKGNvcmUuZW5kVGllICE9PSB1bmRlZmluZWQpIGVsLnJlc3QuZW5kVGllID0gY29yZS5lbmRUaWU7XG5cdFx0XHRcdFx0XHRcdGlmIChjb3JlLnN0YXJ0U2x1ciAhPT0gdW5kZWZpbmVkKSBlbC5zdGFydFNsdXIgPSBjb3JlLnN0YXJ0U2x1cjtcblx0XHRcdFx0XHRcdFx0aWYgKGNvcmUuc3RhcnRUaWUgIT09IHVuZGVmaW5lZCkgZWwucmVzdC5zdGFydFRpZSA9IGNvcmUuc3RhcnRUaWU7XG5cdFx0XHRcdFx0XHRcdGlmIChlbC5zdGFydFRpZSAhPT0gdW5kZWZpbmVkKSBlbC5yZXN0LnN0YXJ0VGllID0gZWwuc3RhcnRUaWU7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdGlmIChjb3JlLmNob3JkICE9PSB1bmRlZmluZWQpIGVsLmNob3JkID0gY29yZS5jaG9yZDtcblx0XHRcdFx0XHRcdGlmIChjb3JlLmR1cmF0aW9uICE9PSB1bmRlZmluZWQpIGVsLmR1cmF0aW9uID0gY29yZS5kdXJhdGlvbjtcblx0XHRcdFx0XHRcdGlmIChjb3JlLmRlY29yYXRpb24gIT09IHVuZGVmaW5lZCkgZWwuZGVjb3JhdGlvbiA9IGNvcmUuZGVjb3JhdGlvbjtcblx0XHRcdFx0XHRcdGlmIChjb3JlLmdyYWNlTm90ZXMgIT09IHVuZGVmaW5lZCkgZWwuZ3JhY2VOb3RlcyA9IGNvcmUuZ3JhY2VOb3Rlcztcblx0XHRcdFx0XHRcdGRlbGV0ZSBlbC5zdGFydFNsdXI7XG5cdFx0XHRcdFx0XHRkZWxldGUgZWwuZG90dGVkU2x1cjtcblx0XHRcdFx0XHRcdGlmIChpc0luVGllKG11bHRpbGluZVZhcnMsICBvdmVybGF5TGV2ZWwsIGVsKSkge1xuXHRcdFx0XHRcdFx0XHRpZiAoZWwucGl0Y2hlcyAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0ZWwucGl0Y2hlc1swXS5lbmRUaWUgPSB0cnVlO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKGVsLnJlc3QudHlwZSAhPT0gJ3NwYWNlcicpIHtcblx0XHRcdFx0XHRcdFx0XHRlbC5yZXN0LmVuZFRpZSA9IHRydWU7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0c2V0SXNJblRpZShtdWx0aWxpbmVWYXJzLCAgb3ZlcmxheUxldmVsLCBmYWxzZSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZiAoY29yZS5zdGFydFRpZSB8fCBlbC5zdGFydFRpZSlcblx0XHRcdFx0XHRcdFx0c2V0SXNJblRpZShtdWx0aWxpbmVWYXJzLCAgb3ZlcmxheUxldmVsLCB0cnVlKTtcblx0XHRcdFx0XHRcdGkgID0gY29yZS5lbmRDaGFyO1xuXG5cdFx0XHRcdFx0XHRpZiAodHJpcGxldE5vdGVzTGVmdCA+IDAgJiYgIShjb3JlLnJlc3QgJiYgY29yZS5yZXN0LnR5cGUgPT09IFwic3BhY2VyXCIpKSB7XG5cdFx0XHRcdFx0XHRcdHRyaXBsZXROb3Rlc0xlZnQtLTtcblx0XHRcdFx0XHRcdFx0aWYgKHRyaXBsZXROb3Rlc0xlZnQgPT09IDApIHtcblx0XHRcdFx0XHRcdFx0XHRlbC5lbmRUcmlwbGV0ID0gdHJ1ZTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRpZiAoY29yZS5lbmRfYmVhbSlcblx0XHRcdFx0XHRcdFx0YWRkRW5kQmVhbShlbCk7XG5cblx0XHRcdFx0XHRcdC8vIElmIHRoZXJlIGlzIGEgd2hvbGUgcmVzdCwgdGhlbiBpdCBzaG91bGQgYmUgdGhlIGR1cmF0aW9uIG9mIHRoZSBtZWFzdXJlLCBub3QgaXQncyBvd24gZHVyYXRpb24uIFdlIG5lZWQgdG8gc3BlY2lhbCBjYXNlIGl0LlxuXHRcdFx0XHRcdFx0Ly8gSWYgdGhlIHRpbWUgc2lnbmF0dXJlIGxlbmd0aCBpcyBncmVhdGVyIHRoYW4gNC80LCB0aG91Z2gsIHRoZW4gYSB3aG9sZSByZXN0IGhhcyBubyBzcGVjaWFsIHRyZWF0bWVudC5cblx0XHRcdFx0XHRcdGlmIChlbC5yZXN0ICYmIGVsLnJlc3QudHlwZSA9PT0gJ3Jlc3QnICYmIGVsLmR1cmF0aW9uID09PSAxICYmIGR1cmF0aW9uT2ZNZWFzdXJlKG11bHRpbGluZVZhcnMpIDw9IDEpIHtcblx0XHRcdFx0XHRcdFx0ZWwucmVzdC50eXBlID0gJ3dob2xlJztcblxuXHRcdFx0XHRcdFx0XHRlbC5kdXJhdGlvbiA9IGR1cmF0aW9uT2ZNZWFzdXJlKG11bHRpbGluZVZhcnMpO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBDcmVhdGUgYSB3YXJuaW5nIGlmIHRoaXMgaXMgbm90IGEgZGlzcGxheWFibGUgZHVyYXRpb24uXG5cdFx0XHRcdFx0XHQvLyBUaGUgZmlyc3QgaXRlbSBvbiBhIGxpbmUgaXMgYSByZWd1bGFyIG5vdGUgdmFsdWUsIGVhY2ggaXRlbSBhZnRlciB0aGF0IHJlcHJlc2VudHMgYSBkb3QgcGxhY2VkIGFmdGVyIHRoZSBwcmV2aW91cyBub3RlLlxuXHRcdFx0XHRcdFx0Ly8gT25seSBkdXJhdGlvbnMgbGVzcyB0aGFuIGEgd2hvbGUgbm90ZSBhcmUgdGVzdGVkIGJlY2F1c2Ugd2hvbGUgbm90ZSBkdXJhdGlvbnMgaGF2ZSBzb21lIHRyaWNreSBydWxlcy5cblxuXHRcdFx0XHRcdFx0aWYgKGVsLmR1cmF0aW9uIDwgMSAmJiBkdXJhdGlvbnMuaW5kZXhPZihlbC5kdXJhdGlvbikgPT09IC0xICYmIGVsLmR1cmF0aW9uICE9PSAwKSB7XG5cdFx0XHRcdFx0XHRcdGlmICghZWwucmVzdCB8fCBlbC5yZXN0LnR5cGUgIT09ICdzcGFjZXInKVxuXHRcdFx0XHRcdFx0XHRcdHdhcm4oXCJEdXJhdGlvbiBub3QgcmVwcmVzZW50YWJsZTogXCIgKyBsaW5lLnN1YnN0cmluZyhzdGFydEksIGkpLCBsaW5lLCBpKTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0bXVsdGlsaW5lVmFycy5hZGRGb3JtYXR0aW5nT3B0aW9ucyhlbCwgdHVuZS5mb3JtYXR0aW5nLCAnbm90ZScpO1xuXHRcdFx0XHRcdFx0dmFyIHN1Y2NlZWRlZCA9IHR1bmVCdWlsZGVyLmFwcGVuZEVsZW1lbnQoJ25vdGUnLCBzdGFydE9mTGluZStzdGFydEksIHN0YXJ0T2ZMaW5lK2ksIGVsKTtcblx0XHRcdFx0XHRcdGlmICghc3VjY2VlZGVkKSB7XG5cdFx0XHRcdFx0XHRcdHRoaXMuc3RhcnROZXdMaW5lKClcblx0XHRcdFx0XHRcdFx0dHVuZUJ1aWxkZXIuYXBwZW5kRWxlbWVudCgnbm90ZScsIHN0YXJ0T2ZMaW5lK3N0YXJ0SSwgc3RhcnRPZkxpbmUraSwgZWwpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0bXVsdGlsaW5lVmFycy5tZWFzdXJlTm90RW1wdHkgPSB0cnVlO1xuXHRcdFx0XHRcdFx0ZWwgPSB7fTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoaSA9PT0gc3RhcnRJKSB7XHQvLyBkb24ndCBrbm93IHdoYXQgdGhpcyBpcywgc28gaWdub3JlIGl0LlxuXHRcdFx0XHRcdGlmIChsaW5lW2ldICE9PSAnICcgJiYgbGluZVtpXSAhPT0gJ2AnKVxuXHRcdFx0XHRcdFx0d2FybihcIlVua25vd24gY2hhcmFjdGVyIGlnbm9yZWRcIiwgbGluZSwgaSk7XG5cdFx0XHRcdFx0aSsrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdHRoaXMubGluZUNvbnRpbnVhdGlvbiA9IGxpbmUuaW5kZXhPZignXFx4MTInKSA+PSAwIHx8IChyZXRIZWFkZXJbMF0gPiAwKVxuXHRpZiAoIXRoaXMubGluZUNvbnRpbnVhdGlvbikgeyBlbCA9IHsgfSB9XG59O1xuXG52YXIgc2V0SXNJblRpZSA9ZnVuY3Rpb24obXVsdGlsaW5lVmFycywgb3ZlcmxheUxldmVsLCB2YWx1ZSkge1xuXHQvLyBJZiB0aGlzIGlzIHNpbmdsZSB2b2ljZSBtdXNpYyB0aGVuIHRoZSB2b2ljZSBpbmRleCBpc24ndCBzZXQsIHNvIHdlIHVzZSB0aGUgZmlyc3Qgdm9pY2UuXG5cdHZhciB2b2ljZUluZGV4ID0gbXVsdGlsaW5lVmFycy5jdXJyZW50Vm9pY2UgPyBtdWx0aWxpbmVWYXJzLmN1cnJlbnRWb2ljZS5zdGFmZk51bSAqIDEwMCArIG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlLmluZGV4IDogMDtcblx0aWYgKG11bHRpbGluZVZhcnMuaW5UaWVbb3ZlcmxheUxldmVsXSA9PT0gdW5kZWZpbmVkKVxuXHRcdG11bHRpbGluZVZhcnMuaW5UaWVbb3ZlcmxheUxldmVsXSA9IFtdO1xuXHRtdWx0aWxpbmVWYXJzLmluVGllW292ZXJsYXlMZXZlbF1bdm9pY2VJbmRleF0gPSB2YWx1ZTtcbn07XG5cbnZhciBsZXR0ZXJfdG9fY2hvcmQgPSBmdW5jdGlvbihsaW5lLCBpKSB7XG5cdGlmIChsaW5lW2ldID09PSAnXCInKVxuXHR7XG5cdFx0dmFyIGNob3JkID0gdG9rZW5pemVyLmdldEJyYWNrZXR0ZWRTdWJzdHJpbmcobGluZSwgaSwgNSk7XG5cdFx0aWYgKCFjaG9yZFsyXSlcblx0XHRcdHdhcm4oXCJNaXNzaW5nIHRoZSBjbG9zaW5nIHF1b3RlIHdoaWxlIHBhcnNpbmcgdGhlIGNob3JkIHN5bWJvbFwiLCBsaW5lICwgaSk7XG5cdFx0Ly8gSWYgaXQgc3RhcnRzIHdpdGggXiwgdGhlbiB0aGUgY2hvcmQgYXBwZWFycyBhYm92ZS5cblx0XHQvLyBJZiBpdCBzdGFydHMgd2l0aCBfIHRoZW4gdGhlIGNob3JkIGFwcGVhcnMgYmVsb3cuXG5cdFx0Ly8gKG5vdGUgdGhhdCB0aGUgMi4wIGRyYWZ0IHN0YW5kYXJkIGRlZmluZXMgdGhlbSBhcyBub3QgY2hvcmRzLCBidXQgYW5ub3RhdGlvbnMgYW5kIGFsc28gZGVmaW5lcyBALilcblx0XHRpZiAoY2hvcmRbMF0gPiAwICYmIGNob3JkWzFdLmxlbmd0aCA+IDAgJiYgY2hvcmRbMV1bMF0gPT09ICdeJykge1xuXHRcdFx0Y2hvcmRbMV0gPSBjaG9yZFsxXS5zdWJzdHJpbmcoMSk7XG5cdFx0XHRjaG9yZFsyXSA9ICdhYm92ZSc7XG5cdFx0fSBlbHNlIGlmIChjaG9yZFswXSA+IDAgJiYgY2hvcmRbMV0ubGVuZ3RoID4gMCAmJiBjaG9yZFsxXVswXSA9PT0gJ18nKSB7XG5cdFx0XHRjaG9yZFsxXSA9IGNob3JkWzFdLnN1YnN0cmluZygxKTtcblx0XHRcdGNob3JkWzJdID0gJ2JlbG93Jztcblx0XHR9IGVsc2UgaWYgKGNob3JkWzBdID4gMCAmJiBjaG9yZFsxXS5sZW5ndGggPiAwICYmIGNob3JkWzFdWzBdID09PSAnPCcpIHtcblx0XHRcdGNob3JkWzFdID0gY2hvcmRbMV0uc3Vic3RyaW5nKDEpO1xuXHRcdFx0Y2hvcmRbMl0gPSAnbGVmdCc7XG5cdFx0fSBlbHNlIGlmIChjaG9yZFswXSA+IDAgJiYgY2hvcmRbMV0ubGVuZ3RoID4gMCAmJiBjaG9yZFsxXVswXSA9PT0gJz4nKSB7XG5cdFx0XHRjaG9yZFsxXSA9IGNob3JkWzFdLnN1YnN0cmluZygxKTtcblx0XHRcdGNob3JkWzJdID0gJ3JpZ2h0Jztcblx0XHR9IGVsc2UgaWYgKGNob3JkWzBdID4gMCAmJiBjaG9yZFsxXS5sZW5ndGggPiAwICYmIGNob3JkWzFdWzBdID09PSAnQCcpIHtcblx0XHQgICAgICAvLyBALTE1LDUuN1x0XHRcblx0XHQgICAgICBjaG9yZFsxXSA9IGNob3JkWzFdLnN1YnN0cmluZygxKTtcblx0XHQgICAgICB2YXIgeCA9IHRva2VuaXplci5nZXRGbG9hdChjaG9yZFsxXSk7XG5cdFx0ICAgICAgaWYgKHguZGlnaXRzID09PSAwKXtcblx0XHRcdHdhcm4oXCJNaXNzaW5nIGZpcnN0IHBvc2l0aW9uIGluIGFic29sdXRlbHkgcG9zaXRpb25lZCBhbm5vdGF0aW9uLlwiLCBsaW5lLCBpKTtcblx0XHRcdGNob3JkWzFdID0gY2hvcmRbMV0ucmVwbGFjZShcIkBcIixcIlwiKTtcblx0XHRcdGNob3JkWzJdID0gJ2Fib3ZlJztcblx0XHRcdHJldHVybiBjaG9yZDtcblx0XHQgICAgICB9XG5cdFx0ICAgICAgY2hvcmRbMV0gPSBjaG9yZFsxXS5zdWJzdHJpbmcoeC5kaWdpdHMpO1xuXHRcdCAgICAgIGlmIChjaG9yZFsxXVswXSAhPT0gJywnKXtcblx0XHRcdHdhcm4oXCJNaXNzaW5nIGNvbW1hIGFic29sdXRlbHkgcG9zaXRpb25lZCBhbm5vdGF0aW9uLlwiLCBsaW5lLCBpKTtcblx0XHRcdGNob3JkWzFdID0gY2hvcmRbMV0ucmVwbGFjZShcIkBcIixcIlwiKTtcblx0XHRcdGNob3JkWzJdID0gJ2Fib3ZlJztcblx0XHRcdHJldHVybiBjaG9yZDtcblx0XHQgICAgICB9XG5cdFx0ICAgICAgY2hvcmRbMV0gPSBjaG9yZFsxXS5zdWJzdHJpbmcoMSk7XG5cdFx0ICAgICAgdmFyIHkgPSB0b2tlbml6ZXIuZ2V0RmxvYXQoY2hvcmRbMV0pO1xuXHRcdCAgICAgIGlmICh5LmRpZ2l0cyA9PT0gMCl7XG5cdFx0XHR3YXJuKFwiTWlzc2luZyBzZWNvbmQgcG9zaXRpb24gaW4gYWJzb2x1dGVseSBwb3NpdGlvbmVkIGFubm90YXRpb24uXCIsIGxpbmUsIGkpO1xuXHRcdFx0Y2hvcmRbMV0gPSBjaG9yZFsxXS5yZXBsYWNlKFwiQFwiLFwiXCIpO1xuXHRcdFx0Y2hvcmRbMl0gPSAnYWJvdmUnO1xuXHRcdFx0cmV0dXJuIGNob3JkO1xuXHRcdCAgICAgIH1cblx0XHQgICAgICBjaG9yZFsxXSA9IGNob3JkWzFdLnN1YnN0cmluZyh5LmRpZ2l0cyk7XG5cdFx0ICAgICAgdmFyIHdzID0gdG9rZW5pemVyLnNraXBXaGl0ZVNwYWNlKGNob3JkWzFdKTtcblx0XHQgICAgICBjaG9yZFsxXSA9IGNob3JkWzFdLnN1YnN0cmluZyh3cyk7XG5cdFx0ICAgICAgY2hvcmRbMl0gPSBudWxsO1xuXHRcdCAgICAgIGNob3JkWzNdID0ge1xuXHRcdFx0eDogeC52YWx1ZSxcblx0XHRcdHk6IHkudmFsdWVcblx0XHQgICAgICB9O1x0XG5cdFx0fSBlbHNlIHtcblx0XHRcdGlmIChtdWx0aWxpbmVWYXJzLmZyZWVnY2hvcmQgIT09IHRydWUpIHtcblx0XHRcdFx0Y2hvcmRbMV0gPSBjaG9yZFsxXS5yZXBsYWNlKC8oW0FCQ0RFRkcwLTldKWIvZywgXCIkMeKZrVwiKTtcblx0XHRcdFx0Y2hvcmRbMV0gPSBjaG9yZFsxXS5yZXBsYWNlKC8oW0FCQ0RFRkcwLTldKSMvZywgXCIkMeKZr1wiKTtcblx0XHRcdFx0Y2hvcmRbMV0gPSBjaG9yZFsxXS5yZXBsYWNlKC9eKFtBQkNERUZHXSkoW+KZr+KZrV0/KW8oW15BLVphLXpdKS9nLCBcIiQxJDLCsCQzXCIpO1xuXHRcdFx0XHRjaG9yZFsxXSA9IGNob3JkWzFdLnJlcGxhY2UoL14oW0FCQ0RFRkddKShb4pmv4pmtXT8pbyQvZywgXCIkMSQywrBcIik7XG5cdFx0XHRcdGNob3JkWzFdID0gY2hvcmRbMV0ucmVwbGFjZSgvXihbQUJDREVGR10pKFvima/ima1dPykwKFteQS1aYS16XSkvZywgXCIkMSQyw7gkM1wiKTtcblx0XHRcdFx0Y2hvcmRbMV0gPSBjaG9yZFsxXS5yZXBsYWNlKC9eKFtBQkNERUZHXSkoW+KZr+KZrV0/KVxcXihbXkEtWmEtel0pL2csIFwiJDEkMuKIhiQzXCIpO1xuXHRcdFx0fVxuXHRcdFx0Y2hvcmRbMl0gPSAnZGVmYXVsdCc7XG5cdFx0XHRjaG9yZFsxXSA9IHRyYW5zcG9zZS5jaG9yZE5hbWUobXVsdGlsaW5lVmFycywgY2hvcmRbMV0pO1xuXHRcdH1cblx0XHRyZXR1cm4gY2hvcmQ7XG5cdH1cblx0cmV0dXJuIFswLCBcIlwiXTtcbn07XG5cbnZhciBsZXR0ZXJfdG9fZ3JhY2UgPSAgZnVuY3Rpb24obGluZSwgaSkge1xuXHQvLyBHcmFjZSBub3RlcyBhcmUgYW4gYXJyYXkgb2Y6IHN0YXJ0c2x1ciwgbm90ZSwgZW5kc2x1ciwgc3BhY2U7IHdoZXJlIG5vdGUgaXMgYWNjaWRlbnRhbCwgcGl0Y2gsIGR1cmF0aW9uXG5cdGlmIChsaW5lW2ldID09PSAneycpIHtcblx0XHQvLyBmZXRjaCB0aGUgZ3JhY2Vub3RlcyBzdHJpbmcgYW5kIGNvbnN1bWUgdGhhdCBpbnRvIHRoZSBhcnJheVxuXHRcdHZhciBncmEgPSB0b2tlbml6ZXIuZ2V0QnJhY2tldHRlZFN1YnN0cmluZyhsaW5lLCBpLCAxLCAnfScpO1xuXHRcdGlmICghZ3JhWzJdKVxuXHRcdFx0d2FybihcIk1pc3NpbmcgdGhlIGNsb3NpbmcgJ30nIHdoaWxlIHBhcnNpbmcgZ3JhY2Ugbm90ZVwiLCBsaW5lLCBpKTtcblx0XHQvLyBJZiB0aGVyZSBpcyBhIHNsdXIgYWZ0ZXIgdGhlIGdyYWNlIGNvbnN0cnVjdGlvbiwgdGhlbiBtb3ZlIGl0IHRvIHRoZSBsYXN0IG5vdGUgaW5zaWRlIHRoZSBncmFjZSBjb25zdHJ1Y3Rpb25cblx0XHRpZiAobGluZVtpK2dyYVswXV0gPT09ICcpJykge1xuXHRcdFx0Z3JhWzBdKys7XG5cdFx0XHRncmFbMV0gKz0gJyknO1xuXHRcdH1cblxuXHRcdHZhciBncmFjZW5vdGVzID0gW107XG5cdFx0dmFyIGlpID0gMDtcblx0XHR2YXIgaW5UaWUgPSBmYWxzZTtcblx0XHR3aGlsZSAoaWkgPCBncmFbMV0ubGVuZ3RoKSB7XG5cdFx0XHR2YXIgYWNjaWFjY2F0dXJhID0gZmFsc2U7XG5cdFx0XHRpZiAoZ3JhWzFdW2lpXSA9PT0gJy8nKSB7XG5cdFx0XHRcdGFjY2lhY2NhdHVyYSA9IHRydWU7XG5cdFx0XHRcdGlpKys7XG5cdFx0XHR9XG5cdFx0XHR2YXIgbm90ZSA9IGdldENvcmVOb3RlKGdyYVsxXSwgaWksIHt9LCBmYWxzZSk7XG5cdFx0XHRpZiAobm90ZSAhPT0gbnVsbCkge1xuXHRcdFx0XHQvLyBUaGUgZ3JhY2Ugbm90ZSBkdXJhdGlvbnMgc2hvdWxkIG5vdCBiZSBhZmZlY3RlZCBieSB0aGUgZGVmYXVsdCBsZW5ndGg6IHRoZXkgc2hvdWxkIGJlIGJhc2VkIG9uIDEvMTYsIHNvIGlmIHRoYXQgaXNuJ3QgdGhlIGRlZmF1bHQsIHRoZW4gbXVsdGlwbHkgaGVyZS5cblx0XHRcdFx0bm90ZS5kdXJhdGlvbiA9IG5vdGUuZHVyYXRpb24gLyAobXVsdGlsaW5lVmFycy5kZWZhdWx0X2xlbmd0aCAqIDgpO1xuXHRcdFx0XHRpZiAoYWNjaWFjY2F0dXJhKVxuXHRcdFx0XHRcdG5vdGUuYWNjaWFjY2F0dXJhID0gdHJ1ZTtcblx0XHRcdFx0aWYgKG5vdGUucmVzdCkge1xuXHRcdFx0XHRcdC8vIGRvbid0IGFsbG93IHJlc3RzIGluc2lkZSBncmFjZW5vdGVzXG5cdFx0XHRcdFx0d2FybihcIlJlc3RzIG5vdCBhbGxvd2VkIGFzIGdyYWNlIG5vdGVzICdcIiArIGdyYVsxXVtpaV0gKyBcIicgd2hpbGUgcGFyc2luZyBncmFjZSBub3RlXCIsIGxpbmUsIGkpO1xuXHRcdFx0XHR9IGVsc2Vcblx0XHRcdFx0XHRncmFjZW5vdGVzLnB1c2gobm90ZSk7XG5cblx0XHRcdFx0aWYgKGluVGllKSB7XG5cdFx0XHRcdFx0bm90ZS5lbmRUaWUgPSB0cnVlO1xuXHRcdFx0XHRcdGluVGllID0gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKG5vdGUuc3RhcnRUaWUpXG5cdFx0XHRcdFx0aW5UaWUgPSB0cnVlO1xuXG5cdFx0XHRcdGlpICA9IG5vdGUuZW5kQ2hhcjtcblx0XHRcdFx0ZGVsZXRlIG5vdGUuZW5kQ2hhcjtcblxuXHRcdFx0XHRpZiAobm90ZS5lbmRfYmVhbSkge1xuXHRcdFx0XHRcdG5vdGUuZW5kQmVhbSA9IHRydWU7XG5cdFx0XHRcdFx0ZGVsZXRlIG5vdGUuZW5kX2JlYW07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGVsc2Uge1xuXHRcdFx0XHQvLyBXZSBzaG91bGRuJ3QgZ2V0IGFueXRoaW5nIGJ1dCBub3RlcyBvciBhIHNwYWNlIGhlcmUsIHNvIHJlcG9ydCBhbiBlcnJvclxuXHRcdFx0XHRpZiAoZ3JhWzFdW2lpXSA9PT0gJyAnKSB7XG5cdFx0XHRcdFx0aWYgKGdyYWNlbm90ZXMubGVuZ3RoID4gMClcblx0XHRcdFx0XHRcdGdyYWNlbm90ZXNbZ3JhY2Vub3Rlcy5sZW5ndGgtMV0uZW5kQmVhbSA9IHRydWU7XG5cdFx0XHRcdH0gZWxzZVxuXHRcdFx0XHRcdHdhcm4oXCJVbmtub3duIGNoYXJhY3RlciAnXCIgKyBncmFbMV1baWldICsgXCInIHdoaWxlIHBhcnNpbmcgZ3JhY2Ugbm90ZVwiLCBsaW5lLCBpKTtcblx0XHRcdFx0aWkrKztcblx0XHRcdH1cblx0XHR9XG5cdFx0aWYgKGdyYWNlbm90ZXMubGVuZ3RoKVxuXHRcdFx0cmV0dXJuIFtncmFbMF0sIGdyYWNlbm90ZXNdO1xuXHR9XG5cdHJldHVybiBbIDAgXTtcbn07XG5cbmZ1bmN0aW9uIGxldHRlcl90b19vdmVybGF5KGxpbmUsIGkpIHtcblx0aWYgKGxpbmVbaV0gPT09ICcmJykge1xuXHRcdHZhciBzdGFydCA9IGk7XG5cdFx0d2hpbGUgKGxpbmVbaV0gJiYgbGluZVtpXSAhPT0gJzonICYmIGxpbmVbaV0gIT09ICd8Jylcblx0XHRcdGkrKztcblx0XHRyZXR1cm4gWyBpLXN0YXJ0LCBsaW5lLnN1YnN0cmluZyhzdGFydCsxLCBpKSBdO1xuXHR9XG5cdHJldHVybiBbIDAgXTtcbn1cblxuZnVuY3Rpb24gZHVyYXRpb25PZk1lYXN1cmUobXVsdGlsaW5lVmFycykge1xuXHQvLyBUT0RPLVBFUjogVGhpcyBjb3VsZCBiZSBtb3JlIGNvbXBsaWNhdGVkIGlmIG9uZSBvZiB0aGUgdW51c3VhbCBtZWFzdXJlcyBpcyB1c2VkLlxuXHR2YXIgbWV0ZXIgPSBtdWx0aWxpbmVWYXJzLm9yaWdNZXRlcjtcblx0aWYgKCFtZXRlciB8fCBtZXRlci50eXBlICE9PSAnc3BlY2lmaWVkJylcblx0XHRyZXR1cm4gMTtcblx0aWYgKCFtZXRlci52YWx1ZSB8fCBtZXRlci52YWx1ZS5sZW5ndGggPT09IDApXG5cdFx0cmV0dXJuIDE7XG5cdHJldHVybiBwYXJzZUludChtZXRlci52YWx1ZVswXS5udW0sIDEwKSAvIHBhcnNlSW50KG1ldGVyLnZhbHVlWzBdLmRlbiwgMTApO1xufVxuXG5cblxuXG52YXIgbGV0dGVyX3RvX2FjY2VudCA9IGZ1bmN0aW9uKGxpbmUsIGkpIHtcblx0dmFyIG1hY3JvID0gbXVsdGlsaW5lVmFycy5tYWNyb3NbbGluZVtpXV07XG5cblx0aWYgKG1hY3JvICE9PSB1bmRlZmluZWQpIHtcblx0XHRpZiAobWFjcm9bMF0gPT09ICchJyB8fCBtYWNyb1swXSA9PT0gJysnKVxuXHRcdFx0bWFjcm8gPSBtYWNyby5zdWJzdHJpbmcoMSk7XG5cdFx0aWYgKG1hY3JvW21hY3JvLmxlbmd0aC0xXSA9PT0gJyEnIHx8IG1hY3JvW21hY3JvLmxlbmd0aC0xXSA9PT0gJysnKVxuXHRcdFx0bWFjcm8gPSBtYWNyby5zdWJzdHJpbmcoMCwgbWFjcm8ubGVuZ3RoLTEpO1xuXHRcdGlmIChsZWdhbEFjY2VudHMuaW5jbHVkZXMobWFjcm8pKVxuXHRcdFx0cmV0dXJuIFsgMSwgbWFjcm8gXTtcblx0XHRlbHNlIGlmICh2b2x1bWVEZWNvcmF0aW9ucy5pbmNsdWRlcyhtYWNybykpIHtcblx0XHRcdGlmIChtdWx0aWxpbmVWYXJzLnZvbHVtZVBvc2l0aW9uID09PSAnaGlkZGVuJylcblx0XHRcdFx0bWFjcm8gPSBcIlwiO1xuXHRcdFx0cmV0dXJuIFsxLCBtYWNyb107XG5cdFx0fSBlbHNlIGlmIChkeW5hbWljRGVjb3JhdGlvbnMuaW5jbHVkZXMobWFjcm8pKSB7XG5cdFx0XHRpZiAobXVsdGlsaW5lVmFycy5keW5hbWljUG9zaXRpb24gPT09ICdoaWRkZW4nKVxuXHRcdFx0XHRtYWNybyA9IFwiXCI7XG5cdFx0XHRyZXR1cm4gWzEsIG1hY3JvXTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0aWYgKCFtdWx0aWxpbmVWYXJzLmlnbm9yZWREZWNvcmF0aW9ucy5pbmNsdWRlcyhtYWNybykpXG5cdFx0XHRcdHdhcm4oXCJVbmtub3duIG1hY3JvOiBcIiArIG1hY3JvLCBsaW5lLCBpKTtcblx0XHRcdHJldHVybiBbMSwgJycgXTtcblx0XHR9XG5cdH1cblx0c3dpdGNoIChsaW5lW2ldKVxuXHR7XG5cdFx0Y2FzZSAnLic6XG5cdFx0XHRpZiAobGluZVtpKzFdID09PSAnKCcgfHwgbGluZVtpKzFdID09PSAnLScpIC8vIGEgZG90IHRoZW4gb3BlbiBwYXJlbiBpcyBhIGRvdHRlZCBzbHVyOyBsaWtld2lzZSBkb3QgZGFzaCBpcyBkb3R0ZWQgdGllLlxuXHRcdFx0XHRicmVhaztcblx0XHRcdHJldHVybiBbMSwgJ3N0YWNjYXRvJ107XG5cdFx0Y2FzZSAndSc6cmV0dXJuIFsxLCAndXBib3cnXTtcblx0XHRjYXNlICd2JzpyZXR1cm4gWzEsICdkb3duYm93J107XG5cdFx0Y2FzZSAnfic6cmV0dXJuIFsxLCAnaXJpc2hyb2xsJ107XG5cdFx0Y2FzZSAnISc6XG5cdFx0Y2FzZSAnKyc6XG5cdFx0XHR2YXIgcmV0ID0gdG9rZW5pemVyLmdldEJyYWNrZXR0ZWRTdWJzdHJpbmcobGluZSwgaSwgNSk7XG5cdFx0XHQvLyBCZSBzdXJlIHRoYXQgdGhlIGFjY2VudCBpcyByZWNvZ25pemFibGUuXG5cdFx0XHRpZiAocmV0WzFdLmxlbmd0aCA+IDEgJiYgKHJldFsxXVswXSA9PT0gJ14nIHx8IHJldFsxXVswXSA9PT0nXycpKVxuXHRcdFx0XHRyZXRbMV0gPSByZXRbMV0uc3Vic3RyaW5nKDEpO1x0Ly8gVE9ETy1QRVI6IFRoZSB0ZXN0IGZpbGVzIGhhdmUgaW5kaWNhdG9ycyBmb3JjaW5nIHRoZSBvcm5hbWVudCB0byB0aGUgdG9wIG9yIGJvdHRvbSwgYnV0IHRoYXQgaXNuJ3QgaW4gdGhlIHN0YW5kYXJkLiBXZSdsbCBqdXN0IGlnbm9yZSB0aGVtLlxuXHRcdFx0aWYgKGxlZ2FsQWNjZW50cy5pbmNsdWRlcyhyZXRbMV0pKVxuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0aWYgKHZvbHVtZURlY29yYXRpb25zLmluY2x1ZGVzKHJldFsxXSkpIHtcblx0XHRcdFx0aWYgKG11bHRpbGluZVZhcnMudm9sdW1lUG9zaXRpb24gPT09ICdoaWRkZW4nIClcblx0XHRcdFx0XHRyZXRbMV0gPSAnJztcblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblx0XHRcdGlmIChkeW5hbWljRGVjb3JhdGlvbnMuaW5jbHVkZXMocmV0WzFdKSkge1xuXHRcdFx0XHRpZiAobXVsdGlsaW5lVmFycy5keW5hbWljUG9zaXRpb24gPT09ICdoaWRkZW4nIClcblx0XHRcdFx0XHRyZXRbMV0gPSAnJztcblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblxuXHRcdFx0dmFyIGluZCA9IGFjY2VudFBzZXVkb255bXMuZmluZEluZGV4KGZ1bmN0aW9uIChhY2MpIHsgcmV0dXJuIHJldFsxXSA9PT0gYWNjWzBdfSlcblx0XHRcdGlmIChpbmQgPj0gMCkge1xuXHRcdFx0XHRyZXRbMV0gPSBhY2NlbnRQc2V1ZG9ueW1zW2luZF1bMV07XG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cblx0XHRcdGluZCA9IGFjY2VudER5bmFtaWNQc2V1ZG9ueW1zLmZpbmRJbmRleChmdW5jdGlvbiAoYWNjKSB7IHJldHVybiByZXRbMV0gPT09IGFjY1swXX0pXG5cdFx0XHRpZiAoaW5kID49IDApIHtcblx0XHRcdFx0cmV0WzFdID0gYWNjZW50RHluYW1pY1BzZXVkb255bXNbaW5kXVsxXTtcblx0XHRcdFx0aWYgKG11bHRpbGluZVZhcnMuZHluYW1pY1Bvc2l0aW9uID09PSAnaGlkZGVuJyApXG5cdFx0XHRcdFx0cmV0WzFdID0gJyc7XG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFdlIGRpZG4ndCBmaW5kIHRoZSBhY2NlbnQgaW4gdGhlIGxpc3QsIHNvIGNvbnN1bWUgdGhlIHNwYWNlLCBidXQgZG9uJ3QgcmV0dXJuIGFuIGFjY2VudC5cblx0XHRcdC8vIEFsdGhvdWdoIGl0IGlzIHBvc3NpYmxlIHRoYXQgISB3YXMgdXNlZCBhcyBhIGxpbmUgYnJlYWssIHNvIGFjY2VwdCB0aGF0LlxuXHRcdFx0aWYgKGxpbmVbaV0gPT09ICchJyAmJiAocmV0WzBdID09PSAxIHx8IGxpbmVbaStyZXRbMF0tMV0gIT09ICchJykpXG5cdFx0XHRcdHJldHVybiBbMSwgbnVsbCBdO1xuXHRcdFx0d2FybihcIlVua25vd24gZGVjb3JhdGlvbjogXCIgKyByZXRbMV0sIGxpbmUsIGkpO1xuXHRcdFx0cmV0WzFdID0gXCJcIjtcblx0XHRcdHJldHVybiByZXQ7XG5cdFx0Y2FzZSAnSCc6cmV0dXJuIFsxLCAnZmVybWF0YSddO1xuXHRcdGNhc2UgJ0onOnJldHVybiBbMSwgJ3NsaWRlJ107XG5cdFx0Y2FzZSAnTCc6cmV0dXJuIFsxLCAnYWNjZW50J107XG5cdFx0Y2FzZSAnTSc6cmV0dXJuIFsxLCAnbW9yZGVudCddO1xuXHRcdGNhc2UgJ08nOnJldHVyblsxLCAnY29kYSddO1xuXHRcdGNhc2UgJ1AnOnJldHVyblsxLCAncHJhbGx0cmlsbGVyJ107XG5cdFx0Y2FzZSAnUic6cmV0dXJuIFsxLCAncm9sbCddO1xuXHRcdGNhc2UgJ1MnOnJldHVybiBbMSwgJ3NlZ25vJ107XG5cdFx0Y2FzZSAnVCc6cmV0dXJuIFsxLCAndHJpbGwnXTtcblx0XHRjYXNlICd0JzpyZXR1cm4gWzEsICd0cmlsbGgnXTtcblx0XHRcblx0fVxuXHRyZXR1cm4gWzAsIDBdO1xufTtcblxudmFyIGxldHRlcl90b19zcGFjZXIgPSBmdW5jdGlvbihsaW5lLCBpKSB7XG5cdHZhciBzdGFydCA9IGk7XG5cdHdoaWxlICh0b2tlbml6ZXIuaXNXaGl0ZVNwYWNlKGxpbmVbaV0pKVxuXHRcdGkrKztcblx0cmV0dXJuIFsgaS1zdGFydCBdO1xufTtcblxuLy8gcmV0dXJucyB0aGUgY2xhc3Mgb2YgdGhlIGJhciBsaW5lXG4vLyB0aGUgbnVtYmVyIG9mIHRoZSByZXBlYXRcbi8vIGFuZCB0aGUgbnVtYmVyIG9mIGNoYXJhY3RlcnMgdXNlZCB1cFxuLy8gaWYgMCBpcyByZXR1cm5lZCwgdGhlbiB0aGUgbmV4dCBlbGVtZW50IHdhcyBub3QgYSBiYXIgbGluZVxudmFyIGxldHRlcl90b19iYXIgPSBmdW5jdGlvbihsaW5lLCBjdXJyX3Bvcykge1xuXHR2YXIgcmV0ID0gdG9rZW5pemVyLmdldEJhckxpbmUobGluZSwgY3Vycl9wb3MpO1xuXHRpZiAocmV0LmxlbiA9PT0gMClcblx0XHRyZXR1cm4gWzAsXCJcIl07XG5cdGlmIChyZXQud2Fybikge1xuXHRcdHdhcm4ocmV0Lndhcm4sIGxpbmUsIGN1cnJfcG9zKTtcblx0XHRyZXR1cm4gW3JldC5sZW4sXCJcIl07XG5cdH1cblxuXHQvLyBOb3cgc2VlIGlmIHRoaXMgaXMgYSByZXBlYXRlZCBlbmRpbmdcblx0Ly8gQSByZXBlYXRlZCBlbmRpbmcgaXMgYWxsIG9mIHRoZSBjaGFyYWN0ZXJzIDEsMiwzLDQsNSw2LDcsOCw5LDAsLSwgYW5kIGNvbW1hXG5cdC8vIEl0IGNhbiBhbHNvIG9wdGlvbmFsbHkgc3RhcnQgd2l0aCAnWycsIHdoaWNoIGlzIGlnbm9yZWQuXG5cdC8vIEFsc28sIGl0IGNhbiBoYXZlIHdoaXRlIHNwYWNlIGJlZm9yZSB0aGUgJ1snLlxuXHRmb3IgKHZhciB3cyA9IDA7IHdzIDwgbGluZS5sZW5ndGg7IHdzKyspXG5cdFx0aWYgKGxpbmVbY3Vycl9wb3MgKyByZXQubGVuICsgd3NdICE9PSAnICcpXG5cdFx0XHRicmVhaztcblx0dmFyIG9yaWdfYmFyX2xlbiA9IHJldC5sZW47XG5cdGlmIChsaW5lW2N1cnJfcG9zK3JldC5sZW4rd3NdID09PSAnWycpIHtcblx0XHRyZXQubGVuICs9IHdzICsgMTtcblx0fVxuXG5cdC8vIEl0IGNhbiBhbHNvIGJlIGEgcXVvdGVkIHN0cmluZy4gSXQgaXMgdW5jbGVhciB3aGV0aGVyIHRoYXQgY29uc3RydWN0IHJlcXVpcmVzICdbJywgYnV0IGl0IHNlZW1zIGxpa2UgaXQgd291bGQuIG90aGVyd2lzZSBpdCB3b3VsZCBiZSBjb25mdXNlZCB3aXRoIGEgcmVndWxhciBjaG9yZC5cblx0aWYgKGxpbmVbY3Vycl9wb3MrcmV0Lmxlbl0gPT09ICdcIicgJiYgbGluZVtjdXJyX3BvcytyZXQubGVuLTFdID09PSAnWycpIHtcblx0XHR2YXIgZW5kaW5nID0gdG9rZW5pemVyLmdldEJyYWNrZXR0ZWRTdWJzdHJpbmcobGluZSwgY3Vycl9wb3MrcmV0LmxlbiwgNSk7XG5cdFx0cmV0dXJuIFtyZXQubGVuK2VuZGluZ1swXSwgcmV0LnRva2VuLCBlbmRpbmdbMV1dO1xuXHR9XG5cdHZhciByZXRSZXAgPSB0b2tlbml6ZXIuZ2V0VG9rZW5PZihsaW5lLnN1YnN0cmluZyhjdXJyX3BvcytyZXQubGVuKSwgXCIxMjM0NTY3ODkwLSxcIik7XG5cdGlmIChyZXRSZXAubGVuID09PSAwIHx8IHJldFJlcC50b2tlblswXSA9PT0gJy0nKVxuXHRcdHJldHVybiBbb3JpZ19iYXJfbGVuLCByZXQudG9rZW5dO1xuXG5cdHJldHVybiBbcmV0LmxlbityZXRSZXAubGVuLCByZXQudG9rZW4sIHJldFJlcC50b2tlbl07XG59O1xuXG52YXIgbGV0dGVyX3RvX29wZW5fc2x1cnNfYW5kX3RyaXBsZXRzID0gIGZ1bmN0aW9uKGxpbmUsIGkpIHtcblx0Ly8gY29uc3VtZSBzcGFjZXMsIGFuZCBsb29rIGZvciBhbGwgdGhlIG9wZW4gcGFyZW5zLiBJZiB0aGVyZSBpcyBhIG51bWJlciBhZnRlciB0aGUgb3BlbiBwYXJlbixcblx0Ly8gdGhhdCBpcyBhIHRyaXBsZXQuIE90aGVyd2lzZSB0aGF0IGlzIGEgc2x1ci4gQ29sbGVjdCBhbGwgdGhlIHNsdXJzIGFuZCB0aGUgZmlyc3QgdHJpcGxldC5cblx0dmFyIHJldCA9IHt9O1xuXHR2YXIgc3RhcnQgPSBpO1xuXHRpZiAobGluZVtpXSA9PT0gJy4nICYmIGxpbmVbaSsxXSA9PT0gJygnKSB7XG5cdFx0cmV0LmRvdHRlZFNsdXIgPSB0cnVlO1xuXHRcdGkrKztcblx0fVxuXHR3aGlsZSAobGluZVtpXSA9PT0gJygnIHx8IHRva2VuaXplci5pc1doaXRlU3BhY2UobGluZVtpXSkpIHtcblx0XHRpZiAobGluZVtpXSA9PT0gJygnKSB7XG5cdFx0XHRpZiAoaSsxIDwgbGluZS5sZW5ndGggJiYgKGxpbmVbaSsxXSA+PSAnMicgJiYgbGluZVtpKzFdIDw9ICc5JykpIHtcblx0XHRcdFx0aWYgKHJldC50cmlwbGV0ICE9PSB1bmRlZmluZWQpXG5cdFx0XHRcdFx0d2FybihcIkNhbid0IG5lc3QgdHJpcGxldHNcIiwgbGluZSwgaSk7XG5cdFx0XHRcdGVsc2Uge1xuXHRcdFx0XHRcdHJldC50cmlwbGV0ID0gbGluZVtpKzFdIC0gJzAnO1xuXHRcdFx0XHRcdHJldC50cmlwbGV0USA9IHRyaXBsZXRRW3JldC50cmlwbGV0XTtcblx0XHRcdFx0XHRyZXQubnVtX25vdGVzID0gcmV0LnRyaXBsZXQ7XG5cdFx0XHRcdFx0aWYgKGkrMiA8IGxpbmUubGVuZ3RoICYmIGxpbmVbaSsyXSA9PT0gJzonKSB7XG5cdFx0XHRcdFx0XHQvLyBXZSBhcmUgZXhwZWN0aW5nIFwiKHA6cTpyXCIgb3IgXCIocDpxXCIgb3IgXCIocDo6clwiXG5cdFx0XHRcdFx0XHQvLyBUaGF0IGlzOiBcInB1dCBwIG5vdGVzIGludG8gdGhlIHRpbWUgb2YgcSBmb3IgdGhlIG5leHQgciBub3Rlc1wiXG5cdFx0XHRcdFx0XHQvLyBpZiByIGlzIG1pc3NpbmcsIHRoZW4gaXQgaXMgZXF1YWwgdG8gcC5cblx0XHRcdFx0XHRcdC8vIGlmIHEgaXMgbWlzc2luZywgaXQgaXMgZGV0ZXJtaW5lZCBmcm9tIHRoaXMgdGFibGU6XG5cdFx0XHRcdFx0XHQvLyAoMiBub3RlcyBpbiB0aGUgdGltZSBvZiAzXG5cdFx0XHRcdFx0XHQvLyAoMyBub3RlcyBpbiB0aGUgdGltZSBvZiAyXG5cdFx0XHRcdFx0XHQvLyAoNCBub3RlcyBpbiB0aGUgdGltZSBvZiAzXG5cdFx0XHRcdFx0XHQvLyAoNSBub3RlcyBpbiB0aGUgdGltZSBvZiBuIHwgaWYgdGltZSBzaWcgaXMgKDYvOCwgOS84LCAxMi84KSwgbj0zLCBlbHNlIG49MlxuXHRcdFx0XHRcdFx0Ly8gKDYgbm90ZXMgaW4gdGhlIHRpbWUgb2YgMlxuXHRcdFx0XHRcdFx0Ly8gKDcgbm90ZXMgaW4gdGhlIHRpbWUgb2YgblxuXHRcdFx0XHRcdFx0Ly8gKDggbm90ZXMgaW4gdGhlIHRpbWUgb2YgM1xuXHRcdFx0XHRcdFx0Ly8gKDkgbm90ZXMgaW4gdGhlIHRpbWUgb2YgblxuXHRcdFx0XHRcdFx0aWYgKGkrMyA8IGxpbmUubGVuZ3RoICYmIGxpbmVbaSszXSA9PT0gJzonKSB7XG5cdFx0XHRcdFx0XHRcdC8vIFRoZSBzZWNvbmQgbnVtYmVyLCAncScsIGlzIG5vdCBwcmVzZW50LlxuXHRcdFx0XHRcdFx0XHRpZiAoaSs0IDwgbGluZS5sZW5ndGggJiYgKGxpbmVbaSs0XSA+PSAnMScgJiYgbGluZVtpKzRdIDw9ICc5JykpIHtcblx0XHRcdFx0XHRcdFx0XHRyZXQubnVtX25vdGVzID0gbGluZVtpKzRdIC0gJzAnO1xuXHRcdFx0XHRcdFx0XHRcdGkgKz0gMztcblx0XHRcdFx0XHRcdFx0fSBlbHNlXG5cdFx0XHRcdFx0XHRcdFx0d2FybihcImV4cGVjdGVkIG51bWJlciBhZnRlciB0aGUgdHdvIGNvbG9ucyBhZnRlciB0aGUgdHJpcGxldCB0byBtYXJrIHRoZSBkdXJhdGlvblwiLCBsaW5lLCBpKTtcblx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoaSszIDwgbGluZS5sZW5ndGggJiYgKGxpbmVbaSszXSA+PSAnMScgJiYgbGluZVtpKzNdIDw9ICc5JykpIHtcblx0XHRcdFx0XHRcdFx0cmV0LnRyaXBsZXRRID0gbGluZVtpKzNdIC0gJzAnO1xuXHRcdFx0XHRcdFx0XHRpZiAoaSs0IDwgbGluZS5sZW5ndGggJiYgbGluZVtpKzRdID09PSAnOicpIHtcblx0XHRcdFx0XHRcdFx0XHRpZiAoaSs1IDwgbGluZS5sZW5ndGggJiYgKGxpbmVbaSs1XSA+PSAnMScgJiYgbGluZVtpKzVdIDw9ICc5JykpIHtcblx0XHRcdFx0XHRcdFx0XHRcdHJldC5udW1fbm90ZXMgPSBsaW5lW2krNV0gLSAnMCc7XG5cdFx0XHRcdFx0XHRcdFx0XHRpICs9IDQ7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdGkgKz0gMjtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSBlbHNlXG5cdFx0XHRcdFx0XHRcdHdhcm4oXCJleHBlY3RlZCBudW1iZXIgYWZ0ZXIgdGhlIHRyaXBsZXQgdG8gbWFyayB0aGUgZHVyYXRpb25cIiwgbGluZSwgaSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGkrKztcblx0XHRcdH1cblx0XHRcdGVsc2Uge1xuXHRcdFx0XHRpZiAocmV0LnN0YXJ0U2x1ciA9PT0gdW5kZWZpbmVkKVxuXHRcdFx0XHRcdHJldC5zdGFydFNsdXIgPSAxO1xuXHRcdFx0XHRlbHNlXG5cdFx0XHRcdFx0cmV0LnN0YXJ0U2x1cisrO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRpKys7XG5cdH1cblx0cmV0LmNvbnN1bWVkID0gaS1zdGFydDtcblx0cmV0dXJuIHJldDtcbn07XG5cbk11c2ljUGFyc2VyLnByb3RvdHlwZS5zdGFydE5ld0xpbmUgPSBmdW5jdGlvbigpIHtcblx0dmFyIHBhcmFtcyA9IHsgc3RhcnRDaGFyOiAtMSwgZW5kQ2hhcjogLTF9O1xuXHRpZiAobXVsdGlsaW5lVmFycy5wYXJ0Rm9yTmV4dExpbmUudGl0bGUpXG5cdFx0cGFyYW1zLnBhcnQgPSBtdWx0aWxpbmVWYXJzLnBhcnRGb3JOZXh0TGluZTtcblx0cGFyYW1zLmNsZWYgPSBtdWx0aWxpbmVWYXJzLmN1cnJlbnRWb2ljZSAmJiBtdWx0aWxpbmVWYXJzLnN0YXZlc1ttdWx0aWxpbmVWYXJzLmN1cnJlbnRWb2ljZS5zdGFmZk51bV0uY2xlZiAhPT0gdW5kZWZpbmVkID8gT2JqZWN0LmFzc2lnbih7fSxtdWx0aWxpbmVWYXJzLnN0YXZlc1ttdWx0aWxpbmVWYXJzLmN1cnJlbnRWb2ljZS5zdGFmZk51bV0uY2xlZikgOiBPYmplY3QuYXNzaWduKHt9LG11bHRpbGluZVZhcnMuY2xlZik7XG5cdHZhciBzY29yZVRyYW5zcG9zZSA9IG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlID8gbXVsdGlsaW5lVmFycy5jdXJyZW50Vm9pY2Uuc2NvcmVUcmFuc3Bvc2UgOiAwO1xuXHRwYXJhbXMua2V5ID0gcGFyc2VLZXlWb2ljZS5zdGFuZGFyZEtleShtdWx0aWxpbmVWYXJzLmtleS5yb290K211bHRpbGluZVZhcnMua2V5LmFjYyttdWx0aWxpbmVWYXJzLmtleS5tb2RlLCBtdWx0aWxpbmVWYXJzLmtleS5yb290LCBtdWx0aWxpbmVWYXJzLmtleS5hY2MsIHNjb3JlVHJhbnNwb3NlKTtcblx0cGFyYW1zLmtleS5tb2RlID0gbXVsdGlsaW5lVmFycy5rZXkubW9kZTtcblx0aWYgKG11bHRpbGluZVZhcnMua2V5LmltcGxpZWROYXR1cmFscylcblx0XHRwYXJhbXMua2V5LmltcGxpZWROYXR1cmFscyA9IG11bHRpbGluZVZhcnMua2V5LmltcGxpZWROYXR1cmFscztcblx0aWYgKG11bHRpbGluZVZhcnMua2V5LmV4cGxpY2l0QWNjaWRlbnRhbHMpIHtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG11bHRpbGluZVZhcnMua2V5LmV4cGxpY2l0QWNjaWRlbnRhbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBmb3VuZCA9IGZhbHNlO1xuXHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBwYXJhbXMua2V5LmFjY2lkZW50YWxzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGlmIChwYXJhbXMua2V5LmFjY2lkZW50YWxzW2pdLm5vdGUgPT09IG11bHRpbGluZVZhcnMua2V5LmV4cGxpY2l0QWNjaWRlbnRhbHNbaV0ubm90ZSkge1xuXHRcdFx0XHRcdC8vIElmIHRoZSBub3RlIGlzIGFscmVhZHkgaW4gdGhlIGxpc3QsIG92ZXJyaWRlIGl0IHdpdGggdGhlIG5ldyB2YWx1ZVxuXHRcdFx0XHRcdHBhcmFtcy5rZXkuYWNjaWRlbnRhbHNbal0uYWNjID0gbXVsdGlsaW5lVmFycy5rZXkuZXhwbGljaXRBY2NpZGVudGFsc1tpXS5hY2M7XG5cdFx0XHRcdFx0Zm91bmQgPSB0cnVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRpZiAoIWZvdW5kKVxuXHRcdFx0XHRwYXJhbXMua2V5LmFjY2lkZW50YWxzLnB1c2gobXVsdGlsaW5lVmFycy5rZXkuZXhwbGljaXRBY2NpZGVudGFsc1tpXSk7XG5cdFx0fVxuXHR9XG5cdG11bHRpbGluZVZhcnMudGFyZ2V0S2V5ID0gcGFyYW1zLmtleTtcblx0aWYgKHBhcmFtcy5rZXkuZXhwbGljaXRBY2NpZGVudGFscylcblx0XHRkZWxldGUgcGFyYW1zLmtleS5leHBsaWNpdEFjY2lkZW50YWxzO1xuXHRwYXJzZUtleVZvaWNlLmFkZFBvc1RvS2V5KHBhcmFtcy5jbGVmLCBwYXJhbXMua2V5KTtcblx0aWYgKG11bHRpbGluZVZhcnMubWV0ZXIgIT09IG51bGwpIHtcblx0XHRpZiAobXVsdGlsaW5lVmFycy5jdXJyZW50Vm9pY2UpIHtcblx0XHRcdG11bHRpbGluZVZhcnMuc3RhdmVzLmZvckVhY2goZnVuY3Rpb24oc3QpIHtcblx0XHRcdFx0c3QubWV0ZXIgPSBtdWx0aWxpbmVWYXJzLm1ldGVyO1xuXHRcdFx0fSk7XG5cdFx0XHRwYXJhbXMubWV0ZXIgPSBtdWx0aWxpbmVWYXJzLnN0YXZlc1ttdWx0aWxpbmVWYXJzLmN1cnJlbnRWb2ljZS5zdGFmZk51bV0ubWV0ZXI7XG5cdFx0XHRtdWx0aWxpbmVWYXJzLnN0YXZlc1ttdWx0aWxpbmVWYXJzLmN1cnJlbnRWb2ljZS5zdGFmZk51bV0ubWV0ZXIgPSBudWxsO1xuXHRcdH0gZWxzZVxuXHRcdFx0cGFyYW1zLm1ldGVyID0gbXVsdGlsaW5lVmFycy5tZXRlcjtcblx0XHRtdWx0aWxpbmVWYXJzLm1ldGVyID0gbnVsbDtcblx0fSBlbHNlIGlmIChtdWx0aWxpbmVWYXJzLmN1cnJlbnRWb2ljZSAmJiBtdWx0aWxpbmVWYXJzLnN0YXZlc1ttdWx0aWxpbmVWYXJzLmN1cnJlbnRWb2ljZS5zdGFmZk51bV0ubWV0ZXIpIHtcblx0XHQvLyBNYWtlIHN1cmUgdGhhdCBlYWNoIHZvaWNlIGdldHMgdGhlIG1ldGVyIG1hcmtpbmcuXG5cdFx0cGFyYW1zLm1ldGVyID0gbXVsdGlsaW5lVmFycy5zdGF2ZXNbbXVsdGlsaW5lVmFycy5jdXJyZW50Vm9pY2Uuc3RhZmZOdW1dLm1ldGVyO1xuXHRcdG11bHRpbGluZVZhcnMuc3RhdmVzW211bHRpbGluZVZhcnMuY3VycmVudFZvaWNlLnN0YWZmTnVtXS5tZXRlciA9IG51bGw7XG5cdH1cblx0aWYgKG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlICYmIG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlLm5hbWUpXG5cdFx0cGFyYW1zLm5hbWUgPSBtdWx0aWxpbmVWYXJzLmN1cnJlbnRWb2ljZS5uYW1lO1xuXHRpZiAobXVsdGlsaW5lVmFycy52b2NhbGZvbnQpXG5cdFx0cGFyYW1zLnZvY2FsZm9udCA9IG11bHRpbGluZVZhcnMudm9jYWxmb250O1xuXHRpZiAobXVsdGlsaW5lVmFycy50cmlwbGV0Zm9udClcblx0XHRwYXJhbXMudHJpcGxldGZvbnQgPSBtdWx0aWxpbmVWYXJzLnRyaXBsZXRmb250O1xuXHRpZiAobXVsdGlsaW5lVmFycy5nY2hvcmRmb250KVxuXHRcdHBhcmFtcy5nY2hvcmRmb250ID0gbXVsdGlsaW5lVmFycy5nY2hvcmRmb250O1xuXHRpZiAobXVsdGlsaW5lVmFycy5zdHlsZSlcblx0XHRwYXJhbXMuc3R5bGUgPSBtdWx0aWxpbmVWYXJzLnN0eWxlO1xuXHRpZiAobXVsdGlsaW5lVmFycy5jdXJyZW50Vm9pY2UpIHtcblx0XHR2YXIgc3RhZmYgPSBtdWx0aWxpbmVWYXJzLnN0YXZlc1ttdWx0aWxpbmVWYXJzLmN1cnJlbnRWb2ljZS5zdGFmZk51bV07XG5cdFx0aWYgKHN0YWZmLmJyYWNlKSBwYXJhbXMuYnJhY2UgPSBzdGFmZi5icmFjZTtcblx0XHRpZiAoc3RhZmYuYnJhY2tldCkgcGFyYW1zLmJyYWNrZXQgPSBzdGFmZi5icmFja2V0O1xuXHRcdGlmIChzdGFmZi5jb25uZWN0QmFyTGluZXMpIHBhcmFtcy5jb25uZWN0QmFyTGluZXMgPSBzdGFmZi5jb25uZWN0QmFyTGluZXM7XG5cdFx0aWYgKHN0YWZmLm5hbWUpIHBhcmFtcy5uYW1lID0gc3RhZmYubmFtZVttdWx0aWxpbmVWYXJzLmN1cnJlbnRWb2ljZS5pbmRleF07XG5cdFx0aWYgKHN0YWZmLnN1Ym5hbWUpIHBhcmFtcy5zdWJuYW1lID0gc3RhZmYuc3VibmFtZVttdWx0aWxpbmVWYXJzLmN1cnJlbnRWb2ljZS5pbmRleF07XG5cdFx0aWYgKG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlLnN0ZW0pXG5cdFx0XHRwYXJhbXMuc3RlbSA9IG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlLnN0ZW07XG5cdFx0aWYgKG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlLnN0YWZmbGluZXMpXG5cdFx0XHRwYXJhbXMuc3RhZmZsaW5lcyA9IG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlLnN0YWZmbGluZXM7XG5cdFx0aWYgKG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlLnN0YWZmc2NhbGUpXG5cdFx0XHRwYXJhbXMuc3RhZmZzY2FsZSA9IG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlLnN0YWZmc2NhbGU7XG5cdFx0aWYgKG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlLnNjYWxlKVxuXHRcdFx0cGFyYW1zLnNjYWxlID0gbXVsdGlsaW5lVmFycy5jdXJyZW50Vm9pY2Uuc2NhbGU7XG5cdFx0aWYgKG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlLmNvbG9yKVxuXHRcdFx0cGFyYW1zLmNvbG9yID0gbXVsdGlsaW5lVmFycy5jdXJyZW50Vm9pY2UuY29sb3I7XG5cdFx0aWYgKG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlLnN0eWxlKVxuXHRcdFx0cGFyYW1zLnN0eWxlID0gbXVsdGlsaW5lVmFycy5jdXJyZW50Vm9pY2Uuc3R5bGU7XG5cdFx0aWYgKG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlLnRyYW5zcG9zZSlcblx0XHRcdHBhcmFtcy5jbGVmLnRyYW5zcG9zZSA9IG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlLnRyYW5zcG9zZTtcblx0XHRwYXJhbXMuY3VycmVudFZvaWNlID0gbXVsdGlsaW5lVmFycy5jdXJyZW50Vm9pY2Vcblx0XHR2YXIgdm9pY2VzID0gT2JqZWN0LmtleXMobXVsdGlsaW5lVmFycy52b2ljZXMpXG5cdFx0Zm9yICh2YXIgbXYgPSAwOyBtdiA8IHZvaWNlcy5sZW5ndGg7IG12KyspIHtcblx0XHRcdGlmIChwYXJhbXMuY3VycmVudFZvaWNlLnN0YWZmTnVtID09PSBtdWx0aWxpbmVWYXJzLnZvaWNlc1t2b2ljZXNbbXZdXS5zdGFmZk51bSAmJiBwYXJhbXMuY3VycmVudFZvaWNlLmluZGV4ID09PSBtdWx0aWxpbmVWYXJzLnZvaWNlc1t2b2ljZXNbbXZdXS5pbmRleClcblx0XHRcdFx0cGFyYW1zLmN1cnJlbnRWb2ljZU5hbWUgPSB2b2ljZXNbbXZdXG5cdFx0fVxuXHR9XG5cdGlmIChtdWx0aWxpbmVWYXJzLmJhck51bWJlcnMgPT09IDAgJiYgaXNGaXJzdFZvaWNlKCkgJiYgbXVsdGlsaW5lVmFycy5jdXJyQmFyTnVtYmVyICE9PSAxKVxuXHRcdHBhcmFtcy5iYXJOdW1iZXIgPSBtdWx0aWxpbmVWYXJzLmN1cnJCYXJOdW1iZXI7XG5cdHR1bmVCdWlsZGVyLnN0YXJ0TmV3TGluZShwYXJhbXMpO1xuXHRpZiAobXVsdGlsaW5lVmFycy5rZXkuaW1wbGllZE5hdHVyYWxzKVxuXHRcdGRlbGV0ZSBtdWx0aWxpbmVWYXJzLmtleS5pbXBsaWVkTmF0dXJhbHM7XG5cblx0bXVsdGlsaW5lVmFycy5wYXJ0Rm9yTmV4dExpbmUgPSB7fTtcblx0aWYgKG11bHRpbGluZVZhcnMudGVtcG9Gb3JOZXh0TGluZS5sZW5ndGggPT09IDQpXG5cdFx0dHVuZUJ1aWxkZXIuYXBwZW5kRWxlbWVudChtdWx0aWxpbmVWYXJzLnRlbXBvRm9yTmV4dExpbmVbMF0sbXVsdGlsaW5lVmFycy50ZW1wb0Zvck5leHRMaW5lWzFdLG11bHRpbGluZVZhcnMudGVtcG9Gb3JOZXh0TGluZVsyXSxtdWx0aWxpbmVWYXJzLnRlbXBvRm9yTmV4dExpbmVbM10pO1xuXHRtdWx0aWxpbmVWYXJzLnRlbXBvRm9yTmV4dExpbmUgPSBbXTtcbn1cblxuLy8gVE9ETy1QRVI6IG1ha2UgdGhpcyBhIG1ldGhvZCBpbiBlbC5cbnZhciBhZGRFbmRCZWFtID0gZnVuY3Rpb24oZWwpIHtcblx0aWYgKGVsLmR1cmF0aW9uICE9PSB1bmRlZmluZWQgJiYgZWwuZHVyYXRpb24gPCAwLjI1KVxuXHRcdGVsLmVuZF9iZWFtID0gdHJ1ZTtcblx0cmV0dXJuIGVsO1xufTtcblxudmFyIGdldENvcmVOb3RlID0gZnVuY3Rpb24obGluZSwgaW5kZXgsIGVsLCBjYW5IYXZlQnJva2VuUmh5dGhtKSB7XG5cdC8vdmFyIGVsID0geyBzdGFydENoYXI6IGluZGV4IH07XG5cdHZhciBpc0NvbXBsZXRlID0gZnVuY3Rpb24oc3RhdGUpIHtcblx0XHRyZXR1cm4gKHN0YXRlID09PSAnb2N0YXZlJyB8fCBzdGF0ZSA9PT0gJ2R1cmF0aW9uJyB8fCBzdGF0ZSA9PT0gJ1pkdXJhdGlvbicgfHwgc3RhdGUgPT09ICdicm9rZW5fcmh5dGhtJyB8fCBzdGF0ZSA9PT0gJ2VuZF9zbHVyJyk7XG5cdH07XG5cdHZhciBkb3R0ZWRUaWU7XG5cdGlmIChsaW5lW2luZGV4XSA9PT0gJy4nICYmIGxpbmVbaW5kZXgrMV0gPT09ICctJykge1xuXHRcdGRvdHRlZFRpZSA9IHRydWU7XG5cdFx0aW5kZXgrKztcblx0fVxuXHR2YXIgc3RhdGUgPSAnc3RhcnRTbHVyJztcblx0dmFyIGR1cmF0aW9uU2V0QnlQcmV2aW91c05vdGUgPSBmYWxzZTtcblx0d2hpbGUgKDEpIHtcblx0XHRzd2l0Y2gobGluZVtpbmRleF0pIHtcblx0XHRcdGNhc2UgJygnOlxuXHRcdFx0XHRpZiAoc3RhdGUgPT09ICdzdGFydFNsdXInKSB7XG5cdFx0XHRcdFx0aWYgKGVsLnN0YXJ0U2x1ciA9PT0gdW5kZWZpbmVkKSBlbC5zdGFydFNsdXIgPSAxOyBlbHNlIGVsLnN0YXJ0U2x1cisrO1xuXHRcdFx0XHR9IGVsc2UgaWYgKGlzQ29tcGxldGUoc3RhdGUpKSB7ZWwuZW5kQ2hhciA9IGluZGV4O3JldHVybiBlbDt9XG5cdFx0XHRcdGVsc2UgcmV0dXJuIG51bGw7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnKSc6XG5cdFx0XHRcdGlmIChpc0NvbXBsZXRlKHN0YXRlKSkge1xuXHRcdFx0XHRcdGlmIChlbC5lbmRTbHVyID09PSB1bmRlZmluZWQpIGVsLmVuZFNsdXIgPSAxOyBlbHNlIGVsLmVuZFNsdXIrKztcblx0XHRcdFx0fSBlbHNlIHJldHVybiBudWxsO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ14nOlxuXHRcdFx0XHRpZiAoc3RhdGUgPT09ICdzdGFydFNsdXInKSB7ZWwuYWNjaWRlbnRhbCA9ICdzaGFycCc7c3RhdGUgPSAnc2hhcnAyJzt9XG5cdFx0XHRcdGVsc2UgaWYgKHN0YXRlID09PSAnc2hhcnAyJykge2VsLmFjY2lkZW50YWwgPSAnZGJsc2hhcnAnO3N0YXRlID0gJ3BpdGNoJzt9XG5cdFx0XHRcdGVsc2UgaWYgKGlzQ29tcGxldGUoc3RhdGUpKSB7ZWwuZW5kQ2hhciA9IGluZGV4O3JldHVybiBlbDt9XG5cdFx0XHRcdGVsc2UgcmV0dXJuIG51bGw7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnXyc6XG5cdFx0XHRcdGlmIChzdGF0ZSA9PT0gJ3N0YXJ0U2x1cicpIHtlbC5hY2NpZGVudGFsID0gJ2ZsYXQnO3N0YXRlID0gJ2ZsYXQyJzt9XG5cdFx0XHRcdGVsc2UgaWYgKHN0YXRlID09PSAnZmxhdDInKSB7ZWwuYWNjaWRlbnRhbCA9ICdkYmxmbGF0JztzdGF0ZSA9ICdwaXRjaCc7fVxuXHRcdFx0XHRlbHNlIGlmIChpc0NvbXBsZXRlKHN0YXRlKSkge2VsLmVuZENoYXIgPSBpbmRleDtyZXR1cm4gZWw7fVxuXHRcdFx0XHRlbHNlIHJldHVybiBudWxsO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJz0nOlxuXHRcdFx0XHRpZiAoc3RhdGUgPT09ICdzdGFydFNsdXInKSB7ZWwuYWNjaWRlbnRhbCA9ICduYXR1cmFsJztzdGF0ZSA9ICdwaXRjaCc7fVxuXHRcdFx0XHRlbHNlIGlmIChpc0NvbXBsZXRlKHN0YXRlKSkge2VsLmVuZENoYXIgPSBpbmRleDtyZXR1cm4gZWw7fVxuXHRcdFx0XHRlbHNlIHJldHVybiBudWxsO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ0EnOlxuXHRcdFx0Y2FzZSAnQic6XG5cdFx0XHRjYXNlICdDJzpcblx0XHRcdGNhc2UgJ0QnOlxuXHRcdFx0Y2FzZSAnRSc6XG5cdFx0XHRjYXNlICdGJzpcblx0XHRcdGNhc2UgJ0cnOlxuXHRcdFx0Y2FzZSAnYSc6XG5cdFx0XHRjYXNlICdiJzpcblx0XHRcdGNhc2UgJ2MnOlxuXHRcdFx0Y2FzZSAnZCc6XG5cdFx0XHRjYXNlICdlJzpcblx0XHRcdGNhc2UgJ2YnOlxuXHRcdFx0Y2FzZSAnZyc6XG5cdFx0XHRcdGlmIChzdGF0ZSA9PT0gJ3N0YXJ0U2x1cicgfHwgc3RhdGUgPT09ICdzaGFycDInIHx8IHN0YXRlID09PSAnZmxhdDInIHx8IHN0YXRlID09PSAncGl0Y2gnKSB7XG5cdFx0XHRcdFx0ZWwucGl0Y2ggPSBwaXRjaGVzW2xpbmVbaW5kZXhdXTtcblx0XHRcdFx0XHRlbC5waXRjaCArPSA3ICogKG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlICYmIG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlLm9jdGF2ZSAhPT0gdW5kZWZpbmVkID8gbXVsdGlsaW5lVmFycy5jdXJyZW50Vm9pY2Uub2N0YXZlIDogbXVsdGlsaW5lVmFycy5vY3RhdmUpO1xuXHRcdFx0XHRcdGVsLm5hbWUgPSBsaW5lW2luZGV4XTtcblx0XHRcdFx0XHRpZiAoZWwuYWNjaWRlbnRhbClcblx0XHRcdFx0XHRcdGVsLm5hbWUgPSBhY2NNYXBbZWwuYWNjaWRlbnRhbF0gKyBlbC5uYW1lO1xuXHRcdFx0XHRcdHRyYW5zcG9zZS5ub3RlKG11bHRpbGluZVZhcnMsIGVsKTtcblx0XHRcdFx0XHRzdGF0ZSA9ICdvY3RhdmUnO1xuXHRcdFx0XHRcdC8vIEF0IHRoaXMgcG9pbnQgd2UgaGF2ZSBhIHZhbGlkIG5vdGUuIFRoZSByZXN0IGlzIG9wdGlvbmFsLiBTZXQgdGhlIGR1cmF0aW9uIGluIGNhc2Ugd2UgZG9uJ3QgZ2V0IG9uZSBiZWxvd1xuXHRcdFx0XHRcdGlmIChjYW5IYXZlQnJva2VuUmh5dGhtICYmIG11bHRpbGluZVZhcnMubmV4dF9ub3RlX2R1cmF0aW9uICE9PSAwKSB7XG5cdFx0XHRcdFx0XHRlbC5kdXJhdGlvbiA9IG11bHRpbGluZVZhcnMuZGVmYXVsdF9sZW5ndGggKiBtdWx0aWxpbmVWYXJzLm5leHRfbm90ZV9kdXJhdGlvbjtcblx0XHRcdFx0XHRcdG11bHRpbGluZVZhcnMubmV4dF9ub3RlX2R1cmF0aW9uID0gMDtcblx0XHRcdFx0XHRcdGR1cmF0aW9uU2V0QnlQcmV2aW91c05vdGUgPSB0cnVlO1xuXHRcdFx0XHRcdH0gZWxzZVxuXHRcdFx0XHRcdFx0ZWwuZHVyYXRpb24gPSBtdWx0aWxpbmVWYXJzLmRlZmF1bHRfbGVuZ3RoO1xuXHRcdFx0XHRcdC8vIElmIHRoZSBjbGVmIGlzIHBlcmN1c3Npb24sIHRoZXJlIGlzIHByb2JhYmx5IHNvbWUgdHJhbnNsYXRpb24gb2YgdGhlIHBpdGNoIHRvIGEgcGFydGljdWxhciBkcnVtIGtpdCBpdGVtLlxuXHRcdFx0XHRcdGlmICgobXVsdGlsaW5lVmFycy5jbGVmICYmIG11bHRpbGluZVZhcnMuY2xlZi50eXBlID09PSBcInBlcmNcIikgfHxcblx0XHRcdFx0XHRcdChtdWx0aWxpbmVWYXJzLmN1cnJlbnRWb2ljZSAmJiBtdWx0aWxpbmVWYXJzLmN1cnJlbnRWb2ljZS5jbGVmID09PSBcInBlcmNcIikpIHtcblx0XHRcdFx0XHRcdHZhciBrZXkgPSBsaW5lW2luZGV4XTtcblx0XHRcdFx0XHRcdGlmIChlbC5hY2NpZGVudGFsKSB7XG5cdFx0XHRcdFx0XHRcdGtleSA9IGFjY01hcFtlbC5hY2NpZGVudGFsXSArIGtleTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmICh0dW5lLmZvcm1hdHRpbmcgJiYgdHVuZS5mb3JtYXR0aW5nLm1pZGkgJiYgdHVuZS5mb3JtYXR0aW5nLm1pZGkuZHJ1bW1hcClcblx0XHRcdFx0XHRcdGVsLm1pZGlwaXRjaCA9IHR1bmUuZm9ybWF0dGluZy5taWRpLmRydW1tYXBba2V5XTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gZWxzZSBpZiAoaXNDb21wbGV0ZShzdGF0ZSkpIHtlbC5lbmRDaGFyID0gaW5kZXg7cmV0dXJuIGVsO31cblx0XHRcdFx0ZWxzZSByZXR1cm4gbnVsbDtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlICcsJzpcblx0XHRcdFx0aWYgKHN0YXRlID09PSAnb2N0YXZlJykge2VsLnBpdGNoIC09IDc7IGVsLm5hbWUgKz0gJywnOyB9XG5cdFx0XHRcdGVsc2UgaWYgKGlzQ29tcGxldGUoc3RhdGUpKSB7ZWwuZW5kQ2hhciA9IGluZGV4O3JldHVybiBlbDt9XG5cdFx0XHRcdGVsc2UgcmV0dXJuIG51bGw7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnXFwnJzpcblx0XHRcdFx0aWYgKHN0YXRlID09PSAnb2N0YXZlJykge2VsLnBpdGNoICs9IDc7IGVsLm5hbWUgKz0gXCInXCI7ICB9XG5cdFx0XHRcdGVsc2UgaWYgKGlzQ29tcGxldGUoc3RhdGUpKSB7ZWwuZW5kQ2hhciA9IGluZGV4O3JldHVybiBlbDt9XG5cdFx0XHRcdGVsc2UgcmV0dXJuIG51bGw7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAneCc6XG5cdFx0XHRjYXNlICdYJzpcblx0XHRcdGNhc2UgJ3knOlxuXHRcdFx0Y2FzZSAneic6XG5cdFx0XHRjYXNlICdaJzpcblx0XHRcdFx0aWYgKHN0YXRlID09PSAnc3RhcnRTbHVyJykge1xuXHRcdFx0XHRcdGVsLnJlc3QgPSB7IHR5cGU6IHJlc3RzW2xpbmVbaW5kZXhdXSB9O1xuXHRcdFx0XHRcdC8vIFRoZXJlIHNob3VsZG4ndCBiZSBzb21lIG9mIHRoZSBwcm9wZXJ0aWVzIHRoYXQgbm90ZXMgaGF2ZS4gSWYgc29tZSBzbmVhayBpbiBkdWUgdG8gYmFkIHN5bnRheCBpbiB0aGUgYWJjIGZpbGUsXG5cdFx0XHRcdFx0Ly8ganVzdCBuaXggdGhlbSBoZXJlLlxuXHRcdFx0XHRcdGRlbGV0ZSBlbC5hY2NpZGVudGFsO1xuXHRcdFx0XHRcdGRlbGV0ZSBlbC5zdGFydFNsdXI7XG5cdFx0XHRcdFx0ZGVsZXRlIGVsLnN0YXJ0VGllO1xuXHRcdFx0XHRcdGRlbGV0ZSBlbC5lbmRTbHVyO1xuXHRcdFx0XHRcdGRlbGV0ZSBlbC5lbmRUaWU7XG5cdFx0XHRcdFx0ZGVsZXRlIGVsLmVuZF9iZWFtO1xuXHRcdFx0XHRcdGRlbGV0ZSBlbC5ncmFjZV9ub3Rlcztcblx0XHRcdFx0XHQvLyBBdCB0aGlzIHBvaW50IHdlIGhhdmUgYSB2YWxpZCBub3RlLiBUaGUgcmVzdCBpcyBvcHRpb25hbC4gU2V0IHRoZSBkdXJhdGlvbiBpbiBjYXNlIHdlIGRvbid0IGdldCBvbmUgYmVsb3dcblx0XHRcdFx0XHRpZiAoZWwucmVzdC50eXBlLmluZGV4T2YoJ211bHRpbWVhc3VyZScpID49IDApIHtcblx0XHRcdFx0XHRcdGVsLmR1cmF0aW9uID0gdHVuZS5nZXRCYXJMZW5ndGgoKTtcblx0XHRcdFx0XHRcdGVsLnJlc3QudGV4dCA9IDE7XG5cdFx0XHRcdFx0XHRzdGF0ZSA9ICdaZHVyYXRpb24nO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRpZiAoY2FuSGF2ZUJyb2tlblJoeXRobSAmJiBtdWx0aWxpbmVWYXJzLm5leHRfbm90ZV9kdXJhdGlvbiAhPT0gMCkge1xuXHRcdFx0XHRcdFx0XHRlbC5kdXJhdGlvbiA9IG11bHRpbGluZVZhcnMuZGVmYXVsdF9sZW5ndGggKiBtdWx0aWxpbmVWYXJzLm5leHRfbm90ZV9kdXJhdGlvbjtcblx0XHRcdFx0XHRcdFx0bXVsdGlsaW5lVmFycy5uZXh0X25vdGVfZHVyYXRpb24gPSAwO1xuXHRcdFx0XHRcdFx0XHRkdXJhdGlvblNldEJ5UHJldmlvdXNOb3RlID0gdHJ1ZTtcblx0XHRcdFx0XHRcdH0gZWxzZVxuXHRcdFx0XHRcdFx0XHRlbC5kdXJhdGlvbiA9IG11bHRpbGluZVZhcnMuZGVmYXVsdF9sZW5ndGg7XG5cdFx0XHRcdFx0XHRzdGF0ZSA9ICdkdXJhdGlvbic7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9IGVsc2UgaWYgKGlzQ29tcGxldGUoc3RhdGUpKSB7ZWwuZW5kQ2hhciA9IGluZGV4O3JldHVybiBlbDt9XG5cdFx0XHRcdGVsc2UgcmV0dXJuIG51bGw7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnMSc6XG5cdFx0XHRjYXNlICcyJzpcblx0XHRcdGNhc2UgJzMnOlxuXHRcdFx0Y2FzZSAnNCc6XG5cdFx0XHRjYXNlICc1Jzpcblx0XHRcdGNhc2UgJzYnOlxuXHRcdFx0Y2FzZSAnNyc6XG5cdFx0XHRjYXNlICc4Jzpcblx0XHRcdGNhc2UgJzknOlxuXHRcdFx0Y2FzZSAnMCc6XG5cdFx0XHRjYXNlICcvJzpcblx0XHRcdFx0aWYgKHN0YXRlID09PSAnb2N0YXZlJyB8fCBzdGF0ZSA9PT0gJ2R1cmF0aW9uJykge1xuXHRcdFx0XHRcdHZhciBmcmFjdGlvbiA9IHRva2VuaXplci5nZXRGcmFjdGlvbihsaW5lLCBpbmRleCk7XG5cdFx0XHRcdFx0Ly9pZiAoIWR1cmF0aW9uU2V0QnlQcmV2aW91c05vdGUpXG5cdFx0XHRcdFx0ZWwuZHVyYXRpb24gPSBlbC5kdXJhdGlvbiAqIGZyYWN0aW9uLnZhbHVlO1xuXHRcdFx0XHRcdC8vIFRPRE8tUEVSOiBXZSBjYW4gdGVzdCB0aGUgcmV0dXJuZWQgZHVyYXRpb24gaGVyZSBhbmQgZ2l2ZSBhIHdhcm5pbmcgaWYgaXQgaXNuJ3QgdGhlIG9uZSBleHBlY3RlZC5cblx0XHRcdFx0XHRlbC5lbmRDaGFyID0gZnJhY3Rpb24uaW5kZXg7XG5cdFx0XHRcdFx0d2hpbGUgKGZyYWN0aW9uLmluZGV4IDwgbGluZS5sZW5ndGggJiYgKHRva2VuaXplci5pc1doaXRlU3BhY2UobGluZVtmcmFjdGlvbi5pbmRleF0pIHx8IGxpbmVbZnJhY3Rpb24uaW5kZXhdID09PSAnLScpKSB7XG5cdFx0XHRcdFx0XHRpZiAobGluZVtmcmFjdGlvbi5pbmRleF0gPT09ICctJylcblx0XHRcdFx0XHRcdFx0ZWwuc3RhcnRUaWUgPSB7fTtcblx0XHRcdFx0XHRcdGVsc2Vcblx0XHRcdFx0XHRcdFx0ZWwgPSBhZGRFbmRCZWFtKGVsKTtcblx0XHRcdFx0XHRcdGZyYWN0aW9uLmluZGV4Kys7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGluZGV4ID0gZnJhY3Rpb24uaW5kZXgtMTtcblx0XHRcdFx0XHRzdGF0ZSA9ICdicm9rZW5fcmh5dGhtJztcblx0XHRcdFx0fSBlbHNlIGlmIChzdGF0ZSA9PT0gJ3NoYXJwMicpIHtcblx0XHRcdFx0XHRlbC5hY2NpZGVudGFsID0gJ3F1YXJ0ZXJzaGFycCc7c3RhdGUgPSAncGl0Y2gnO1xuXHRcdFx0XHR9IGVsc2UgaWYgKHN0YXRlID09PSAnZmxhdDInKSB7XG5cdFx0XHRcdFx0ZWwuYWNjaWRlbnRhbCA9ICdxdWFydGVyZmxhdCc7c3RhdGUgPSAncGl0Y2gnO1xuXHRcdFx0XHR9IGVsc2UgaWYgKHN0YXRlID09PSAnWmR1cmF0aW9uJykge1xuXHRcdFx0XHRcdHZhciBudW0gPSB0b2tlbml6ZXIuZ2V0TnVtYmVyKGxpbmUsIGluZGV4KTtcblx0XHRcdFx0XHRlbC5kdXJhdGlvbiA9IG51bS5udW0gKiB0dW5lLmdldEJhckxlbmd0aCgpO1xuXHRcdFx0XHRcdGVsLnJlc3QudGV4dCA9IG51bS5udW07XG5cdFx0XHRcdFx0ZWwuZW5kQ2hhciA9IG51bS5pbmRleDtcblx0XHRcdFx0XHRyZXR1cm4gZWw7XG5cdFx0XHRcdH0gZWxzZSByZXR1cm4gbnVsbDtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlICctJzpcblx0XHRcdFx0aWYgKHN0YXRlID09PSAnc3RhcnRTbHVyJykge1xuXHRcdFx0XHRcdC8vIFRoaXMgaXMgdGhlIGZpcnN0IGNoYXJhY3Rlciwgc28gaXQgbXVzdCBoYXZlIGJlZW4gbWVhbnQgZm9yIHRoZSBwcmV2aW91cyBub3RlLiBDb3JyZWN0IHRoYXQgaGVyZS5cblx0XHRcdFx0XHR0dW5lQnVpbGRlci5hZGRUaWVUb0xhc3ROb3RlKGRvdHRlZFRpZSk7XG5cdFx0XHRcdFx0ZWwuZW5kVGllID0gdHJ1ZTtcblx0XHRcdFx0fSBlbHNlIGlmIChzdGF0ZSA9PT0gJ29jdGF2ZScgfHwgc3RhdGUgPT09ICdkdXJhdGlvbicgfHwgc3RhdGUgPT09ICdlbmRfc2x1cicpIHtcblx0XHRcdFx0XHRlbC5zdGFydFRpZSA9IHt9O1xuXHRcdFx0XHRcdGlmICghZHVyYXRpb25TZXRCeVByZXZpb3VzTm90ZSAmJiBjYW5IYXZlQnJva2VuUmh5dGhtKVxuXHRcdFx0XHRcdFx0c3RhdGUgPSAnYnJva2VuX3JoeXRobSc7XG5cdFx0XHRcdFx0ZWxzZSB7XG5cdFx0XHRcdFx0XHQvLyBQZWVrIGFoZWFkIHRvIHRoZSBuZXh0IGNoYXJhY3Rlci4gSWYgaXQgaXMgYSBzcGFjZSwgdGhlbiB3ZSBoYXZlIGFuIGVuZCBiZWFtLlxuXHRcdFx0XHRcdFx0aWYgKHRva2VuaXplci5pc1doaXRlU3BhY2UobGluZVtpbmRleCArIDFdKSlcblx0XHRcdFx0XHRcdFx0YWRkRW5kQmVhbShlbCk7XG5cdFx0XHRcdFx0XHRlbC5lbmRDaGFyID0gaW5kZXgrMTtcblx0XHRcdFx0XHRcdHJldHVybiBlbDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gZWxzZSBpZiAoc3RhdGUgPT09ICdicm9rZW5fcmh5dGhtJykge2VsLmVuZENoYXIgPSBpbmRleDtyZXR1cm4gZWw7fVxuXHRcdFx0XHRlbHNlIHJldHVybiBudWxsO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJyAnOlxuXHRcdFx0Y2FzZSAnXFx0Jzpcblx0XHRcdFx0aWYgKGlzQ29tcGxldGUoc3RhdGUpKSB7XG5cdFx0XHRcdFx0ZWwuZW5kX2JlYW0gPSB0cnVlO1xuXHRcdFx0XHRcdC8vIGxvb2sgYWhlYWQgdG8gc2VlIGlmIHRoZXJlIGlzIGEgdGllXG5cdFx0XHRcdFx0ZG90dGVkVGllID0gZmFsc2U7XG5cdFx0XHRcdFx0ZG8ge1xuXHRcdFx0XHRcdFx0aWYgKGxpbmVbaW5kZXhdID09PSAnLicgJiYgbGluZVtpbmRleCsxXSA9PT0gJy0nKSB7XG5cdFx0XHRcdFx0XHRcdGRvdHRlZFRpZSA9IHRydWU7XG5cdFx0XHRcdFx0XHRcdGluZGV4Kys7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZiAobGluZVtpbmRleF0gPT09ICctJykge1xuXHRcdFx0XHRcdFx0XHRlbC5zdGFydFRpZSA9IHt9O1xuXHRcdFx0XHRcdFx0XHRpZiAoZG90dGVkVGllKVxuXHRcdFx0XHRcdFx0XHRcdGVsLnN0YXJ0VGllLnN0eWxlID0gXCJkb3R0ZWRcIjtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGluZGV4Kys7XG5cdFx0XHRcdFx0fSB3aGlsZSAoaW5kZXggPCBsaW5lLmxlbmd0aCAmJlxuXHRcdFx0XHRcdFx0KHRva2VuaXplci5pc1doaXRlU3BhY2UobGluZVtpbmRleF0pIHx8IGxpbmVbaW5kZXhdID09PSAnLScpIHx8XG5cdFx0XHRcdFx0XHQobGluZVtpbmRleF0gPT09ICcuJyAmJiBsaW5lW2luZGV4KzFdID09PSAnLScpKTtcblx0XHRcdFx0XHRlbC5lbmRDaGFyID0gaW5kZXg7XG5cdFx0XHRcdFx0aWYgKCFkdXJhdGlvblNldEJ5UHJldmlvdXNOb3RlICYmIGNhbkhhdmVCcm9rZW5SaHl0aG0gJiYgKGxpbmVbaW5kZXhdID09PSAnPCcgfHwgbGluZVtpbmRleF0gPT09ICc+JykpIHtcdC8vIFRPRE8tUEVSOiBEb24ndCBuZWVkIHRoZSB0ZXN0IGZvciA8IGFuZCA+LCBidXQgdGhhdCBtYWtlcyB0aGUgZW5kQ2hhciB3b3JrIG91dCBmb3IgdGhlIHJlZ3Jlc3Npb24gdGVzdC5cblx0XHRcdFx0XHRcdGluZGV4LS07XG5cdFx0XHRcdFx0XHRzdGF0ZSA9ICdicm9rZW5fcmh5dGhtJztcblx0XHRcdFx0XHR9IGVsc2Vcblx0XHRcdFx0XHRcdHJldHVybiBlbDtcblx0XHRcdFx0fVxuXHRcdFx0XHRlbHNlIHJldHVybiBudWxsO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJz4nOlxuXHRcdFx0Y2FzZSAnPCc6XG5cdFx0XHRcdGlmIChpc0NvbXBsZXRlKHN0YXRlKSkge1xuXHRcdFx0XHRcdGlmIChjYW5IYXZlQnJva2VuUmh5dGhtKSB7XG5cdFx0XHRcdFx0XHR2YXIgYnIyID0gZ2V0QnJva2VuUmh5dGhtKGxpbmUsIGluZGV4KTtcblx0XHRcdFx0XHRcdGluZGV4ICs9IGJyMlswXSAtIDE7XHQvLyBpbmRleCBnZXRzIGluY3JlbWVudGVkIGJlbG93LCBzbyB3ZSdsbCBsZXQgdGhhdCBoYXBwZW5cblx0XHRcdFx0XHRcdG11bHRpbGluZVZhcnMubmV4dF9ub3RlX2R1cmF0aW9uID0gYnIyWzJdO1xuXHRcdFx0XHRcdFx0ZWwuZHVyYXRpb24gPSBicjJbMV0qZWwuZHVyYXRpb247XG5cdFx0XHRcdFx0XHRzdGF0ZSA9ICdlbmRfc2x1cic7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGVsLmVuZENoYXIgPSBpbmRleDtcblx0XHRcdFx0XHRcdHJldHVybiBlbDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gZWxzZVxuXHRcdFx0XHRcdHJldHVybiBudWxsO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdGlmIChpc0NvbXBsZXRlKHN0YXRlKSkge1xuXHRcdFx0XHRcdGVsLmVuZENoYXIgPSBpbmRleDtcblx0XHRcdFx0XHRyZXR1cm4gZWw7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0fVxuXHRcdGluZGV4Kys7XG5cdFx0aWYgKGluZGV4ID09PSBsaW5lLmxlbmd0aCkge1xuXHRcdFx0aWYgKGlzQ29tcGxldGUoc3RhdGUpKSB7ZWwuZW5kQ2hhciA9IGluZGV4O3JldHVybiBlbDt9XG5cdFx0XHRlbHNlIHJldHVybiBudWxsO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gbnVsbDtcbn07XG5cbnZhciBnZXRCcm9rZW5SaHl0aG0gPSBmdW5jdGlvbihsaW5lLCBpbmRleCkge1xuXHRzd2l0Y2ggKGxpbmVbaW5kZXhdKSB7XG5cdFx0Y2FzZSAnPic6XG5cdFx0XHRpZiAoaW5kZXggPCBsaW5lLmxlbmd0aCAtIDIgJiYgbGluZVtpbmRleCArIDFdID09PSAnPicgJiYgbGluZVtpbmRleCArIDJdID09PSAnPicpXHQvLyB0cmlwbGUgPj4+XG5cdFx0XHRcdHJldHVybiBbMywgMS44NzUsIDAuMTI1XTtcblx0XHRcdGVsc2UgaWYgKGluZGV4IDwgbGluZS5sZW5ndGggLSAxICYmIGxpbmVbaW5kZXggKyAxXSA9PT0gJz4nKVx0Ly8gZG91YmxlID4+XG5cdFx0XHRcdHJldHVybiBbMiwgMS43NSwgMC4yNV07XG5cdFx0XHRlbHNlXG5cdFx0XHRcdHJldHVybiBbMSwgMS41LCAwLjVdO1xuXHRcdGNhc2UgJzwnOlxuXHRcdFx0aWYgKGluZGV4IDwgbGluZS5sZW5ndGggLSAyICYmIGxpbmVbaW5kZXggKyAxXSA9PT0gJzwnICYmIGxpbmVbaW5kZXggKyAyXSA9PT0gJzwnKVx0Ly8gdHJpcGxlIDw8PFxuXHRcdFx0XHRyZXR1cm4gWzMsIDAuMTI1LCAxLjg3NV07XG5cdFx0XHRlbHNlIGlmIChpbmRleCA8IGxpbmUubGVuZ3RoIC0gMSAmJiBsaW5lW2luZGV4ICsgMV0gPT09ICc8JylcdC8vIGRvdWJsZSA8PFxuXHRcdFx0XHRyZXR1cm4gWzIsIDAuMjUsIDEuNzVdO1xuXHRcdFx0ZWxzZVxuXHRcdFx0XHRyZXR1cm4gWzEsIDAuNSwgMS41XTtcblx0fVxuXHRyZXR1cm4gbnVsbDtcbn07XG5cbmZ1bmN0aW9uIGlzRmlyc3RWb2ljZSgpIHtcblx0cmV0dXJuIG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlID09PSB1bmRlZmluZWQgfHwgKG11bHRpbGluZVZhcnMuY3VycmVudFZvaWNlLnN0YWZmTnVtID09PSAgMCAmJiBtdWx0aWxpbmVWYXJzLmN1cnJlbnRWb2ljZS5pbmRleCA9PT0gIDApO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IE11c2ljUGFyc2VyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/parse/abc_parse_music.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/parse/abc_parse_settings.js":
/*!************************************************************!*\
  !*** ./node_modules/abcjs/src/parse/abc_parse_settings.js ***!
  \************************************************************/
/***/ ((module) => {

eval("module.exports.legalAccents = [\n  'trill',\n  'trillh',\n  'lowermordent',\n  'uppermordent',\n  'mordent',\n  'pralltriller',\n  'accent',\n  'fermata',\n  'invertedfermata',\n  'tenuto',\n  '0',\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '+',\n  'wedge',\n  'open',\n  'thumb',\n  'snap',\n  'turn',\n  'roll',\n  'breath',\n  'shortphrase',\n  'mediumphrase',\n  'longphrase',\n  'segno',\n  'coda',\n  'D.S.',\n  'D.C.',\n  'fine',\n  'beambr1',\n  'beambr2',\n  'slide',\n  'marcato',\n  'upbow',\n  'downbow',\n  '/',\n  '//',\n  '///',\n  '////',\n  'trem1',\n  'trem2',\n  'trem3',\n  'trem4',\n  'turnx',\n  'invertedturn',\n  'invertedturnx',\n  'trill(',\n  'trill)',\n  'arpeggio',\n  'xstem',\n  'mark',\n  'umarcato',\n  'style=normal',\n  'style=harmonic',\n  'style=rhythm',\n  'style=x',\n  'style=triangle',\n  'D.C.alcoda',\n  'D.C.alfine',\n  'D.S.alcoda',\n  'D.S.alfine',\n  'editorial',\n  'courtesy'\n];\n\nmodule.exports.volumeDecorations = [\n  'p',\n  'pp',\n  'f',\n  'ff',\n  'mf',\n  'mp',\n  'ppp',\n  'pppp',\n  'fff',\n  'ffff',\n  'sfz'\n];\n\nmodule.exports.dynamicDecorations = [\n  'crescendo(',\n  'crescendo)',\n  'diminuendo(',\n  'diminuendo)',\n  'glissando(',\n  'glissando)',\n  '~(',\n  '~)'\n];\n\nmodule.exports.accentPseudonyms = [\n  ['<', 'accent'],\n  ['>', 'accent'],\n  ['tr', 'trill'],\n  ['plus', '+'],\n  ['emphasis', 'accent'],\n  ['^', 'umarcato'],\n  ['marcato', 'umarcato']\n];\n\nmodule.exports.accentDynamicPseudonyms = [\n  ['<(', 'crescendo('],\n  ['<)', 'crescendo)'],\n  ['>(', 'diminuendo('],\n  ['>)', 'diminuendo)']\n];\n\nmodule.exports.nonDecorations = 'ABCDEFGabcdefgxyzZ[]|^_{'; // use this to prescreen so we don't have to look for a decoration at every note.\n\nmodule.exports.durations = [\n  0.5, 0.75, 0.875, 0.9375, 0.96875, 0.984375, 0.25, 0.375, 0.4375, 0.46875,\n  0.484375, 0.4921875, 0.125, 0.1875, 0.21875, 0.234375, 0.2421875, 0.24609375,\n  0.0625, 0.09375, 0.109375, 0.1171875, 0.12109375, 0.123046875, 0.03125,\n  0.046875, 0.0546875, 0.05859375, 0.060546875, 0.0615234375, 0.015625,\n  0.0234375, 0.02734375, 0.029296875, 0.0302734375, 0.03076171875\n];\n\nmodule.exports.pitches = {\n  A: 5,\n  B: 6,\n  C: 0,\n  D: 1,\n  E: 2,\n  F: 3,\n  G: 4,\n  a: 12,\n  b: 13,\n  c: 7,\n  d: 8,\n  e: 9,\n  f: 10,\n  g: 11\n};\n\nmodule.exports.rests = {\n  x: 'invisible',\n  X: 'invisible-multimeasure',\n  y: 'spacer',\n  z: 'rest',\n  Z: 'multimeasure'\n};\n\nmodule.exports.accMap = {\n  dblflat: '__',\n  flat: '_',\n  natural: '=',\n  sharp: '^',\n  dblsharp: '^^',\n  quarterflat: '_/',\n  quartersharp: '^/'\n};\n\nmodule.exports.tripletQ = {\n  2: 3,\n  3: 2,\n  4: 3,\n  5: 2, // TODO-PER: not handling 6/8 rhythm yet\n  6: 2,\n  7: 2, // TODO-PER: not handling 6/8 rhythm yet\n  8: 3,\n  9: 2 // TODO-PER: not handling 6/8 rhythm yet\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3BhcnNlL2FiY19wYXJzZV9zZXR0aW5ncy5qcyIsIm1hcHBpbmdzIjoiQUFBQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDZCQUE2Qiw0QkFBNEIsR0FBRzs7QUFFNUQsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy9wYXJzZS9hYmNfcGFyc2Vfc2V0dGluZ3MuanM/M2IwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cy5sZWdhbEFjY2VudHMgPSBbXG4gICd0cmlsbCcsXG4gICd0cmlsbGgnLFxuICAnbG93ZXJtb3JkZW50JyxcbiAgJ3VwcGVybW9yZGVudCcsXG4gICdtb3JkZW50JyxcbiAgJ3ByYWxsdHJpbGxlcicsXG4gICdhY2NlbnQnLFxuICAnZmVybWF0YScsXG4gICdpbnZlcnRlZGZlcm1hdGEnLFxuICAndGVudXRvJyxcbiAgJzAnLFxuICAnMScsXG4gICcyJyxcbiAgJzMnLFxuICAnNCcsXG4gICc1JyxcbiAgJysnLFxuICAnd2VkZ2UnLFxuICAnb3BlbicsXG4gICd0aHVtYicsXG4gICdzbmFwJyxcbiAgJ3R1cm4nLFxuICAncm9sbCcsXG4gICdicmVhdGgnLFxuICAnc2hvcnRwaHJhc2UnLFxuICAnbWVkaXVtcGhyYXNlJyxcbiAgJ2xvbmdwaHJhc2UnLFxuICAnc2Vnbm8nLFxuICAnY29kYScsXG4gICdELlMuJyxcbiAgJ0QuQy4nLFxuICAnZmluZScsXG4gICdiZWFtYnIxJyxcbiAgJ2JlYW1icjInLFxuICAnc2xpZGUnLFxuICAnbWFyY2F0bycsXG4gICd1cGJvdycsXG4gICdkb3duYm93JyxcbiAgJy8nLFxuICAnLy8nLFxuICAnLy8vJyxcbiAgJy8vLy8nLFxuICAndHJlbTEnLFxuICAndHJlbTInLFxuICAndHJlbTMnLFxuICAndHJlbTQnLFxuICAndHVybngnLFxuICAnaW52ZXJ0ZWR0dXJuJyxcbiAgJ2ludmVydGVkdHVybngnLFxuICAndHJpbGwoJyxcbiAgJ3RyaWxsKScsXG4gICdhcnBlZ2dpbycsXG4gICd4c3RlbScsXG4gICdtYXJrJyxcbiAgJ3VtYXJjYXRvJyxcbiAgJ3N0eWxlPW5vcm1hbCcsXG4gICdzdHlsZT1oYXJtb25pYycsXG4gICdzdHlsZT1yaHl0aG0nLFxuICAnc3R5bGU9eCcsXG4gICdzdHlsZT10cmlhbmdsZScsXG4gICdELkMuYWxjb2RhJyxcbiAgJ0QuQy5hbGZpbmUnLFxuICAnRC5TLmFsY29kYScsXG4gICdELlMuYWxmaW5lJyxcbiAgJ2VkaXRvcmlhbCcsXG4gICdjb3VydGVzeSdcbl07XG5cbm1vZHVsZS5leHBvcnRzLnZvbHVtZURlY29yYXRpb25zID0gW1xuICAncCcsXG4gICdwcCcsXG4gICdmJyxcbiAgJ2ZmJyxcbiAgJ21mJyxcbiAgJ21wJyxcbiAgJ3BwcCcsXG4gICdwcHBwJyxcbiAgJ2ZmZicsXG4gICdmZmZmJyxcbiAgJ3Nmeidcbl07XG5cbm1vZHVsZS5leHBvcnRzLmR5bmFtaWNEZWNvcmF0aW9ucyA9IFtcbiAgJ2NyZXNjZW5kbygnLFxuICAnY3Jlc2NlbmRvKScsXG4gICdkaW1pbnVlbmRvKCcsXG4gICdkaW1pbnVlbmRvKScsXG4gICdnbGlzc2FuZG8oJyxcbiAgJ2dsaXNzYW5kbyknLFxuICAnfignLFxuICAnfiknXG5dO1xuXG5tb2R1bGUuZXhwb3J0cy5hY2NlbnRQc2V1ZG9ueW1zID0gW1xuICBbJzwnLCAnYWNjZW50J10sXG4gIFsnPicsICdhY2NlbnQnXSxcbiAgWyd0cicsICd0cmlsbCddLFxuICBbJ3BsdXMnLCAnKyddLFxuICBbJ2VtcGhhc2lzJywgJ2FjY2VudCddLFxuICBbJ14nLCAndW1hcmNhdG8nXSxcbiAgWydtYXJjYXRvJywgJ3VtYXJjYXRvJ11cbl07XG5cbm1vZHVsZS5leHBvcnRzLmFjY2VudER5bmFtaWNQc2V1ZG9ueW1zID0gW1xuICBbJzwoJywgJ2NyZXNjZW5kbygnXSxcbiAgWyc8KScsICdjcmVzY2VuZG8pJ10sXG4gIFsnPignLCAnZGltaW51ZW5kbygnXSxcbiAgWyc+KScsICdkaW1pbnVlbmRvKSddXG5dO1xuXG5tb2R1bGUuZXhwb3J0cy5ub25EZWNvcmF0aW9ucyA9ICdBQkNERUZHYWJjZGVmZ3h5elpbXXxeX3snOyAvLyB1c2UgdGhpcyB0byBwcmVzY3JlZW4gc28gd2UgZG9uJ3QgaGF2ZSB0byBsb29rIGZvciBhIGRlY29yYXRpb24gYXQgZXZlcnkgbm90ZS5cblxubW9kdWxlLmV4cG9ydHMuZHVyYXRpb25zID0gW1xuICAwLjUsIDAuNzUsIDAuODc1LCAwLjkzNzUsIDAuOTY4NzUsIDAuOTg0Mzc1LCAwLjI1LCAwLjM3NSwgMC40Mzc1LCAwLjQ2ODc1LFxuICAwLjQ4NDM3NSwgMC40OTIxODc1LCAwLjEyNSwgMC4xODc1LCAwLjIxODc1LCAwLjIzNDM3NSwgMC4yNDIxODc1LCAwLjI0NjA5Mzc1LFxuICAwLjA2MjUsIDAuMDkzNzUsIDAuMTA5Mzc1LCAwLjExNzE4NzUsIDAuMTIxMDkzNzUsIDAuMTIzMDQ2ODc1LCAwLjAzMTI1LFxuICAwLjA0Njg3NSwgMC4wNTQ2ODc1LCAwLjA1ODU5Mzc1LCAwLjA2MDU0Njg3NSwgMC4wNjE1MjM0Mzc1LCAwLjAxNTYyNSxcbiAgMC4wMjM0Mzc1LCAwLjAyNzM0Mzc1LCAwLjAyOTI5Njg3NSwgMC4wMzAyNzM0Mzc1LCAwLjAzMDc2MTcxODc1XG5dO1xuXG5tb2R1bGUuZXhwb3J0cy5waXRjaGVzID0ge1xuICBBOiA1LFxuICBCOiA2LFxuICBDOiAwLFxuICBEOiAxLFxuICBFOiAyLFxuICBGOiAzLFxuICBHOiA0LFxuICBhOiAxMixcbiAgYjogMTMsXG4gIGM6IDcsXG4gIGQ6IDgsXG4gIGU6IDksXG4gIGY6IDEwLFxuICBnOiAxMVxufTtcblxubW9kdWxlLmV4cG9ydHMucmVzdHMgPSB7XG4gIHg6ICdpbnZpc2libGUnLFxuICBYOiAnaW52aXNpYmxlLW11bHRpbWVhc3VyZScsXG4gIHk6ICdzcGFjZXInLFxuICB6OiAncmVzdCcsXG4gIFo6ICdtdWx0aW1lYXN1cmUnXG59O1xuXG5tb2R1bGUuZXhwb3J0cy5hY2NNYXAgPSB7XG4gIGRibGZsYXQ6ICdfXycsXG4gIGZsYXQ6ICdfJyxcbiAgbmF0dXJhbDogJz0nLFxuICBzaGFycDogJ14nLFxuICBkYmxzaGFycDogJ15eJyxcbiAgcXVhcnRlcmZsYXQ6ICdfLycsXG4gIHF1YXJ0ZXJzaGFycDogJ14vJ1xufTtcblxubW9kdWxlLmV4cG9ydHMudHJpcGxldFEgPSB7XG4gIDI6IDMsXG4gIDM6IDIsXG4gIDQ6IDMsXG4gIDU6IDIsIC8vIFRPRE8tUEVSOiBub3QgaGFuZGxpbmcgNi84IHJoeXRobSB5ZXRcbiAgNjogMixcbiAgNzogMiwgLy8gVE9ETy1QRVI6IG5vdCBoYW5kbGluZyA2Lzggcmh5dGhtIHlldFxuICA4OiAzLFxuICA5OiAyIC8vIFRPRE8tUEVSOiBub3QgaGFuZGxpbmcgNi84IHJoeXRobSB5ZXRcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/parse/abc_parse_settings.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/parse/abc_tokenizer.js":
/*!*******************************************************!*\
  !*** ./node_modules/abcjs/src/parse/abc_tokenizer.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_tokenizer.js: tokenizes an ABC Music Notation string to support abc_parse.\n\nvar parseCommon = __webpack_require__(/*! ./abc_common */ \"(ssr)/./node_modules/abcjs/src/parse/abc_common.js\");\n\n// this is a series of functions that get a particular element out of the passed stream.\n// the return is the number of characters consumed, so 0 means that the element wasn't found.\n// also returned is the element found. This may be a different length because spaces may be consumed that aren't part of the string.\n// The return structure for most calls is { len: num_chars_consumed, token: str }\nvar Tokenizer = function(lines, multilineVars) {\n\tthis.lineIndex = 0\n\tthis.lines = lines\n\tthis.multilineVars = multilineVars;\n\n\tthis.skipWhiteSpace = function(str) {\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t  if (!this.isWhiteSpace(str[i]))\n\t\t\t\treturn i;\n\t\t}\n\t\treturn str.length;\t// It must have been all white space\n\t};\n\tvar finished = function(str, i) {\n\t\treturn i >= str.length;\n\t};\n\tthis.eatWhiteSpace = function(line, index) {\n\t\tfor (var i = index; i < line.length; i++) {\n\t\t  if (!this.isWhiteSpace(line[i]))\n\t\t\t\treturn i-index;\n\t\t}\n\t\treturn i-index;\n\t};\n\n\t// This just gets the basic pitch letter, ignoring leading spaces, and normalizing it to a capital\n\tthis.getKeyPitch = function(str) {\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn {len: 0};\n\t\tswitch (str[i]) {\n\t\t\tcase 'A':return {len: i+1, token: 'A'};\n\t\t\tcase 'B':return {len: i+1, token: 'B'};\n\t\t\tcase 'C':return {len: i+1, token: 'C'};\n\t\t\tcase 'D':return {len: i+1, token: 'D'};\n\t\t\tcase 'E':return {len: i+1, token: 'E'};\n\t\t\tcase 'F':return {len: i+1, token: 'F'};\n\t\t\tcase 'G':return {len: i+1, token: 'G'};\n//\t\t\tcase 'a':return {len: i+1, token: 'A'};\n//\t\t\tcase 'b':return {len: i+1, token: 'B'};\n//\t\t\tcase 'c':return {len: i+1, token: 'C'};\n//\t\t\tcase 'd':return {len: i+1, token: 'D'};\n//\t\t\tcase 'e':return {len: i+1, token: 'E'};\n//\t\t\tcase 'f':return {len: i+1, token: 'F'};\n//\t\t\tcase 'g':return {len: i+1, token: 'G'};\n\t\t}\n\t\treturn {len: 0};\n\t};\n\n\t// This just gets the basic accidental, ignoring leading spaces, and only the ones that appear in a key\n\tthis.getSharpFlat = function(str) {\n\t\tif (str === 'bass')\n\t\t\treturn {len: 0};\n\t\tswitch (str[0]) {\n\t\t\tcase '#':return {len: 1, token: '#'};\n\t\t\tcase 'b':return {len: 1, token: 'b'};\n\t\t}\n\t\treturn {len: 0};\n\t};\n\n\tthis.getMode = function(str) {\n\t\tvar skipAlpha = function(str, start) {\n\t\t\t// This returns the index of the next non-alphabetic char, or the entire length of the string if not found.\n\t\t  while (start < str.length && ((str[start] >= 'a' && str[start] <= 'z') || (str[start] >= 'A' && str[start] <= 'Z')))\n\t\t\t\tstart++;\n\t\t\treturn start;\n\t\t};\n\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn {len: 0};\n\t\tvar firstThree = str.substring(i,i+3).toLowerCase();\n\t\tif (firstThree.length > 1 && firstThree[1] === ' ' || firstThree[1] === '^' || firstThree[1] === '_' || firstThree[1] === '=') firstThree = firstThree[0];\t// This will handle the case of 'm'\n\t\tswitch (firstThree) {\n\t\t\tcase 'mix':return {len: skipAlpha(str, i), token: 'Mix'};\n\t\t\tcase 'dor':return {len: skipAlpha(str, i), token: 'Dor'};\n\t\t\tcase 'phr':return {len: skipAlpha(str, i), token: 'Phr'};\n\t\t\tcase 'lyd':return {len: skipAlpha(str, i), token: 'Lyd'};\n\t\t\tcase 'loc':return {len: skipAlpha(str, i), token: 'Loc'};\n\t\t\tcase 'aeo':return {len: skipAlpha(str, i), token: 'm'};\n\t\t\tcase 'maj':return {len: skipAlpha(str, i), token: ''};\n\t\t\tcase 'ion':return {len: skipAlpha(str, i), token: ''};\n\t\t\tcase 'min':return {len: skipAlpha(str, i), token: 'm'};\n\t\t\tcase 'm':return {len: skipAlpha(str, i), token: 'm'};\n\t\t}\n\t\treturn {len: 0};\n\t};\n\n\tthis.getClef = function(str, bExplicitOnly) {\n\t\tvar strOrig = str;\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn {len: 0};\n\t\t// The word 'clef' is optional, but if it appears, a clef MUST appear\n\t\tvar needsClef = false;\n\t\tvar strClef = str.substring(i);\n\t\tif (parseCommon.startsWith(strClef, 'clef=')) {\n\t\t\tneedsClef = true;\n\t\t\tstrClef = strClef.substring(5);\n\t\t\ti += 5;\n\t\t}\n\t\tif (strClef.length === 0 && needsClef)\n\t\t\treturn {len: i+5, warn: \"No clef specified: \" + strOrig};\n\n\t\tvar j = this.skipWhiteSpace(strClef);\n\t\tif (finished(strClef, j))\n\t\t\treturn {len: 0};\n\t\tif (j > 0) {\n\t\t\ti += j;\n\t\t\tstrClef = strClef.substring(j);\n\t\t}\n\t\tvar name = null;\n\t\tif (parseCommon.startsWith(strClef, 'treble'))\n\t\t\tname = 'treble';\n\t\telse if (parseCommon.startsWith(strClef, 'bass3'))\n\t\t\tname = 'bass3';\n\t\telse if (parseCommon.startsWith(strClef, 'bass'))\n\t\t\tname = 'bass';\n\t\telse if (parseCommon.startsWith(strClef, 'tenor'))\n\t\t\tname = 'tenor';\n\t\telse if (parseCommon.startsWith(strClef, 'alto2'))\n\t\t\tname = 'alto2';\n\t\telse if (parseCommon.startsWith(strClef, 'alto1'))\n\t\t\tname = 'alto1';\n\t\telse if (parseCommon.startsWith(strClef, 'alto'))\n\t\t\tname = 'alto';\n\t\telse if (!bExplicitOnly && (needsClef && parseCommon.startsWith(strClef, 'none')))\n\t\t\tname = 'none';\n\t\telse if (parseCommon.startsWith(strClef, 'perc'))\n\t\t\tname = 'perc';\n\t\telse if (!bExplicitOnly && (needsClef && parseCommon.startsWith(strClef, 'C')))\n\t\t\tname = 'tenor';\n\t\telse if (!bExplicitOnly && (needsClef && parseCommon.startsWith(strClef, 'F')))\n\t\t\tname = 'bass';\n\t\telse if (!bExplicitOnly && (needsClef && parseCommon.startsWith(strClef, 'G')))\n\t\t\tname = 'treble';\n\t\telse\n\t\t\treturn {len: i+5, warn: \"Unknown clef specified: \" + strOrig};\n\n\t\tstrClef = strClef.substring(name.length);\n\t\tj = this.isMatch(strClef, '+8');\n\t\tif (j > 0)\n\t\t\tname += \"+8\";\n\t\telse {\n\t\t\tj = this.isMatch(strClef, '-8');\n\t\t\tif (j > 0)\n\t\t\t\tname += \"-8\";\n\t\t}\n\t\treturn {len: i+name.length, token: name, explicit: needsClef};\n\t};\n\n\t// This returns one of the legal bar lines\n\t// This is called alot and there is no obvious tokenable items, so this is broken apart.\n\tthis.getBarLine = function(line, i) {\n\t\tswitch (line[i]) {\n\t\t\tcase ']':\n\t\t\t\t++i;\n\t\t\t\tswitch (line[i]) {\n\t\t\t\t\tcase '|': return {len: 2, token: \"bar_thick_thin\"};\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tif ((line[i] >= '1' && line[i] <= '9') || line[i] === '\"')\n\t\t\t\t\t\t\treturn {len: 2, token: \"bar_invisible\"};\n\t\t\t\t\t\treturn {len: 1, warn: \"Unknown bar symbol\"};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn {len: 1, token: \"bar_invisible\"};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase ':':\n\t\t\t\t++i;\n\t\t\t\tswitch (line[i]) {\n\t\t\t\t\tcase ':': return {len: 2, token: \"bar_dbl_repeat\"};\n\t\t\t\t\tcase '|':\t// :|\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tswitch (line[i]) {\n\t\t\t\t\t\t\tcase ']':\t// :|]\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tswitch (line[i]) {\n\t\t\t\t\t\t\t\t\tcase '|':\t// :|]|\n\t\t\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\t\t\tif (line[i] === ':')  return {len: 5, token: \"bar_dbl_repeat\"};\n\t\t\t\t\t\t\t\t\t\treturn {len: 3, token: \"bar_right_repeat\"};\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\treturn {len: 3, token: \"bar_right_repeat\"};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase '|':\t// :||\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tif (line[i] === ':')  return {len: 4, token: \"bar_dbl_repeat\"};\n\t\t\t\t\t\t\t\treturn {len: 3, token: \"bar_right_repeat\"};\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn {len: 2, token: \"bar_right_repeat\"};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn {len: 1, warn: \"Unknown bar symbol\"};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '[':\t// [\n\t\t\t\t++i;\n\t\t\t\tif (line[i] === '|') {\t// [|\n\t\t\t\t\t++i;\n\t\t\t\t\tswitch (line[i]) {\n\t\t\t\t\t\tcase ':': return {len: 3, token: \"bar_left_repeat\"};\n\t\t\t\t\t\tcase ']': return {len: 3, token: \"bar_invisible\"};\n\t\t\t\t\t\tdefault: return {len: 2, token: \"bar_thick_thin\"};\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ((line[i] >= '1' && line[i] <= '9') || line[i] === '\"')\n\t\t\t\t\t\treturn {len: 1, token: \"bar_invisible\"};\n\t\t\t\t\treturn {len: 0};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '|':\t// |\n\t\t\t\t++i;\n\t\t\t\tswitch (line[i]) {\n\t\t\t\t\tcase ']': return {len: 2, token: \"bar_thin_thick\"};\n\t\t\t\t\tcase '|': // ||\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tif (line[i] === ':') return {len: 3, token: \"bar_left_repeat\"};\n\t\t\t\t\t\treturn {len: 2, token: \"bar_thin_thin\"};\n\t\t\t\t\tcase ':':\t// |:\n\t\t\t\t\t\tvar colons = 0;\n\t\t\t\t\t\twhile (line[i+colons] === ':') colons++;\n\t\t\t\t\t\treturn { len: 1+colons, token: \"bar_left_repeat\"};\n\t\t\t\t\tdefault: return {len: 1, token: \"bar_thin\"};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\treturn {len: 0};\n\t};\n\n\t// this returns all the characters in the string that match one of the characters in the legalChars string\n\tthis.getTokenOf = function(str, legalChars) {\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\tif (legalChars.indexOf(str[i]) < 0)\n\t\t\t\treturn {len: i, token: str.substring(0, i)};\n\t\t}\n\t\treturn {len: i, token: str};\n\t};\n\n\tthis.getToken = function(str, start, end) {\n\t\t// This returns the next set of chars that doesn't contain spaces\n\t\tvar i = start;\n\t\twhile (i < end && !this.isWhiteSpace(str[i]))\n\t\t\ti++;\n\t\treturn str.substring(start, i);\n\t};\n\n\t// This just sees if the next token is the word passed in, with possible leading spaces\n\tthis.isMatch = function(str, match) {\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn 0;\n\t\tif (parseCommon.startsWith(str.substring(i), match))\n\t\t\treturn i+match.length;\n\t\treturn 0;\n\t};\n\n\tthis.getPitchFromTokens = function(tokens) {\n\t\tvar ret = { };\n\t\tvar pitches = {A: 5, B: 6, C: 0, D: 1, E: 2, F: 3, G: 4, a: 12, b: 13, c: 7, d: 8, e: 9, f: 10, g: 11};\n\t\tret.position = pitches[tokens[0].token];\n\t\tif (ret.position === undefined)\n\t\t\treturn { warn: \"Pitch expected. Found: \" + tokens[0].token };\n\t\ttokens.shift();\n\t\twhile (tokens.length) {\n\t\t\tswitch (tokens[0].token) {\n\t\t\t\tcase ',': ret.position -= 7; tokens.shift(); break;\n\t\t\t\tcase '\\'': ret.position += 7; tokens.shift(); break;\n\t\t\t\tdefault: return ret;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t};\n\n\tthis.getKeyAccidentals2 = function(tokens) {\n\t\tvar accs;\n\t\t// find and strip off all accidentals in the token list\n\t\twhile (tokens.length > 0) {\n\t\t\tvar acc;\n\t\t\tif (tokens[0].token === '^') {\n\t\t\t\tacc = 'sharp';\n\t\t\t\ttokens.shift();\n\t\t\t\tif (tokens.length === 0) return {accs: accs, warn: 'Expected note name after ' + acc};\n\t\t\t\tswitch (tokens[0].token) {\n\t\t\t\t\tcase '^': acc = 'dblsharp'; tokens.shift(); break;\n\t\t\t\t\tcase '/': acc = 'quartersharp'; tokens.shift(); break;\n\t\t\t\t}\n\t\t\t} else if (tokens[0].token === '=') {\n\t\t\t\tacc = 'natural';\n\t\t\t\ttokens.shift();\n\t\t\t} else if (tokens[0].token === '_') {\n\t\t\t\tacc = 'flat';\n\t\t\t\ttokens.shift();\n\t\t\t\tif (tokens.length === 0) return {accs: accs, warn: 'Expected note name after ' + acc};\n\t\t\t\tswitch (tokens[0].token) {\n\t\t\t\t\tcase '_': acc = 'dblflat'; tokens.shift(); break;\n\t\t\t\t\tcase '/': acc = 'quarterflat'; tokens.shift(); break;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Not an accidental, we'll assume that a later parse will recognize it.\n\t\t\t\treturn { accs: accs };\n\t\t\t}\n\t\t\tif (tokens.length === 0) return {accs: accs, warn: 'Expected note name after ' + acc};\n\t\t\tswitch (tokens[0].token[0])\n\t\t\t{\n\t\t\t\tcase 'a':\n\t\t\t\tcase 'b':\n\t\t\t\tcase 'c':\n\t\t\t\tcase 'd':\n\t\t\t\tcase 'e':\n\t\t\t\tcase 'f':\n\t\t\t\tcase 'g':\n\t\t\t\tcase 'A':\n\t\t\t\tcase 'B':\n\t\t\t\tcase 'C':\n\t\t\t\tcase 'D':\n\t\t\t\tcase 'E':\n\t\t\t\tcase 'F':\n\t\t\t\tcase 'G':\n\t\t\t\t\tif (accs === undefined)\n\t\t\t\t\t\taccs = [];\n\t\t\t\t\taccs.push({ acc: acc, note: tokens[0].token[0] });\n\t\t\t\t\tif (tokens[0].token.length === 1)\n\t\t\t\t\t\ttokens.shift();\n\t\t\t\t\telse\n\t\t\t\t\t\ttokens[0].token = tokens[0].token.substring(1);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn {accs: accs, warn: 'Expected note name after ' + acc + ' Found: ' + tokens[0].token };\n\t\t\t}\n\t\t}\n\t\treturn { accs: accs };\n\t};\n\n\t// This gets an accidental marking for the key signature. It has the accidental then the pitch letter.\n\tthis.getKeyAccidental = function(str) {\n\t\tvar accTranslation = {\n\t\t\t'^': 'sharp',\n\t\t\t'^^': 'dblsharp',\n\t\t\t'=': 'natural',\n\t\t\t'_': 'flat',\n\t\t\t'__': 'dblflat',\n\t\t\t'_/': 'quarterflat',\n\t\t\t'^/': 'quartersharp'\n\t\t};\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn {len: 0};\n\t\tvar acc = null;\n\t\tswitch (str[i])\n\t\t{\n\t\t\tcase '^':\n\t\t\tcase '_':\n\t\t\tcase '=':\n\t\t\t\tacc = str[i];\n\t\t\t\tbreak;\n\t\t\tdefault:return {len: 0};\n\t\t}\n\t\ti++;\n\t\tif (finished(str, i))\n\t\t\treturn {len: 1, warn: 'Expected note name after accidental'};\n\t\tswitch (str[i])\n\t\t{\n\t\t\tcase 'a':\n\t\t\tcase 'b':\n\t\t\tcase 'c':\n\t\t\tcase 'd':\n\t\t\tcase 'e':\n\t\t\tcase 'f':\n\t\t\tcase 'g':\n\t\t\tcase 'A':\n\t\t\tcase 'B':\n\t\t\tcase 'C':\n\t\t\tcase 'D':\n\t\t\tcase 'E':\n\t\t\tcase 'F':\n\t\t\tcase 'G':\n\t\t\t\treturn {len: i+1, token: {acc: accTranslation[acc], note: str[i]}};\n\t\t\tcase '^':\n\t\t\tcase '_':\n\t\t\tcase '/':\n\t\t\t\tacc += str[i];\n\t\t\t\ti++;\n\t\t\t\tif (finished(str, i))\n\t\t\t\t\treturn {len: 2, warn: 'Expected note name after accidental'};\n\t\t\t\tswitch (str[i])\n\t\t\t\t{\n\t\t\t\t\tcase 'a':\n\t\t\t\t\tcase 'b':\n\t\t\t\t\tcase 'c':\n\t\t\t\t\tcase 'd':\n\t\t\t\t\tcase 'e':\n\t\t\t\t\tcase 'f':\n\t\t\t\t\tcase 'g':\n\t\t\t\t\tcase 'A':\n\t\t\t\t\tcase 'B':\n\t\t\t\t\tcase 'C':\n\t\t\t\t\tcase 'D':\n\t\t\t\t\tcase 'E':\n\t\t\t\t\tcase 'F':\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\treturn {len: i+1, token: {acc: accTranslation[acc], note: str[i]}};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn {len: 2, warn: 'Expected note name after accidental'};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn {len: 1, warn: 'Expected note name after accidental'};\n\t\t}\n\t};\n\n\tthis.isWhiteSpace = function(ch) {\n\t\treturn ch === ' ' || ch === '\\t' || ch === '\\x12';\n\t};\n\n\tthis.getMeat = function(line, start, end) {\n\t\t// This removes any comments starting with '%' and trims the ends of the string so that there are no leading or trailing spaces.\n\t\t// it returns just the start and end characters that contain the meat.\n\t\tvar comment = line.indexOf('%', start);\n\t\tif (comment >= 0 && comment < end)\n\t\t\tend = comment;\n\t\twhile (start < end && (line[start] === ' ' || line[start] === '\\t' || line[start] === '\\x12'))\n\t\t\tstart++;\n\t\twhile (start < end && (line[end-1] === ' ' || line[end-1] === '\\t' || line[end-1] === '\\x12'))\n\t\t\tend--;\n\t\treturn {start: start, end: end};\n\t};\n\n\tvar isLetter = function(ch) {\n\t\treturn (ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z');\n\t};\n\n\tvar isNumber = function(ch) {\n\t\treturn (ch >= '0' && ch <= '9');\n\t};\n\n\tthis.tokenize = function(line, start, end, alphaUntilWhiteSpace) {\n\t\t// this returns all the tokens inside the passed string. A token is a punctuation mark, a string of digits, a string of letters.\n\t\t//  Quoted strings are one token.\n\t\t//  If there is a minus sign next to a number, then it is included in the number.\n\t\t// If there is a period immediately after a number, with a number immediately following, then a float is returned.\n\t\t// The type of token is returned: quote, alpha, number, punct\n\t\t// If alphaUntilWhiteSpace is true, then the behavior of the alpha token changes.\n\n\t\tvar ret = this.getMeat(line, start, end);\n\t\tstart = ret.start;\n\t\tend = ret.end;\n\t\tvar tokens = [];\n\t\tvar i;\n\t\twhile (start < end) {\n\t\t\tif (line[start] === '\"') {\n\t\t\t\ti = start+1;\n\t\t\t\twhile (i < end && line[i] !== '\"') i++;\n\t\t\t\ttokens.push({ type: 'quote', token: line.substring(start+1, i), start: start+1, end: i});\n\t\t\t\ti++;\n\t\t\t} else if (isLetter(line[start])) {\n\t\t\t\ti = start+1;\n\t\t\t\tif (alphaUntilWhiteSpace)\n\t\t\t\t\twhile (i < end && !this.isWhiteSpace(line[i])) i++;\n\t\t\t\telse\n\t\t\t\t\twhile (i < end && isLetter(line[i])) i++;\n\t\t\t\ttokens.push({ type: 'alpha', token: line.substring(start, i), continueId: isNumber(line[i]), start: start, end: i});\n\t\t\t\tstart = i + 1;\n\t\t\t} else if (line[start] === '.' && isNumber(line[i+1])) {\n\t\t\t\ti = start+1;\n\t\t\t\tvar int2 = null;\n\t\t\t\tvar float2 = null;\n\t\t\t\twhile (i < end && isNumber(line[i])) i++;\n\n\t\t\t\tfloat2 = parseFloat(line.substring(start, i));\n\t\t\t\ttokens.push({ type: 'number', token: line.substring(start, i), intt: int2, floatt: float2, continueId: isLetter(line[i]), start: start, end: i});\n\t\t\t\tstart = i + 1;\n\t\t\t} else if (isNumber(line[start]) || (line[start] === '-' && isNumber(line[i+1]))) {\n\t\t\t\ti = start+1;\n\t\t\t\tvar intt = null;\n\t\t\t\tvar floatt = null;\n\t\t\t\twhile (i < end && isNumber(line[i])) i++;\n\t\t\t\tif (line[i] === '.' && isNumber(line[i+1])) {\n\t\t\t\t\ti++;\n\t\t\t\t\twhile (i < end && isNumber(line[i])) i++;\n\t\t\t\t} else\n\t\t\t\t\tintt = parseInt(line.substring(start, i));\n\n\t\t\t\tfloatt = parseFloat(line.substring(start, i));\n\t\t\t\ttokens.push({ type: 'number', token: line.substring(start, i), intt: intt, floatt: floatt, continueId: isLetter(line[i]), start: start, end: i});\n\t\t\t\tstart = i + 1;\n\t\t\t} else if (line[start] === ' ' || line[start] === '\\t') {\n\t\t\t\ti = start+1;\n\t\t\t} else {\n\t\t\t\ttokens.push({ type: 'punct', token: line[start], start: start, end: start+1});\n\t\t\t\ti = start+1;\n\t\t\t}\n\t\t\tstart = i;\n\t\t}\n\t\treturn tokens;\n\t};\n\n\tthis.getVoiceToken = function(line, start, end) {\n\t\t// This finds the next token. A token is delimited by a space or an equal sign. If it starts with a quote, then the portion between the quotes is returned.\n\t\tvar i = start;\n\t\twhile (i < end && this.isWhiteSpace(line[i]) || line[i] === '=')\n\t\t\ti++;\n\n\t\tif (line[i] === '\"') {\n\t\t\tvar close = line.indexOf('\"', i+1);\n\t\t\tif (close === -1 || close >= end)\n\t\t\t\treturn {len: 1, err: \"Missing close quote\"};\n\t\t\treturn {len: close-start+1, token: this.translateString(line.substring(i+1, close))};\n\t\t} else {\n\t\t\tvar ii = i;\n\t\t\twhile (ii < end && !this.isWhiteSpace(line[ii]) && line[ii] !== '=')\n\t\t\t\tii++;\n\t\t\treturn {len: ii-start+1, token: line.substring(i, ii)};\n\t\t}\n\t};\n\n\tvar charMap = {\n\t\t\"`a\": 'à', \"'a\": \"á\", \"^a\": \"â\", \"~a\": \"ã\", \"\\\"a\": \"ä\", \"oa\": \"å\", \"aa\": \"å\", \"=a\": \"ā\", \"ua\": \"ă\", \";a\": \"ą\",\n\t\t\"`e\": 'è', \"'e\": \"é\", \"^e\": \"ê\", \"\\\"e\": \"ë\", \"=e\": \"ē\", \"ue\": \"ĕ\", \";e\": \"ę\", \".e\": \"ė\",\n\t\t\"`i\": 'ì', \"'i\": \"í\", \"^i\": \"î\", \"\\\"i\": \"ï\", \"=i\": \"ī\", \"ui\": \"ĭ\", \";i\": \"į\",\n\t\t\"`o\": 'ò', \"'o\": \"ó\", \"^o\": \"ô\", \"~o\": \"õ\", \"\\\"o\": \"ö\", \"=o\": \"ō\", \"uo\": \"ŏ\", \"/o\": \"ø\",\n\t\t\"`u\": 'ù', \"'u\": \"ú\", \"^u\": \"û\", \"~u\": \"ũ\", \"\\\"u\": \"ü\", \"ou\": \"ů\", \"=u\": \"ū\", \"uu\": \"ŭ\", \";u\": \"ų\",\n\t\t\"`A\": 'À', \"'A\": \"Á\", \"^A\": \"Â\", \"~A\": \"Ã\", \"\\\"A\": \"Ä\", \"oA\": \"Å\", \"AA\": \"Å\", \"=A\": \"Ā\", \"uA\": \"Ă\", \";A\": \"Ą\",\n\t\t\"`E\": 'È', \"'E\": \"É\", \"^E\": \"Ê\", \"\\\"E\": \"Ë\", \"=E\": \"Ē\", \"uE\": \"Ĕ\", \";E\": \"Ę\", \".E\": \"Ė\",\n\t\t\"`I\": 'Ì', \"'I\": \"Í\", \"^I\": \"Î\", \"~I\": \"Ĩ\", \"\\\"I\": \"Ï\", \"=I\": \"Ī\", \"uI\": \"Ĭ\", \";I\": \"Į\", \".I\": \"İ\",\n\t\t\"`O\": 'Ò', \"'O\": \"Ó\", \"^O\": \"Ô\", \"~O\": \"Õ\", \"\\\"O\": \"Ö\", \"=O\": \"Ō\", \"uO\": \"Ŏ\", \"/O\": \"Ø\",\n\t\t\"`U\": 'Ù', \"'U\": \"Ú\", \"^U\": \"Û\", \"~U\": \"Ũ\", \"\\\"U\": \"Ü\", \"oU\": \"Ů\", \"=U\": \"Ū\", \"uU\": \"Ŭ\", \";U\": \"Ų\",\n\t\t\"ae\": \"æ\", \"AE\": \"Æ\", \"oe\": \"œ\", \"OE\": \"Œ\", \"ss\": \"ß\",\n\t\t\"'c\": \"ć\", \"^c\": \"ĉ\", \"uc\": \"č\", \"cc\": \"ç\", \".c\": \"ċ\", \"cC\": \"Ç\", \"'C\": \"Ć\", \"^C\": \"Ĉ\", \"uC\": \"Č\", \".C\": \"Ċ\",\n\t\t\"~N\": \"Ñ\", \"~n\": \"ñ\",\n\t\t\"=s\": \"š\", \"vs\": \"š\",\n\t\t\"DH\": \"Ð\", \"dh\": \"ð\",\n\t\t\"HO\": \"Ő\", \"Ho\": \"ő\", \"HU\": \"Ű\", \"Hu\": \"ű\",\n\t\t\"'Y\": \"Ý\", \"'y\": \"ý\", \"^Y\": \"Ŷ\", \"^y\": \"ŷ\", \"\\\"Y\": \"Ÿ\", \"\\\"y\": \"ÿ\",\n\t\t\"vS\": \"Š\", \"vZ\": \"Ž\", \"vz\": 'ž'\n\n// More chars: Ĳ ĳ Ď ď Đ đ Ĝ ĝ Ğ ğ Ġ ġ Ģ ģ Ĥ ĥ Ħ ħ Ĵ ĵ Ķ ķ ĸ Ĺ ĺ Ļ ļ Ľ ľ Ŀ ŀ Ł ł Ń ń Ņ ņ Ň ň ŉ Ŋ ŋ Ŕ ŕ Ŗ ŗ Ř ř Ś ś Ŝ ŝ Ş ş Š Ţ ţ Ť ť Ŧ ŧ Ŵ ŵ Ź ź Ż ż Ž\n\t};\n\tvar charMap1 = {\n\t\t\"#\": \"♯\",\n\t\t\"b\": \"♭\",\n\t\t\"=\": \"♮\"\n\t};\n\tvar charMap2 = {\n\t\t\"201\": \"♯\",\n\t\t\"202\": \"♭\",\n\t\t\"203\": \"♮\",\n\t\t\"241\": \"¡\",\n\t\t\"242\": \"¢\", \"252\": \"a\", \"262\": \"2\", \"272\": \"o\", \"302\": \"Â\", \"312\": \"Ê\", \"322\": \"Ò\", \"332\": \"Ú\", \"342\": \"â\", \"352\": \"ê\", \"362\": \"ò\", \"372\": \"ú\",\n\t\t\"243\": \"£\", \"253\": \"«\", \"263\": \"3\", \"273\": \"»\", \"303\": \"Ã\", \"313\": \"Ë\", \"323\": \"Ó\", \"333\": \"Û\", \"343\": \"ã\", \"353\": \"ë\", \"363\": \"ó\", \"373\": \"û\",\n\t\t\"244\": \"¤\", \"254\": \"¬\", \"264\": \"  ́\", \"274\": \"1⁄4\", \"304\": \"Ä\", \"314\": \"Ì\", \"324\": \"Ô\", \"334\": \"Ü\", \"344\": \"ä\", \"354\": \"ì\", \"364\": \"ô\", \"374\": \"ü\",\n\t\t\"245\": \"¥\", \"255\": \"-\", \"265\": \"μ\", \"275\": \"1⁄2\", \"305\": \"Å\", \"315\": \"Í\", \"325\": \"Õ\", \"335\": \"Ý\",  \"345\": \"å\", \"355\": \"í\", \"365\": \"õ\", \"375\": \"ý\",\n\t\t\"246\": \"¦\", \"256\": \"®\", \"266\": \"¶\", \"276\": \"3⁄4\", \"306\": \"Æ\", \"316\": \"Î\", \"326\": \"Ö\", \"336\": \"Þ\", \"346\": \"æ\", \"356\": \"î\", \"366\": \"ö\", \"376\": \"þ\",\n\t\t\"247\": \"§\", \"257\": \" ̄\", \"267\": \"·\", \"277\": \"¿\", \"307\": \"Ç\", \"317\": \"Ï\", \"327\": \"×\", \"337\": \"ß\", \"347\": \"ç\", \"357\": \"ï\", \"367\": \"÷\", \"377\": \"ÿ\",\n\t\t\"250\": \" ̈\", \"260\": \"°\", \"270\": \" ̧\", \"300\": \"À\", \"310\": \"È\", \"320\": \"Ð\", \"330\": \"Ø\", \"340\": \"à\", \"350\": \"è\", \"360\": \"ð\", \"370\": \"ø\",\n\t\t\"251\": \"©\", \"261\": \"±\", \"271\": \"1\", \"301\": \"Á\", \"311\": \"É\", \"321\": \"Ñ\", \"331\": \"Ù\", \"341\": \"á\", \"351\": \"é\", \"361\": \"ñ\", \"371\": \"ù\" };\n\tthis.translateString = function(str) {\n\t\tvar arr = str.split('\\\\');\n\t\tif (arr.length === 1) return str;\n\t\tvar out = null;\n\t\tarr.forEach(function(s) {\n\t\t\tif (out === null)\n\t\t\t\tout = s;\n\t\t\telse {\n\t\t\t\tvar c = charMap[s.substring(0, 2)];\n\t\t\t\tif (c !== undefined)\n\t\t\t\t\tout += c + s.substring(2);\n\t\t\t\telse {\n\t\t\t\t\tc = charMap2[s.substring(0, 3)];\n\t\t\t\t\tif (c !== undefined)\n\t\t\t\t\t\tout += c + s.substring(3);\n\t\t\t\t\telse {\n\t\t\t\t\t\tc = charMap1[s.substring(0, 1)];\n\t\t\t\t\t\tif (c !== undefined)\n\t\t\t\t\t\t\tout += c + s.substring(1);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tout += \"\\\\\" + s;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn out;\n\t};\n\tthis.getNumber = function(line, index) {\n\t\tvar num = 0;\n\t\twhile (index < line.length) {\n\t\t\tswitch (line[index]) {\n\t\t\t\tcase '0':num = num*10;index++;break;\n\t\t\t\tcase '1':num = num*10+1;index++;break;\n\t\t\t\tcase '2':num = num*10+2;index++;break;\n\t\t\t\tcase '3':num = num*10+3;index++;break;\n\t\t\t\tcase '4':num = num*10+4;index++;break;\n\t\t\t\tcase '5':num = num*10+5;index++;break;\n\t\t\t\tcase '6':num = num*10+6;index++;break;\n\t\t\t\tcase '7':num = num*10+7;index++;break;\n\t\t\t\tcase '8':num = num*10+8;index++;break;\n\t\t\t\tcase '9':num = num*10+9;index++;break;\n\t\t\t\tdefault:\n\t\t\t\t\treturn {num: num, index: index};\n\t\t\t}\n\t\t}\n\t\treturn {num: num, index: index};\n\t};\n\n\tthis.getFraction = function(line, index) {\n\t\tvar num = 1;\n\t\tvar den = 1;\n\t\tif (line[index] !== '/') {\n\t\t\tvar ret = this.getNumber(line, index);\n\t\t\tnum = ret.num;\n\t\t\tindex = ret.index;\n\t\t}\n\t\tif (line[index] === '/') {\n\t\t\tindex++;\n\t\t\tif (line[index] === '/') {\n\t\t\t\tvar div = 0.5;\n\t\t\t\twhile (line[index++] === '/')\n\t\t\t\t\tdiv = div /2;\n\t\t\t\treturn {value: num * div, index: index-1};\n\t\t\t} else {\n\t\t\t\tvar iSave = index;\n\t\t\t\tvar ret2 = this.getNumber(line, index);\n\t\t\t\tif (ret2.num === 0 && iSave === index)\t// If we didn't use any characters, it is an implied 2\n\t\t\t\t\tret2.num = 2;\n\t\t\t\tif (ret2.num !== 0)\n\t\t\t\t\tden = ret2.num;\n\t\t\t\tindex = ret2.index;\n\t\t\t}\n\t\t}\n\n\t\treturn {value: num/den, index: index};\n\t};\n\n//\n// MAE 10 Jan 2023 - For better handling of tunes that have tune numbers in front of them.\n//\n// Previous version would take:\n// 21. Woman of the House, The\n// and return:\n// The 21. Woman of the House\n// \n// This fix results in:\n// 21. The Woman of the House\n//\n// Also added additional checks and handlers for lower case \", the\" and \", a\" since I found several tune collections with those tune name constructs\n//\n// Find an optional title number at the start of a tune title\nfunction getTitleNumber(str){\n\n  const regex = /^(\\d+)\\./;\n\n  // Use the exec method to search for the pattern in the string\n  const match = regex.exec(str);\n\n  // Check if a match is found\n  if (match) {\n\n\t// The matched number is captured in the first group (index 1)\n\tconst foundNumber = match[1];\n\treturn foundNumber;\n\n  } else {\n\n\t// Return null if no match is found\n\treturn null;\n\t\n  }\n\n}\n\nvar thePatterns = [\n\t{ match: /,\\s*The$/, replace: \"The \" },\n\t{ match: /,\\s*the$/, replace: \"the \" },\n\t{ match: /,\\s*A$/, replace: \"A \" },\n\t{ match: /,\\s*a$/, replace: \"a \" },\n\t{ match: /,\\s*An$/, replace: \"An \" },\n\t{ match: /,\\s*an$/, replace: \"an \" },\n\t{ match: /,\\s*Da$/, replace: \"Da \" },\n\t{ match: /,\\s*La$/, replace: \"La \" },\n\t{ match: /,\\s*Le$/, replace: \"Le \" },\n\t{ match: /,\\s*Les$/, replace: \"Les \" },\n\t{ match: /,\\s*Ye$/, replace: \"Ye \" },\n]\n\nthis.theReverser = function (str) {\n\n    for (var i = 0; i < thePatterns.length; i++) {\n\t\tvar thisPattern = thePatterns[i]\n\t\tvar match = str.match(thisPattern.match)\n\t\tif (match) {\n\t\t\tvar theTitleNumber = getTitleNumber(str);\n\t\t\tif (theTitleNumber){\n\t\t\n\t\t\t  //console.log(\"theReverser The titlenumber:\"+theTitleNumber); \n\t\t\n\t\t\t  str = str.replace(theTitleNumber+\".\",\"\");\n\t\t\t  str = str.trim();\n\t\t\t}\n\t\t\tvar len = match[0].length\n\t\t\tvar result = thisPattern.replace + str.substring(0, str.length - len);\n\t\t\n\t\t\tif (theTitleNumber){\n\t\t\t  result = theTitleNumber+\". \"+result;\n\t\t\t}\n\t\t\t\n\t\t\treturn result;\n\n\t\t}\n\t}\n\n    return str;\n\n  };\n\n\tthis.stripComment = function(str) {\n\t\tvar i = str.indexOf('%');\n\t\tif (i >= 0)\n\t\t\treturn parseCommon.strip(str.substring(0, i));\n\t\treturn parseCommon.strip(str);\n\t};\n\n\tthis.getInt = function(str) {\n\t\t// This parses the beginning of the string for a number and returns { value: num, digits: num }\n\t\t// If digits is 0, then the string didn't point to a number.\n\t\tvar x = parseInt(str);\n\t\tif (isNaN(x))\n\t\t\treturn {digits: 0};\n\t\tvar s = \"\" + x;\n\t\tvar i = str.indexOf(s);\t// This is to account for leading spaces\n\t\treturn {value: x, digits: i+s.length};\n\t};\n\n\tthis.getFloat = function(str) {\n\t\t// This parses the beginning of the string for a number and returns { value: num, digits: num }\n\t\t// If digits is 0, then the string didn't point to a number.\n\t\tvar x = parseFloat(str);\n\t\tif (isNaN(x))\n\t\t\treturn {digits: 0};\n\t\tvar s = \"\" + x;\n\t\tvar i = str.indexOf(s);\t// This is to account for leading spaces\n\t\treturn {value: x, digits: i+s.length};\n\t};\n\n\tthis.getMeasurement = function(tokens) {\n\t\tif (tokens.length === 0) return { used: 0 };\n\t\tvar used = 1;\n\t\tvar num = '';\n\t\tif (tokens[0].token === '-') {\n\t\t\ttokens.shift();\n\t\t\tnum = '-';\n\t\t\tused++;\n\t\t}\n\t\telse if (tokens[0].type !== 'number') return { used: 0 };\n\t\tnum += tokens.shift().token;\n\t\tif (tokens.length === 0) return { used: 1, value: parseInt(num) };\n\t\tvar x = tokens.shift();\n\t\tif (x.token === '.') {\n\t\t\tused++;\n\t\t\tif (tokens.length === 0) return { used: used, value: parseInt(num) };\n\t\t\tif (tokens[0].type === 'number') {\n\t\t\t\tx = tokens.shift();\n\t\t\t\tnum = num + '.' + x.token;\n\t\t\t\tused++;\n\t\t\t\tif (tokens.length === 0) return { used: used, value: parseFloat(num) };\n\t\t\t}\n\t\t\tx = tokens.shift();\n\t\t}\n\t\tswitch (x.token) {\n\t\t\tcase 'pt': return { used: used+1, value: parseFloat(num) };\n\t\t\tcase 'px': return { used: used+1, value: parseFloat(num) };\n\t\t\tcase 'cm': return { used: used+1, value: parseFloat(num)/2.54*72 };\n\t\t\tcase 'in': return { used: used+1, value: parseFloat(num)*72 };\n\t\t\tdefault: tokens.unshift(x); return { used: used, value: parseFloat(num) };\n\t\t}\n\t};\n\tvar substInChord = function(str) {\n\t\tstr = str.replace(/\\\\n/g, \"\\n\");\n\t\tstr = str.replace(/\\\\\"/g, '\"');\n\t\treturn str;\n\t};\n\tthis.getBrackettedSubstring = function(line, i, maxErrorChars, _matchChar)\n\t{\n\t\t// This extracts the sub string by looking at the first character and searching for that\n\t\t// character later in the line (or search for the optional _matchChar).\n\t\t// For instance, if the first character is a quote it will look for\n\t\t// the end quote. If the end of the line is reached, then only up to the default number\n\t\t// of characters are returned, so that a missing end quote won't eat up the entire line.\n\t\t// It returns the substring and the number of characters consumed.\n\t\t// The number of characters consumed is normally two more than the size of the substring,\n\t\t// but in the error case it might not be.\n\t\tvar matchChar = _matchChar || line[i];\n\t\tvar pos = i+1;\n\t\tvar esc = false;\n\t\twhile ((pos < line.length) && (esc || line[pos] !== matchChar)) {\n\t\t\tesc = line[pos] === '\\\\';\n\t\t\t++pos;\n\t\t}\n\t\tif (line[pos] === matchChar)\n\t\t\treturn [pos-i+1,substInChord(line.substring(i+1, pos)), true];\n\t\telse\t// we hit the end of line, so we'll just pick an arbitrary num of chars so the line doesn't disappear.\n\t\t{\n\t\t\tpos = i+maxErrorChars;\n\t\t\tif (pos > line.length-1)\n\t\t\t\tpos = line.length-1;\n\t\t\treturn [pos-i+1, substInChord(line.substring(i+1, pos)), false];\n\t\t}\n\t};\n};\n\nTokenizer.prototype.peekLine = function() {\n\treturn this.lines[this.lineIndex]\n}\n\nTokenizer.prototype.nextLine = function() {\n\tif (this.lineIndex > 0) {\n\t\tthis.multilineVars.iChar += this.lines[this.lineIndex-1].length + 1;\n\t}\n\tif (this.lineIndex < this.lines.length) {\n\t\tvar result = this.lines[this.lineIndex]\n\t\tthis.lineIndex++\n\t\treturn result\n\t}\n\treturn null\n}\n\nmodule.exports = Tokenizer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/parse/abc_tokenizer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/parse/abc_transpose.js":
/*!*******************************************************!*\
  !*** ./node_modules/abcjs/src/parse/abc_transpose.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_transpose.js: Handles the automatic transposition of key signatures, chord symbols, and notes.\n\nvar allNotes = __webpack_require__(/*! ./all-notes */ \"(ssr)/./node_modules/abcjs/src/parse/all-notes.js\");\nvar transposeChordName = __webpack_require__(/*! ../parse/transpose-chord */ \"(ssr)/./node_modules/abcjs/src/parse/transpose-chord.js\")\nvar keyAccidentals = __webpack_require__(/*! ../const/key-accidentals */ \"(ssr)/./node_modules/abcjs/src/const/key-accidentals.js\");\nvar transpose = {};\n\nvar keyIndex = {\n\t'C': 0,\n\t'C#': 1,\n\t'Db': 1,\n\t'D': 2,\n\t'D#': 3,\n\t'Eb': 3,\n\t'E': 4,\n\t'F': 5,\n\t'F#': 6,\n\t'Gb': 6,\n\t'G': 7,\n\t'G#': 8,\n\t'Ab': 8,\n\t'A': 9,\n\t'A#': 10,\n\t'Bb': 10,\n\t'B': 11\n};\nvar newKey = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'];\nvar newKeyMinor = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'];\n\ntranspose.keySignature = function(multilineVars, keyName, root, acc, localTranspose) {\n\tif (multilineVars.clef.type === \"perc\" || multilineVars.clef.type === \"none\")\n\t\treturn { accidentals: keyAccidentals(keyName), root: root, acc: acc };\n\tif (!localTranspose) localTranspose = 0;\n\tmultilineVars.localTransposeVerticalMovement = 0;\n\tmultilineVars.localTransposePreferFlats = false;\n\tvar k = keyAccidentals(keyName);\n\tif (!k) return multilineVars.key; // If the key isn't in the list, it is non-standard. We won't attempt to transpose it.\n\tmultilineVars.localTranspose = (multilineVars.globalTranspose ? multilineVars.globalTranspose : 0) + localTranspose;\n\n\tif (!multilineVars.localTranspose)\n\t\treturn { accidentals: k, root: root, acc: acc };\n\tmultilineVars.globalTransposeOrigKeySig = k;\n\tif (multilineVars.localTranspose % 12 === 0) {\n\t\tmultilineVars.localTransposeVerticalMovement = (multilineVars.localTranspose / 12) * 7;\n\t\treturn { accidentals: k, root: root, acc: acc };\n\t}\n\n\tvar baseKey = keyName[0];\n\tif (keyName[1] === 'b' || keyName[1] === '#') {\n\t\tbaseKey += keyName[1];\n\t\tkeyName = keyName.substr(2);\n\t} else\n\t\tkeyName = keyName.substr(1);\n\tvar thisKeyIndex = keyIndex[baseKey]\n\tvar recognized = thisKeyIndex !== undefined\n\tif (!recognized) {\n\t\t// Either the key sig is \"none\" or we don't recognize it. Either way we don't change it, and we assume key of C for the purposes of this calculation.\n\t\tthisKeyIndex = 0\n\t\tbaseKey = \"C\"\n\t\tkeyName = \"\"\n\t}\n\tvar index = thisKeyIndex + multilineVars.localTranspose;\n\twhile (index < 0) index += 12;\n\tif (index > 11) index = index % 12;\n\tvar newKeyName = (keyName[0] === 'm' ? newKeyMinor[index] : newKey[index]);\n\tvar transposedKey = newKeyName + keyName;\n\tvar newKeySig = keyAccidentals(transposedKey);\n\tif (newKeySig.length === 0 || newKeySig[0].acc === 'flat') // key of C and all keys with flats should have chords with flats\n\t\tmultilineVars.localTransposePreferFlats = true;\n\tvar distance = transposedKey.charCodeAt(0) - baseKey.charCodeAt(0);\n\tif (multilineVars.localTranspose > 0) {\n\t\tif (distance < 0)\n\t\t\tdistance += 7;\n\t\telse if (distance === 0) {\n\t\t\t// There's a funny thing that happens when the key changes only an accidental's distance, for instance, from Ab to A.\n\t\t\t// If the distance is positive (we are raising pitch), and the change is higher (that is, Ab -> A), then raise an octave.\n\t\t\t// This test is easier because we know the keys are not equal (or we wouldn't get this far), so if the base key is a flat key, then\n\t\t\t// the transposed key must be higher. Likewise, if the transposed key is sharp, then the base key must be lower. And one\n\t\t\t// of those two things must be true because they are not both natural.\n\t\t\tif (baseKey[1] === '#' ||  transposedKey[1] === 'b')\n\t\t\t\tdistance += 7;\n\t\t}\n\t} else if (multilineVars.localTranspose < 0) {\n\t\tif (distance > 0)\n\t\t\tdistance -= 7;\n\t\telse if (distance === 0) {\n\t\t\t// There's a funny thing that happens when the key changes only an accidental's distance, for instance, from Ab to A.\n\t\t\t// If the distance is negative (we are dropping pitch), and the change is lower (that is, A -> Ab), then drop an octave.\n\t\t\tif (baseKey[1] === 'b' ||  transposedKey[1] === '#')\n\t\t\t\tdistance -= 7;\n\t\t}\n\t}\n\n\tif (multilineVars.localTranspose > 0)\n\t\tmultilineVars.localTransposeVerticalMovement = distance + Math.floor(multilineVars.localTranspose / 12) * 7;\n\telse\n\t\tmultilineVars.localTransposeVerticalMovement = distance + Math.ceil(multilineVars.localTranspose / 12) * 7;\n\tif (recognized)\n\t\treturn { accidentals: newKeySig, root: newKeyName[0], acc: newKeyName.length > 1 ? newKeyName[1] : \"\" };\n\telse\n\t\treturn { accidentals: [], root: root, acc: acc };\n};\n\ntranspose.chordName = function(multilineVars, chord) {\n\treturn transposeChordName(chord, multilineVars.localTranspose, multilineVars.localTransposePreferFlats, multilineVars.freegchord)\n};\n\nvar pitchToLetter = [ 'c', 'd', 'e', 'f', 'g', 'a', 'b' ];\nfunction accidentalChange(origPitch, newPitch, accidental, origKeySig, newKeySig) {\n\tvar origPitchLetter = pitchToLetter[(origPitch + 49) % 7]; // Make sure it is a positive pitch before normalizing.\n\tvar origAccidental = 0;\n\tfor (var i = 0; i < origKeySig.length; i++) {\n\t\tif (origKeySig[i].note.toLowerCase() === origPitchLetter)\n\t\t\torigAccidental = accidentals[origKeySig[i].acc];\n\t}\n\n\tvar currentAccidental = accidentals[accidental];\n\tvar delta = currentAccidental - origAccidental;\n\n\tvar newPitchLetter = pitchToLetter[(newPitch + 49) % 7]; // Make sure it is a positive pitch before normalizing.\n\tvar newAccidental = 0;\n\tfor (var j = 0; j < newKeySig.accidentals.length; j++) {\n\t\tif (newKeySig.accidentals[j].note.toLowerCase() === newPitchLetter)\n\t\t\tnewAccidental = accidentals[newKeySig.accidentals[j].acc];\n\t}\n\tvar calcAccidental = delta + newAccidental;\n\tif (calcAccidental < -2) {\n\t\tnewPitch--;\n\t\tcalcAccidental += (newPitchLetter === 'c' || newPitchLetter === 'f') ? 1 : 2;\n\t}\n\tif (calcAccidental > 2) {\n\t\tnewPitch++;\n\t\tcalcAccidental -= (newPitchLetter === 'b' || newPitchLetter === 'e') ? 1 : 2;\n\t}\n\treturn [newPitch, calcAccidental];\n}\n\nvar accidentals = {\n\tdblflat: -2,\n\tflat: -1,\n\tnatural: 0,\n\tsharp: 1,\n\tdblsharp: 2\n};\nvar accidentals2 = {\n\t\"-2\": \"dblflat\",\n\t\"-1\": \"flat\",\n\t\"0\": \"natural\",\n\t\"1\": \"sharp\",\n\t\"2\": \"dblsharp\"\n};\nvar accidentals3 = {\n\t\"-2\": \"__\",\n\t\"-1\": \"_\",\n\t\"0\": \"=\",\n\t\"1\": \"^\",\n\t\"2\": \"^^\"\n};\n//var count = 0\ntranspose.note = function(multilineVars, el) {\n\t// the \"el\" that is passed in has el.name, el.accidental, and el.pitch. \"pitch\" is the vertical position (0=middle C)\n\t// localTranspose is the number of half steps\n\t// localTransposeVerticalMovement is the vertical distance to move.\n\t//console.log(count++,multilineVars.localTranspose, el)\n\tif (!multilineVars.localTranspose || multilineVars.clef.type === \"perc\")\n\t\treturn;\n\tvar origPitch = el.pitch;\n\tif (multilineVars.localTransposeVerticalMovement) {\n\t\tel.pitch = el.pitch + multilineVars.localTransposeVerticalMovement;\n\t\tif (el.name) {\n\t\t\tvar actual = el.accidental ? el.name.substring(1) : el.name\n\t\t\tvar acc = el.accidental ? el.name[0] : ''\n\t\t\tvar p = allNotes.pitchIndex(actual)\n\t\t\tel.name = acc + allNotes.noteName(p+multilineVars.localTransposeVerticalMovement)\n\t\t}\n\t}\n\n\tif (el.accidental) {\n\t\tvar ret = accidentalChange(origPitch, el.pitch, el.accidental, multilineVars.globalTransposeOrigKeySig, multilineVars.targetKey);\n\t\tel.pitch = ret[0];\n\t\tel.accidental = accidentals2[ret[1]];\n\t\tif (el.name) {\n\t\t\tel.name = accidentals3[ret[1]] + el.name.replace(/[_^=]/g,'');\n\t\t}\n\t}\n\n};\n\nmodule.exports = transpose;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/parse/abc_transpose.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/parse/all-notes.js":
/*!***************************************************!*\
  !*** ./node_modules/abcjs/src/parse/all-notes.js ***!
  \***************************************************/
/***/ ((module) => {

eval("var allNotes = {};\n\nconst allPitches = [\n\t'C,,,', 'D,,,', 'E,,,', 'F,,,', 'G,,,', 'A,,,', 'B,,,',\n\t'C,,', 'D,,', 'E,,', 'F,,', 'G,,', 'A,,', 'B,,',\n\t'C,', 'D,', 'E,', 'F,', 'G,', 'A,', 'B,',\n\t'C', 'D', 'E', 'F', 'G', 'A', 'B',\n\t'c', 'd', 'e', 'f', 'g', 'a', 'b',\n\t\"c'\", \"d'\", \"e'\", \"f'\", \"g'\", \"a'\", \"b'\",\n\t\"c''\", \"d''\", \"e''\", \"f''\", \"g''\", \"a''\", \"b''\",\n\t\"c'''\", \"d'''\", \"e'''\", \"f'''\", \"g'''\", \"a'''\", \"b'''\",\n];\n\nallNotes.pitchIndex = function(noteName) {\n\treturn allPitches.indexOf(noteName)\n}\n\nallNotes.noteName = function(pitchIndex) {\n\treturn allPitches[pitchIndex]\n}\n\nmodule.exports = allNotes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3BhcnNlL2FsbC1ub3Rlcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3BhcnNlL2FsbC1ub3Rlcy5qcz80ZWMxIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBhbGxOb3RlcyA9IHt9O1xuXG5jb25zdCBhbGxQaXRjaGVzID0gW1xuXHQnQywsLCcsICdELCwsJywgJ0UsLCwnLCAnRiwsLCcsICdHLCwsJywgJ0EsLCwnLCAnQiwsLCcsXG5cdCdDLCwnLCAnRCwsJywgJ0UsLCcsICdGLCwnLCAnRywsJywgJ0EsLCcsICdCLCwnLFxuXHQnQywnLCAnRCwnLCAnRSwnLCAnRiwnLCAnRywnLCAnQSwnLCAnQiwnLFxuXHQnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0EnLCAnQicsXG5cdCdjJywgJ2QnLCAnZScsICdmJywgJ2cnLCAnYScsICdiJyxcblx0XCJjJ1wiLCBcImQnXCIsIFwiZSdcIiwgXCJmJ1wiLCBcImcnXCIsIFwiYSdcIiwgXCJiJ1wiLFxuXHRcImMnJ1wiLCBcImQnJ1wiLCBcImUnJ1wiLCBcImYnJ1wiLCBcImcnJ1wiLCBcImEnJ1wiLCBcImInJ1wiLFxuXHRcImMnJydcIiwgXCJkJycnXCIsIFwiZScnJ1wiLCBcImYnJydcIiwgXCJnJycnXCIsIFwiYScnJ1wiLCBcImInJydcIixcbl07XG5cbmFsbE5vdGVzLnBpdGNoSW5kZXggPSBmdW5jdGlvbihub3RlTmFtZSkge1xuXHRyZXR1cm4gYWxsUGl0Y2hlcy5pbmRleE9mKG5vdGVOYW1lKVxufVxuXG5hbGxOb3Rlcy5ub3RlTmFtZSA9IGZ1bmN0aW9uKHBpdGNoSW5kZXgpIHtcblx0cmV0dXJuIGFsbFBpdGNoZXNbcGl0Y2hJbmRleF1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhbGxOb3RlcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/parse/all-notes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/parse/transpose-chord.js":
/*!*********************************************************!*\
  !*** ./node_modules/abcjs/src/parse/transpose-chord.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("var sharpChords = ['C', 'C♯', 'D', \"D♯\", 'E', 'F', \"F♯\", 'G', 'G♯', 'A', 'A♯', 'B'];\nvar flatChords = ['C', 'D♭', 'D', 'E♭', 'E', 'F', 'G♭', 'G', 'A♭', 'A', 'B♭', 'B'];\nvar sharpChordsFree = ['C', 'C#', 'D', \"D#\", 'E', 'F', \"F#\", 'G', 'G#', 'A', 'A#', 'B'];\nvar flatChordsFree = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\n\nfunction transposeChordName(chord, steps, preferFlats, freeGCchord) {\n\tif (!steps || (steps % 12 === 0)) // The chords are the same if it is an exact octave change.\n\t\treturn chord;\n\n\t// There are two things in the chord that might need to be transposed:\n\t// The chord will start with a letter from A-G, and might have one accidental after it.\n\t// That accidental might be an actual sharp or flat char, or it might be a pound sign or lower case \"b\".\n\t// Then there is a bunch of stuff that isn't transposed and should just be copied. That is stuff like \"7\" and more complicated chords.\n\t// But there is one other exception: right after a slash there will be a bass note and possibly an accidental. That should also be transposed.\n\n\twhile (steps < 0) steps += 12;\n\tif (steps > 11) steps = steps % 12;\n\n\t// (chord name w/accidental) (a bunch of stuff) (/) (bass note) (anything else)\n\tvar match = chord.match(/^([A-G][b#♭♯]?)([^\\/]+)?\\/?([A-G][b#♭♯]?)?(.+)?/)\n\tif (!match)\n\t\treturn chord; // We don't recognize the format of the chord, so skip it.\n\tvar name = match[1]\n\tvar extra1 = match[2]\n\tvar bass = match[3]\n\tvar extra2 = match[4]\n\tvar index = sharpChords.indexOf(name)\n\tif (index < 0)\n\t\tindex = flatChords.indexOf(name)\n\tif (index < 0)\n\t\tindex = sharpChordsFree.indexOf(name)\n\tif (index < 0)\n\t\tindex = flatChordsFree.indexOf(name)\n\tif (index < 0)\n\t\treturn chord; // This should never happen, but if we can't find the chord just bail.\t\n\n\tindex += steps\n\tindex = index % 12\n\n\tif (preferFlats) {\n\t\tif (freeGCchord) chord = flatChordsFree[index]\n\t\telse chord = flatChords[index]\n\t} else {\n\t\tif (freeGCchord) chord = sharpChordsFree[index]\n\t\telse chord = sharpChords[index]\n\t}\n\n\tvar isDim = extra1 && (extra1.indexOf('dim') >= 0 || extra1.indexOf('°') >= 0)\n\t//console.log(isDim, chord, extra1)\n\t// We never want A#dim or D#dim\n\tif (isDim && chord === 'A#') chord = 'Bb'\n\tif (isDim && chord === 'D#') chord = 'Eb'\n\tif (isDim && chord === 'A♯') chord = 'B♭'\n\tif (isDim && chord === 'D♯') chord = 'E♭'\n\n\tif (extra1)\n\t\tchord += extra1\n\n\tif (bass) {\n\t\tvar index = sharpChords.indexOf(bass)\n\t\tif (index < 0)\n\t\t\tindex = flatChords.indexOf(bass)\n\t\tif (index < 0)\n\t\t\tindex = sharpChordsFree.indexOf(bass)\n\t\tif (index < 0)\n\t\t\tindex = flatChordsFree.indexOf(bass)\n\t\tchord += '/'\n\t\tif (index >= 0) {\n\t\t\tindex += steps\n\t\t\tindex = index % 12\n\t\t\tif (preferFlats) {\n\t\t\t\tif (freeGCchord) chord += flatChordsFree[index]\n\t\t\t\telse chord += flatChords[index]\n\t\t\t} else {\n\t\t\t\tif (freeGCchord) chord += sharpChordsFree[index]\n\t\t\t\telse chord += sharpChords[index]\n\t\t\t}\n\t\t} else\n\t\t\tchord += bass; // Don't know what to do so do nothing\n\t}\n\n\tif (extra2)\n\t\tchord += extra2\n\n\treturn chord;\n}\n\nmodule.exports = transposeChordName\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3BhcnNlL3RyYW5zcG9zZS1jaG9yZC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7O0FBRWhCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osa0JBQWtCO0FBQ2xCOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy9wYXJzZS90cmFuc3Bvc2UtY2hvcmQuanM/ZDhlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc2hhcnBDaG9yZHMgPSBbJ0MnLCAnQ+KZrycsICdEJywgXCJE4pmvXCIsICdFJywgJ0YnLCBcIkbima9cIiwgJ0cnLCAnR+KZrycsICdBJywgJ0Hima8nLCAnQiddO1xudmFyIGZsYXRDaG9yZHMgPSBbJ0MnLCAnROKZrScsICdEJywgJ0Xima0nLCAnRScsICdGJywgJ0fima0nLCAnRycsICdB4pmtJywgJ0EnLCAnQuKZrScsICdCJ107XG52YXIgc2hhcnBDaG9yZHNGcmVlID0gWydDJywgJ0MjJywgJ0QnLCBcIkQjXCIsICdFJywgJ0YnLCBcIkYjXCIsICdHJywgJ0cjJywgJ0EnLCAnQSMnLCAnQiddO1xudmFyIGZsYXRDaG9yZHNGcmVlID0gWydDJywgJ0RiJywgJ0QnLCAnRWInLCAnRScsICdGJywgJ0diJywgJ0cnLCAnQWInLCAnQScsICdCYicsICdCJ107XG5cbmZ1bmN0aW9uIHRyYW5zcG9zZUNob3JkTmFtZShjaG9yZCwgc3RlcHMsIHByZWZlckZsYXRzLCBmcmVlR0NjaG9yZCkge1xuXHRpZiAoIXN0ZXBzIHx8IChzdGVwcyAlIDEyID09PSAwKSkgLy8gVGhlIGNob3JkcyBhcmUgdGhlIHNhbWUgaWYgaXQgaXMgYW4gZXhhY3Qgb2N0YXZlIGNoYW5nZS5cblx0XHRyZXR1cm4gY2hvcmQ7XG5cblx0Ly8gVGhlcmUgYXJlIHR3byB0aGluZ3MgaW4gdGhlIGNob3JkIHRoYXQgbWlnaHQgbmVlZCB0byBiZSB0cmFuc3Bvc2VkOlxuXHQvLyBUaGUgY2hvcmQgd2lsbCBzdGFydCB3aXRoIGEgbGV0dGVyIGZyb20gQS1HLCBhbmQgbWlnaHQgaGF2ZSBvbmUgYWNjaWRlbnRhbCBhZnRlciBpdC5cblx0Ly8gVGhhdCBhY2NpZGVudGFsIG1pZ2h0IGJlIGFuIGFjdHVhbCBzaGFycCBvciBmbGF0IGNoYXIsIG9yIGl0IG1pZ2h0IGJlIGEgcG91bmQgc2lnbiBvciBsb3dlciBjYXNlIFwiYlwiLlxuXHQvLyBUaGVuIHRoZXJlIGlzIGEgYnVuY2ggb2Ygc3R1ZmYgdGhhdCBpc24ndCB0cmFuc3Bvc2VkIGFuZCBzaG91bGQganVzdCBiZSBjb3BpZWQuIFRoYXQgaXMgc3R1ZmYgbGlrZSBcIjdcIiBhbmQgbW9yZSBjb21wbGljYXRlZCBjaG9yZHMuXG5cdC8vIEJ1dCB0aGVyZSBpcyBvbmUgb3RoZXIgZXhjZXB0aW9uOiByaWdodCBhZnRlciBhIHNsYXNoIHRoZXJlIHdpbGwgYmUgYSBiYXNzIG5vdGUgYW5kIHBvc3NpYmx5IGFuIGFjY2lkZW50YWwuIFRoYXQgc2hvdWxkIGFsc28gYmUgdHJhbnNwb3NlZC5cblxuXHR3aGlsZSAoc3RlcHMgPCAwKSBzdGVwcyArPSAxMjtcblx0aWYgKHN0ZXBzID4gMTEpIHN0ZXBzID0gc3RlcHMgJSAxMjtcblxuXHQvLyAoY2hvcmQgbmFtZSB3L2FjY2lkZW50YWwpIChhIGJ1bmNoIG9mIHN0dWZmKSAoLykgKGJhc3Mgbm90ZSkgKGFueXRoaW5nIGVsc2UpXG5cdHZhciBtYXRjaCA9IGNob3JkLm1hdGNoKC9eKFtBLUddW2Ij4pmt4pmvXT8pKFteXFwvXSspP1xcLz8oW0EtR11bYiPima3ima9dPyk/KC4rKT8vKVxuXHRpZiAoIW1hdGNoKVxuXHRcdHJldHVybiBjaG9yZDsgLy8gV2UgZG9uJ3QgcmVjb2duaXplIHRoZSBmb3JtYXQgb2YgdGhlIGNob3JkLCBzbyBza2lwIGl0LlxuXHR2YXIgbmFtZSA9IG1hdGNoWzFdXG5cdHZhciBleHRyYTEgPSBtYXRjaFsyXVxuXHR2YXIgYmFzcyA9IG1hdGNoWzNdXG5cdHZhciBleHRyYTIgPSBtYXRjaFs0XVxuXHR2YXIgaW5kZXggPSBzaGFycENob3Jkcy5pbmRleE9mKG5hbWUpXG5cdGlmIChpbmRleCA8IDApXG5cdFx0aW5kZXggPSBmbGF0Q2hvcmRzLmluZGV4T2YobmFtZSlcblx0aWYgKGluZGV4IDwgMClcblx0XHRpbmRleCA9IHNoYXJwQ2hvcmRzRnJlZS5pbmRleE9mKG5hbWUpXG5cdGlmIChpbmRleCA8IDApXG5cdFx0aW5kZXggPSBmbGF0Q2hvcmRzRnJlZS5pbmRleE9mKG5hbWUpXG5cdGlmIChpbmRleCA8IDApXG5cdFx0cmV0dXJuIGNob3JkOyAvLyBUaGlzIHNob3VsZCBuZXZlciBoYXBwZW4sIGJ1dCBpZiB3ZSBjYW4ndCBmaW5kIHRoZSBjaG9yZCBqdXN0IGJhaWwuXHRcblxuXHRpbmRleCArPSBzdGVwc1xuXHRpbmRleCA9IGluZGV4ICUgMTJcblxuXHRpZiAocHJlZmVyRmxhdHMpIHtcblx0XHRpZiAoZnJlZUdDY2hvcmQpIGNob3JkID0gZmxhdENob3Jkc0ZyZWVbaW5kZXhdXG5cdFx0ZWxzZSBjaG9yZCA9IGZsYXRDaG9yZHNbaW5kZXhdXG5cdH0gZWxzZSB7XG5cdFx0aWYgKGZyZWVHQ2Nob3JkKSBjaG9yZCA9IHNoYXJwQ2hvcmRzRnJlZVtpbmRleF1cblx0XHRlbHNlIGNob3JkID0gc2hhcnBDaG9yZHNbaW5kZXhdXG5cdH1cblxuXHR2YXIgaXNEaW0gPSBleHRyYTEgJiYgKGV4dHJhMS5pbmRleE9mKCdkaW0nKSA+PSAwIHx8IGV4dHJhMS5pbmRleE9mKCfCsCcpID49IDApXG5cdC8vY29uc29sZS5sb2coaXNEaW0sIGNob3JkLCBleHRyYTEpXG5cdC8vIFdlIG5ldmVyIHdhbnQgQSNkaW0gb3IgRCNkaW1cblx0aWYgKGlzRGltICYmIGNob3JkID09PSAnQSMnKSBjaG9yZCA9ICdCYidcblx0aWYgKGlzRGltICYmIGNob3JkID09PSAnRCMnKSBjaG9yZCA9ICdFYidcblx0aWYgKGlzRGltICYmIGNob3JkID09PSAnQeKZrycpIGNob3JkID0gJ0Lima0nXG5cdGlmIChpc0RpbSAmJiBjaG9yZCA9PT0gJ0Tima8nKSBjaG9yZCA9ICdF4pmtJ1xuXG5cdGlmIChleHRyYTEpXG5cdFx0Y2hvcmQgKz0gZXh0cmExXG5cblx0aWYgKGJhc3MpIHtcblx0XHR2YXIgaW5kZXggPSBzaGFycENob3Jkcy5pbmRleE9mKGJhc3MpXG5cdFx0aWYgKGluZGV4IDwgMClcblx0XHRcdGluZGV4ID0gZmxhdENob3Jkcy5pbmRleE9mKGJhc3MpXG5cdFx0aWYgKGluZGV4IDwgMClcblx0XHRcdGluZGV4ID0gc2hhcnBDaG9yZHNGcmVlLmluZGV4T2YoYmFzcylcblx0XHRpZiAoaW5kZXggPCAwKVxuXHRcdFx0aW5kZXggPSBmbGF0Q2hvcmRzRnJlZS5pbmRleE9mKGJhc3MpXG5cdFx0Y2hvcmQgKz0gJy8nXG5cdFx0aWYgKGluZGV4ID49IDApIHtcblx0XHRcdGluZGV4ICs9IHN0ZXBzXG5cdFx0XHRpbmRleCA9IGluZGV4ICUgMTJcblx0XHRcdGlmIChwcmVmZXJGbGF0cykge1xuXHRcdFx0XHRpZiAoZnJlZUdDY2hvcmQpIGNob3JkICs9IGZsYXRDaG9yZHNGcmVlW2luZGV4XVxuXHRcdFx0XHRlbHNlIGNob3JkICs9IGZsYXRDaG9yZHNbaW5kZXhdXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRpZiAoZnJlZUdDY2hvcmQpIGNob3JkICs9IHNoYXJwQ2hvcmRzRnJlZVtpbmRleF1cblx0XHRcdFx0ZWxzZSBjaG9yZCArPSBzaGFycENob3Jkc1tpbmRleF1cblx0XHRcdH1cblx0XHR9IGVsc2Vcblx0XHRcdGNob3JkICs9IGJhc3M7IC8vIERvbid0IGtub3cgd2hhdCB0byBkbyBzbyBkbyBub3RoaW5nXG5cdH1cblxuXHRpZiAoZXh0cmEyKVxuXHRcdGNob3JkICs9IGV4dHJhMlxuXG5cdHJldHVybiBjaG9yZDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB0cmFuc3Bvc2VDaG9yZE5hbWVcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/parse/transpose-chord.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/parse/tune-builder.js":
/*!******************************************************!*\
  !*** ./node_modules/abcjs/src/parse/tune-builder.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var parseKeyVoice = __webpack_require__(/*! ../parse/abc_parse_key_voice */ \"(ssr)/./node_modules/abcjs/src/parse/abc_parse_key_voice.js\");\n//var parseCommon = require('../parse/abc_common');\n//var parseDirective = require('./abc_parse_directive');\n\nvar TuneBuilder = function (tune) {\n\tvar self = this;\n\tvar voiceDefs = {}\n\tvar currentVoiceName = ''\n\ttune.reset();\n\n\tthis.setVisualTranspose = function (visualTranspose) {\n\t\tif (visualTranspose!==undefined)\n\t\t\ttune.visualTranspose = visualTranspose;\n\t};\n\n\tthis.cleanUp = function (barsperstaff, staffnonote, currSlur) {\n\t\tcloseLine(tune);\t// Close the last line.\n\t\tdelete tune.runningFonts;\n\n\t\tsimplifyMetaText(tune)\n\t\t//addRichTextToAnnotationsAndLyrics(tune)\n\n\t\t// If the tempo was created with a string like \"Allegro\", then the duration of a beat needs to be set at the last moment, when it is most likely known.\n\t\tif (tune.metaText.tempo && tune.metaText.tempo.bpm && !tune.metaText.tempo.duration)\n\t\t\ttune.metaText.tempo.duration = [tune.getBeatLength()];\n\n\t\t// Remove any blank lines\n\t\tvar anyDeleted = false;\n\t\tvar i, s, v;\n\t\tfor (i = 0; i < tune.lines.length; i++) {\n\t\t\tif (tune.lines[i].staff !== undefined) {\n\t\t\t\tvar hasAny = false;\n\t\t\t\tfor (s = 0; s < tune.lines[i].staff.length; s++) {\n\t\t\t\t\tif (tune.lines[i].staff[s] === undefined) {\n\t\t\t\t\t\tanyDeleted = true;\n\t\t\t\t\t\ttune.lines[i].staff[s] = null;\n\t\t\t\t\t\t//tune.lines[i].staff[s] = { voices: []};\t// TODO-PER: There was a part missing in the abc music. How should we recover?\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (v = 0; v < tune.lines[i].staff[s].voices.length; v++) {\n\t\t\t\t\t\t\tif (tune.lines[i].staff[s].voices[v] === undefined)\n\t\t\t\t\t\t\t\ttune.lines[i].staff[s].voices[v] = [];\t// TODO-PER: There was a part missing in the abc music. How should we recover?\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tif (containsNotes(tune.lines[i].staff[s].voices[v])) hasAny = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!hasAny) {\n\t\t\t\t\ttune.lines[i] = null;\n\t\t\t\t\tanyDeleted = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (anyDeleted) {\n\t\t\ttune.lines = tune.lines.filter(function (line) { return !!line });\n\t\t\ttune.lines.forEach(function (line) {\n\t\t\t\tif (line.staff)\n\t\t\t\t\tline.staff = line.staff.filter(function (line) { return !!line });\n\t\t\t});\n\t\t}\n\n\t\t// if we exceeded the number of bars allowed on a line, then force a new line\n\t\tif (barsperstaff) {\n\t\t\twhile (wrapMusicLines(tune.lines, barsperstaff)) {\n\t\t\t\t// This will keep wrapping until the end of the piece.\n\t\t\t}\n\t\t}\n\n\t\t// If we were passed staffnonote, then we want to get rid of all staffs that contain only rests.\n\t\tif (staffnonote) {\n\t\t\tanyDeleted = false;\n\t\t\tfor (i = 0; i < tune.lines.length; i++) {\n\t\t\t\tif (tune.lines[i].staff !== undefined) {\n\t\t\t\t\tfor (s = 0; s < tune.lines[i].staff.length; s++) {\n\t\t\t\t\t\tvar keepThis = false;\n\t\t\t\t\t\tfor (v = 0; v < tune.lines[i].staff[s].voices.length; v++) {\n\t\t\t\t\t\t\tif (containsNotesStrict(tune.lines[i].staff[s].voices[v])) {\n\t\t\t\t\t\t\t\tkeepThis = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!keepThis) {\n\t\t\t\t\t\t\tanyDeleted = true;\n\t\t\t\t\t\t\ttune.lines[i].staff[s] = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (anyDeleted) {\n\t\t\t\ttune.lines.forEach(function (line) {\n\t\t\t\t\tif (line.staff)\n\t\t\t\t\t\tline.staff = line.staff.filter(function (staff) { return !!staff });\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfixTitles(tune.lines);\n\n\t\t// Remove the temporary working variables\n\t\tfor (i = 0; i < tune.lines.length; i++) {\n\t\t\tif (tune.lines[i].staff) {\n\t\t\t\tfor (s = 0; s < tune.lines[i].staff.length; s++)\n\t\t\t\t\tdelete tune.lines[i].staff[s].workingClef;\n\t\t\t}\n\t\t}\n\n\t\t// If there are overlays, create new voices for them.\n\t\twhile (resolveOverlays(tune)) {\n\t\t\t// keep resolving overlays as long as any are found.\n\t\t}\n\n\t\tfor (var i = 0; i < tune.lines.length; i++) {\n\t\t\tvar staff = tune.lines[i].staff;\n\t\t\tif (staff) {\n\t\t\t\tfor (tune.staffNum = 0; tune.staffNum < staff.length; tune.staffNum++) {\n\t\t\t\t\tif (staff[tune.staffNum].clef)\n\t\t\t\t\t\tparseKeyVoice.fixClef(staff[tune.staffNum].clef);\n\t\t\t\t\tfor (tune.voiceNum = 0; tune.voiceNum < staff[tune.staffNum].voices.length; tune.voiceNum++) {\n\t\t\t\t\t\tvar voice = staff[tune.staffNum].voices[tune.voiceNum];\n\t\t\t\t\t\tcleanUpSlursInLine(voice, tune.staffNum, tune.voiceNum, currSlur);\n\t\t\t\t\t\tfor (var j = 0; j < voice.length; j++) {\n\t\t\t\t\t\t\tif (voice[j].el_type === 'clef')\n\t\t\t\t\t\t\t\tparseKeyVoice.fixClef(voice[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (voice.length > 0 && voice[voice.length - 1].barNumber) {\n\t\t\t\t\t\t\t// Don't hang a bar number on the last bar line: it should go on the next line.\n\t\t\t\t\t\t\tvar nextLine = getNextMusicLine(tune.lines, i);\n\t\t\t\t\t\t\tif (nextLine)\n\t\t\t\t\t\t\t\tnextLine.staff[0].barNumber = voice[voice.length - 1].barNumber;\n\t\t\t\t\t\t\tdelete voice[voice.length - 1].barNumber;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remove temporary variables that the outside doesn't need to know about\n\t\tdelete tune.staffNum;\n\t\tdelete tune.voiceNum;\n\t\tdelete tune.lineNum;\n\t\tdelete tune.potentialStartBeam;\n\t\tdelete tune.potentialEndBeam;\n\t\tdelete tune.vskipPending;\n\n\t\treturn currSlur;\n\t};\n\n\tthis.addTieToLastNote = function (dottedTie) {\n\t\t// TODO-PER: if this is a chord, which note?\n\t\tvar el = getLastNote(tune);\n\t\tif (el && el.pitches && el.pitches.length > 0) {\n\t\t\tel.pitches[0].startTie = {};\n\t\t\tif (dottedTie)\n\t\t\t\tel.pitches[0].startTie.style = 'dotted';\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tthis.appendElement = function (type, startChar, endChar, hashParams) {\n\t\thashParams.el_type = type;\n\t\tif (startChar !== null)\n\t\t\thashParams.startChar = startChar;\n\t\tif (endChar !== null)\n\t\t\thashParams.endChar = endChar;\n\t\tif (type === 'note') { // && (hashParams.rest !== undefined || hashParams.end_beam === undefined)) {\n\t\t\t// Now, add the startBeam and endBeam where it is needed.\n\t\t\t// end_beam is already set on the places where there is a forced end_beam. We'll remove that here after using that info.\n\t\t\t// this.potentialStartBeam either points to null or the start beam.\n\t\t\t// this.potentialEndBeam either points to null or the start beam.\n\t\t\t// If we have a beam break (note is longer than a quarter, or an end_beam is on this element), then set the beam if we have one.\n\t\t\t// reset the variables for the next notes.\n\t\t\tvar dur = getDuration(hashParams);\n\t\t\tif (dur >= 0.25) {\t// The beam ends on the note before this.\n\t\t\t\tendBeamLast(tune);\n\t\t\t} else if (hashParams.force_end_beam_last && tune.potentialStartBeam !== undefined) {\n\t\t\t\tendBeamLast(tune);\n\t\t\t} else if (hashParams.end_beam && tune.potentialStartBeam !== undefined) {\t// the beam is forced to end on this note, probably because of a space in the ABC\n\t\t\t\tif (hashParams.rest === undefined)\n\t\t\t\t\tendBeamHere(hashParams, tune);\n\t\t\t\telse\n\t\t\t\t\tendBeamLast(tune);\n\t\t\t} else if (hashParams.rest === undefined) {\t// this a short note and we aren't about to end the beam\n\t\t\t\tif (tune.potentialStartBeam === undefined) {\t// We aren't collecting notes for a beam, so start here.\n\t\t\t\t\tif (!hashParams.end_beam) {\n\t\t\t\t\t\ttune.potentialStartBeam = hashParams;\n\t\t\t\t\t\tdelete tune.potentialEndBeam;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttune.potentialEndBeam = hashParams;\t// Continue the beaming, look for the end next note.\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//  end_beam goes on rests and notes which precede rests _except_ when a rest (or set of adjacent rests) has normal notes on both sides (no spaces)\n\t\t\t//\t\t\tif (hashParams.rest !== undefined)\n\t\t\t//\t\t\t{\n\t\t\t//\t\t\t\thashParams.end_beam = true;\n\t\t\t//\t\t\t\tvar el2 = getLastNote(tune);\n\t\t\t//\t\t\t\tif (el2) el2.end_beam = true;\n\t\t\t//\t\t\t\t// TODO-PER: implement exception mentioned in the comment.\n\t\t\t//\t\t\t}\n\t\t} else {\t// It's not a note, so there definitely isn't beaming after it.\n\t\t\tendBeamLast(tune);\n\t\t}\n\t\tdelete hashParams.end_beam;\t// We don't want this temporary variable hanging around.\n\t\tdelete hashParams.force_end_beam_last;\t// We don't want this temporary variable hanging around.\n\t\tif (hashParams.rest && hashParams.rest.type === 'invisible') {\n\t\t\tdelete hashParams.decoration // the decorations on invisible rests should be invisible, too.\n\t\t}\n\t\tif (tune.lines.length <= tune.lineNum || tune.lines[tune.lineNum].staff.length <= tune.staffNum) {\n\t\t\t//console.log(\"pushNote IGNORED\", tune.lines[tune.lineNum])\n\t\t\t// TODO-PER: This prevents a crash, but it drops the element. Need to figure out how to start a new line, or delay adding this.\n\t\t\treturn false;\n\t\t}\n\n\t\tpushNote(self, tune, hashParams, voiceDefs, currentVoiceName);\n\t\treturn true\n\t};\n\n\tthis.appendStartingElement = function (type, startChar, endChar, hashParams2) {\n\t\t//console.log('appendStartingElement', hashParams2)\n\t\t// If we're in the middle of beaming, then end the beam.\n\t\tcloseLine(tune);\n\n\t\t// We only ever want implied naturals the first time.\n\t\tvar impliedNaturals;\n\t\tif (type === 'key') {\n\t\t\timpliedNaturals = hashParams2.impliedNaturals;\n\t\t\tdelete hashParams2.impliedNaturals;\n\t\t\tdelete hashParams2.explicitAccidentals;\n\t\t}\n\n\t\t// Clone the object because it will be sticking around for the next line and we don't want the extra fields in it.\n\t\tvar hashParams = Object.assign({}, hashParams2);\n\n\t\t// be sure that we are on a music type line before doing the following.\n\t\tif (!tune.lines[tune.lineNum]) return\n\t\tvar staff = tune.lines[tune.lineNum].staff\n\t\tif (!staff) return\n\n\t\t// If tune is the first item in tune staff, then we might have to initialize the staff, first.\n\t\tif (staff.length <= tune.staffNum) {\n\t\t\tstaff[tune.staffNum] = {};\n\t\t\tstaff[tune.staffNum].clef = Object.assign({}, staff[0].clef);\n\t\t\tstaff[tune.staffNum].key = Object.assign({}, staff[0].key);\n\t\t\tif (staff[0].meter)\n\t\t\t\tstaff[tune.staffNum].meter = Object.assign({}, staff[0].meter);\n\t\t\tstaff[tune.staffNum].workingClef = Object.assign({}, staff[0].workingClef);\n\t\t\tstaff[tune.staffNum].voices = [[]];\n\t\t}\n\t\t// If tune is a clef type, then we replace the working clef on the line. This is kept separate from\n\t\t// the clef in case there is an inline clef field. We need to know what the current position for\n\t\t// the note is.\n\t\tif (type === 'clef') {\n\t\t\tstaff[tune.staffNum].workingClef = hashParams;\n\t\t}\n\n\t\t// These elements should not be added twice, so if the element exists on tune line without a note or bar before it, just replace the staff version.\n\t\tvar voice = staff[tune.staffNum].voices[tune.voiceNum];\n\t\tfor (var i = 0; i < voice.length; i++) {\n\t\t\tif (voice[i].el_type === 'note' || voice[i].el_type === 'bar') {\n\t\t\t\thashParams.el_type = type;\n\t\t\t\thashParams.startChar = startChar;\n\t\t\t\thashParams.endChar = endChar;\n\t\t\t\tif (impliedNaturals)\n\t\t\t\t\thashParams.accidentals = impliedNaturals.concat(hashParams.accidentals);\n\t\t\t\tvoice.push(hashParams);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (voice[i].el_type === type) {\n\t\t\t\thashParams.el_type = type;\n\t\t\t\thashParams.startChar = startChar;\n\t\t\t\thashParams.endChar = endChar;\n\t\t\t\tif (impliedNaturals)\n\t\t\t\t\thashParams.accidentals = impliedNaturals.concat(hashParams.accidentals);\n\t\t\t\tvoice[i] = hashParams;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// We didn't see either that type or a note, so replace the element to the staff.\n\t\tstaff[tune.staffNum][type] = hashParams2;\n\t};\n\n\tthis.addSubtitle = function (str, info) {\n\t\tpushLine(tune, { subtitle: { text: str, startChar: info.startChar, endChar: info.endChar } });\n\t};\n\n\tthis.addSpacing = function (num) {\n\t\ttune.vskipPending = num;\n\t};\n\n\tthis.addNewPage = function (num) {\n\t\tpushLine(tune, { newpage: num });\n\t};\n\n\tthis.addSeparator = function (spaceAbove, spaceBelow, lineLength, info) {\n\t\tpushLine(tune, { separator: { spaceAbove: Math.round(spaceAbove), spaceBelow: Math.round(spaceBelow), lineLength: Math.round(lineLength), startChar: info.startChar, endChar: info.endChar } });\n\t};\n\n\tthis.addText = function (str, info) {\n\t\tpushLine(tune, { text: { text: str, startChar: info.startChar, endChar: info.endChar } });\n\t};\n\n\tthis.addCentered = function (str) {\n\t\tpushLine(tune, { text: [{ text: str, center: true }] });\n\t};\n\n\t//\tanyVoiceContainsNotes: function(line) {\n\t//\t\tfor (var i = 0; i < line.staff.voices.length; i++) {\n\t//\t\t\tif (containsNotes(line.staff.voices[i]))\n\t//\t\t\t\treturn true;\n\t//\t\t}\n\t//\t\treturn false;\n\t//\t},\n\tthis.changeVoiceScale = function (scale) {\n\t\tself.appendElement('scale', null, null, { size: scale });\n\t};\n\tthis.changeVoiceColor = function (color) {\n\t\tself.appendElement('color', null, null, { color: color });\n\t};\n\n\tthis.startNewLine = function (params) {\n\t\t//console.log(\"startNewLine\", tune.lineNum, params, voiceDefs)\n\t\t// If the pointed to line doesn't exist, just create that. If the line does exist, but doesn't have any music on it, just use it.\n\t\t// If it does exist and has music, then increment the line number. If the new element doesn't exist, create it.\n\t\tcloseLine(tune);\t// Close the previous line.\n\t\tif (params.currentVoiceName) {\n\t\t\tcurrentVoiceName = params.currentVoiceName\n\t\t\tvoiceDefs[params.currentVoiceName] = params\n\t\t}\n\n\t\tif (tune.lines[tune.lineNum] === undefined) createLine(self, tune, params);\n\t\telse if (tune.lines[tune.lineNum].staff === undefined) {\n\t\t\ttune.lineNum++;\n\t\t\tthis.startNewLine(params);\n\t\t} else if (tune.lines[tune.lineNum].staff[tune.staffNum] === undefined) createStaff(self, tune, params);\n\t\telse if (tune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum] === undefined) createVoice(self, tune, params);\n\t\telse if (!containsNotes(tune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum])) {\n\t\t\t// We don't need a new line but we might need to update parts of it.\n\t\t\tif (params.part)\n\t\t\t\tself.appendElement('part', params.part.startChar, params.part.endChar, { title: params.part.title });\n\t\t} else {\n\t\t\ttune.lineNum++;\n\t\t\tthis.startNewLine(params);\n\t\t}\n\t};\n\n\tthis.setRunningFont = function (type, font) {\n\t\t// This is called at tune start to set the current default fonts so we know whether to record a change.\n\t\ttune.runningFonts[type] = font;\n\t};\n\n\tthis.setBarNumberImmediate = function (barNumber) {\n\t\t// If tune is called right at the beginning of a line, then correct the measure number that is already written.\n\t\t// If tune is called at the beginning of a measure, then correct the measure number that was just created.\n\t\t// If tune is called in the middle of a measure, then subtract one from it, because it will be incremented before applied.\n\t\tvar currentVoice = this.getCurrentVoice();\n\t\tif (currentVoice && currentVoice.length > 0) {\n\t\t\tvar lastElement = currentVoice[currentVoice.length - 1];\n\t\t\tif (lastElement.el_type === 'bar') {\n\t\t\t\tif (lastElement.barNumber !== undefined) // the measure number might not be written for tune bar, don't override that.\n\t\t\t\t\tlastElement.barNumber = barNumber;\n\t\t\t} else\n\t\t\t\treturn barNumber - 1;\n\t\t}\n\t\treturn barNumber;\n\t};\n\n\tthis.hasBeginMusic = function () {\n\t\t// return true if there exists at least one line that contains \"staff\"\n\t\tfor (var i = 0; i < tune.lines.length; i++) {\n\t\t\tif (tune.lines[i].staff)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tthis.isFirstLine = function (index) {\n\t\tfor (var i = index - 1; i >= 0; i--) {\n\t\t\tif (tune.lines[i].staff !== undefined) return false;\n\t\t}\n\t\treturn true;\n\t};\n\n\tthis.getCurrentVoice = function () {\n\t\t//console.log(\"getCurrentVoice\", tune.lineNum)\n\t\tvar currLine = getPrevMusicLine(tune.lines, tune.lineNum)\n\t\tif (!currLine)\n\t\t\treturn null;\n\t\tvar currStaff = currLine.staff[tune.staffNum];\n\t\tif (!currStaff)\n\t\t\treturn null;\n\t\tif (currStaff.voices[tune.voiceNum] !== undefined)\n\t\t\treturn currStaff.voices[tune.voiceNum];\n\t\telse return null;\n\t};\n\n\tthis.setCurrentVoice = function (staffNum, voiceNum, name) {\n\t\t//console.log(\"setCurrentVoice\", tune.lineNum, staffNum, voiceNum, name, voiceDefs)\n\t\ttune.staffNum = staffNum;\n\t\ttune.voiceNum = voiceNum;\n\t\tcurrentVoiceName = name\n\t\tfor (var i = 0; i < tune.lines.length; i++) {\n\t\t\tif (tune.lines[i].staff) {\n\t\t\t\tif (tune.lines[i].staff[staffNum] === undefined || tune.lines[i].staff[staffNum].voices[voiceNum] === undefined ||\n\t\t\t\t\t!containsNotes(tune.lines[i].staff[staffNum].voices[voiceNum])) {\n\t\t\t\t\t//console.log(\"cv2\", i, tune.lines[i].staff[staffNum])\n\t\t\t\t\ttune.lineNum = i;\n\t\t\t\t\tif (!tune.lines[i].staff[staffNum] || !!tune.lines[i].staff[staffNum].voices[voiceNum]) return true\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//console.log(\"cv3\", i, tune.lineNum, tune.lines[tune.lineNum])\n\t\ttune.lineNum = i;\n\t\treturn false\n\t};\n\n\tthis.addMetaText = function (key, value, info) {\n\t\tif (tune.metaText[key] === undefined) {\n\t\t\ttune.metaText[key] = value;\n\t\t\ttune.metaTextInfo[key] = info;\n\t\t} else {\n\t\t\tif (typeof tune.metaText[key] === 'string' && typeof value === 'string')\n\t\t\t\ttune.metaText[key] += \"\\n\" + value;\n\t\t\telse {\n\t\t\t\tif (tune.metaText[key] === 'string')\n\t\t\t\t\ttune.metaText[key] = [{ text: tune.metaText[key] }]\n\t\t\t\tif (typeof value === 'string')\n\t\t\t\t\tvalue = [{ text: value }]\n\t\t\t\ttune.metaText[key] = tune.metaText[key].concat(value)\n\t\t\t}\n\t\t\ttune.metaTextInfo[key].endChar = info.endChar;\n\t\t}\n\t};\n\n\tthis.addMetaTextArray = function (key, value, info) {\n\t\tif (tune.metaText[key] === undefined) {\n\t\t\ttune.metaText[key] = [value];\n\t\t\ttune.metaTextInfo[key] = info;\n\t\t} else {\n\t\t\ttune.metaText[key].push(value);\n\t\t\ttune.metaTextInfo[key].endChar = info.endChar;\n\t\t}\n\t};\n\tthis.addMetaTextObj = function (key, value, info) {\n\t\ttune.metaText[key] = value;\n\t\ttune.metaTextInfo[key] = info;\n\t};\n};\n\nfunction isArrayOfStrings(arr) {\n\tif (!arr) return false\n\tif (typeof arr === \"string\") return false\n\t//var str = ''\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (typeof arr[i] !== 'string')\n\t\t\treturn false\n\t}\n\treturn true\n}\n\nfunction simplifyMetaText(tune) {\n\tif (isArrayOfStrings(tune.metaText.notes))\n\t\ttune.metaText.notes = tune.metaText.notes.join(\"\\n\")\n\tif (isArrayOfStrings(tune.metaText.history))\n\t\ttune.metaText.history = tune.metaText.history.join(\"\\n\")\n}\n\n// function addRichTextToAnnotationsAndLyrics(tune) {\n// \tvar lines = tune.lines\n// \tfor (var i = 0; i < lines.length; i++) {\n// \t\tif (lines[i].staff !== undefined) {\n// \t\t\tfor (var s = 0; s < lines[i].staff.length; s++) {\n// \t\t\t\tfor (var v = 0; v < lines[i].staff[s].voices.length; v++) {\n// \t\t\t\t\tvar voice = lines[i].staff[s].voices[v];\n// \t\t\t\t\tfor (var n = 0; n < voice.length; n++) {\n// \t\t\t\t\t\tvar element = voice[n]\n// \t\t\t\t\t\tif (element.chord) {\n// \t\t\t\t\t\t\tfor (var c = 0; c < element.chord.length; c++) {\n// \t\t\t\t\t\t\t\telement.chord[c].name = parseDirective.parseFontChangeLine(element.chord[c].name)\n// \t\t\t\t\t\t\t\tconsole.log(element.chord[c].name)\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\tif (element.lyric) {\n// \t\t\t\t\t\t\tfor (var l = 0; l < element.lyric.length; l++) {\n// \t\t\t\t\t\t\t\telement.lyric[l].syllable = parseDirective.parseFontChangeLine(element.lyric[l].syllable)\n// \t\t\t\t\t\t\t\tconsole.log(element.lyric[l].syllable)\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t}\n// \t\t\t\t\t}\n// \t\t\t\t}\n// \t\t\t}\n// \t\t}\n// \t}\n\n// }\n\nfunction resolveOverlays(tune) {\n\tvar madeChanges = false;\n\tvar durationsPerLines = [];\n\tfor (var i = 0; i < tune.lines.length; i++) {\n\t\tvar line = tune.lines[i];\n\t\tif (line.staff) {\n\t\t\tfor (var j = 0; j < line.staff.length; j++) {\n\t\t\t\tvar staff = line.staff[j];\n\t\t\t\tvar overlayVoice = [];\n\t\t\t\tfor (var k = 0; k < staff.voices.length; k++) {\n\t\t\t\t\tvar voice = staff.voices[k];\n\t\t\t\t\toverlayVoice.push({ hasOverlay: false, voice: [], snip: [] });\n\t\t\t\t\tdurationsPerLines[i] = 0;\n\t\t\t\t\tvar durationThisBar = 0;\n\t\t\t\t\tvar inOverlay = false;\n\t\t\t\t\tvar overlayDuration = 0;\n\t\t\t\t\tvar snipStart = -1;\n\t\t\t\t\tfor (var kk = 0; kk < voice.length; kk++) {\n\t\t\t\t\t\tvar event = voice[kk];\n\t\t\t\t\t\tif (event.el_type === \"overlay\" && !inOverlay) {\n\t\t\t\t\t\t\tmadeChanges = true;\n\t\t\t\t\t\t\tinOverlay = true;\n\t\t\t\t\t\t\tsnipStart = kk;\n\t\t\t\t\t\t\toverlayVoice[k].hasOverlay = true;\n\t\t\t\t\t\t\tif (overlayDuration === 0)\n\t\t\t\t\t\t\t\toverlayDuration = durationsPerLines[i];\n\t\t\t\t\t\t\t// If this isn't the first line, we also need invisible rests on the previous lines.\n\t\t\t\t\t\t\t// So, if the next voice doesn't appear in a previous line, create it\n\t\t\t\t\t\t\tfor (var ii = 0; ii < i; ii++) {\n\t\t\t\t\t\t\t\tif (durationsPerLines[ii] && tune.lines[ii].staff && staff.voices.length >= tune.lines[ii].staff[0].voices.length) {\n\t\t\t\t\t\t\t\t\ttune.lines[ii].staff[0].voices.push([{\n\t\t\t\t\t\t\t\t\t\tel_type: \"note\",\n\t\t\t\t\t\t\t\t\t\tduration: durationsPerLines[ii],\n\t\t\t\t\t\t\t\t\t\trest: { type: \"invisible\" },\n\t\t\t\t\t\t\t\t\t\tstartChar: event.startChar,\n\t\t\t\t\t\t\t\t\t\tendChar: event.endChar\n\t\t\t\t\t\t\t\t\t}]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (event.el_type === \"bar\") {\n\t\t\t\t\t\t\tif (inOverlay) {\n\t\t\t\t\t\t\t\t// delete the overlay events from this array without messing up this loop.\n\t\t\t\t\t\t\t\tinOverlay = false;\n\t\t\t\t\t\t\t\toverlayVoice[k].snip.push({ start: snipStart, len: kk - snipStart });\n\t\t\t\t\t\t\t\toverlayVoice[k].voice.push(event); // Also end the overlay with the barline.\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// This keeps the voices lined up: if the overlay isn't in the first measure then we need a bunch of invisible rests.\n\t\t\t\t\t\t\t\tif (durationThisBar > 0)\n\t\t\t\t\t\t\t\t\toverlayVoice[k].voice.push({ el_type: \"note\", duration: durationThisBar, rest: { type: \"invisible\" }, startChar: event.startChar, endChar: event.endChar });\n\t\t\t\t\t\t\t\toverlayVoice[k].voice.push(event);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdurationThisBar = 0;\n\t\t\t\t\t\t} else if (event.el_type === \"note\") {\n\t\t\t\t\t\t\tif (inOverlay) {\n\t\t\t\t\t\t\t\toverlayVoice[k].voice.push(event);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdurationThisBar += event.duration;\n\t\t\t\t\t\t\t\tdurationsPerLines[i] += event.duration;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (event.el_type === \"scale\" || event.el_type === \"stem\" || event.el_type === \"overlay\" || event.el_type === \"style\" || event.el_type === \"transpose\" || event.el_type === \"color\") {\n\t\t\t\t\t\t\t// These types of events are duplicated on the overlay layer.\n\t\t\t\t\t\t\toverlayVoice[k].voice.push(event);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (overlayVoice[k].hasOverlay && overlayVoice[k].snip.length === 0) {\n\t\t\t\t\t\t// there was no closing bar, so we didn't set the snip amount.\n\t\t\t\t\t\toverlayVoice[k].snip.push({ start: snipStart, len: voice.length - snipStart });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (k = 0; k < overlayVoice.length; k++) {\n\t\t\t\t\tvar ov = overlayVoice[k];\n\t\t\t\t\tif (ov.hasOverlay) {\n\t\t\t\t\t\tov.voice.splice(0, 0, { el_type: \"stem\", direction: \"down\" })\n\t\t\t\t\t\tstaff.voices.push(ov.voice);\n\t\t\t\t\t\tfor (var kkk = ov.snip.length - 1; kkk >= 0; kkk--) {\n\t\t\t\t\t\t\tvar snip = ov.snip[kkk];\n\t\t\t\t\t\t\tstaff.voices[k].splice(snip.start, snip.len);\n\t\t\t\t\t\t\tstaff.voices[k].splice(snip.start + 1, 0, { el_type: \"stem\", direction: \"auto\" });\n\t\t\t\t\t\t\tvar indexOfLastBar = findLastBar(staff.voices[k], snip.start);\n\t\t\t\t\t\t\tstaff.voices[k].splice(indexOfLastBar, 0, { el_type: \"stem\", direction: \"up\" });\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// remove ending marks from the overlay voice so they are not repeated\n\t\t\t\t\t\tfor (kkk = 0; kkk < staff.voices[staff.voices.length - 1].length; kkk++) {\n\t\t\t\t\t\t\tstaff.voices[staff.voices.length - 1][kkk] = Object.assign({}, staff.voices[staff.voices.length - 1][kkk]);\n\t\t\t\t\t\t\tvar el = staff.voices[staff.voices.length - 1][kkk];\n\t\t\t\t\t\t\tif (el.el_type === 'bar' && el.startEnding) {\n\t\t\t\t\t\t\t\tdelete el.startEnding;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (el.el_type === 'bar' && el.endEnding)\n\t\t\t\t\t\t\t\tdelete el.endEnding;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn madeChanges;\n};\n\nfunction findLastBar(voice, start) {\n\tfor (var i = start - 1; i > 0 && voice[i].el_type !== \"bar\"; i--) {\n\n\t}\n\treturn i;\n}\n\nfunction fixTitles(lines) {\n\t// We might have name and subname defined. We now know what line everything is on, so we can determine which to use.\n\tvar firstMusicLine = true;\n\tfor (var i = 0; i < lines.length; i++) {\n\t\tvar line = lines[i];\n\t\tif (line.staff) {\n\t\t\tfor (var j = 0; j < line.staff.length; j++) {\n\t\t\t\tvar staff = line.staff[j];\n\t\t\t\tif (staff.title) {\n\t\t\t\t\tvar hasATitle = false;\n\t\t\t\t\tfor (var k = 0; k < staff.title.length; k++) {\n\t\t\t\t\t\tif (staff.title[k]) {\n\t\t\t\t\t\t\tstaff.title[k] = (firstMusicLine) ? staff.title[k].name : staff.title[k].subname;\n\t\t\t\t\t\t\tif (staff.title[k])\n\t\t\t\t\t\t\t\thasATitle = true;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tstaff.title[k] = '';\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tstaff.title[k] = '';\n\t\t\t\t\t}\n\t\t\t\t\tif (!hasATitle)\n\t\t\t\t\t\tdelete staff.title;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfirstMusicLine = false;\n\t\t}\n\t}\n}\n\nfunction cleanUpSlursInLine(line, staffNum, voiceNum, currSlur) {\n\tif (!currSlur[staffNum])\n\t\tcurrSlur[staffNum] = [];\n\tif (!currSlur[staffNum][voiceNum])\n\t\tcurrSlur[staffNum][voiceNum] = [];\n\tvar x;\n\t//\t\t\tvar lyr = null;\t// TODO-PER: debugging.\n\n\tvar addEndSlur = function (obj, num, chordPos) {\n\t\tif (currSlur[staffNum][voiceNum][chordPos] === undefined) {\n\t\t\t// There isn't an exact match for note position, but we'll take any other open slur.\n\t\t\tfor (x = 0; x < currSlur[staffNum][voiceNum].length; x++) {\n\t\t\t\tif (currSlur[staffNum][voiceNum][x] !== undefined) {\n\t\t\t\t\tchordPos = x;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (currSlur[staffNum][voiceNum][chordPos] === undefined) {\n\t\t\t\tvar offNum = chordPos * 100 + 1;\n\t\t\t\tobj.endSlur.forEach(function (x) { if (offNum === x) --offNum; });\n\t\t\t\tcurrSlur[staffNum][voiceNum][chordPos] = [offNum];\n\t\t\t}\n\t\t}\n\t\tvar slurNum;\n\t\tfor (var i = 0; i < num; i++) {\n\t\t\tslurNum = currSlur[staffNum][voiceNum][chordPos].pop();\n\t\t\tobj.endSlur.push(slurNum);\n\t\t\t//\t\t\t\t\tlyr.syllable += '<' + slurNum;\t// TODO-PER: debugging\n\t\t}\n\t\tif (currSlur[staffNum][voiceNum][chordPos].length === 0)\n\t\t\tdelete currSlur[staffNum][voiceNum][chordPos];\n\t\treturn slurNum;\n\t};\n\n\tvar addStartSlur = function (obj, num, chordPos, usedNums) {\n\t\tobj.startSlur = [];\n\t\tif (currSlur[staffNum][voiceNum][chordPos] === undefined) {\n\t\t\tcurrSlur[staffNum][voiceNum][chordPos] = [];\n\t\t}\n\t\tvar nextNum = chordPos * 100 + 1;\n\t\tfor (var i = 0; i < num; i++) {\n\t\t\tif (usedNums) {\n\t\t\t\tusedNums.forEach(function (x) { if (nextNum === x) ++nextNum; });\n\t\t\t\tusedNums.forEach(function (x) { if (nextNum === x) ++nextNum; });\n\t\t\t\tusedNums.forEach(function (x) { if (nextNum === x) ++nextNum; });\n\t\t\t}\n\t\t\tcurrSlur[staffNum][voiceNum][chordPos].forEach(function (x) { if (nextNum === x) ++nextNum; });\n\t\t\tcurrSlur[staffNum][voiceNum][chordPos].forEach(function (x) { if (nextNum === x) ++nextNum; });\n\n\t\t\tcurrSlur[staffNum][voiceNum][chordPos].push(nextNum);\n\t\t\tobj.startSlur.push({ label: nextNum });\n\t\t\tif (obj.dottedSlur) {\n\t\t\t\tobj.startSlur[obj.startSlur.length - 1].style = 'dotted';\n\t\t\t\tdelete obj.dottedSlur;\n\t\t\t}\n\t\t\t//\t\t\t\t\tlyr.syllable += ' ' + nextNum + '>';\t// TODO-PER:debugging\n\t\t\tnextNum++;\n\t\t}\n\t};\n\n\tfor (var i = 0; i < line.length; i++) {\n\t\tvar el = line[i];\n\t\t//\t\t\t\tif (el.lyric === undefined)\t// TODO-PER: debugging\n\t\t//\t\t\t\t\tel.lyric = [{ divider: '-' }];\t// TODO-PER: debugging\n\t\t//\t\t\t\tlyr = el.lyric[0];\t// TODO-PER: debugging\n\t\t//\t\t\t\tlyr.syllable = '';\t// TODO-PER: debugging\n\t\tif (el.el_type === 'note') {\n\t\t\tif (el.gracenotes) {\n\t\t\t\tfor (var g = 0; g < el.gracenotes.length; g++) {\n\t\t\t\t\tif (el.gracenotes[g].endSlur) {\n\t\t\t\t\t\tvar gg = el.gracenotes[g].endSlur;\n\t\t\t\t\t\tel.gracenotes[g].endSlur = [];\n\t\t\t\t\t\tfor (var ggg = 0; ggg < gg; ggg++)\n\t\t\t\t\t\t\taddEndSlur(el.gracenotes[g], 1, 20);\n\t\t\t\t\t}\n\t\t\t\t\tif (el.gracenotes[g].startSlur) {\n\t\t\t\t\t\tx = el.gracenotes[g].startSlur;\n\t\t\t\t\t\taddStartSlur(el.gracenotes[g], x, 20);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (el.endSlur) {\n\t\t\t\tx = el.endSlur;\n\t\t\t\tel.endSlur = [];\n\t\t\t\taddEndSlur(el, x, 0);\n\t\t\t}\n\t\t\tif (el.startSlur) {\n\t\t\t\tx = el.startSlur;\n\t\t\t\taddStartSlur(el, x, 0);\n\t\t\t}\n\t\t\tif (el.pitches) {\n\t\t\t\tvar usedNums = [];\n\t\t\t\tfor (var p = 0; p < el.pitches.length; p++) {\n\t\t\t\t\tif (el.pitches[p].endSlur) {\n\t\t\t\t\t\tvar k = el.pitches[p].endSlur;\n\t\t\t\t\t\tel.pitches[p].endSlur = [];\n\t\t\t\t\t\tfor (var j = 0; j < k; j++) {\n\t\t\t\t\t\t\tvar slurNum = addEndSlur(el.pitches[p], 1, p + 1);\n\t\t\t\t\t\t\tusedNums.push(slurNum);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (p = 0; p < el.pitches.length; p++) {\n\t\t\t\t\tif (el.pitches[p].startSlur) {\n\t\t\t\t\t\tx = el.pitches[p].startSlur;\n\t\t\t\t\t\taddStartSlur(el.pitches[p], x, p + 1, usedNums);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Correct for the weird gracenote case where ({g}a) should match.\n\t\t\t\t// The end slur was already assigned to the note, and needs to be moved to the first note of the graces.\n\t\t\t\tif (el.gracenotes && el.pitches[0].endSlur && el.pitches[0].endSlur[0] === 100 && el.pitches[0].startSlur) {\n\t\t\t\t\tif (el.gracenotes[0].endSlur)\n\t\t\t\t\t\tel.gracenotes[0].endSlur.push(el.pitches[0].startSlur[0].label);\n\t\t\t\t\telse\n\t\t\t\t\t\tel.gracenotes[0].endSlur = [el.pitches[0].startSlur[0].label];\n\t\t\t\t\tif (el.pitches[0].endSlur.length === 1)\n\t\t\t\t\t\tdelete el.pitches[0].endSlur;\n\t\t\t\t\telse if (el.pitches[0].endSlur[0] === 100)\n\t\t\t\t\t\tel.pitches[0].endSlur.shift();\n\t\t\t\t\telse if (el.pitches[0].endSlur[el.pitches[0].endSlur.length - 1] === 100)\n\t\t\t\t\t\tel.pitches[0].endSlur.pop();\n\t\t\t\t\tif (currSlur[staffNum][voiceNum][1].length === 1)\n\t\t\t\t\t\tdelete currSlur[staffNum][voiceNum][1];\n\t\t\t\t\telse\n\t\t\t\t\t\tcurrSlur[staffNum][voiceNum][1].pop();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction wrapMusicLines(lines, barsperstaff) {\n\tfor (var i = 0; i < lines.length; i++) {\n\t\tif (lines[i].staff !== undefined) {\n\t\t\tfor (var s = 0; s < lines[i].staff.length; s++) {\n\t\t\t\tvar permanentItems = [];\n\t\t\t\tfor (var v = 0; v < lines[i].staff[s].voices.length; v++) {\n\t\t\t\t\tvar voice = lines[i].staff[s].voices[v];\n\t\t\t\t\tvar barNumThisLine = 0;\n\t\t\t\t\tfor (var n = 0; n < voice.length; n++) {\n\t\t\t\t\t\tif (voice[n].el_type === 'bar') {\n\t\t\t\t\t\t\tbarNumThisLine++;\n\t\t\t\t\t\t\tif (barNumThisLine >= barsperstaff) {\n\t\t\t\t\t\t\t\t// push everything else to the next line, if there is anything else,\n\t\t\t\t\t\t\t\t// and there is a next line. If there isn't a next line, create one.\n\t\t\t\t\t\t\t\tif (n < voice.length - 1) {\n\t\t\t\t\t\t\t\t\tvar nextLine = getNextMusicLine(lines, i);\n\t\t\t\t\t\t\t\t\tif (!nextLine) {\n\t\t\t\t\t\t\t\t\t\tvar cp = JSON.parse(JSON.stringify(lines[i]));\n\t\t\t\t\t\t\t\t\t\tlines.push(Object.assign({}, cp));\n\t\t\t\t\t\t\t\t\t\tnextLine = lines[lines.length - 1];\n\t\t\t\t\t\t\t\t\t\tfor (var ss = 0; ss < nextLine.staff.length; ss++) {\n\t\t\t\t\t\t\t\t\t\t\tfor (var vv = 0; vv < nextLine.staff[ss].voices.length; vv++)\n\t\t\t\t\t\t\t\t\t\t\t\tnextLine.staff[ss].voices[vv] = [];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvar startElement = n + 1;\n\t\t\t\t\t\t\t\t\tvar section = lines[i].staff[s].voices[v].slice(startElement);\n\t\t\t\t\t\t\t\t\tlines[i].staff[s].voices[v] = lines[i].staff[s].voices[v].slice(0, startElement);\n\t\t\t\t\t\t\t\t\tnextLine.staff[s].voices[v] = permanentItems.concat(section.concat(nextLine.staff[s].voices[v]));\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (!voice[n].duration) {\n\t\t\t\t\t\t\tpermanentItems.push(voice[n]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction getPrevMusicLine(lines, currentLine) {\n\tif (lines.length <= currentLine)\n\t\treturn null\n\t// If the current line doesn't have music, search backwards until one is found.\n\twhile (currentLine >= 0) {\n\t\tif (lines[currentLine].staff)\n\t\t\treturn lines[currentLine];\n\t\tcurrentLine--;\n\t}\n\treturn null;\n}\n\nfunction getNextMusicLine(lines, currentLine) {\n\tcurrentLine++;\n\twhile (lines.length > currentLine) {\n\t\tif (lines[currentLine].staff)\n\t\t\treturn lines[currentLine];\n\t\tcurrentLine++;\n\t}\n\treturn null;\n}\n\nfunction getLastNote(tune) {\n\tif (!tune.lines[tune.lineNum]) return null\n\tif (!tune.lines[tune.lineNum].staff) return null\n\tif (!tune.lines[tune.lineNum].staff[tune.staffNum]) return null\n\tvar voice = tune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum]\n\tif (!voice) return null\n\tfor (var i = voice.length - 1; i >= 0; i--) {\n\t\tvar el = voice[i];\n\t\tif (el.el_type === 'note') {\n\t\t\treturn el;\n\t\t}\n\t}\n\treturn null;\n};\n\nfunction getDuration(el) {\n\tif (el.duration) return el.duration;\n\treturn 0;\n};\n\nfunction closeLine(tune) {\n\tif (tune.potentialStartBeam && tune.potentialEndBeam) {\n\t\ttune.potentialStartBeam.startBeam = true;\n\t\ttune.potentialEndBeam.endBeam = true;\n\t}\n\tdelete tune.potentialStartBeam;\n\tdelete tune.potentialEndBeam;\n};\n\nfunction containsNotes(voice) {\n\tfor (var i = 0; i < voice.length; i++) {\n\t\tif (voice[i].el_type === 'note' || voice[i].el_type === 'bar')\n\t\t\treturn true;\n\t}\n\treturn false;\n};\n\nfunction containsNotesStrict(voice) {\n\tfor (var i = 0; i < voice.length; i++) {\n\t\tif (voice[i].el_type === 'note' && (voice[i].rest === undefined || voice[i].chord !== undefined))\n\t\t\treturn true;\n\t}\n\treturn false;\n};\n\nfunction pushLine(tune, hash) {\n\tif (tune.vskipPending) {\n\t\thash.vskip = tune.vskipPending;\n\t\tdelete tune.vskipPending;\n\t}\n\ttune.lines.push(hash);\n};\n\nfunction pushNote(self, tune, hp, voiceDefs, currentVoiceName) {\n\t//console.log(\"pushNote\", tune.lineNum, tune.staffNum, hp.pitches ? JSON.stringify(hp.pitches) : hp.pitches)\n\tvar currStaff = tune.lines[tune.lineNum].staff[tune.staffNum];\n\n\tif (hp.pitches !== undefined) {\n\t\tvar mid = currStaff.workingClef.verticalPos;\n\t\thp.pitches.forEach(function (p) { p.verticalPos = p.pitch - mid; });\n\t}\n\tif (hp.gracenotes !== undefined) {\n\t\tvar mid2 = currStaff.workingClef.verticalPos;\n\t\thp.gracenotes.forEach(function (p) { p.verticalPos = p.pitch - mid2; });\n\t}\n\tif (currStaff.voices.length <= tune.voiceNum) {\n\t\t//console.log(\"should create?\", currentVoiceName, voiceDefs)\n\t\tif (!voiceDefs[currentVoiceName])\n\t\t\tvoiceDefs[currentVoiceName] = {}\n\t\tcreateVoice(self, tune, voiceDefs[currentVoiceName])\n\t}\n\tcurrStaff.voices[tune.voiceNum].push(hp);\n}\n\nfunction endBeamHere(hashParams, tune) {\n\ttune.potentialStartBeam.startBeam = true;\n\thashParams.endBeam = true;\n\tdelete tune.potentialStartBeam;\n\tdelete tune.potentialEndBeam;\n}\nfunction endBeamLast(tune) {\n\tif (tune.potentialStartBeam !== undefined && tune.potentialEndBeam !== undefined) {\t// Do we have a set of notes to beam?\n\t\ttune.potentialStartBeam.startBeam = true;\n\t\ttune.potentialEndBeam.endBeam = true;\n\t}\n\tdelete tune.potentialStartBeam;\n\tdelete tune.potentialEndBeam;\n}\n\nfunction setLineFont(tune, type, font) {\n\t// If we haven't encountered the font type yet then we are using the default font so it doesn't\n\t// need to be noted. If we have encountered it, then only record it if it is different from the last time.\n\tif (tune.runningFonts[type]) {\n\t\tvar isDifferent = false;\n\t\tvar keys = Object.keys(font);\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tif (tune.runningFonts[type][keys[i]] !== font[keys[i]])\n\t\t\t\tisDifferent = true;\n\t\t}\n\t\tif (isDifferent) {\n\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum][type] = font;\n\t\t}\n\t}\n\ttune.runningFonts[type] = font;\n}\n\nfunction createVoice(self, tune, params) {\n\t//console.log(\"createVoice\", params)\n\tvar thisStaff = tune.lines[tune.lineNum].staff[tune.staffNum];\n\tthisStaff.voices[tune.voiceNum] = [];\n\tif (!thisStaff.title)\n\t\tthisStaff.title = [];\n\tthisStaff.title[tune.voiceNum] = { name: params.name, subname: params.subname };\n\tif (params.style)\n\t\tself.appendElement('style', null, null, { head: params.style });\n\tif (params.stem)\n\t\tself.appendElement('stem', null, null, { direction: params.stem });\n\telse if (tune.voiceNum > 0) {\n\t\tif (thisStaff.voices[0] !== undefined) {\n\t\t\tvar found = false;\n\t\t\tfor (var i = 0; i < thisStaff.voices[0].length; i++) {\n\t\t\t\tif (thisStaff.voices[0].el_type === 'stem')\n\t\t\t\t\tfound = true;\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\tvar stem = { el_type: 'stem', direction: 'up' };\n\t\t\t\tthisStaff.voices[0].splice(0, 0, stem);\n\t\t\t}\n\t\t}\n\t\tself.appendElement('stem', null, null, { direction: 'down' });\n\t}\n\tif (params.scale)\n\t\tself.appendElement('scale', null, null, { size: params.scale });\n\tif (params.color)\n\t\tself.appendElement('color', null, null, { color: params.color });\n}\n\nfunction createStaff(self, tune, params) {\n\tif (params.key && params.key.impliedNaturals) {\n\t\tparams.key.accidentals = params.key.accidentals.concat(params.key.impliedNaturals);\n\t\tdelete params.key.impliedNaturals;\n\t}\n\n\ttune.lines[tune.lineNum].staff[tune.staffNum] = { voices: [], clef: params.clef, key: params.key, workingClef: params.clef };\n\tvar staff = tune.lines[tune.lineNum].staff[tune.staffNum]\n\tif (params.stafflines !== undefined) {\n\t\tstaff.clef.stafflines = params.stafflines;\n\t\tstaff.workingClef.stafflines = params.stafflines;\n\t}\n\tif (params.staffscale) {\n\t\tstaff.staffscale = params.staffscale;\n\t}\n\tif (params.annotationfont) setLineFont(tune, \"annotationfont\", params.annotationfont);\n\tif (params.gchordfont) setLineFont(tune, \"gchordfont\", params.gchordfont);\n\tif (params.tripletfont) setLineFont(tune, \"tripletfont\", params.tripletfont);\n\tif (params.vocalfont) setLineFont(tune, \"vocalfont\", params.vocalfont);\n\tif (params.bracket) staff.bracket = params.bracket;\n\tif (params.brace) staff.brace = params.brace;\n\tif (params.connectBarLines) staff.connectBarLines = params.connectBarLines;\n\tif (params.barNumber) staff.barNumber = params.barNumber;\n\tcreateVoice(self, tune, params);\n\t// Some stuff just happens for the first voice\n\tif (params.part)\n\t\tself.appendElement('part', params.part.startChar, params.part.endChar, { title: params.part.title });\n\tif (params.meter !== undefined) staff.meter = params.meter;\n\tif (tune.vskipPending) {\n\t\ttune.lines[tune.lineNum].vskip = tune.vskipPending;\n\t\tdelete tune.vskipPending;\n\t}\n}\n\nfunction createLine(self, tune, params) {\n\ttune.lines[tune.lineNum] = { staff: [] };\n\tcreateStaff(self, tune, params);\n}\n\nmodule.exports = TuneBuilder;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/parse/tune-builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/parse/wrap_lines.js":
/*!****************************************************!*\
  !*** ./node_modules/abcjs/src/parse/wrap_lines.js ***!
  \****************************************************/
/***/ ((module) => {

eval("//    wrap_lines.js: does line wrap on an already parsed tune.\n\nfunction wrapLines(tune, lineBreaks, barNumbers) {\n\tif (!lineBreaks || tune.lines.length === 0)\n\t\treturn;\n\n\t// tune.lines contains nested arrays: there is an array of lines (that's the part this function rewrites),\n\t// there is an array of staffs per line (for instance, piano will have 2, orchestra will have many)\n\t// there is an array of voices per staff (for instance, 4-part harmony might have bass and tenor on a single staff)\n\tvar lines = tune.deline({lineBreaks: false});\n\tvar linesBreakElements = findLineBreaks(lines, lineBreaks);\n\t//console.log(JSON.stringify(linesBreakElements))\n\ttune.lines = addLineBreaks(lines, linesBreakElements, barNumbers);\n\ttune.lineBreaks = linesBreakElements;\n}\n\nfunction addLineBreaks(lines, linesBreakElements, barNumbers) {\n\t// linesBreakElements is an array of all of the elements that break for a new line\n\t// The objects in the array look like:\n\t// {\"ogLine\":0,\"line\":0,\"staff\":0,\"voice\":0,\"start\":0, \"end\":21}\n\t// ogLine is the original line that it came from,\n\t// line is the target line.\n\t// then copy all the elements from start to end for the staff and voice specified.\n\t// If the item doesn't contain \"staff\" then it is a non music line and should just be copied.\n\tvar outputLines = [];\n\tvar lastKeySig = []; // This is per staff - if the key changed then this will be populated.\n\tvar lastStem = [];\n\tvar currentBarNumber = 1;\n\tfor (var i = 0; i < linesBreakElements.length; i++) {\n\t\tvar action = linesBreakElements[i];\n\t\tif (lines[action.ogLine].staff) {\n\t\t\tvar inputStaff = lines[action.ogLine].staff[action.staff];\n\t\t\tif (!outputLines[action.line]) {\n\t\t\t\toutputLines[action.line] = {staff: []}\n\t\t\t}\n\t\t\tif (!outputLines[action.line].staff[action.staff]) {\n\t\t\t\toutputLines[action.line].staff[action.staff] = {voices: []};\n\t\t\t\tif (barNumbers !== undefined && action.staff === 0 && action.line > 0) {\n\t\t\t\t\toutputLines[action.line].staff[action.staff].barNumber = currentBarNumber;\n\t\t\t\t}\n\t\t\t\tvar keys = Object.keys(inputStaff)\n\t\t\t\tfor (var k = 0; k < keys.length; k++) {\n\t\t\t\t\tvar skip = keys[k] === \"voices\";\n\t\t\t\t\tif (keys[k] === \"meter\" && action.line !== 0)\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\tif (!skip)\n\t\t\t\t\t\toutputLines[action.line].staff[action.staff][keys[k]] = inputStaff[keys[k]];\n\t\t\t\t}\n\t\t\t\tif (lastKeySig[action.staff])\n\t\t\t\t\toutputLines[action.line].staff[action.staff].key = lastKeySig[action.staff];\n\n\t\t\t}\n\t\t\tif (!outputLines[action.line].staff[action.staff].voices[action.voice]) {\n\t\t\t\toutputLines[action.line].staff[action.staff].voices[action.voice] = [];\n\t\t\t}\n\t\t\toutputLines[action.line].staff[action.staff].voices[action.voice] =\n\t\t\t\tlines[action.ogLine].staff[action.staff].voices[action.voice].slice(action.start, action.end+1);\n\t\t\tif (lastStem[action.staff*10+action.voice])\n\t\t\t\toutputLines[action.line].staff[action.staff].voices[action.voice].unshift({el_type: \"stem\", direction: lastStem[action.staff*10+action.voice].direction})\n\t\t\tvar currVoice = outputLines[action.line].staff[action.staff].voices[action.voice];\n\t\t\tfor (var kk = currVoice.length-1; kk >= 0; kk--) {\n\t\t\t\tif (currVoice[kk].el_type === \"key\") {\n\t\t\t\t\tlastKeySig[action.staff] = {\n\t\t\t\t\t\troot: currVoice[kk].root,\n\t\t\t\t\t\tacc: currVoice[kk].acc,\n\t\t\t\t\t\tmode: currVoice[kk].mode,\n\t\t\t\t\t\taccidentals: currVoice[kk].accidentals.filter(function (acc) { return acc.acc !== 'natural' })\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (kk = currVoice.length-1; kk >= 0; kk--) {\n\t\t\t\tif (currVoice[kk].el_type === \"stem\") {\n\t\t\t\t\tlastStem[action.staff*10+action.voice] = {\n\t\t\t\t\t\tdirection: currVoice[kk].direction,\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (barNumbers !== undefined && action.staff === 0 && action.voice === 0) {\n\t\t\t\tfor (kk = 0; kk < currVoice.length; kk++) {\n\t\t\t\t\tif (currVoice[kk].el_type === 'bar') {\n\t\t\t\t\t\tcurrentBarNumber++\n\t\t\t\t\t\tif (kk === currVoice.length-1)\n\t\t\t\t\t\t\tdelete currVoice[kk].barNumber\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcurrVoice[kk].barNumber = currentBarNumber\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\toutputLines[action.line] = lines[action.ogLine];\n\t\t}\n\t}\n\t// There could be some missing info - if the tune passed in was incomplete or had different lengths for different voices or was missing a voice altogether - just fill in the gaps.\n\tfor (var ii = 0; ii < outputLines.length; ii++) {\n\t\tif (outputLines[ii].staff) {\n\t\t\toutputLines[ii].staff = outputLines[ii].staff.filter(function (el) {\n\t\t\t\treturn el != null;\n\t\t\t});\n\t\t}\n\t}\n\treturn outputLines;\n}\n\n\nfunction findLineBreaks(lines, lineBreakArray) {\n\t// lineBreakArray is an array of all of the sections of the tune - often there will just be one\n\t// section unless there is a subtitle or other non-music lines. Each of the elements of\n\t// Each element of lineBreakArray is an array of the zero-based last measure of the line.\n\tvar lineBreakIndexes = [];\n\tvar lbai = 0;\n\tvar lineCounter = 0;\n\tvar outputLine = 0;\n\tfor (var i = 0; i < lines.length; i++) {\n\t\tvar line = lines[i];\n\t\tif (line.staff) {\n\t\t\tvar lineStart = lineCounter;\n\t\t\tvar lineBreaks = lineBreakArray[lbai];\n\t\t\tlbai++;\n\t\t\tfor (var j = 0; j < line.staff.length; j++) {\n\t\t\t\tvar staff = line.staff[j];\n\t\t\t\tfor (var k = 0; k < staff.voices.length; k++) {\n\t\t\t\t\toutputLine = lineStart;\n\t\t\t\t\tvar measureNumber = 0;\n\t\t\t\t\tvar lbi = 0;\n\t\t\t\t\tvar voice = staff.voices[k];\n\t\t\t\t\tvar start = 0;\n\t\t\t\t\tfor (var e = 0; e < voice.length; e++) {\n\t\t\t\t\t\tvar el = voice[e];\n\n\t\t\t\t\t\tif (el.el_type === 'bar') {\n\t\t\t\t\t\t\tif (lineBreaks[lbi] === measureNumber) {\n\t\t\t\t\t\t\t\tlineBreakIndexes.push({ ogLine: i, line: outputLine, staff: j, voice: k, start: start, end: e})\n\t\t\t\t\t\t\t\tstart = e + 1;\n\t\t\t\t\t\t\t\toutputLine++;\n\t\t\t\t\t\t\t\tlineCounter = Math.max(lineCounter, outputLine)\n\t\t\t\t\t\t\t\tlbi++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmeasureNumber++;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlineBreakIndexes.push({ ogLine: i, line: outputLine, staff: j, voice: k, start: start, end: voice.length})\n\t\t\t\t\toutputLine++;\n\t\t\t\t\tlineCounter = Math.max(lineCounter, outputLine)\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tlineBreakIndexes.push({ ogLine: i, line: outputLine })\n\t\t\toutputLine++;\n\t\t\tlineCounter = Math.max(lineCounter, outputLine)\n\t\t}\n\t}\n\treturn lineBreakIndexes;\n}\n\n\nfunction freeFormLineBreaks(widths, lineBreakPoint) {\n\tvar lineBreaks = [];\n\tvar totals = [];\n\tvar totalThisLine = 0;\n\t// run through each measure and see if the accumulation is less than the ideal.\n\t// if it passes the ideal, then see whether the last or this one is closer to the ideal.\n\tfor (var i = 0; i < widths.length; i++) {\n\t\tvar width = widths[i];\n\t\tvar attemptedWidth = totalThisLine + width;\n\t\tif (attemptedWidth < lineBreakPoint)\n\t\t\ttotalThisLine = attemptedWidth;\n\t\telse {\n\t\t\t// This just passed the ideal, so see whether the previous or the current number of measures is closer.\n\t\t\tvar oldDistance = lineBreakPoint - totalThisLine;\n\t\t\tvar newDistance = attemptedWidth - lineBreakPoint;\n\t\t\tif (oldDistance < newDistance && totalThisLine > 0) {\n\t\t\t\tlineBreaks.push(i - 1);\n\t\t\t\ttotals.push(Math.round(totalThisLine - width));\n\t\t\t\ttotalThisLine = width;\n\t\t\t} else {\n\t\t\t\tif (i < widths.length-1) {\n\t\t\t\t\tlineBreaks.push(i);\n\t\t\t\t\ttotals.push(Math.round(totalThisLine));\n\t\t\t\t\ttotalThisLine = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\ttotals.push(Math.round(totalThisLine));\n\treturn { lineBreaks: lineBreaks, totals: totals };\n}\n\nfunction clone(arr) {\n\tvar newArr = [];\n\tfor (var i = 0; i < arr.length; i++)\n\t\tnewArr.push(arr[i]);\n\treturn newArr;\n}\n\nfunction oneTry(measureWidths, idealWidths, accumulator, lineAccumulator, lineWidths, lastVariance, highestVariance, currLine, lineBreaks, startIndex, otherTries) {\n\tfor (var i = startIndex; i < measureWidths.length; i++) {\n\t\tvar measureWidth = measureWidths[i];\n\t\taccumulator += measureWidth;\n\t\tlineAccumulator += measureWidth;\n\t\tvar thisVariance = Math.abs(accumulator - idealWidths[currLine]);\n\t\tvar varianceIsClose = Math.abs(thisVariance - lastVariance) < idealWidths[0] / 10; // see if the difference is less than 10%, if so, run the test both ways.\n\t\tif (varianceIsClose) {\n\t\t\tif (thisVariance < lastVariance) {\n\t\t\t\t// Also attempt one less measure on the current line - sometimes that works out better.\n\t\t\t\tvar newWidths = clone(lineWidths);\n\t\t\t\tvar newBreaks = clone(lineBreaks);\n\t\t\t\tnewBreaks.push(i-1);\n\t\t\t\tnewWidths.push(lineAccumulator - measureWidth);\n\t\t\t\totherTries.push({\n\t\t\t\t\taccumulator: accumulator,\n\t\t\t\t\tlineAccumulator: measureWidth,\n\t\t\t\t\tlineWidths: newWidths,\n\t\t\t\t\tlastVariance: Math.abs(accumulator - idealWidths[currLine+1]),\n\t\t\t\t\thighestVariance: Math.max(highestVariance, lastVariance),\n\t\t\t\t\tcurrLine: currLine+1,\n\t\t\t\t\tlineBreaks: newBreaks,\n\t\t\t\t\tstartIndex: i+1});\n\t\t\t} else if (thisVariance > lastVariance && i < measureWidths.length-1) {\n\t\t\t\t// Also attempt one extra measure on this line.\n\t\t\t\tnewWidths = clone(lineWidths);\n\t\t\t\tnewBreaks = clone(lineBreaks);\n\t\t\t\t// newBreaks[newBreaks.length-1] = i;\n\t\t\t\t// newWidths[newWidths.length-1] = lineAccumulator;\n\t\t\t\totherTries.push({\n\t\t\t\t\taccumulator: accumulator,\n\t\t\t\t\tlineAccumulator: lineAccumulator,\n\t\t\t\t\tlineWidths: newWidths,\n\t\t\t\t\tlastVariance: thisVariance,\n\t\t\t\t\thighestVariance: Math.max(highestVariance, thisVariance),\n\t\t\t\t\tcurrLine: currLine,\n\t\t\t\t\tlineBreaks: newBreaks,\n\t\t\t\t\tstartIndex: i+1});\n\t\t\t}\n\t\t}\n\t\tif (thisVariance > lastVariance) {\n\t\t\tlineBreaks.push(i - 1);\n\t\t\tcurrLine++;\n\t\t\thighestVariance = Math.max(highestVariance, lastVariance);\n\t\t\tlastVariance = Math.abs(accumulator - idealWidths[currLine]);\n\t\t\tlineWidths.push(lineAccumulator - measureWidth);\n\t\t\tlineAccumulator = measureWidth;\n\t\t} else {\n\t\t\tlastVariance = thisVariance;\n\t\t}\n\t}\n\tlineWidths.push(lineAccumulator);\n}\n\nfunction optimizeLineWidths(widths, lineBreakPoint, lineBreaks, explanation) {\n\t//\tfigure out how many lines\n\tvar numLines = Math.ceil(widths.total / lineBreakPoint); // + 1 TODO-PER: this used to be plus one - not sure why\n\n\t//\tget the ideal width for a line (cumulative width / num lines) - approx the same as lineBreakPoint except for rounding\n\tvar idealWidth = Math.floor(widths.total / numLines);\n\n\t//\tget each ideal line width (1*ideal, 2*ideal, 3*ideal, etc)\n\tvar idealWidths = [];\n\tfor (var i = 0; i < numLines; i++)\n\t\tidealWidths.push(idealWidth*(i+1));\n\n\t//\tfrom first measure, step through accum. Widths until the abs of the ideal is greater than the last one.\n\t// This can sometimes look funny in edge cases, so when the length is within 10%, try one more or one less to see which is better.\n\t// This is better than trying all the possibilities because that would get to be a huge number for even a medium size piece.\n\t// This method seems to never generate more than about 16 tries and it is usually 4 or less.\n\tvar otherTries = [];\n\totherTries.push({\n\t\taccumulator: 0,\n\t\tlineAccumulator: 0,\n\t\tlineWidths: [],\n\t\tlastVariance: 999999,\n\t\thighestVariance: 0,\n\t\tcurrLine: 0,\n\t\tlineBreaks: [], // These are the zero-based last measure on each line\n\t\tstartIndex: 0});\n\tvar index = 0;\n\twhile (index < otherTries.length) {\n\t\toneTry(widths.measureWidths,\n\t\t\tidealWidths,\n\t\t\totherTries[index].accumulator,\n\t\t\totherTries[index].lineAccumulator,\n\t\t\totherTries[index].lineWidths,\n\t\t\totherTries[index].lastVariance,\n\t\t\totherTries[index].highestVariance,\n\t\t\totherTries[index].currLine,\n\t\t\totherTries[index].lineBreaks,\n\t\t\totherTries[index].startIndex,\n\t\t\totherTries);\n\t\tindex++;\n\t}\n\tfor (i = 0; i < otherTries.length; i++) {\n\t\tvar otherTry = otherTries[i];\n\t\totherTry.variances = [];\n\t\totherTry.aveVariance = 0;\n\t\tfor (var j = 0; j < otherTry.lineWidths.length; j++) {\n\t\t\tvar lineWidth = otherTry.lineWidths[j];\n\t\t\totherTry.variances.push(lineWidth - idealWidths[0]);\n\t\t\totherTry.aveVariance += Math.abs(lineWidth - idealWidths[0]);\n\t\t}\n\t\totherTry.aveVariance =  otherTry.aveVariance / otherTry.lineWidths.length;\n\t\texplanation.attempts.push({ type: \"optimizeLineWidths\", lineBreaks: otherTry.lineBreaks, variances: otherTry.variances, aveVariance: otherTry.aveVariance, widths: widths.measureWidths });\n\t}\n\tvar smallest = 9999999;\n\tvar smallestIndex = -1;\n\tfor (i = 0; i < otherTries.length; i++) {\n\t\totherTry = otherTries[i];\n\t\tif (otherTry.aveVariance < smallest) {\n\t\t\tsmallest = otherTry.aveVariance;\n\t\t\tsmallestIndex = i;\n\t\t}\n\t}\n\treturn { failed: false, lineBreaks: otherTries[smallestIndex].lineBreaks, variance: otherTries[smallestIndex].highestVariance };\n}\n\nfunction fixedMeasureLineBreaks(widths, lineBreakPoint, preferredMeasuresPerLine) {\n\tvar lineBreaks = [];\n\tvar totals = [];\n\tvar thisWidth = 0;\n\tvar failed = false;\n\tfor (var i = 0; i < widths.length; i++) {\n\t\tthisWidth += widths[i];\n\t\tif (thisWidth > lineBreakPoint) {\n\t\t\tfailed = true;\n\t\t}\n\t\tif (i % preferredMeasuresPerLine === (preferredMeasuresPerLine-1)) {\n\t\t\tif (i !== widths.length-1) // Don't bother putting a line break for the last line - it's already a break.\n\t\t\t\tlineBreaks.push(i);\n\t\t\ttotals.push(Math.round(thisWidth));\n\t\t\tthisWidth = 0;\n\t\t}\n\t}\n\treturn { failed: failed, totals: totals, lineBreaks: lineBreaks };\n}\n\nfunction getRevisedTuneParams(lineBreaks, staffWidth, params) {\n\n\tvar revisedParams = {\n\t\tlineBreaks: lineBreaks,\n\t\tstaffwidth: staffWidth\n\t};\n\tfor (var key in params) {\n\t\tif (params.hasOwnProperty(key) && key !== 'wrap' && key !== 'staffwidth') {\n\t\t\trevisedParams[key] = params[key];\n\t\t}\n\t}\n\n\treturn { revisedParams: revisedParams };\n}\n\nfunction calcLineWraps(tune, widths, params) {\n\t// For calculating how much can go on the line, it depends on the width of the line. It is a convenience to just divide it here\n\t// by the minimum spacing instead of multiplying the min spacing later.\n\t// The scaling works differently: this is done by changing the scaling of the outer SVG, so the scaling needs to be compensated\n\t// for here, because the actual width will be different from the calculated numbers.\n\n\t// If the desired width is less than the margin, just punt and return the original tune\n\t//console.log(widths)\n\tif (widths.length === 0 || params.staffwidth < widths[0].left) {\n\t\treturn {\n\t\t\treParse: false,\n\t\t\texplanation: \"Staff width is narrower than the margin\",\n\t\t\trevisedParams: params\n\t\t};\n\t}\n\tvar scale = params.scale ? Math.max(params.scale, 0.1) : 1;\n\tvar minSpacing = params.wrap.minSpacing ? Math.max(parseFloat(params.wrap.minSpacing), 1) : 1;\n\tvar minSpacingLimit = params.wrap.minSpacingLimit ? Math.max(parseFloat(params.wrap.minSpacingLimit), 1) : minSpacing - 0.1;\n\tvar maxSpacing = params.wrap.maxSpacing ? Math.max(parseFloat(params.wrap.maxSpacing), 1) : undefined;\n\tif (params.wrap.lastLineLimit && !maxSpacing)\n\t\tmaxSpacing = Math.max(parseFloat(params.wrap.lastLineLimit), 1);\n\t// var targetHeight = params.wrap.targetHeight ? Math.max(parseInt(params.wrap.targetHeight, 10), 100) : undefined;\n\tvar preferredMeasuresPerLine = params.wrap.preferredMeasuresPerLine ? Math.max(parseInt(params.wrap.preferredMeasuresPerLine, 10), 0) : undefined;\n\n\tvar accumulatedLineBreaks = [];\n\tvar explanations = [];\n\tfor (var s = 0; s < widths.length; s++) {\n\t\tvar section = widths[s];\n\t\tvar usableWidth = params.staffwidth - section.left;\n\t\tvar lineBreakPoint = usableWidth / minSpacing / scale;\n\t\tvar minLineSize = usableWidth / maxSpacing / scale;\n\t\tvar allowableVariance = usableWidth / minSpacingLimit / scale;\n\t\tvar explanation = {\n\t\t\twidths: section,\n\t\t\tlineBreakPoint: lineBreakPoint,\n\t\t\tminLineSize: minLineSize,\n\t\t\tattempts: [],\n\t\t\tstaffWidth: params.staffwidth,\n\t\t\tminWidth: Math.round(allowableVariance)\n\t\t};\n\n\t\t// If there is a preferred number of measures per line, test that first. If none of the lines is too long, then we're finished.\n\t\tvar lineBreaks = null;\n\t\tif (preferredMeasuresPerLine) {\n\t\t\tvar f = fixedMeasureLineBreaks(section.measureWidths, lineBreakPoint, preferredMeasuresPerLine);\n\t\t\texplanation.attempts.push({\n\t\t\t\ttype: \"Fixed Measures Per Line\",\n\t\t\t\tpreferredMeasuresPerLine: preferredMeasuresPerLine,\n\t\t\t\tlineBreaks: f.lineBreaks,\n\t\t\t\tfailed: f.failed,\n\t\t\t\ttotals: f.totals\n\t\t\t});\n\t\t\tif (!f.failed)\n\t\t\t\tlineBreaks = f.lineBreaks;\n\t\t}\n\n\t\t// If we don't have lineBreaks yet, use the free form method of line breaks.\n\t\t// This will be called either if Preferred Measures is not used, or if the music is just weird - like a single measure is way too crowded.\n\t\tif (!lineBreaks) {\n\t\t\tvar ff = freeFormLineBreaks(section.measureWidths, lineBreakPoint);\n\t\t\texplanation.attempts.push({type: \"Free Form\", lineBreaks: ff.lineBreaks, totals: ff.totals});\n\t\t\tlineBreaks = ff.lineBreaks;\n\n\t\t\t// We now have an acceptable number of lines, but the measures may not be optimally distributed. See if there is a better distribution.\n\t\t\tif (lineBreaks.length > 0 && section.measureWidths.length < 25) {\n\t\t\t\t// Only do this if everything doesn't fit on one line.\n\t\t\t\t// This is an intensive operation and it is optional so just do it for shorter music.\n\t\t\t\tff = optimizeLineWidths(section, lineBreakPoint, lineBreaks, explanation);\n\t\t\t\texplanation.attempts.push({\n\t\t\t\t\ttype: \"Optimize\",\n\t\t\t\t\tfailed: ff.failed,\n\t\t\t\t\treason: ff.reason,\n\t\t\t\t\tlineBreaks: ff.lineBreaks,\n\t\t\t\t\ttotals: ff.totals\n\t\t\t\t});\n\t\t\t\tif (!ff.failed)\n\t\t\t\t\tlineBreaks = ff.lineBreaks;\n\t\t\t}\n\t\t}\n\t\taccumulatedLineBreaks.push(lineBreaks);\n\t\texplanations.push(explanation);\n\t}\n\t// If the vertical space exceeds targetHeight, remove a line and try again. If that is too crowded, then don't use it.\n\tvar staffWidth = params.staffwidth;\n\tvar ret = getRevisedTuneParams(accumulatedLineBreaks, staffWidth, params);\n\tret.explanation = explanations;\n\tret.reParse = true;\n\treturn ret;\n}\n\nmodule.exports = { wrapLines: wrapLines, calcLineWraps: calcLineWraps };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/parse/wrap_lines.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/str/output.js":
/*!**********************************************!*\
  !*** ./node_modules/abcjs/src/str/output.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var keyAccidentals = __webpack_require__(/*! ../const/key-accidentals */ \"(ssr)/./node_modules/abcjs/src/const/key-accidentals.js\");\nvar { relativeMajor, transposeKey, relativeMode } = __webpack_require__(/*! ../const/relative-major */ \"(ssr)/./node_modules/abcjs/src/const/relative-major.js\");\nvar transposeChordName = __webpack_require__(/*! ../parse/transpose-chord */ \"(ssr)/./node_modules/abcjs/src/parse/transpose-chord.js\")\n\nvar strTranspose;\n\n(function () {\n\t\"use strict\";\n\tstrTranspose = function (abc, abcTune, steps) {\n\t\tif (abcTune === \"TEST\") // Backdoor way to get entry points for unit tests\n\t\t\treturn { keyAccidentals: keyAccidentals, relativeMajor: relativeMajor, transposeKey: transposeKey, relativeMode: relativeMode, transposeChordName: transposeChordName}\n\t\tsteps = parseInt(steps, 10)\n\t\tvar changes = [];\n\t\tvar i;\n\t\tfor (i = 0; i < abcTune.length; i++)\n\t\t\tchanges = changes.concat(transposeOneTune(abc, abcTune[i], steps))\n\n\t\t// Reverse sort so that we are replacing strings from the end to the beginning so that the indexes aren't invalidated as we go.\n\t\t// (Because voices can be written in different ways we can't count on the notes being encountered in the order they appear in the string.)\n\t\tchanges = changes.sort(function (a, b) {\n\t\t\treturn b.start - a.start\n\t\t})\n\t\tvar output = abc.split('')\n\t\tfor (i = 0; i < changes.length; i++) {\n\t\t\tvar ch = changes[i]\n\t\t\toutput.splice(ch.start, ch.end - ch.start, ch.note)\n\t\t}\n\t\treturn output.join('')\n\t}\n\n\tfunction transposeOneTune(abc, abcTune, steps) {\n\t\tvar changes = []\n\n\t\t// Don't transpose bagpipe music - that is a special case and is always a particular key\n\t\tvar key = abcTune.getKeySignature()\n\t\tif (key.root === 'Hp' || key.root === \"HP\")\n\t\t\treturn changes;\n\n\t\tchanges = changes.concat(changeAllKeySigs(abc, steps))\n\n\t\tfor (var i = 0; i < abcTune.lines.length; i++) {\n\t\t\tvar staves = abcTune.lines[i].staff\n\t\t\tif (staves) {\n\t\t\t\tfor (var j = 0; j < staves.length; j++) {\n\t\t\t\t\tvar staff = staves[j]\n\t\t\t\t\tif (staff.clef.type !== \"perc\")\n\t\t\t\t\t\tchanges = changes.concat(transposeVoices(abc, staff.voices, staff.key, steps))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn changes\n\t}\n\n\tfunction changeAllKeySigs(abc, steps) {\n\t\tvar changes = [];\n\t\tvar arr = abc.split(\"K:\")\n\t\t// now each line except the first one will start with whatever is right after \"K:\"\n\t\tvar count = arr[0].length\n\t\tfor (var i = 1; i < arr.length; i++) {\n\t\t\tvar segment = arr[i]\n\t\t\tvar match = segment.match(/^( *)([A-G])([#b]?)( ?)(\\w*)/)\n\t\t\tif (match) {\n\t\t\t\tvar start = count + 2 + match[1].length // move past the 'K:' and optional white space\n\t\t\t\tvar key = match[2] + match[3] + match[4] + match[5] // key name, accidental, optional space, and mode\n\t\t\t\tvar destinationKey = newKey({ root: match[2], acc: match[3], mode: match[5] }, steps)\n\t\t\t\tvar dest = destinationKey.root + destinationKey.acc + match[4] + destinationKey.mode\n\t\t\t\tchanges.push({ start: start, end: start + key.length, note: dest })\n\t\t\t}\n\t\t\tcount += segment.length + 2\n\t\t}\n\t\treturn changes\n\t}\n\n\tfunction transposeVoices(abc, voices, key, steps) {\n\t\tvar changes = [];\n\t\tvar destinationKey = newKey(key, steps)\n\t\tfor (var i = 0; i < voices.length; i++) {\n\t\t\tchanges = changes.concat(transposeVoice(abc, voices[i], key.root, createKeyAccidentals(key), destinationKey, steps))\n\t\t}\n\t\treturn changes\n\t}\n\n\tfunction createKeyAccidentals(key) {\n\t\tvar ret = {}\n\t\tfor (var i = 0; i < key.accidentals.length; i++) {\n\t\t\tvar acc = key.accidentals[i];\n\t\t\tif (acc.acc === 'flat')\n\t\t\t\tret[acc.note.toUpperCase()] = '_'\n\t\t\telse if (acc.acc === 'sharp')\n\t\t\t\tret[acc.note.toUpperCase()] = '^'\n\t\t}\n\t\treturn ret\n\t}\n\n\tfunction setLetterDistance(destinationKey, keyRoot, steps) {\n\t\tvar letterDistance = letters.indexOf(destinationKey.root) - letters.indexOf(keyRoot)\n\t\tif (keyRoot === \"none\")\n\t\t\tletterDistance = letters.indexOf(destinationKey.root)\n\t\tif (letterDistance === 0) {\n\t\t\t// This could either be a half step (like Eb => E) or almost an octave (like E => Eb)\n\t\t\tif (steps > 2) // If it is a large leap, then we are going up an octave\n\t\t\t\tletterDistance += 7\n\t\t\telse if (steps === -12) // If it is a large leap, then we are going down an octave\t\n\t\t\t \tletterDistance -= 7\n\t\t} else if (steps > 0 && letterDistance < 0) \n\t\t\tletterDistance += 7\n\t\telse if (steps < 0 && letterDistance > 0) \n\t\t\tletterDistance -= 7\n\n\t\tif (steps > 12)\n\t\t\tletterDistance += 7\n\t\telse if (steps < -12)\n\t\t\tletterDistance -= 7\n\n\t\treturn letterDistance\n\t}\n\n\tfunction transposeVoice(abc, voice, keyRoot, keyAccidentals, destinationKey, steps) {\n\t\tvar changes = []\n\t\tvar letterDistance = setLetterDistance(destinationKey, keyRoot, steps)\n\n\t\tvar measureAccidentals = {}\n\t\tvar transposedMeasureAccidentals = {}\n\t\tfor (var i = 0; i < voice.length; i++) {\n\t\t\tvar el = voice[i];\n\t\t\tif (el.chord) {\n\t\t\t\tfor (var c = 0; c < el.chord.length; c++) {\n\t\t\t\t\tvar ch = el.chord[c]\n\t\t\t\t\tif (ch.position === 'default') {\n\t\t\t\t\t\tvar prefersFlats = destinationKey.accidentals.length && destinationKey.accidentals[0].acc === 'flat'\n\t\t\t\t\t\tvar newChord = transposeChordName(ch.name, steps, prefersFlats, true)\n\t\t\t\t\t\tnewChord = newChord.replace(/♭/g, \"b\").replace(/♯/g, \"#\")\n\t\t\t\t\t\tif (newChord !== ch.name) // If we didn't recognize the chord the input is returned unchanged and there is nothing to replace\n\t\t\t\t\t\t\tchanges.push(replaceChord(abc, el.startChar, el.endChar, newChord))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (el.el_type === 'note' && el.pitches) {\n\t\t\t\tfor (var j = 0; j < el.pitches.length; j++) {\n\t\t\t\t\tvar note = parseNote(el.pitches[j].name, keyRoot, keyAccidentals, measureAccidentals)\n\t\t\t\t\tif (note.acc)\n\t\t\t\t\t\tmeasureAccidentals[note.name.toUpperCase()] = note.acc\n\t\t\t\t\tvar newPitch = transposePitch(note, destinationKey, letterDistance, transposedMeasureAccidentals)\n\t\t\t\t\tif (newPitch.acc)\n\t\t\t\t\t\ttransposedMeasureAccidentals[newPitch.upper] = newPitch.acc\n\t\t\t\t\tchanges.push(replaceNote(abc, el.startChar, el.endChar, newPitch.acc + newPitch.name, j))\n\t\t\t\t}\n\t\t\t\tif (el.gracenotes) {\n\t\t\t\t\tfor (var g = 0; g < el.gracenotes.length; g++) {\n\t\t\t\t\t\tvar grace = parseNote(el.gracenotes[g].name, keyRoot, keyAccidentals, measureAccidentals)\n\t\t\t\t\t\tif (grace.acc)\n\t\t\t\t\t\t\tmeasureAccidentals[grace.name.toUpperCase()] = grace.acc\n\t\t\t\t\t\tvar newGrace = transposePitch(grace, destinationKey, letterDistance, measureAccidentals)\n\t\t\t\t\t\tif (newGrace.acc)\n\t\t\t\t\t\t\ttransposedMeasureAccidentals[newGrace.upper] = newGrace.acc\n\t\t\t\t\t\tchanges.push(replaceGrace(abc, el.startChar, el.endChar, newGrace.acc + newGrace.name, g))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (el.el_type === \"bar\") {\n\t\t\t\tmeasureAccidentals = {}\n\t\t\t\ttransposedMeasureAccidentals = {}\n\t\t\t} else if (el.el_type === \"keySignature\") {\n\t\t\t\tkeyRoot = el.root\n\t\t\t\tkeyAccidentals = createKeyAccidentals(el)\n\t\t\t\tdestinationKey = newKey(el, steps)\n\t\t\t\tletterDistance = setLetterDistance(destinationKey, keyRoot, steps)\n\t\t\t}\n\t\t}\n\t\treturn changes\n\t}\n\n\tvar letters = \"CDEFGAB\"\n\tvar octaves = [\",,,,\", \",,,\", \",,\", \",\", \"\", \"'\", \"''\", \"'''\", \"''''\"]\n\n\tfunction newKey(key, steps) {\n\t\tif (key.root === \"none\") {\n\t\t\treturn { root: transposeKey(\"C\", steps), mode: \"\", acc: \"\", accidentals: [] }\n\t\t}\n\t\tvar major = relativeMajor(key.root + key.acc + key.mode)\n\t\tvar newMajor = transposeKey(major, steps)\n\t\tvar newMode = relativeMode(newMajor, key.mode)\n\t\tvar acc = keyAccidentals(newMajor)\n\t\treturn { root: newMode[0], mode: key.mode, acc: newMode.length > 1 ? newMode[1] : '', accidentals: acc }\n\t}\n\n\tfunction transposePitch(note, key, letterDistance, measureAccidentals) {\n\t\t// Depending on what the current note and new note are, the octave might have changed\n\t\t// The letterDistance is how far the change is to see if we passed \"C\" when transposing.\n\n\t\tvar pitch = note.pitch\n\t\tvar origDistFromC = letters.indexOf(note.name)\n\t\tvar root = letters.indexOf(key.root)\n\t\tvar index = (root + pitch) % 7\n\t\t// if the note crosses \"c\" then the octave changes, so that is true of \"B\" when going up one step, \"A\" and \"B\" when going up two steps, etc., and reverse when going down.\n\t\tvar newDistFromC = origDistFromC + letterDistance\n\t\tvar oct = note.oct\n\t\twhile (newDistFromC > 6) {\n\t\t\toct++\n\t\t\tnewDistFromC -= 7\n\t\t}\n\t\twhile (newDistFromC < 0) {\n\t\t\toct--\n\t\t\tnewDistFromC += 7\n\t\t}\n\n\t\tvar name = letters[index]\n\n\t\tvar acc = '';\n\t\tvar adj = note.adj\n\t\t// the amount of adjustment depends on the key - if there is a sharp in the key sig, then -1 is a natural, if there isn't, then -1 is a flat.\n\t\tvar keyAcc = '=';\n\t\tfor (var i = 0; i < key.accidentals.length; i++) {\n\t\t\tif (key.accidentals[i].note.toLowerCase() === name.toLowerCase()) {\n\t\t\t\tadj = adj + (key.accidentals[i].acc === 'flat' ? -1 : 1)\n\t\t\t\tkeyAcc = (key.accidentals[i].acc === 'flat' ? '_' : '^')\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tswitch (adj) {\n\t\t\tcase -2: acc = \"__\"; break;\n\t\t\tcase -1: acc = \"_\"; break;\n\t\t\tcase 0: acc = \"=\"; break;\n\t\t\tcase 1: acc = \"^\"; break;\n\t\t\tcase 2: acc = \"^^\"; break;\n\t\t\tcase -3:\n\t\t\t\t// This requires a triple flat, so bump down the pitch and try again\n\t\t\t\tvar newNote = {}\n\t\t\t\tnewNote.pitch = note.pitch - 1\n\t\t\t\tnewNote.oct = note.oct\n\t\t\t\tnewNote.name = letters[letters.indexOf(note.name) - 1]\n\t\t\t\tif (!newNote.name) {\n\t\t\t\t\tnewNote.name = \"B\"\n\t\t\t\t\tnewNote.oct--\n\t\t\t\t}\n\t\t\t\tif (newNote.name === \"B\" || newNote.name === \"E\")\n\t\t\t\t\tnewNote.adj = note.adj + 1;\n\t\t\t\telse\n\t\t\t\t\tnewNote.adj = note.adj + 2;\n\t\t\t\treturn transposePitch(newNote, key, letterDistance + 1, measureAccidentals)\n\t\t\tcase 3:\n\t\t\t\t// This requires a triple sharp, so bump up the pitch and try again\n\t\t\t\tvar newNote = {}\n\t\t\t\tnewNote.pitch = note.pitch + 1\n\t\t\t\tnewNote.oct = note.oct\n\t\t\t\tnewNote.name = letters[letters.indexOf(note.name) + 1]\n\t\t\t\tif (!newNote.name) {\n\t\t\t\t\tnewNote.name = \"C\"\n\t\t\t\t\tnewNote.oct++\n\t\t\t\t}\n\t\t\t\tif (newNote.name === \"C\" || newNote.name === \"F\")\n\t\t\t\t\tnewNote.adj = note.adj - 1;\n\t\t\t\telse\n\t\t\t\t\tnewNote.adj = note.adj - 2;\n\t\t\t\treturn transposePitch(newNote, key, letterDistance + 1, measureAccidentals)\n\t\t}\n\t\tif ((measureAccidentals[name] === acc || (!measureAccidentals[name] && acc === keyAcc)) && !note.courtesy)\n\t\t\tacc = \"\"\n\n\t\tswitch (oct) {\n\t\t\tcase 0: name = name + \",,,\"; break;\n\t\t\tcase 1: name = name + \",,\"; break;\n\t\t\tcase 2: name = name + \",\"; break;\n\t\t\t// case 3: it is already correct\n\t\t\tcase 4: name = name.toLowerCase(); break;\n\t\t\tcase 5: name = name.toLowerCase() + \"'\"; break;\n\t\t\tcase 6: name = name.toLowerCase() + \"''\"; break;\n\t\t\tcase 7: name = name.toLowerCase() + \"'''\"; break;\n\t\t\tcase 8: name = name.toLowerCase() + \"''''\"; break;\n\t\t}\n\t\tif (oct > 4)\n\t\t\tname = name.toLowerCase();\n\n\t\treturn { acc: acc, name: name, upper: name.toUpperCase() }\n\t}\n\n\tvar regPitch = /([_^=]*)([A-Ga-g])([,']*)/\n\tvar regNote = /([_^=]*[A-Ga-g][,']*)(\\d*\\/*\\d*)([\\>\\<\\-\\)\\.\\s\\\\]*)/\n\tvar regOptionalNote = /([_^=]*[A-Ga-g][,']*)?(\\d*\\/*\\d*)?([\\>\\<\\-\\)]*)?/\n\tvar regSpace = /(\\s*)$/\n\tvar regOptionalSpace = /(\\s*)/\n\n\t// This the relationship of the note to the tonic and an octave. So what is returned is a distance in steps from the tonic and the amount of adjustment from\n\t// a normal scale. That is - in the key of D an F# is two steps from the tonic and no adjustment. A G# is three steps from the tonic and one half-step higher.\n\t// I don't think there is any adjustment needed for minor keys since the adjustment is based on the key signature and the accidentals.\n\tfunction parseNote(note, keyRoot, keyAccidentals, measureAccidentals) {\n\t\tvar root = keyRoot === \"none\" ? 0 : letters.indexOf(keyRoot)\n\t\tvar reg = note.match(regPitch)\n\t\t// reg[1] : \"__\", \"_\", \"\", \"=\", \"^\", or \"^^\"\n\t\t// reg[2] : A-G a-g\n\t\t// reg[3] : commas or apostrophes\n\t\tvar name = reg[2].toUpperCase()\n\t\tvar pos = letters.indexOf(name) - root;\n\t\tif (pos < 0) pos += 7\n\t\tvar oct = octaves.indexOf(reg[3])\n\t\tif (name === reg[2]) // See if it is a capital letter and subtract an octave if so.\n\t\t\toct--;\n\t\tvar currentAcc = measureAccidentals[name] || keyAccidentals[name] || \"=\" //  use the key accidentals if they exist, but override with the measure accidentals, and if neither of them exist, use a natural.\n\t\treturn { acc: reg[1], name: name, pitch: pos, oct: oct, adj: calcAdjustment(reg[1], keyAccidentals[name], measureAccidentals[name]), courtesy: reg[1] === currentAcc }\n\t}\n\n\tfunction replaceNote(abc, start, end, newPitch, index) {\n\t\tvar note = abc.substring(start, end);\n\t\t// Try single note first\n\t\tvar match = note.match(new RegExp(regNote.source + regSpace.source));\n\t\tif (match) {\n\t\t\tvar noteLen = match[1].length;\n\t\t\tvar trailingLen = match[2].length + match[3].length + match[4].length;\n\t\t\tvar leadingLen = end - start - noteLen - trailingLen;\n\t\t\tstart += leadingLen;\n\t\t\tend -= trailingLen;\n\t\t} else {\n\t\t\t// Match chord\n\t\t\tvar regPreBracket = /([^\\[]*)/;\n\t\t\tvar regOpenBracket = /\\[/;\n\t\t\tvar regCloseBracket = /\\-?](\\d*\\/*\\d*)?([\\>\\<\\-\\)]*)/;\n\t\t\tvar regChord = new RegExp(\n\t\t\t\tregPreBracket.source +\n\t\t\t\tregOpenBracket.source +\n\t\t\t\t\"(?:\" + regOptionalNote.source + \"\\\\s*){1,8}\" +\n\t\t\t\tregCloseBracket.source +\n\t\t\t\tregSpace.source\n\t\t\t);\n\t\t\tmatch = note.match(regChord);\n\t\t\tif (match) {\n\t\t\t\tvar beforeChordLen = match[1].length + 1; // text before + '['\n\t\t\t\tvar chordBody = note.slice(match[1].length + 1, note.lastIndexOf(\"]\"));\n\t\t\t\t// Collect notes inside chord\n\t\t\t\tvar chordNotes = [];\n\t\t\t\tvar regNoteWithSpace = new RegExp(regOptionalNote.source + \"\\\\s*\", \"g\");\n\t\t\t\tfor (const m of chordBody.matchAll(regNoteWithSpace)) {\n\t\t\t\t\tlet noteText = m[0].trim();\n\t\t\t\t\tif (noteText !== \"\") {\n\t\t\t\t\t\tchordNotes.push({ text: noteText, index: m.index });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (index >= chordNotes.length) {\n\t\t\t\t\tthrow new Error(\"Chord index out of range for chord: \" + note);\n\t\t\t\t}\n\t\t\t\tvar chosen = chordNotes[index];\n\t\t\t\t// Preserve duration and tie\n\t\t\t\tlet mDurTie = chosen.text.match(/^(.+?)(\\d+\\/?\\d*)?(-)?$/);\n\t\t\t\tlet pitchPart = mDurTie ? mDurTie[1] : chosen.text;\n\t\t\t\tlet durationPart = mDurTie && mDurTie[2] ? mDurTie[2] : \"\";\n\t\t\t\tlet tiePart = mDurTie && mDurTie[3] ? mDurTie[3] : \"\";\n\t\t\t\t// Replace note keeping duration and tie\n\t\t\t\tnewPitch = newPitch + durationPart + tiePart;\n\t\t\t\tstart += beforeChordLen + chosen.index;\n\t\t\t\tend = start + chosen.text.length;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tnote: newPitch\n\t\t};\n\t}\n\n\tfunction replaceGrace(abc, start, end, newGrace, index) {\n\t\tvar note = abc.substring(start, end)\n\t\t// I don't know how to capture more than one note, so I'm separating them. There is a limit of the number of notes in a chord depending on the repeats I have here, but it is unlikely to happen in real music.\n\t\tvar regOpenBrace = /\\{/\n\t\tvar regCloseBrace = /\\}/\n\t\tvar regPreBrace = /([^\\{]*)/\n\t\tvar regPreNote = /(\\/*)/\n\t\tvar match = note.match(new RegExp(regPreBrace.source + regOpenBrace.source + regPreNote.source + regOptionalNote.source +\n\t\t\tregPreNote.source + regOptionalNote.source + regPreNote.source + regOptionalNote.source + regPreNote.source + regOptionalNote.source +\n\t\t\tregPreNote.source + regOptionalNote.source + regPreNote.source + regOptionalNote.source + regPreNote.source + regOptionalNote.source +\n\t\t\tregPreNote.source + regOptionalNote.source + regCloseBrace.source))\n\t\tif (match) {\n\t\t\t// This will match all notes inside a grace symbol\n\t\t\t// Get the number of chars used by the previous graces\n\t\t\tvar count = 1 + match[1].length // one character for the open brace, and whatever comes before the brace\n\t\t\tfor (var i = 0; i < index; i++) { // index is the iteration through the chord. This function gets called for each one.\n\t\t\t\tif (match[i * 3 + 2])\n\t\t\t\t\tcount += match[i * 3 + 2].length\n\t\t\t\tif (match[i * 3 + 3])\n\t\t\t\t\tcount += match[i * 3 + 3].length\n\t\t\t\tif (match[i * 3 + 4])\n\t\t\t\t\tcount += match[i * 3 + 4].length\n\t\t\t\tif (match[i * 3 + 5])\n\t\t\t\t\tcount += match[i * 3 + 5].length\n\t\t\t}\n\t\t\tif (match[index * 3 + 2])\n\t\t\t\tcount += match[i * 3 + 2].length\n\t\t\tstart += count\n\t\t\tvar endLen = match[index * 3 + 3] ? match[index * 3 + 3].length : 0\n\t\t\tendLen += match[index * 3 + 4] ? match[index * 3 + 4].length : 0\n\t\t\tendLen += match[index * 3 + 5] ? match[index * 3 + 5].length : 0\n\n\t\t\tend = start + endLen\n\t\t}\n\t\treturn { start: start, end: end, note: newGrace }\n\t}\n\n\tfunction replaceChord(abc, start, end, newChord) {\n\t\t// Isolate the chord and just replace that\n\t\tvar match = abc.substring(start, end).match(/([^\"]+)?(\".+\")+/)\n\t\tif (match[1])\n\t\t\tstart += match[1].length\n\t\tend = start + match[2].length\n\t\t// leave the quote in, so skip one more\n\t\treturn { start: start + 1, end: end - 1, note: newChord }\n\t}\n\n\tfunction calcAdjustment(thisAccidental, keyAccidental, measureAccidental) {\n\t\tif (!thisAccidental && measureAccidental) {\n\t\t\t// There was no accidental on this note, but there was earlier in the measure, so we'll use that\n\t\t\tthisAccidental = measureAccidental\n\t\t}\n\t\tif (!thisAccidental)\n\t\t\treturn 0; // there is no deviation from the key.\n\n\t\tswitch (keyAccidental) {\n\t\t\tcase undefined:\n\t\t\t\tswitch (thisAccidental) {\n\t\t\t\t\tcase '__': return -2;\n\t\t\t\t\tcase '_': return -1;\n\t\t\t\t\tcase '=': return 0;\n\t\t\t\t\tcase '^': return 1;\n\t\t\t\t\tcase '^^': return 2;\n\t\t\t\t\tdefault: return 0; // this should never happen\n\t\t\t\t}\n\t\t\tcase '_':\n\t\t\t\tswitch (thisAccidental) {\n\t\t\t\t\tcase '__': return -1;\n\t\t\t\t\tcase '_': return 0;\n\t\t\t\t\tcase '=': return 1;\n\t\t\t\t\tcase '^': return 2;\n\t\t\t\t\tcase '^^': return 3;\n\t\t\t\t\tdefault: return 0; // this should never happen\n\t\t\t\t}\n\t\t\tcase '^':\n\t\t\t\tswitch (thisAccidental) {\n\t\t\t\t\tcase '__': return -3;\n\t\t\t\t\tcase '_': return -2;\n\t\t\t\t\tcase '=': return -1;\n\t\t\t\t\tcase '^': return 0;\n\t\t\t\t\tcase '^^': return 1;\n\t\t\t\t\tdefault: return 0; // this should never happen\n\t\t\t\t}\n\t\t}\n\t\treturn 0// this should never happen\n\t}\n})();\n\nmodule.exports = strTranspose;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/str/output.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/abc_midi_flattener.js":
/*!************************************************************!*\
  !*** ./node_modules/abcjs/src/synth/abc_midi_flattener.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_midi_flattener.js: Turn a linear series of events into a series of MIDI commands.\n\n// We input a set of voices, but the notes are still complex. This pass changes the logical definitions\n// of the grace notes, decorations, ties, triplets, rests, transpositions, keys, and accidentals into actual note durations.\n// It also extracts guitar chords to a separate voice and resolves their rhythm.\n\nvar flatten;\nvar ChordTrack = __webpack_require__(/*! ./chord-track */ \"(ssr)/./node_modules/abcjs/src/synth/chord-track.js\");\nvar pitchesToPerc = __webpack_require__(/*! ./pitches-to-perc */ \"(ssr)/./node_modules/abcjs/src/synth/pitches-to-perc.js\");\n\n(function() {\n\t\"use strict\";\n\n\tvar barAccidentals;\n\tvar accidentals;\n\tvar transpose;\n\tvar bagpipes;\n\tvar tracks;\n\tvar startingTempo;\n\tvar startingMeter;\n\tvar tempoChangeFactor = 1;\n\tvar instrument;\n\tvar currentInstrument;\n\t// var channel;\n\tvar currentTrack;\n\tvar lastNoteDurationPosition;\n\tvar currentTrackName;\n\tvar lastEventTime;\n\tvar chordTrack;\n\n\tvar meter = { num: 4, den: 4 };\n\tvar drumInstrument = 128;\n\tvar lastBarTime;\n\tvar doBeatAccents = true;\n\tvar stressBeat1 = 105;\n\tvar stressBeatDown = 95;\n\tvar stressBeatUp = 85;\n\tvar volumesPerNotePitch = [[stressBeat1, stressBeatDown, stressBeatUp]];\n\tvar beatFraction = 0.25;\n\tvar nextVolume;\n\tvar nextVolumeDelta;\n\tvar slurCount = 0;\n\n\tvar drumTrack;\n\tvar drumTrackFinished;\n\tvar drumDefinition = {};\n\tvar drumBars;\n\n\tvar pickupLength = 0;\n\tvar percmap;\n\n\t// The gaps per beat. The first two are in seconds, the third is in fraction of a duration.\n\tvar normalBreakBetweenNotes = 0; //0.000520833333325*1.5; // for articulation (matches muse score value)\n\tvar slurredBreakBetweenNotes = -0.001; // make the slurred notes actually overlap\n\tvar staccatoBreakBetweenNotes = 0.4; // some people say staccato is half duration, some say 3/4 so this splits it\n\n\tflatten = function(voices, options, percmap_, midiOptions) {\n\t\tif (!options) options = {};\n\t\tif (!midiOptions) midiOptions = {};\n\t\tbarAccidentals = [];\n\t\taccidentals = [0,0,0,0,0,0,0];\n\t\tbagpipes = false;\n\t\ttracks = [];\n\t\tstartingTempo = options.qpm;\n\t\tstartingMeter = undefined;\n\t\ttempoChangeFactor = 1;\n\t\tinstrument = undefined;\n\t\tcurrentInstrument = undefined;\n\t\t// channel = undefined;\n\t\tcurrentTrack = undefined;\n\t\tcurrentTrackName = undefined;\n\t\tlastEventTime = 0;\n\t\tpercmap = percmap_;\n\n\t\tmeter = { num: 4, den: 4 };\n\n\t\tdoBeatAccents = true;\n\t\tstressBeat1 = 105;\n\t\tstressBeatDown = 95;\n\t\tstressBeatUp = 85;\n\t\tvolumesPerNotePitch = [];\n\t\tbeatFraction = 0.25;\n\t\tnextVolume = undefined;\n\t\tnextVolumeDelta = undefined;\n\t\tslurCount = 0;\n\n\t\t// For the drum/metronome track.\n\t\tdrumTrack = [];\n\t\tdrumTrackFinished = false;\n\t\tdrumDefinition = {};\n\t\tdrumBars = 1;\n\n\t\tif (voices.length > 0 && voices[0].length > 0)\n\t\t\tpickupLength = voices[0][0].pickupLength;\n\n\t\t// For resolving chords.\n\t\tif (options.bassprog !== undefined && !midiOptions.bassprog)\n\t\t\tmidiOptions.bassprog = [options.bassprog]\n\t\tif (options.bassvol !== undefined && !midiOptions.bassvol)\n\t\t\tmidiOptions.bassvol = [options.bassvol]\n\t\tif (options.chordprog !== undefined && !midiOptions.chordprog)\n\t\t\tmidiOptions.chordprog = [options.chordprog]\n\t\tif (options.chordvol !== undefined && !midiOptions.chordvol)\n\t\t\tmidiOptions.chordvol = [options.chordvol]\n\t\tif (options.gchord !== undefined && !midiOptions.gchord)\n\t\t\tmidiOptions.gchord = [options.gchord]\n\t\tchordTrack = new ChordTrack(voices.length, options.chordsOff, midiOptions, meter)\n\n\t\t// First adjust the input to resolve ties, set the starting time for each note, etc. That will make the rest of the logic easier\n\t\tpreProcess(voices, options);\n\n\t\tfor (var i = 0; i < voices.length; i++) {\n\t\t\ttranspose = 0;\n\t\t\tchordTrack.setTranspose(transpose)\n\t\t\tlastNoteDurationPosition = -1;\n\t\t\tvar voice = voices[i];\n\t\t\tcurrentTrack = [{ cmd: 'program', channel: i, instrument: instrument }];\n\t\t\tcurrentTrackName = undefined;\n\t\t\tlastBarTime = 0;\n\t\t\tchordTrack.setLastBarTime(0)\n\t\t\tvar voiceOff = false;\n\t\t\tif (options.voicesOff === true)\n\t\t\t\tvoiceOff = true;\n\t\t\telse if (options.voicesOff && options.voicesOff.length && options.voicesOff.indexOf(i) >= 0)\n\t\t\t\tvoiceOff = true;\n\t\t\tfor (var j = 0; j < voice.length; j++) {\n\t\t\t\tvar element = voice[j];\n\t\t\t\tswitch (element.el_type) {\n\t\t\t\t\tcase \"name\":\n\t\t\t\t\t\tcurrentTrackName = {cmd: 'text', type: \"name\", text: element.trackName };\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"note\":\n\t\t\t\t\t\twriteNote(element, voiceOff);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"key\":\n\t\t\t\t\t\taccidentals = setKeySignature(element);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"meter\":\n\t\t\t\t\t\tif (!startingMeter)\n\t\t\t\t\t\t\tstartingMeter = element;\n\t\t\t\t\t\tmeter = element;\n\t\t\t\t\t\tchordTrack.setMeter(meter)\n\t\t\t\t\t\tbeatFraction = getBeatFraction(meter);\n\t\t\t\t\t\talignDrumToMeter();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"tempo\":\n\t\t\t\t\t\tif (!startingTempo)\n\t\t\t\t\t\t\tstartingTempo = element.qpm;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\ttempoChangeFactor = element.qpm ? startingTempo / element.qpm : 1;\n\t\t\t\t\t\tchordTrack.setTempoChangeFactor(tempoChangeFactor)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"transpose\":\n\t\t\t\t\t\ttranspose = element.transpose;\n\t\t\t\t\t\tchordTrack.setTranspose(transpose)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"bar\":\n\t\t\t\t\t\tchordTrack.barEnd(element)\n\n\t\t\t\t\t\tbarAccidentals = [];\n\t\t\t\t\t\tif (i === 0) // Only write the drum part on the first voice so that it is not duplicated.\n\t\t\t\t\t\t\twriteDrum(voices.length+1);\n\t\t\t\t\t\t\tchordTrack.setRhythmHead(false) // decide whether there are rhythm heads each measure.\n\t\t\t\t\t\tlastBarTime = timeToRealTime(element.time);\n\t\t\t\t\t\tchordTrack.setLastBarTime(lastBarTime)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"bagpipes\":\n\t\t\t\t\t\tbagpipes = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"instrument\":\n\t\t\t\t\t\tif (instrument === undefined)\n\t\t\t\t\t\t\tinstrument = element.program;\n\t\t\t\t\t\tcurrentInstrument = element.program;\n\t\t\t\t\t\tif (currentTrack.length > 0 && currentTrack[currentTrack.length-1].cmd === 'program')\n\t\t\t\t\t\t\tcurrentTrack[currentTrack.length-1].instrument = element.program;\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvar ii;\n\t\t\t\t\t\t\tfor (ii = currentTrack.length-1; ii >= 0 && currentTrack[ii].cmd !== 'program'; ii--)\n\t\t\t\t\t\t\t\t;\n\t\t\t\t\t\t\tif (ii < 0 || currentTrack[ii].instrument !== element.program)\n\t\t\t\t\t\t\t\tcurrentTrack.push({cmd: 'program', channel: 0, instrument: element.program});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"channel\":\n\t\t\t\t\t\tsetChannel(element.channel);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"drum\":\n\t\t\t\t\t\tdrumDefinition = normalizeDrumDefinition(element.params);\n\t\t\t\t\t\talignDrumToMeter();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"gchordOn\":\n\t\t\t\t\t\tchordTrack.gChordOn(element)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"beat\":\n\t\t\t\t\t\tstressBeat1 = element.beats[0];\n\t\t\t\t\t\tstressBeatDown = element.beats[1];\n\t\t\t\t\t\tstressBeatUp = element.beats[2];\n\t\t\t\t\t\tif (!element.volumesPerNotePitch)\n\t\t\t\t\t\t\tvolumesPerNotePitch = []\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tvolumesPerNotePitch = element.volumesPerNotePitch;\n\t\t\t\t\t\t// TODO-PER: also use the last parameter - which changes which beats are strong.\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"vol\":\n\t\t\t\t\t\tnextVolume = element.volume;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"volinc\":\n\t\t\t\t\t\tnextVolumeDelta = element.volume;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"beataccents\":\n\t\t\t\t\t\tdoBeatAccents = element.value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"gchord\":\n\t\t\t\t\tcase \"bassprog\":\n\t\t\t\t\tcase \"chordprog\":\n\t\t\t\t\tcase \"bassvol\":\n\t\t\t\t\tcase \"chordvol\":\n\t\t\t\t\tcase \"gchordbars\":\n\t\t\t\t\t\tchordTrack.paramChange(element)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// This should never happen\n\t\t\t\t\t\tconsole.log(\"MIDI creation. Unknown el_type: \" + element.el_type + \"\\n\");// jshint ignore:line\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (currentTrack[0].instrument === undefined)\n\t\t\t\tcurrentTrack[0].instrument = instrument ? instrument : 0;\n\t\t\tif (currentTrackName)\n\t\t\t\tcurrentTrack.unshift(currentTrackName);\n\t\t\ttracks.push(currentTrack);\n\t\t\tchordTrack.finish()\n\t\t\tif (drumTrack.length > 0) // Don't do drums on more than one track, so turn off drum after we create it.\n\t\t\t\tdrumTrackFinished = true;\n\t\t}\n\t\t// See if any notes are octaves played at the same time. If so, raise the pitch of the higher one.\n\t\tif (options.detuneOctave)\n\t\t\tfindOctaves(tracks, parseInt(options.detuneOctave, 10));\n\n\t\tchordTrack.addTrack(tracks)\n\t\tif (drumTrack.length > 0)\n\t\t\ttracks.push(drumTrack);\n\n\t\treturn { tempo: startingTempo, instrument: instrument, tracks: tracks, totalDuration: lastEventTime };\n\t};\n\n\tfunction setChannel(channel) {\n\t\tfor (var i = currentTrack.length-1; i>=0; i--) {\n\t\t\tif (currentTrack[i].cmd === \"program\") {\n\t\t\t\tcurrentTrack[i].channel = channel;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction timeToRealTime(time) {\n\t\treturn time/1000000;\n\t}\n\n\tfunction durationRounded(duration) {\n\t\treturn Math.round(duration*tempoChangeFactor*1000000)/1000000;\n\t}\n\n\tfunction preProcess(voices, options) {\n\t\tfor (var i = 0; i < voices.length; i++) {\n\t\t\tvar voice = voices[i];\n\t\t\tvar ties = {};\n\t\t\tvar startingTempo = options.qpm;\n\t\t\tvar timeCounter = 0;\n\t\t\tvar tempoMultiplier = 1;\n\t\t\tfor (var j = 0; j < voice.length; j++) {\n\t\t\t\tvar element = voice[j];\n\n\t\t\t\tif (element.el_type === 'tempo') {\n\t\t\t\t\tif (!startingTempo)\n\t\t\t\t\t\tstartingTempo = element.qpm;\n\t\t\t\t\telse\n\t\t\t\t\t\ttempoMultiplier = element.qpm ? startingTempo / element.qpm : 1;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// For convenience, put the current time in each event so that it doesn't have to be calculated in the complicated stuff that follows.\n\t\t\t\telement.time = timeCounter;\n\t\t\t\tvar thisDuration = element.duration ? element.duration : 0;\n\t\t\t\ttimeCounter += Math.round(thisDuration*tempoMultiplier*1000000); // To compensate for JS rounding problems, do all intermediate calcs on integers.\n\n\t\t\t\t// If there are pitches then put the duration in the pitch object and if there are ties then change the duration of the first note in the tie.\n\t\t\t\tif (element.pitches) {\n\t\t\t\t\tfor (var k = 0; k < element.pitches.length; k++) {\n\t\t\t\t\t\tvar pitch = element.pitches[k];\n\t\t\t\t\t\tif (pitch) {\n\t\t\t\t\t\t\tpitch.duration = element.duration;\n\t\t\t\t\t\t\tif (pitch.startTie) {\n\t\t\t\t\t\t\t\t//console.log(element)\n\t\t\t\t\t\t\t\tif (ties[pitch.pitch] === undefined) // We might have three notes tied together - if so just add this duration.\n\t\t\t\t\t\t\t\t\tties[pitch.pitch] = {el: j, pitch: k};\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tvoice[ties[pitch.pitch].el].pitches[ties[pitch.pitch].pitch].duration += pitch.duration;\n\t\t\t\t\t\t\t\t\telement.pitches[k] = null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//console.log(\">>> START\", JSON.stringify(ties));\n\t\t\t\t\t\t\t} else if (pitch.endTie) {\n\t\t\t\t\t\t\t\t//console.log(element)\n\t\t\t\t\t\t\t\tvar tie = ties[pitch.pitch];\n\t\t\t\t\t\t\t\t//console.log(\">>> END\", pitch.pitch, tie, JSON.stringify(ties));\n\t\t\t\t\t\t\t\tif (tie) {\n\t\t\t\t\t\t\t\t\tvar dur = pitch.duration;\n\t\t\t\t\t\t\t\t\tdelete voice[tie.el].pitches[tie.pitch].startTie;\n\t\t\t\t\t\t\t\t\tvoice[tie.el].pitches[tie.pitch].duration += dur;\n\t\t\t\t\t\t\t\t\telement.pitches[k] = null;\n\t\t\t\t\t\t\t\t\tdelete ties[pitch.pitch];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdelete pitch.endTie;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdelete element.duration;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var key in ties) {\n\t\t\t\tif (ties.hasOwnProperty(key)) {\n\t\t\t\t\tvar item = ties[key];\n\t\t\t\t\tdelete voice[item.el].pitches[item.pitch].startTie;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// voices[0].forEach(v => delete v.elem)\n\t\t\t// voices[1].forEach(v => delete v.elem)\n\t\t\t// console.log(JSON.stringify(voices))\n\t\t}\n\t}\n\n\tfunction getBeatFraction(meter) {\n\t\tswitch (parseInt(meter.den,10)) {\n\t\t\tcase 2: return 0.5;\n\t\t\tcase 4: return 0.25;\n\t\t\tcase 8:\n\t\t\t\tif (meter.num % 3 === 0)\n\t\t\t\t\treturn 0.375;\n\t\t\t\telse\n\t\t\t\t\treturn 0.125;\n\t\t\tcase 16: return 0.125;\n\t\t}\n\t\treturn 0.25;\n\t}\n\n\tfunction calcBeat(measureStart, beatLength, currTime) {\n\t\tvar distanceFromStart = currTime - measureStart;\n\t\treturn distanceFromStart / beatLength;\n\t}\n\n\tfunction processVolume(beat, voiceOff, pitchIndexOfNote) {\n\t\tif (voiceOff)\n\t\t\treturn 0;\n\t\tlet pitchStressBeat1 = stressBeat1;\n\t\tlet pitchStressBeatDown = stressBeatDown;\n\t\tlet pitchStressBeatUp = stressBeatUp;\n\t\tif(pitchIndexOfNote !== undefined && volumesPerNotePitch.length >= pitchIndexOfNote+1){\n\t\t\tpitchStressBeat1 = volumesPerNotePitch[pitchIndexOfNote][0];\n\t\t\tpitchStressBeatDown = volumesPerNotePitch[pitchIndexOfNote][1];\n\t\t\tpitchStressBeatUp = volumesPerNotePitch[pitchIndexOfNote][2];\n\t\t}\n\t\tvar volume;\n    \t// MAE 21 Jun 2024 - This previously wasn't allowing zero volume to be applied\n\t\tif (nextVolume !== undefined) {\n\t\t\tvolume = nextVolume;\n\t\t\tnextVolume = undefined;\n\t\t} else if (!doBeatAccents) {\n\t\t\tvolume = pitchStressBeatDown;\n\t\t} else if (pickupLength > beat) {\n\t\t\tvolume = pitchStressBeatUp;\n\t\t} else {\n\t\t\t//var barLength = meter.num / meter.den;\n\t\t\tvar barBeat = calcBeat(lastBarTime, getBeatFraction(meter), beat);\n\t\t\tif (barBeat === 0)\n\t\t\t\tvolume = pitchStressBeat1;\n\t\t\telse if (parseInt(barBeat,10) === barBeat)\n\t\t\t\tvolume = pitchStressBeatDown;\n\t\t\telse\n\t\t\t\tvolume = pitchStressBeatUp;\n\t\t}\n\t\tif (nextVolumeDelta) {\n\t\t\tvolume += nextVolumeDelta;\n\t\t\tnextVolumeDelta = undefined;\n\t\t}\n\t\tif (volume < 0)\n\t\t\tvolume = 0;\n\t\tif (volume > 127)\n\t\t\tvolume = 127;\n\t\treturn voiceOff ? 0 : volume;\n\t}\n\n\n\tfunction findNoteModifications(elem, velocity) {\n\t\tvar ret = { };\n\t\tif (elem.decoration) {\n\t\t\tfor (var d = 0; d < elem.decoration.length; d++) {\n\t\t\t\tif (elem.decoration[d] === 'staccato')\n\t\t\t\t\tret.thisBreakBetweenNotes = 'staccato';\n\t\t\t\telse if (elem.decoration[d] === 'tenuto')\n\t\t\t\t\tret.thisBreakBetweenNotes = 'tenuto';\n\t\t\t\telse if (elem.decoration[d] === 'accent')\n\t\t\t\t\tret.velocity = Math.min(127, velocity * 1.5);\n\t\t\t\telse if (elem.decoration[d] === 'trill')\n\t\t\t\t\tret.noteModification = \"trill\";\n\t\t\t\telse if (elem.decoration[d] === 'lowermordent')\n\t\t\t\t\tret.noteModification = \"lowermordent\";\n\t\t\t\telse if (elem.decoration[d] === 'uppermordent')\n\t\t\t\t\tret.noteModification = \"pralltriller\";\n\t\t\t\telse if (elem.decoration[d] === 'mordent')\n\t\t\t\t\tret.noteModification = \"mordent\";\n\t\t\t\telse if (elem.decoration[d] === 'turn')\n\t\t\t\t\tret.noteModification = \"turn\";\n\t\t\t\telse if (elem.decoration[d] === 'roll')\n\t\t\t\t\tret.noteModification = \"roll\";\n\t\t\t\telse if (elem.decoration[d] === 'pralltriller')\n\t\t\t\t\tret.noteModification = \"pralltriller\";\n\t\t\t\telse if (elem.decoration[d] === 'trillh') \n\t\t\t\t\tret.noteModification = \"trillh\";\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tfunction doModifiedNotes(noteModification, p) {\n\t\tvar noteTime;\n\t\tvar numNotes;\n\t\tvar start = p.start;\n\t\tvar pp;\n\t\tvar runningDuration = p.duration;\n\t\tvar shortestNote = durationRounded(1.0 / 32);\n\n\t\tswitch (noteModification) {\n\t\t\tcase \"trill\":\n\t\t\t\tvar note = 2;\n\t\t\t\twhile (runningDuration > 0) {\n\t\t\t\t\tcurrentTrack.push({ cmd: 'note', pitch: p.pitch+note, volume: p.volume, start: start, duration: shortestNote, gap: 0, instrument: currentInstrument, style: 'decoration' });\n\t\t\t\t\tnote = (note === 2) ? 0 : 2;\n\t\t\t\t\trunningDuration -= shortestNote;\n\t\t\t\t\tstart += shortestNote;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t      case \"trillh\":\n\t\t\t        var note = 1;\n\t\t\t        while (runningDuration > 0) {\n\t\t\t          currentTrack.push({\n\t\t\t            cmd: 'note',\n\t\t\t            pitch: p.pitch + note,\n\t\t\t            volume: p.volume,\n\t\t\t            start: start,\n\t\t\t            duration: shortestNote,\n\t\t\t            gap: 0,\n\t\t\t            instrument: currentInstrument,\n\t\t\t            style: 'decoration'\n\t\t\t          });\n\t\t\t          note = note === 1 ? 0 : 1;\n\t\t\t          runningDuration -= shortestNote;\n\t\t\t          start += shortestNote;\n\t\t\t        }\n\t\t\t        break;\n\t\t\tcase \"pralltriller\":\n\t\t\t\tcurrentTrack.push({ cmd: 'note', pitch: p.pitch, volume: p.volume, start: start, duration: shortestNote, gap: 0, instrument: currentInstrument, style: 'decoration' });\n\t\t\t\trunningDuration -= shortestNote;\n\t\t\t\tstart += shortestNote;\n\t\t\t\tcurrentTrack.push({ cmd: 'note', pitch: p.pitch+2, volume: p.volume, start: start, duration: shortestNote, gap: 0, instrument: currentInstrument, style: 'decoration' });\n\t\t\t\trunningDuration -= shortestNote;\n\t\t\t\tstart += shortestNote;\n\t\t\t\tcurrentTrack.push({ cmd: 'note', pitch: p.pitch, volume: p.volume, start: start, duration: runningDuration, gap: 0, instrument: currentInstrument });\n\t\t\t\tbreak;\n\t\t\tcase \"mordent\":\n\t\t\tcase \"lowermordent\":\n\t\t\t\tcurrentTrack.push({ cmd: 'note', pitch: p.pitch, volume: p.volume, start: start, duration: shortestNote, gap: 0, instrument: currentInstrument, style: 'decoration' });\n\t\t\t\trunningDuration -= shortestNote;\n\t\t\t\tstart += shortestNote;\n\t\t\t\tcurrentTrack.push({ cmd: 'note', pitch: p.pitch-2, volume: p.volume, start: start, duration: shortestNote, gap: 0, instrument: currentInstrument, style: 'decoration' });\n\t\t\t\trunningDuration -= shortestNote;\n\t\t\t\tstart += shortestNote;\n\t\t\t\tcurrentTrack.push({ cmd: 'note', pitch: p.pitch, volume: p.volume, start: start, duration: runningDuration, gap: 0, instrument: currentInstrument });\n\t\t\t\tbreak;\n\t\t\tcase \"turn\":\n\t\t\t\tshortestNote = p.duration / 4;\n\t\t\t\tcurrentTrack.push({ cmd: 'note', pitch: p.pitch+2, volume: p.volume, start: start, duration: shortestNote, gap: 0, instrument: currentInstrument, style: 'decoration' });\n\t\t\t\tcurrentTrack.push({ cmd: 'note', pitch: p.pitch, volume: p.volume, start: start+shortestNote, duration: shortestNote, gap: 0, instrument: currentInstrument, style: 'decoration' });\n\t\t\t\tcurrentTrack.push({ cmd: 'note', pitch: p.pitch-1, volume: p.volume, start: start+shortestNote*2, duration: shortestNote, gap: 0, instrument: currentInstrument, style: 'decoration' });\n\t\t\t\tcurrentTrack.push({ cmd: 'note', pitch: p.pitch, volume: p.volume, start: start+shortestNote*3, duration: shortestNote, gap: 0, instrument: currentInstrument, style: 'decoration' });\n\t\t\t\tbreak;\n\t\t\tcase \"roll\":\n\t\t\t\twhile (runningDuration > 0) {\n\t\t\t\t\tcurrentTrack.push({ cmd: 'note', pitch: p.pitch, volume: p.volume, start: start, duration: shortestNote, gap: 0, instrument: currentInstrument, style: 'decoration' });\n\t\t\t\t\trunningDuration -= shortestNote*2;\n\t\t\t\t\tstart += shortestNote*2;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction writeNote(elem, voiceOff) {\n\t\t//\n\t\t// Create a series of note events to append to the current track.\n\t\t// The output event is one of: { pitchStart: pitch_in_abc_units, volume: from_1_to_64 }\n\t\t// { pitchStop: pitch_in_abc_units }\n\t\t// { moveTime: duration_in_abc_units }\n\t\t// If there are guitar chords, then they are put in a separate track, but they have the same format.\n\t\t//\n\n\t\t//var trackStartingIndex = currentTrack.length;\n\n\t\tvar velocity = processVolume(timeToRealTime(elem.time), voiceOff);\n\t\tchordTrack.processChord(elem)\n\n\t\t// if there are grace notes, then also play them.\n\t\t// I'm not sure there is an exact rule for the length of the notes. My rule, unless I find\n\t\t// a better one is: the grace notes cannot take more than 1/2 of the main note's value.\n\t\t// A grace note (of 1/8 note duration) takes 1/8 of the main note's value.\n\t\tvar graces;\n\t\tif (elem.gracenotes && elem.pitches && elem.pitches.length > 0 && elem.pitches[0]) {\n\t\t\tgraces = processGraceNotes(elem.gracenotes, elem.pitches[0].duration);\n\t\t\tif (elem.elem)\n\t\t\t\telem.elem.midiGraceNotePitches = writeGraceNotes(graces, timeToRealTime(elem.time), velocity*2/3, currentInstrument); // make the graces a little quieter.\n\t\t}\n\n\t\t// The beat fraction is the note that gets a beat (.25 is a quarter note)\n\t\t// The tempo is in minutes and we want to get to milliseconds.\n\t\t// If the element is inside a repeat, there may be more than one value. If there is one value,\n\t\t// then just store that as a number. If there are more than one value, then change that to\n\t\t// an array and return all of them.\n\t\tif (elem.elem) {\n\t\t\tvar rt = timeToRealTime(elem.time);\n\t\t\tvar ms = rt / beatFraction / startingTempo * 60 * 1000;\n\t\t\tif (elem.elem.currentTrackMilliseconds === undefined) {\n\t\t\t\telem.elem.currentTrackMilliseconds = ms;\n\t\t\t\telem.elem.currentTrackWholeNotes = rt;\n\t\t\t} else {\n\t\t\t\tif (elem.elem.currentTrackMilliseconds.length === undefined) {\n\t\t\t\t\tif (elem.elem.currentTrackMilliseconds !== ms) {\n\t\t\t\t\t\telem.elem.currentTrackMilliseconds = [elem.elem.currentTrackMilliseconds, ms];\n\t\t\t\t\t\telem.elem.currentTrackWholeNotes = [elem.elem.currentTrackWholeNotes, rt];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// There can be duplicates if there are multiple voices\n\t\t\t\t\tvar found = false;\n\t\t\t\t\tfor (var j = 0; j < elem.elem.currentTrackMilliseconds.length; j++) {\n\t\t\t\t\t\tif (elem.elem.currentTrackMilliseconds[j] === ms)\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!found) {\n\t\t\t\t\t\telem.elem.currentTrackMilliseconds.push(ms);\n\t\t\t\t\t\telem.elem.currentTrackWholeNotes.push(rt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//var tieAdjustment = 0;\n\t\tif (elem.pitches) {\n\t\t\tvar thisBreakBetweenNotes = '';\n\t\t\tvar ret = findNoteModifications(elem, velocity);\n\t\t\tif (ret.thisBreakBetweenNotes)\n\t\t\t\tthisBreakBetweenNotes = ret.thisBreakBetweenNotes;\n\t\t\tif (ret.velocity)\n\t\t\t\tvelocity = ret.velocity;\n\n\t\t\t// TODO-PER: Can also make a different sound on style=x and style=harmonic\n\t\t\tvar ePitches = elem.pitches;\n\t\t\tif (elem.style === \"rhythm\") {\n\t\t\t\tePitches = chordTrack.setRhythmHead(true, elem)\n\t\t\t}\n\n\t\t\tif (elem.elem)\n\t\t\t\telem.elem.midiPitches = [];\n\t\t\tfor (var i=0; i<ePitches.length; i++) {\n\t\t\t\t//here we can set the volume for each note in a chord, if specified\n\t\t\t\tlet pitchVelocity = velocity;\n\t\t\t\tif(!ret.velocity && Array.isArray(elem.decoration) && elem.decoration.length > i){\n\t\t\t\t\tpitchVelocity = processVolume(timeToRealTime(elem.time), voiceOff, i)\n\t\t\t\t}\n\t\t\t\tvar note = ePitches[i];\n\t\t\t\tif (!note)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (note.startSlur)\n\t\t\t\t\tslurCount += note.startSlur.length;\n\t\t\t\tif (note.endSlur)\n\t\t\t\t\tslurCount -= note.endSlur.length;\n\t\t\t\tvar actualPitch = note.actualPitch ? note.actualPitch : adjustPitch(note);\n\t\t\t\tif (currentInstrument === drumInstrument && percmap) {\n\t\t\t\t\tvar name = pitchesToPerc(note)\n\t\t\t\t\tif (name && percmap[name])\n\t\t\t\t\t\tactualPitch = percmap[name].sound;\n\t\t\t\t}\n\t\t\t\tvar p = { cmd: 'note', pitch: actualPitch, volume: pitchVelocity, start: timeToRealTime(elem.time), duration: durationRounded(note.duration), instrument: currentInstrument, startChar: elem.elem.startChar, endChar: elem.elem.endChar};\n\t\t\t\tp = adjustForMicroTone(p);\n\t\t\t\tif (elem.gracenotes) {\n\t\t\t\t\tp.duration = p.duration / 2;\n\t\t\t\t\tp.start = p.start + p.duration;\n\t\t\t\t}\n\t\t\t\tif (elem.elem)\n\t\t\t\t\telem.elem.midiPitches.push(p);\n\t\t\t\tif (ret.noteModification) {\n\t\t\t\t\tdoModifiedNotes(ret.noteModification, p);\n\t\t\t\t} else {\n\t\t\t\t\tif (slurCount > 0)\n\t\t\t\t\t\tp.endType = 'tenuto';\n\t\t\t\t\telse if (thisBreakBetweenNotes)\n\t\t\t\t\t\tp.endType = thisBreakBetweenNotes;\n\n\t\t\t\t\tswitch (p.endType) {\n\t\t\t\t\t\tcase \"tenuto\":\n\t\t\t\t\t\t\tp.gap = slurredBreakBetweenNotes;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"staccato\":\n\t\t\t\t\t\t\tvar d = p.duration * staccatoBreakBetweenNotes;\n\t\t\t\t\t\t\tp.gap = startingTempo / 60 * d;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tp.gap = normalBreakBetweenNotes;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcurrentTrack.push(p);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlastNoteDurationPosition = currentTrack.length-1;\n\n\t\t}\n\t\tvar realDur = getRealDuration(elem);\n\t\tlastEventTime = Math.max(lastEventTime, timeToRealTime(elem.time)+durationRounded(realDur));\n\t}\n\tfunction getRealDuration(elem) {\n\t\tif (elem.pitches && elem.pitches.length > 0 && elem.pitches[0])\n\t\t\treturn elem.pitches[0].duration;\n\t\tif (elem.elem)\n\t\t\treturn elem.elem.duration;\n\t\treturn elem.duration;\n\t}\n\n\tvar scale = [0,2,4,5,7,9,11];\n\tfunction adjustPitch(note) {\n\t\tif (note.midipitch !== undefined)\n\t\t\treturn note.midipitch; // The pitch might already be known, for instance if there is a drummap.\n\t\tvar pitch = note.pitch;\n\t\tif (note.accidental) {\n\t\t\tswitch(note.accidental) { // change that pitch (not other octaves) for the rest of the bar\n\t\t\t\tcase \"sharp\":\n\t\t\t\t\tbarAccidentals[pitch]=1; break;\n\t\t\t\tcase \"flat\":\n\t\t\t\t\tbarAccidentals[pitch]=-1; break;\n\t\t\t\tcase \"natural\":\n\t\t\t\t\tbarAccidentals[pitch]=0; break;\n\t\t\t\tcase \"dblsharp\":\n\t\t\t\t\tbarAccidentals[pitch]=2; break;\n\t\t\t\tcase \"dblflat\":\n\t\t\t\t\tbarAccidentals[pitch]=-2; break;\n\t\t\t\tcase \"quartersharp\":\n\t\t\t\t\tbarAccidentals[pitch]=0.25; break;\n\t\t\t\tcase \"quarterflat\":\n\t\t\t\t\tbarAccidentals[pitch]=-0.25; break;\n\t\t\t}\n\t\t}\n\n\t\tvar actualPitch = extractOctave(pitch) *12 + scale[extractNote(pitch)] + 60;\n\n\t\tif ( barAccidentals[pitch]!==undefined) {\n\t\t\t// An accidental is always taken at face value and supersedes the key signature.\n\t\t\tactualPitch += barAccidentals[pitch];\n\t\t} else { // use normal accidentals\n\t\t\tactualPitch +=  accidentals[extractNote(pitch)];\n\t\t}\n\t\tactualPitch += transpose;\n\t\treturn actualPitch;\n\t}\n\n\tfunction setKeySignature(elem) {\n\t\tvar accidentals = [0,0,0,0,0,0,0];\n\t\tif (!elem.accidentals) return accidentals;\n\t\tfor (var i = 0; i < elem.accidentals.length; i++) {\n\t\t\tvar acc = elem.accidentals[i];\n\t\t\tvar d;\n\t\t\tswitch (acc.acc) {\n\t\t\t\tcase \"flat\": d = -1; break;\n\t\t\t\tcase \"quarterflat\": d = -0.25; break;\n\t\t\t\tcase \"sharp\": d = 1; break;\n\t\t\t\tcase \"quartersharp\": d = 0.25; break;\n\t\t\t\tdefault: d = 0; break;\n\t\t\t}\n\n\t\t\tvar lowercase = acc.note.toLowerCase();\n\t\t\tvar note = extractNote(lowercase.charCodeAt(0)-'c'.charCodeAt(0));\n\t\t\taccidentals[note]+=d;\n\t\t}\n\t\treturn accidentals;\n\t}\n\n\tfunction processGraceNotes(graces, companionDuration) {\n\t\t// Grace notes take up half of the note value. So if there are many of them they are all real short.\n\t\tvar graceDuration = 0;\n\t\tvar ret = [];\n\t\tvar grace;\n\t\tfor (var g = 0; g < graces.length; g++) {\n\t\t\tgrace = graces[g];\n\t\t\tgraceDuration += grace.duration;\n\t\t}\n\t\tvar multiplier = companionDuration/2 / graceDuration;\n\n\t\tfor (g = 0; g < graces.length; g++) {\n\t\t\tgrace = graces[g];\n\t\t\tvar actualPitch = adjustPitch(grace);\n\t\t\tif (currentInstrument === drumInstrument && percmap) {\n\t\t\t\tvar name = pitchesToPerc(grace)\n\t\t\t\tif (name && percmap[name])\n\t\t\t\t\tactualPitch = percmap[name].sound;\n\t\t\t}\n\t\t\tvar pitch = { pitch: actualPitch, duration: grace.duration*multiplier };\n\t\t\tpitch = adjustForMicroTone(pitch);\n\t\t\tret.push(pitch);\n\t\t}\n\t\treturn ret;\n\t}\n\n\tfunction writeGraceNotes(graces, start, velocity, currentInstrument) {\n\t\tvar midiGrace = [];\n\t\tvelocity = Math.round(velocity)\n\t\tfor (var g = 0; g < graces.length; g++) {\n\t\t\tvar gp = graces[g];\n\t\t\tcurrentTrack.push({cmd: 'note', pitch: gp.pitch, volume: velocity, start: start, duration: gp.duration, gap: 0, instrument:currentInstrument, style: 'grace'});\n\t\t\tmidiGrace.push({\n\t\t\t\tpitch: gp.pitch,\n\t\t\t\tdurationInMeasures: gp.duration,\n\t\t\t\tvolume: velocity,\n\t\t\t\tinstrument: currentInstrument\n\t\t\t});\n\t\t\tstart += gp.duration;\n\t\t}\n\t\treturn midiGrace;\n\t}\n\n\tvar quarterToneFactor = 0.02930223664349;\n\tfunction adjustForMicroTone(description) {\n\t\t// if the pitch is not a whole number then make it a whole number and add a tuning factor\n\t\tvar pitch = ''+description.pitch;\n\t\tif (pitch.indexOf(\".75\") >= 0) {\n\t\t\tdescription.pitch = Math.round(description.pitch);\n\t\t\tdescription.cents = -50;\n\t\t} else if (pitch.indexOf(\".25\") >= 0) {\n\t\t\tdescription.pitch = Math.round(description.pitch);\n\t\t\tdescription.cents = 50;\n\t\t}\n\n\t\treturn description;\n\t}\n\n\tfunction extractOctave(pitch) {\n\t\treturn Math.floor(pitch/7);\n\t}\n\n\tfunction extractNote(pitch) {\n\t\tpitch = pitch%7;\n\t\tif (pitch<0) pitch+=7;\n\t\treturn pitch;\n\t}\n\n\n\tfunction normalizeDrumDefinition(params) {\n\t\t// Be very strict with the drum definition. If anything is not perfect,\n\t\t// just turn the drums off.\n\t\t// Perhaps all of this logic belongs in the parser instead.\n\t\tif (params.pattern.length === 0 || params.on === false)\n\t\t\treturn { on: false };\n\n\t\tvar str = params.pattern[0];\n\t\tvar events = [];\n\t\tvar event = \"\";\n\t\tvar totalPlay = 0;\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\tif (str[i] === 'd')\n\t\t\t\ttotalPlay++;\n\t\t\tif (str[i] === 'd' || str[i] === 'z') {\n\t\t\t\tif (event.length !== 0) {\n\t\t\t\t\tevents.push(event);\n\t\t\t\t\tevent = str[i];\n\t\t\t\t} else\n\t\t\t\t\tevent = event + str[i];\n\t\t\t} else {\n\t\t\t\tif (event.length === 0) {\n\t\t\t\t\t// there was an error: the string should have started with d or z\n\t\t\t\t\treturn {on: false};\n\t\t\t\t}\n\t\t\t\tevent = event + str[i];\n\t\t\t}\n\t\t}\n\n\t\tif (event.length !== 0)\n\t\t\tevents.push(event);\n\n\t\t// Now the events array should have one item per event.\n\t\t// There should be two more params for each event: the volume and the pitch.\n\t\tif (params.pattern.length !== totalPlay*2 + 1)\n\t\t\treturn { on: false };\n\n\t\tvar ret = { on: true, bars: params.bars, pattern: []};\n\t\tvar beatLength = getBeatFraction(meter);\n\t\tvar playCount = 0;\n\t\tfor (var j = 0; j < events.length; j++) {\n\t\t\tevent = events[j];\n\t\t\tvar len = 1;\n\t\t\tvar div = false;\n\t\t\tvar num = 0;\n\t\t\tfor (var k = 1; k < event.length; k++) {\n\t\t\t\tswitch(event[k]) {\n\t\t\t\t\tcase \"/\":\n\t\t\t\t\t\tif (num !== 0)\n\t\t\t\t\t\t\tlen *= num;\n\t\t\t\t\t\tnum = 0;\n\t\t\t\t\t\tdiv = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"1\":\n\t\t\t\t\tcase \"2\":\n\t\t\t\t\tcase \"3\":\n\t\t\t\t\tcase \"4\":\n\t\t\t\t\tcase \"5\":\n\t\t\t\t\tcase \"6\":\n\t\t\t\t\tcase \"7\":\n\t\t\t\t\tcase \"8\":\n\t\t\t\t\tcase \"9\":\n\t\t\t\t\t\tnum = num*10 +event[k];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn { on: false };\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (div) {\n\t\t\t\tif (num === 0) num = 2; // a slash by itself is interpreted as \"/2\"\n\t\t\t\tlen /= num;\n\t\t\t} else if (num)\n\t\t\t\tlen *= num;\n\t\t\tif (event[0] === 'd') {\n\t\t\t\tret.pattern.push({ len: len * beatLength, pitch: params.pattern[1 + playCount], velocity: params.pattern[1 + playCount + totalPlay]});\n\t\t\t\tplayCount++;\n\t\t\t} else\n\t\t\t\tret.pattern.push({ len: len * beatLength, pitch: null});\n\t\t}\n\t\tdrumBars = params.bars ? params.bars : 1;\n\t\treturn ret;\n\t}\n\n\tfunction alignDrumToMeter() {\n\t\tif (!drumDefinition ||!drumDefinition.pattern) {\n\t\t\treturn;\n\t\t}\n\t\tvar ret = drumDefinition;\n\t\t// Now normalize the pattern to cover the correct number of measures. The note lengths passed are relative to each other and need to be scaled to fit a measure.\n\t\tvar totalTime = 0;\n\t\tvar measuresPerBeat = meter.num/meter.den;\n\t\tfor (var ii = 0; ii < ret.pattern.length; ii++)\n\t\t\ttotalTime += ret.pattern[ii].len;\n\t\tvar factor = totalTime /  drumBars / measuresPerBeat;\n\t\tfor (ii = 0; ii < ret.pattern.length; ii++)\n\t\t\tret.pattern[ii].len = ret.pattern[ii].len / factor;\n\t\tdrumDefinition = ret;\n\t}\n\n\tfunction writeDrum(channel) {\n\t\tif (drumTrack.length === 0 && !drumDefinition.on)\n\t\t\treturn;\n\n\t\tvar measureLen = meter.num/meter.den;\n\t\tif (drumTrack.length === 0) {\n\t\t\tif (lastEventTime < measureLen)\n\t\t\t\treturn; // This is true if there are pickup notes. The drum doesn't start until the first full measure.\n\t\t\tdrumTrack.push({cmd: 'program', channel: channel, instrument: drumInstrument});\n\t\t}\n\n\t\tif (!drumDefinition.on) {\n\t\t\t// this is the case where there has been a drum track, but it was specifically turned off.\n\t\t\treturn;\n\t\t}\n\t\tvar start = lastBarTime;\n\t\tfor (var i = 0; i < drumDefinition.pattern.length; i++) {\n\t\t\tvar len = durationRounded(drumDefinition.pattern[i].len);\n\t\t\tif (drumDefinition.pattern[i].pitch) {\n\t\t\t\tdrumTrack.push({\n\t\t\t\t\tcmd: 'note',\n\t\t\t\t\tpitch: drumDefinition.pattern[i].pitch,\n\t\t\t\t\tvolume: drumDefinition.pattern[i].velocity,\n\t\t\t\t\tstart: start,\n\t\t\t\t\tduration: len,\n\t\t\t\t\tgap: 0,\n\t\t\t\t\tinstrument: drumInstrument});\n\t\t\t}\n\t\t\tstart += len;\n\t\t}\n\t}\n\n\tfunction findOctaves(tracks, detuneCents) {\n\t\tvar timing = {};\n\t\tfor (var i = 0; i < tracks.length; i++) {\n\t\t\tfor (var j = 0; j < tracks[i].length; j++) {\n\t\t\t\tvar note = tracks[i][j];\n\t\t\t\tif (note.cmd === \"note\") {\n\t\t\t\t\tif (timing[note.start] === undefined)\n\t\t\t\t\t\ttiming[note.start] = [];\n\t\t\t\t\ttiming[note.start].push({track: i, event: j, pitch: note.pitch});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar keys = Object.keys(timing);\n\t\tfor (i = 0; i < keys.length; i++) {\n\t\t\tvar arr = timing[keys[i]];\n\t\t\tif (arr.length > 1) {\n\t\t\t\tarr = arr.sort(function(a,b) {\n\t\t\t\t\treturn a.pitch - b.pitch;\n\t\t\t\t});\n\t\t\t\tvar topEvent = arr[arr.length-1];\n\t\t\t\tvar topNote = topEvent.pitch % 12;\n\t\t\t\tvar found = false;\n\t\t\t\tfor (j = 0; !found && j < arr.length-1; j++) {\n\t\t\t\t\tif (arr[j].pitch % 12 === topNote)\n\t\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t\tif (found) {\n\t\t\t\t\tvar event = tracks[topEvent.track][topEvent.event];\n\t\t\t\t\tif (!event.cents)\n\t\t\t\t\t\tevent.cents = 0;\n\t\t\t\t\tevent.cents += detuneCents;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n})();\n\nmodule.exports = flatten;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/abc_midi_flattener.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/abc_midi_renderer.js":
/*!***********************************************************!*\
  !*** ./node_modules/abcjs/src/synth/abc_midi_renderer.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_midi_renderer.js: Create the actual format for the midi.\n\nvar centsToFactor = __webpack_require__(/*! ./cents-to-factor */ \"(ssr)/./node_modules/abcjs/src/synth/cents-to-factor.js\");\nvar rendererFactory;\n\n(function() {\n\t\"use strict\";\n\tfunction setAttributes(elm, attrs) {\n\t\tfor (var attr in attrs)\n\t\t\tif (attrs.hasOwnProperty(attr))\n\t\t\t\telm.setAttribute(attr, attrs[attr]);\n\t\treturn elm;\n\t}\n\n\tfunction Midi() {\n\t\tthis.trackstrings = \"\";\n\t\tthis.trackcount = 0;\n\t\tthis.noteOnAndChannel = \"%90\";\n\t\tthis.noteOffAndChannel = \"%80\";\n\t}\n\n\tMidi.prototype.setTempo = function(qpm) {\n\t\tif (this.trackcount === 0) {\n\t\t\tthis.startTrack();\n\t\t\tthis.track += \"%00%FF%51%03\" + toHex(Math.round(60000000 / qpm), 6);\n\t\t\tthis.endTrack();\n\t\t}\n\t};\n\n\tMidi.prototype.setGlobalInfo = function(qpm, name, key, time) {\n\t\tif (this.trackcount === 0) {\n\t\t\tthis.startTrack();\n\t\t\tvar divisions = Math.round(60000000 / qpm);\n\t\t\t// Add the tempo\n\t\t\tthis.track += \"%00%FF%51%03\" + toHex(divisions, 6);\n\n\t\t\tif (key)\n\t\t\t\tthis.track += keySignature(key);\n\t\t\tif (time)\n\t\t\t\tthis.track += timeSignature(time);\n\t\t\tif (name) {\n\t\t\t\tthis.track += encodeString(name, \"%01\");\n\t\t\t}\n\t\t\tthis.endTrack();\n\t\t}\n\t};\n\n\tMidi.prototype.startTrack = function() {\n\t\tthis.noteWarped = {};\n\t\tthis.track = \"\";\n\t\tthis.trackName = \"\";\n\t\tthis.trackInstrument = \"\";\n\t\tthis.silencelength = 0;\n\t\tthis.trackcount++;\n\t\tif (this.instrument) {\n\t\t\tthis.setInstrument(this.instrument);\n\t\t}\n\t};\n\n\tMidi.prototype.endTrack = function() {\n\t\tthis.track = this.trackName + this.trackInstrument + this.track;\n\t\tvar tracklength = toHex(this.track.length / 3 + 4, 8);\n\t\tthis.track = \"MTrk\" + tracklength + // track header\n\t\t\tthis.track +\n\t\t\t'%00%FF%2F%00'; // track end\n\t\tthis.trackstrings += this.track;\n\t};\n\n\tMidi.prototype.setText = function(type, text) {\n\t\t// MIDI defines the following types of events:\n\t\t//FF 01 len text Text Event\n\t\t//FF 02 len text Copyright Notice\n\t\t//FF 03 len text Sequence/Track Name\n\t\t//FF 04 len text Instrument Name\n\t\t//FF 05 len text Lyric\n\t\t//FF 06 len text Marker\n\t\t//FF 07 len text Cue Point\n\t\tswitch(type) {\n\t\t\tcase 'name':\n\t\t\t\tthis.trackName = encodeString(text, \"%03\");\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tMidi.prototype.setInstrument = function(number) {\n\t\tthis.trackInstrument = \"%00%C0\" + toHex(number, 2);\n\t\tthis.instrument = number;\n\t};\n\n\tMidi.prototype.setChannel = function(number, pan) {\n\t\tthis.channel = number;\n\t\tvar ccPrefix = \"%00%B\" + this.channel.toString(16);\n\t\t// Reset midi, in case it was set previously.\n\t\tthis.track += ccPrefix + \"%79%00\"; // Reset All Controllers\n\t\tthis.track += ccPrefix + \"%40%00\"; // Damper pedal\n\t\tthis.track += ccPrefix + \"%5B%30\"; // Effect 1 Depth (reverb)\n\t\t// Translate pan as -1 to 1 to 0 to 127\n\t\tif (!pan)\n\t\t\tpan = 0;\n\t\tpan = Math.round((pan + 1) * 64);\n\t\tthis.track += ccPrefix + \"%0A\" + toHex(pan, 2); // Pan\n\t\tthis.track += ccPrefix + \"%07%64\"; // Channel Volume\n\n\t\tthis.noteOnAndChannel = \"%9\" + this.channel.toString(16);\n\t\tthis.noteOffAndChannel = \"%8\" + this.channel.toString(16);\n\t};\n\n\tvar HALF_STEP = 4096; // For the pitch wheel - (i.e. the distance from C to C#)\n\tMidi.prototype.startNote = function(pitch, loudness, cents) {\n\t\tthis.track += toDurationHex(this.silencelength); // only need to shift by amount of silence (if there is any)\n\t\tthis.silencelength = 0;\n\t\tif (cents) {\n\t\t\t// the pitch is altered so send a midi pitch wheel event\n\t\t\tthis.track += \"%e\" + this.channel.toString(16);\n\t\t\tvar bend = Math.round(centsToFactor(cents)*HALF_STEP);\n\t\t\tthis.track += to7BitHex(0x2000 + bend);\n\t\t\tthis.track += toDurationHex(0); // this all happens at once so there is a zero length here\n\t\t\tthis.noteWarped[pitch] = true;\n\t\t}\n\t\tthis.track += this.noteOnAndChannel;\n\t\tthis.track += \"%\" + pitch.toString(16) + toHex(loudness, 2); //note\n\t};\n\n\tMidi.prototype.endNote = function(pitch) {\n\t\tthis.track += toDurationHex(this.silencelength); // only need to shift by amount of silence (if there is any)\n\t\tthis.silencelength = 0;\n\t\tif (this.noteWarped[pitch]) {\n\t\t\t// the pitch was altered so alter it back.\n\t\t\tthis.track += \"%e\" + this.channel.toString(16);\n\t\t\tthis.track += to7BitHex(0x2000);\n\t\t\tthis.track += toDurationHex(0); // this all happens at once so there is a zero length here\n\t\t\tthis.noteWarped[pitch] = false;\n\t\t}\n\t\tthis.track += this.noteOffAndChannel;\n\t\tthis.track += \"%\" + pitch.toString(16) + \"%00\";//end note\n\t};\n\n\tMidi.prototype.addRest = function(length) {\n\t\tthis.silencelength += length;\n\t\tif (this.silencelength < 0)\n\t\t\tthis.silencelength = 0;\n\t};\n\n\tMidi.prototype.getData = function() {\n\t\treturn \"data:audio/midi,\" +\n\t\t\t\"MThd%00%00%00%06%00%01\" + toHex(this.trackcount, 4) + \"%01%e0\" + // header\n\t\t\tthis.trackstrings;\n\t};\n\n\tMidi.prototype.embed = function(parent, noplayer) {\n\n\t\tvar data = this.getData();\n\n\t\tvar link = setAttributes(document.createElement('a'), {\n\t\t\thref: data\n\t\t});\n\t\tlink.innerHTML = \"download midi\";\n\t\tparent.insertBefore(link, parent.firstChild);\n\n\t\tif (noplayer) return;\n\n\t\tvar embed = setAttributes(document.createElement('embed'), {\n\t\t\tsrc: data,\n\t\t\ttype: 'video/quicktime',\n\t\t\tcontroller: 'true',\n\t\t\tautoplay: 'false',\n\t\t\tloop: 'false',\n\t\t\tenablejavascript: 'true',\n\t\t\tstyle: 'display:block; height: 20px;'\n\t\t});\n\t\tparent.insertBefore(embed, parent.firstChild);\n\t};\n\n\tfunction encodeString(str, cmdType) {\n\t\t// If there are multi-byte chars, we don't know how long the string will be until we create it.\n\t\tvar nameArray = \"\";\n\t\tfor (var i = 0; i < str.length; i++)\n\t\t\tnameArray += toHex(str.charCodeAt(i), 2);\n\t\treturn \"%00%FF\" + cmdType + toHex(nameArray.length/3, 2) + nameArray; // Each byte is represented by three chars \"%XX\", so divide by 3 to get the length.\n\t}\n\n\tfunction keySignature(key) {\n\t\t//00 FF 5902 03 00 - key signature\n\t\tif (!key || !key.accidentals)\n\t\t\treturn \"\";\n\t\tvar hex = \"%00%FF%59%02\";\n\t\tvar sharpCount = 0;\n\t\tvar flatCount = 256;\n\t\tfor (var i = 0; i < key.accidentals.length; i++) {\n\t\t\tif (key.accidentals[i].acc === \"sharp\") sharpCount++;\n\t\t\telse if (key.accidentals[i].acc === \"flat\") flatCount--;\n\t\t}\n\t\tvar sig = flatCount !== 256 ? toHex(flatCount, 2) : toHex(sharpCount, 2);\n\t\tvar mode = (key.mode === \"m\") ? \"%01\" : \"%00\";\n\t\treturn hex + sig + mode;\n\t}\n\n\tfunction timeSignature(time) {\n\t\t//00 FF 58 04 04 02 30 08 - time signature\n\t\tvar hex = \"%00%FF%58%04\" + toHex(time.num,2);\n\t\tvar dens = { 1: 0, 2: 1, 4: 2, 8: 3, 16: 4, 32: 5 };\n\t\tvar den = dens[time.den];\n\t\tif (!den)\n\t\t\treturn \"\"; // the denominator is not supported, so just don't include this.\n\t\thex += toHex(den, 2);\n\n\t\tvar clocks;\n\t\tswitch (time.num+\"/\"+time.den) {\n\t\t\tcase \"2/4\":\n\t\t\tcase \"3/4\":\n\t\t\tcase \"4/4\":\n\t\t\tcase \"5/4\":\n\t\t\t\tclocks = 24;\n\t\t\t\tbreak;\n\t\t\tcase \"6/4\":\n\t\t\t\tclocks = 72;\n\t\t\t\tbreak;\n\t\t\tcase \"2/2\":\n\t\t\tcase \"3/2\":\n\t\t\tcase \"4/2\":\n\t\t\t\tclocks = 48;\n\t\t\t\tbreak;\n\t\t\tcase \"3/8\":\n\t\t\tcase \"6/8\":\n\t\t\tcase \"9/8\":\n\t\t\tcase \"12/8\":\n\t\t\t\tclocks = 36;\n\t\t\t\tbreak;\n\t\t}\n\t\tif (!clocks)\n\t\t\treturn \"\"; // time sig is not supported.\n\t\thex += toHex(clocks, 2);\n\t\treturn hex + \"%08\";\n\t}\n\n\t// s is assumed to be of even length\n\tfunction encodeHex(s) {\n\t\tvar ret = \"\";\n\t\tfor (var i = 0; i < s.length; i += 2) {\n\t\t\tret += \"%\";\n\t\t\tret += s.substr(i, 2);\n\t\t}\n\t\treturn ret;\n\t}\n\n\tfunction toHex(n, padding) {\n\t\tvar s = n.toString(16);\n\t\ts = s.split(\".\")[0];\n\t\twhile (s.length < padding) {\n\t\t\ts = \"0\" + s;\n\t\t}\n\t\tif (s.length > padding)\n\t\t\ts = s.substring(0,padding)\n\t\treturn encodeHex(s);\n\t}\n\n\tfunction to7BitHex(n) {\n\t\t// this takes a number and shifts all digits from the 7th one to the left.\n\t\tn = Math.round(n);\n\t\tvar lower = n % 128;\n\t\tvar higher = n - lower;\n\t\treturn toHex(higher*2+lower, 4);\n\t}\n\n\tfunction toDurationHex(n) {\n\t\tvar res = 0;\n\t\tvar a = [];\n\n\t\t// cut up into 7 bit chunks;\n\t\tn = Math.round(n);\n\t\twhile (n !== 0) {\n\t\t\ta.push(n & 0x7F);\n\t\t\tn = n >> 7;\n\t\t}\n\n\t\t// join the 7 bit chunks together, all but last chunk get leading 1\n\t\tfor (var i = a.length - 1; i >= 0; i--) {\n\t\t\tres = res << 8;\n\t\t\tvar bits = a[i];\n\t\t\tif (i !== 0) {\n\t\t\t\tbits = bits | 0x80;\n\t\t\t}\n\t\t\tres = res | bits;\n\t\t}\n\n\t\tvar padding = res.toString(16).length;\n\t\tpadding += padding % 2;\n\n\t\treturn toHex(res, padding);\n\t}\n\n\trendererFactory = function() {\n\t\treturn new Midi();\n\t};\n})();\n\nmodule.exports = rendererFactory;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/abc_midi_renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/abc_midi_sequencer.js":
/*!************************************************************!*\
  !*** ./node_modules/abcjs/src/synth/abc_midi_sequencer.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_midi_sequencer.js: Turn parsed abc into a linear series of events.\n\nvar sequence;\nvar parseCommon = __webpack_require__(/*! ../parse/abc_common */ \"(ssr)/./node_modules/abcjs/src/parse/abc_common.js\");\n\n(function() {\n\t\"use strict\";\n\n\tvar measureLength = 1; // This should be set by the meter, but just in case that is missing, we'll take a guess.\n\t// The abc is provided to us line by line. It might have repeats in it. We want to re arrange the elements to\n\t// be an array of voices with all the repeats embedded, and no lines. Then it is trivial to go through the events\n\t// one at a time and turn it into midi.\n\n\tvar PERCUSSION_PROGRAM = 128;\n\n\tsequence = function(abctune, options) {\n\t\t// Global options\n\t\toptions = options || {};\n\t\tvar qpm;\n\t\tvar program = options.program || 0;\t// The program if there isn't a program specified.\n\t\tvar transpose = options.midiTranspose || 0;\n\t\t// If the tune has a visual transpose then that needs to be subtracted out because we are getting the visual object.\n\t\tif (abctune.visualTranspose)\n\t\t\ttranspose -= abctune.visualTranspose;\n\t\tvar channel = options.channel || 0;\n\t\tvar channelExplicitlySet = false;\n\t\tvar drumPattern = options.drum || \"\";\n\t\tvar drumBars = options.drumBars || 1;\n\t\tvar drumIntro = options.drumIntro || 0;\n\t\tvar drumOn = drumPattern !== \"\";\n\t\tvar drumOffAfterIntro = !!options.drumOff\n\t\tvar style = []; // The note head style for each voice.\n\t\tvar rhythmHeadThisBar = false; // Rhythm notation was detected.\n\t\tvar crescendoSize = 50; // how much to increase or decrease volume when crescendo/diminuendo is encountered.\n\n\t\t// All of the above overrides need to be integers\n\t\tprogram = parseInt(program, 10);\n\t\ttranspose = parseInt(transpose, 10);\n\t\tchannel = parseInt(channel, 10);\n\t\tif (channel === 10)\n\t\t\tprogram = PERCUSSION_PROGRAM;\n\t\tdrumPattern = drumPattern.split(\" \");\n\t\tdrumBars = parseInt(drumBars, 10);\n\t\tdrumIntro = parseInt(drumIntro, 10);\n\n\t\tvar bagpipes = abctune.formatting.bagpipes; // If it is bagpipes, then the gracenotes are played on top of the main note.\n\t\tif (bagpipes)\n\t\t\tprogram = 71;\n\n\t\t// %%MIDI fermatafixed\n\t\t// %%MIDI fermataproportional\n\t\t// %%MIDI deltaloudness n\n\t\t// %%MIDI gracedivider b\n\t\t// %%MIDI ratio n m\n\t\t// %%MIDI beat a b c n\n\t\t// %%MIDI grace a/b\n\t\t// %%MIDI trim x/y\n\n\t\t// %MIDI gchordon\n\t\t// %MIDI gchordoff\n\t\t// %%MIDI bassprog 45\n\t\t// %%MIDI chordprog 24\n\t\t// %%MIDI chordname name n1 n2 n3 n4 n5 n6\n\n\t\t//%%MIDI beat ⟨int1⟩ ⟨int2⟩ ⟨int3⟩ ⟨int4⟩: controls the volumes of the notes in a measure. The first note in a bar has volume ⟨int1⟩; other ‘strong’ notes have volume ⟨int2⟩ and all the rest have volume ⟨int3⟩. These values must be in the range 0–127. The parameter ⟨int4⟩ determines which notes are ‘strong’. If the time signature is x/y, then each note is given a position number k = 0, 1, 2. . . x-1 within each bar. If k is a multiple of ⟨int4⟩, then the note is ‘strong’.\n\n\t\tvar startingMidi = [];\n\t\tif (abctune.formatting.midi) {\n\t\t\t//console.log(\"MIDI Formatting:\", abctune.formatting.midi);\n\t\t\tvar globals = abctune.formatting.midi;\n\t\t\tif (globals.program && globals.program.length > 0) {\n\t\t\t\tprogram = globals.program[0];\n\t\t\t\tif (globals.program.length > 1) {\n\t\t\t\t\tprogram = globals.program[1];\n\t\t\t\t\tchannel = globals.program[0];\n\t\t\t\t}\n\t\t\t\tchannelExplicitlySet = true;\n\t\t\t}\n\t\t\tif (globals.transpose)\n\t\t\t\ttranspose = globals.transpose[0];\n\t\t\tif (globals.channel) {\n\t\t\t\tchannel = globals.channel[0];\n\t\t\t\tchannelExplicitlySet = true;\n\t\t\t}\n\t\t\tif (globals.drum)\n\t\t\t\tdrumPattern = globals.drum;\n\t\t\tif (globals.drumbars)\n\t\t\t\tdrumBars = globals.drumbars[0];\n\t\t\tif (globals.drumon)\n\t\t\t\tdrumOn = true;\n\t\t\tif (channel === 10)\n\t\t\t\tprogram = PERCUSSION_PROGRAM;\n\t\t\tif (globals.beat)\n\t\t\t\tstartingMidi.push({ el_type: 'beat', beats: globals.beat })\n\t\t\tif (globals.nobeataccents)\n\t\t\t\tstartingMidi.push({ el_type: 'beataccents', value: false });\n\n\t\t}\n\n\t\t// Specified options in abc string.\n\n\t\t// If the tempo was passed in, use that.\n\t\t// If the tempo is specified, use that.\n\t\t// If there is a default, use that.\n\t\t// Otherwise, use the default.\n\t\tif (options.qpm)\n\t\t\tqpm = parseInt(options.qpm, 10);\n\t\telse if (abctune.metaText.tempo)\n\t\t\tqpm = interpretTempo(abctune.metaText.tempo, abctune.getBeatLength());\n\t\telse if (options.defaultQpm)\n\t\t\tqpm = options.defaultQpm;\n\t\telse\n\t\t\tqpm = 180; \t// The tempo if there isn't a tempo specified.\n\n\t\tvar startVoice = [];\n\t\tif (bagpipes)\n\t\t\tstartVoice.push({ el_type: 'bagpipes' });\n\t\tstartVoice.push({ el_type: 'instrument', program: program });\n\t\tif (channel)\n\t\t\tstartVoice.push({ el_type: 'channel', channel: channel });\n\t\tif (transpose)\n\t\t\tstartVoice.push({ el_type: 'transpose', transpose: transpose });\n\t\tstartVoice.push({ el_type: 'tempo', qpm: qpm });\n\t\tfor (var ss = 0; ss < startingMidi.length;ss++)\n\t\t\tstartVoice.push(startingMidi[ss]);\n\n\t\t// the relevant part of the input structure is:\n\t\t// abctune\n\t\t//\t\tarray lines\n\t\t//\t\t\tarray staff\n\t\t//\t\t\t\tobject key\n\t\t//\t\t\t\tobject meter\n\t\t//\t\t\t\tarray voices\n\t\t//\t\t\t\t\tarray abcelem\n\n\t\t// visit each voice completely in turn\n\t\tvar voices = [];\n\t\tvar clefTransposeActive = []\n\t\tvar inCrescendo = [];\n\t\tvar inDiminuendo = [];\n\t\tvar durationCounter = [0];\n\t\tvar tempoChanges = {};\n\t\ttempoChanges[\"0\"] = { el_type: 'tempo', qpm: qpm, timing: 0 };\n\t\tvar currentVolume;\n\t\tvar startRepeatPlaceholder = []; // There is a place holder for each voice.\n\t\tvar skipEndingPlaceholder = []; // This is the place where the first ending starts.\n\t\tvar startingDrumSet = false;\n\t\tvar lines = abctune.lines; //abctune.deline(); TODO-PER: can switch to this, then simplify the loops below.\n\t\tfor (var i = 0; i < lines.length; i++) {\n\t\t\t// For each group of staff lines in the tune.\n\t\t\tvar line = lines[i];\n\t\t\tif (line.staff) {\n\t\t\t\tvar staves = line.staff;\n\t\t\t\tvar voiceNumber = 0;\n\t\t\t\tfor (var j = 0; j < staves.length; j++) {\n\t\t\t\t\tvar staff = staves[j];\n\t\t\t\t\tif (staff.clef && staff.clef.type === \"TAB\")\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t// For each staff line\n\t\t\t\t\tfor (var k = 0; k < staff.voices.length; k++) {\n\t\t\t\t\t\t// For each voice in a staff line\n\t\t\t\t\t\tvar voice = staff.voices[k];\n\t\t\t\t\t\tif (!voices[voiceNumber]) {\n\t\t\t\t\t\t\tvoices[voiceNumber] = [].concat(JSON.parse(JSON.stringify(startVoice)));\n\t\t\t\t\t\t\tvar voiceName = getTrackTitle(line.staff, voiceNumber);\n\t\t\t\t\t\t\tif (voiceName)\n\t\t\t\t\t\t\t\tvoices[voiceNumber].unshift({el_type: \"name\", trackName: voiceName});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Negate any transposition for the percussion staff.\n\t\t\t\t\t\tif (transpose && staff.clef.type === \"perc\")\n\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: 'transpose', transpose: 0 });\n\n\t\t\t\t\t\tif (staff.clef && staff.clef.type === 'perc' && !channelExplicitlySet) {\n\t\t\t\t\t\t\tfor (var cl = 0; cl < voices[voiceNumber].length; cl++) {\n\t\t\t\t\t\t\t\tif (voices[voiceNumber][cl].el_type === 'instrument')\n\t\t\t\t\t\t\t\t\tvoices[voiceNumber][cl].program = PERCUSSION_PROGRAM;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (staff.key) {\n\t\t\t\t\t\t\taddKey(voices[voiceNumber], staff.key);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (staff.meter) {\n\t\t\t\t\t\t\taddMeter(voices[voiceNumber], staff.meter);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!startingDrumSet && drumOn) { // drum information is only needed once, so use the first line and track 0.\n\t\t\t\t\t\t\tvoices[voiceNumber].push({el_type: 'drum', params: {pattern: drumPattern, bars: drumBars, on: drumOn, intro: drumIntro}});\n\t\t\t\t\t\t\tstartingDrumSet = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (staff.clef && staff.clef.type !== \"perc\" && staff.clef.transpose) {\n\t\t\t\t\t\t\tstaff.clef.el_type = 'clef';\n\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: 'transpose', transpose: staff.clef.transpose });\n\t\t\t\t\t\t\tclefTransposeActive[voiceNumber] = false\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (staff.clef && staff.clef.type) {\n\t\t\t\t\t\t\tif (staff.clef.type.indexOf(\"-8\") >= 0) {\n\t\t\t\t\t\t\t\tvoices[voiceNumber].push({el_type: 'transpose', transpose: -12});\n\t\t\t\t\t\t\t\tclefTransposeActive[voiceNumber] = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (staff.clef.type.indexOf(\"+8\") >= 0) {\n\t\t\t\t\t\t\t\tvoices[voiceNumber].push({el_type: 'transpose', transpose: 12});\n\t\t\t\t\t\t\t\tclefTransposeActive[voiceNumber] = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// if we had a previous treble+8 and now have a regular clef, then cancel the transposition\n\t\t\t\t\t\t\t\tif (clefTransposeActive[voiceNumber]) {\n\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: 'transpose', transpose: 0 });\n\t\t\t\t\t\t\t\t\tclefTransposeActive[voiceNumber] = false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (abctune.formatting.midi && abctune.formatting.midi.drumoff) {\n\t\t\t\t\t\t\t// If there is a drum off command right at the beginning it is put in the metaText instead of the stream,\n\t\t\t\t\t\t\t// so we will just insert it here.\n\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: 'bar' });\n\t\t\t\t\t\t\tvoices[voiceNumber].push({el_type: 'drum', params: {pattern: \"\", on: false }});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar noteEventsInBar = 0;\n\t\t\t\t\t\tvar tripletMultiplier = 0;\n\t\t\t\t\t\tvar tripletDurationTotal = 0; // try to mitigate the js rounding problems.\n\t\t\t\t\t\tvar tripletDurationCount = 0;\n\t\t\t\t\t\tcurrentVolume = [105, 95, 85, 1];\n\n\t\t\t\t\t\tfor (var v = 0; v < voice.length; v++) {\n\t\t\t\t\t\t\t// For each element in a voice\n\t\t\t\t\t\t\tvar elem = voice[v];\n\t\t\t\t\t\t\tswitch (elem.el_type) {\n\t\t\t\t\t\t\t\tcase \"note\":\n\t\t\t\t\t\t\t\t\tif (inCrescendo[k]) {\n\t\t\t\t\t\t\t\t\t\tcurrentVolume[0] += inCrescendo[k];\n\t\t\t\t\t\t\t\t\t\tcurrentVolume[1] += inCrescendo[k];\n\t\t\t\t\t\t\t\t\t\tcurrentVolume[2] += inCrescendo[k];\n\t\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: 'beat', beats: currentVolume.slice(0) });\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (inDiminuendo[k]) {\n\t\t\t\t\t\t\t\t\t\tcurrentVolume[0] += inDiminuendo[k];\n\t\t\t\t\t\t\t\t\t\tcurrentVolume[1] += inDiminuendo[k];\n\t\t\t\t\t\t\t\t\t\tcurrentVolume[2] += inDiminuendo[k];\n\t\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: 'beat', beats: currentVolume.slice(0) });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsetDynamics(elem);\n\n\t\t\t\t\t\t\t\t\t// regular items are just pushed.\n\t\t\t\t\t\t\t\t\tif (!elem.rest || elem.rest.type !== 'spacer') {\n\t\t\t\t\t\t\t\t\t\tvar noteElem = { elem: elem, el_type: \"note\", timing: durationCounter[voiceNumber] }; // Make a copy so that modifications aren't kept except for adding the midiPitches\n\t\t\t\t\t\t\t\t\t\tif (elem.style)\n\t\t\t\t\t\t\t\t\t\t\tnoteElem.style = elem.style;\n\t\t\t\t\t\t\t\t\t\telse if (style[voiceNumber])\n\t\t\t\t\t\t\t\t\t\t\tnoteElem.style = style[voiceNumber];\n\t\t\t\t\t\t\t\t\t\tnoteElem.duration = (elem.duration === 0) ? 0.25 : elem.duration;\n\t\t\t\t\t\t\t\t\t\tif (elem.startTriplet) {\n\t\t\t\t\t\t\t\t\t\t\ttripletMultiplier = elem.tripletMultiplier;\n\t\t\t\t\t\t\t\t\t\t\ttripletDurationTotal = elem.startTriplet * tripletMultiplier * elem.duration;\n\t\t\t\t\t\t\t\t\t\t\tif (elem.startTriplet !== elem.tripletR) { // most commonly (3:2:2\n\t\t\t\t\t\t\t\t\t\t\t\tif (v + elem.tripletR <= voice.length) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar durationTotal = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (var w = v; w < v + elem.tripletR; w++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdurationTotal += voice[w].duration;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttripletDurationTotal = tripletMultiplier * durationTotal;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tnoteElem.duration = noteElem.duration * tripletMultiplier;\n\t\t\t\t\t\t\t\t\t\t\tnoteElem.duration = Math.round(noteElem.duration*1000000)/1000000;\n\t\t\t\t\t\t\t\t\t\t\ttripletDurationCount = noteElem.duration;\n\t\t\t\t\t\t\t\t\t\t} else if (tripletMultiplier) {\n\t\t\t\t\t\t\t\t\t\t\tif (elem.endTriplet) {\n\t\t\t\t\t\t\t\t\t\t\t\ttripletMultiplier = 0;\n\t\t\t\t\t\t\t\t\t\t\t\tnoteElem.duration = Math.round((tripletDurationTotal - tripletDurationCount)*1000000)/1000000;\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tnoteElem.duration = noteElem.duration * tripletMultiplier;\n\t\t\t\t\t\t\t\t\t\t\t\tnoteElem.duration = Math.round(noteElem.duration*1000000)/1000000;\n\t\t\t\t\t\t\t\t\t\t\t\ttripletDurationCount += noteElem.duration;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (elem.rest) noteElem.rest = elem.rest;\n\t\t\t\t\t\t\t\t\t\tif (elem.decoration) noteElem.decoration = elem.decoration.slice(0);\n\t\t\t\t\t\t\t\t\t\tif (elem.pitches) noteElem.pitches = parseCommon.cloneArray(elem.pitches);\n\t\t\t\t\t\t\t\t\t\tif (elem.gracenotes) noteElem.gracenotes = parseCommon.cloneArray(elem.gracenotes);\n\t\t\t\t\t\t\t\t\t\tif (elem.chord) noteElem.chord = parseCommon.cloneArray(elem.chord);\n\n\t\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push(noteElem);\n\t\t\t\t\t\t\t\t\t\tif (elem.style === \"rhythm\") {\n\t\t\t\t\t\t\t\t\t\t\trhythmHeadThisBar = true;\n\t\t\t\t\t\t\t\t\t\t\tchordVoiceOffThisBar(voices)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tnoteEventsInBar++;\n\t\t\t\t\t\t\t\t\t\tdurationCounter[voiceNumber] += noteElem.duration;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"key\":\n\t\t\t\t\t\t\t\tcase \"keySignature\":\n\t\t\t\t\t\t\t\t\taddKey(voices[voiceNumber], elem);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"meter\":\n\t\t\t\t\t\t\t\t\taddMeter(voices[voiceNumber], elem);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"clef\": // need to keep this to catch the \"transpose\" element.\n\t\t\t\t\t\t\t\t\tif (elem.transpose)\n\t\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: 'transpose', transpose: elem.transpose });\n\t\t\t\t\t\t\t\t\tif (elem.type) {\n\t\t\t\t\t\t\t\t\t\tif (elem.type.indexOf(\"-8\") >= 0)\n\t\t\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: 'transpose', transpose: -12 });\n\t\t\t\t\t\t\t\t\t\telse if (elem.type.indexOf(\"+8\") >= 0)\n\t\t\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: 'transpose', transpose: 12 });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"tempo\":\n\t\t\t\t\t\t\t\t\tqpm = interpretTempo(elem, abctune.getBeatLength());\n\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: 'tempo', qpm: qpm, timing: durationCounter[voiceNumber] });\n\t\t\t\t\t\t\t\t\ttempoChanges[''+durationCounter[voiceNumber]] = { el_type: 'tempo', qpm: qpm, timing: durationCounter[voiceNumber] };\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"bar\":\n\t\t\t\t\t\t\t\t\tif (noteEventsInBar > 0) // don't add two bars in a row.\n\t\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: 'bar' }); // We need the bar marking to reset the accidentals.\n\t\t\t\t\t\t\t\t\tsetDynamics(elem);\n\t\t\t\t\t\t\t\t\tnoteEventsInBar = 0;\n\t\t\t\t\t\t\t\t\t// figure out repeats and endings --\n\t\t\t\t\t\t\t\t\t// The important part is where there is a start repeat, and end repeat, or a first ending.\n\t\t\t\t\t\t\t\t\tvar endRepeat = (elem.type === \"bar_right_repeat\" || elem.type === \"bar_dbl_repeat\");\n\t\t\t\t\t\t\t\t\tvar startEnding = (elem.startEnding === '1');\n\t\t\t\t\t\t\t\t\tvar startRepeat = (elem.type === \"bar_left_repeat\" || elem.type === \"bar_dbl_repeat\" || elem.type === \"bar_right_repeat\");\n\t\t\t\t\t\t\t\t\tif (endRepeat) {\n\t\t\t\t\t\t\t\t\t\tvar s = startRepeatPlaceholder[voiceNumber];\n\t\t\t\t\t\t\t\t\t\tif (!s) s = 0; // If there wasn't a left repeat, then we repeat from the beginning.\n\t\t\t\t\t\t\t\t\t\tvar e = skipEndingPlaceholder[voiceNumber];\n\t\t\t\t\t\t\t\t\t\tif (!e) e = voices[voiceNumber].length; // If there wasn't a first ending marker, then we copy everything.\n\t\t\t\t\t\t\t\t\t\t// duplicate each of the elements - this has to be a deep copy.\n\t\t\t\t\t\t\t\t\t\tfor (var z = s; z < e; z++) {\n\t\t\t\t\t\t\t\t\t\t\tvar item = Object.assign({},voices[voiceNumber][z]);\n\t\t\t\t\t\t\t\t\t\t\tif (item.pitches)\n\t\t\t\t\t\t\t\t\t\t\t\titem.pitches = parseCommon.cloneArray(item.pitches);\n\t\t\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push(item);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// reset these in case there is a second repeat later on.\n\t\t\t\t\t\t\t\t\t\tskipEndingPlaceholder[voiceNumber] = undefined;\n\t\t\t\t\t\t\t\t\t\tstartRepeatPlaceholder[voiceNumber] = undefined;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (startEnding)\n\t\t\t\t\t\t\t\t\t\tskipEndingPlaceholder[voiceNumber] = voices[voiceNumber].length;\n\t\t\t\t\t\t\t\t\tif (startRepeat)\n\t\t\t\t\t\t\t\t\t\tstartRepeatPlaceholder[voiceNumber] = voices[voiceNumber].length;\n\t\t\t\t\t\t\t\t\trhythmHeadThisBar = false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'style':\n\t\t\t\t\t\t\t\t\tstyle[voiceNumber] = elem.head;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'timeSignature':\n\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push(interpretMeter(elem));\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'part':\n\t\t\t\t\t\t\t\t\t// TODO-PER: If there is a part section in the header, then this should probably affect the repeats.\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'stem':\n\t\t\t\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\t\t\tcase 'break':\n\t\t\t\t\t\t\t\tcase 'font':\n\t\t\t\t\t\t\t\t\t// These elements don't affect sound\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'midi':\n\t\t\t\t\t\t\t\t\t//console.log(\"MIDI inline\", elem); // TODO-PER: for debugging. Remove this.\n\t\t\t\t\t\t\t\t\tvar drumChange = false;\n\t\t\t\t\t\t\t\t\tswitch (elem.cmd) {\n\t\t\t\t\t\t\t\t\t\tcase \"drumon\": drumOn = true; drumChange = true; break;\n\t\t\t\t\t\t\t\t\t\tcase \"drumoff\": drumOn = false; drumChange = true; break;\n\t\t\t\t\t\t\t\t\t\tcase \"drum\": drumPattern = elem.params; drumChange = true; break;\n\t\t\t\t\t\t\t\t\t\tcase \"drumbars\": drumBars = elem.params[0]; drumChange = true; break;\n\t\t\t\t\t\t\t\t\t\tcase \"drummap\":\n\t\t\t\t\t\t\t\t\t\t\t// This is handled before getting here so it can be ignored.\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase \"channel\":\n\t\t\t\t\t\t\t\t\t\t\t// There's not much needed for the channel except to look out for the percussion channel\n\t\t\t\t\t\t\t\t\t\t\tif (elem.params[0] === 10)\n\t\t\t\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: 'instrument', program: PERCUSSION_PROGRAM });\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase \"program\":\n\t\t\t\t\t\t\t\t\t\t\taddIfDifferent(voices[voiceNumber], { el_type: 'instrument', program: elem.params[0] });\n\t\t\t\t\t\t\t\t\t\t\tchannelExplicitlySet = true;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase \"transpose\":\n\t\t\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: 'transpose', transpose: elem.params[0] });\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase \"gchordoff\":\n\t\t\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: 'gchordOn', tacet: true });\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase \"gchordon\":\n\t\t\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: 'gchordOn', tacet: false });\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase \"beat\":\n\t\t\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: 'beat', beats: elem.params });\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase \"nobeataccents\":\n\t\t\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: 'beataccents', value: false });\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase \"beataccents\":\n\t\t\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: 'beataccents', value: true });\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase \"vol\":\n\t\t\t\t\t\t\t\t\t\tcase \"volinc\":\n\t\t\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: elem.cmd, volume: elem.params[0] });\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase \"swing\":\n\t\t\t\t\t\t\t\t\t\tcase \"gchord\":\n\t\t\t\t\t\t\t\t\t\tcase \"bassvol\":\n\t\t\t\t\t\t\t\t\t\tcase \"chordvol\":\n\t\t\t\t\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: elem.cmd, param: elem.params[0] });\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase \"bassprog\": // MAE 22 May 2024\n\t\t\t\t\t\t\t\t\t\tcase \"chordprog\": // MAE 22 May 2024\n\t\t\t\t\t                      voices[voiceNumber].push({\n\t\t\t\t\t                        el_type: elem.cmd,\n\t\t\t\t\t                        value: elem.params[0],\n\t\t\t\t\t                        octaveShift: elem.params[1]\n\t\t\t\t\t                      });\n\t\t\t\t\t                      break;\n\n\t\t\t\t\t                    // MAE 23 Jun 2024\n\t\t\t\t\t                    case \"gchordbars\":\n\t\t\t\t\t                        voices[voiceNumber].push({\n\t\t\t\t\t                          el_type: elem.cmd,\n\t\t\t\t\t                          param: elem.params[0]\n\t\t\t\t\t                        });\n\t\t\t\t\t                    break;\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"MIDI seq: midi cmd not handled: \", elem.cmd, elem);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (drumChange) {\n\t\t\t\t\t\t\t\t\t\tvoices[0].push({el_type: 'drum', params: { pattern: drumPattern, bars: drumBars, intro: drumIntro, on: drumOn}});\n\t\t\t\t\t\t\t\t\t\tstartingDrumSet = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tconsole.log(\"MIDI: element type \" + elem.el_type + \" not handled.\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoiceNumber++;\n\t\t\t\t\t\tif (!durationCounter[voiceNumber])\n\t\t\t\t\t\t\tdurationCounter[voiceNumber] = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction setDynamics(elem) {\n\t\t\t\t\tvar volumes = {//stressBeat1, stressBeatDown, stressBeatUp\n\t\t\t\t\t\t'pppp': [15, 10, 5, 1],\n\t\t\t\t\t\t'ppp': [30, 20, 10, 1],\n\t\t\t\t\t\t'pp': [45, 35, 20, 1],\n\t\t\t\t\t\t'p': [60, 50, 35, 1],\n\t\t\t\t\t\t'mp': [75, 65, 50, 1],\n\t\t\t\t\t\t'mf': [90, 80, 65, 1],\n\t\t\t\t\t\t'f': [105, 95, 80, 1],\n\t\t\t\t\t\t'ff': [120, 110, 95, 1],\n\t\t\t\t\t\t'fff': [127, 125, 110, 1],\n\t\t\t\t\t\t'ffff': [127, 125, 110, 1]\n\t\t\t\t\t};\n\n\t\t\t\t\tvar dynamicType;\n\t\t\t\t\tif (elem.decoration) {\n\t\t\t\t\t\tif (elem.decoration.indexOf('pppp') >= 0)\n\t\t\t\t\t\t\tdynamicType = 'pppp';\n\t\t\t\t\t\telse if (elem.decoration.indexOf('ppp') >= 0)\n\t\t\t\t\t\t\tdynamicType = 'ppp';\n\t\t\t\t\t\telse if (elem.decoration.indexOf('pp') >= 0)\n\t\t\t\t\t\t\tdynamicType = 'pp';\n\t\t\t\t\t\telse if (elem.decoration.indexOf('p') >= 0)\n\t\t\t\t\t\t\tdynamicType = 'p';\n\t\t\t\t\t\telse if (elem.decoration.indexOf('mp') >= 0)\n\t\t\t\t\t\t\tdynamicType = 'mp';\n\t\t\t\t\t\telse if (elem.decoration.indexOf('mf') >= 0)\n\t\t\t\t\t\t\tdynamicType = 'mf';\n\t\t\t\t\t\telse if (elem.decoration.indexOf('f') >= 0)\n\t\t\t\t\t\t\tdynamicType = 'f';\n\t\t\t\t\t\telse if (elem.decoration.indexOf('ff') >= 0)\n\t\t\t\t\t\t\tdynamicType = 'ff';\n\t\t\t\t\t\telse if (elem.decoration.indexOf('fff') >= 0)\n\t\t\t\t\t\t\tdynamicType = 'fff';\n\t\t\t\t\t\telse if (elem.decoration.indexOf('ffff') >= 0)\n\t\t\t\t\t\t\tdynamicType = 'ffff';\n\n\t\t\t\t\t\tif (dynamicType) {\n\t\t\t\t\t\t\tcurrentVolume = volumes[dynamicType].slice(0);\n\t\t\t\t\t\t\tlet volumesPerNotePitch = [currentVolume];\n\t\t\t\t\t\t\tif(Array.isArray(elem.decoration)){\n\t\t\t\t\t\t\t\tvolumesPerNotePitch = [];\n\t\t\t\t\t\t\t\telem.decoration.forEach(d=>{\n\t\t\t\t\t\t\t\t\tif (d in volumes)\n\t\t\t\t\t\t\t\t\t\tvolumesPerNotePitch.push(volumes[d].slice(0));\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvoices[voiceNumber].push({ el_type: 'beat', beats: currentVolume.slice(0), volumesPerNotePitch: volumesPerNotePitch, });\n\t\t\t\t\t\t\tinCrescendo[k] = false;\n\t\t\t\t\t\t\tinDiminuendo[k] = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (elem.decoration.indexOf(\"crescendo(\") >= 0) {\n\t\t\t\t\t\t\tvar n = numNotesToDecoration(voice, v, \"crescendo)\");\n\t\t\t\t\t\t\tvar top = Math.min(127, currentVolume[0] + crescendoSize);\n\t\t\t\t\t\t\tvar endDec = endingVolume(voice, v+n+1, Object.keys(volumes));\n\t\t\t\t\t\t\tif (endDec)\n\t\t\t\t\t\t\t\ttop = volumes[endDec][0];\n\t\t\t\t\t\t\tif (n > 0)\n\t\t\t\t\t\t\t\tinCrescendo[k] = Math.floor((top - currentVolume[0]) / n);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tinCrescendo[k] = false;\n\t\t\t\t\t\t\tinDiminuendo[k] = false;\n\t\t\t\t\t\t} else if (elem.decoration.indexOf(\"crescendo)\") >= 0) {\n\t\t\t\t\t\t\tinCrescendo[k] = false;\n\t\t\t\t\t\t} else if (elem.decoration.indexOf(\"diminuendo(\") >= 0) {\n\t\t\t\t\t\t\tvar n2 = numNotesToDecoration(voice, v, \"diminuendo)\");\n\t\t\t\t\t\t\tvar bottom = Math.max(15, currentVolume[0] - crescendoSize);\n\t\t\t\t\t\t\tvar endDec2 = endingVolume(voice, v+n2+1, Object.keys(volumes));\n\t\t\t\t\t\t\tif (endDec2)\n\t\t\t\t\t\t\t\tbottom = volumes[endDec2][0];\n\t\t\t\t\t\t\tinCrescendo[k] = false;\n\t\t\t\t\t\t\tif (n2 > 0)\n\t\t\t\t\t\t\t\tinDiminuendo[k] = Math.floor((bottom - currentVolume[0]) / n2);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tinDiminuendo[k] = false;\n\t\t\t\t\t\t} else if (elem.decoration.indexOf(\"diminuendo)\") >= 0) {\n\t\t\t\t\t\t\tinDiminuendo[k] = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// If there are tempo changes, make sure they are in all the voices. This must be done post process because all the elements in all the voices need to be created first.\n\t\tinsertTempoChanges(voices, tempoChanges);\n\n\t\tif (drumIntro) {\n\t\t\tvar pickups = abctune.getPickupLength();\n\t\t\t// add some measures of rests to the start of each track.\n\t\t\tfor (var vv = 0; vv < voices.length; vv++) {\n\t\t\t\tvar insertPoint = 0;\n\t\t\t\twhile (voices[vv][insertPoint].el_type !== \"note\" && voices[vv].length > insertPoint)\n\t\t\t\t\tinsertPoint++;\n\t\t\t\tif (voices[vv].length > insertPoint) {\n\t\t\t\t\tfor (var w = 0; w < drumIntro; w++) {\n\t\t\t\t\t\t// If it is the last measure of intro, subtract the pickups.\n\t\t\t\t\t\tif (pickups === 0 || w < drumIntro-1) {\n\t\t\t\t\t\t\tvoices[vv].splice(insertPoint, 0, \n\t\t\t\t\t\t\t\t{el_type: \"note\", rest: {type: \"rest\"}, duration: measureLength},\n\t\t\t\t\t\t\t\t{ el_type: \"bar\" }\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tinsertPoint += 2\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvoices[vv].splice(insertPoint++, 0, {el_type: \"note\", rest: {type: \"rest\"}, duration: measureLength-pickups});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (drumOffAfterIntro) {\n\t\t\t\t\t\tdrumOn = false\n\t\t\t\t\t\tvoices[vv].splice(insertPoint++, 0, {el_type: 'drum', params: { pattern: drumPattern, bars: drumBars, intro: drumIntro, on: drumOn}});\n\t\t\t\t\t\tdrumOffAfterIntro = false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (voices.length > 0 && voices[0].length > 0) {\n\t\t\tvoices[0][0].pickupLength = abctune.getPickupLength();\n\t\t}\n\t\treturn voices;\n\t};\n\n\tfunction numNotesToDecoration(voice, start, decoration) {\n\t\tvar counter = 0;\n\t\tfor (var i = start+1; i < voice.length; i++) {\n\t\t\tif (voice[i].el_type === \"note\")\n\t\t\t\tcounter++;\n\t\t\tif (voice[i].decoration && voice[i].decoration.indexOf(decoration) >= 0)\n\t\t\t\treturn counter;\n\t\t}\n\t\treturn counter;\n\t}\n\tfunction endingVolume(voice, start, volumeDecorations) {\n\t\tvar end = Math.min(voice.length, start + 3); // If we have a volume within a couple notes of the end then assume that is the destination.\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tif (voice[i].el_type === \"note\") {\n\t\t\t\tif (voice[i].decoration) {\n\t\t\t\t\tfor (var j = 0; j < voice[i].decoration.length; j++) {\n\t\t\t\t\t\tif (volumeDecorations.indexOf(voice[i].decoration[j]) >= 0)\n\t\t\t\t\t\t\treturn voice[i].decoration[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction insertTempoChanges(voices, tempoChanges) {\n\t\tif (!tempoChanges || tempoChanges.length === 0)\n\t\t\treturn;\n\t\tvar changePositions = Object.keys(tempoChanges);\n\t\tfor (var i = 0; i < voices.length; i++) {\n\t\t\tvar voice = voices[i];\n\t\t\tvar lastTempo = tempoChanges['0'] ? tempoChanges['0'].qpm : 0; // Don't insert redundant changes. This happens normally when repeating from the beginning, but could happen anywhere that there is a tempo marking that is the same as the last one.\n\t\t\tfor (var j = 0; j < voice.length; j++) {\n\t\t\t\tvar el = voice[j];\n\t\t\t\tif (el.el_type === \"tempo\")\n\t\t\t\t\tlastTempo = el.qpm;\n\t\t\t\tif (changePositions.indexOf(''+el.timing) >= 0 && lastTempo !== tempoChanges[''+el.timing].qpm) {\n\t\t\t\t\tlastTempo = tempoChanges[''+el.timing].qpm;\n\t\t\t\t\tif (el.el_type === \"tempo\") {\n\t\t\t\t\t\tel.qpm = tempoChanges[''+el.timing].qpm;\n\t\t\t\t\t\tj++; // when there is a tempo element the next element has the same timing and we don't want it to match the second time.\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//console.log(\"tempo position\", i, j, el);\n\t\t\t\t\t\tvoices[i].splice(j, 0, {el_type: \"tempo\", qpm: tempoChanges[''+el.timing].qpm, timing: el.timing});\n\t\t\t\t\t\tj +=2; // skip the element we just inserted.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction chordVoiceOffThisBar(voices) {\n\t\tfor (var i = 0; i < voices.length; i++) {\n\t\t\tvar voice = voices[i];\n\t\t\tvar j = voice.length-1;\n\t\t\twhile (j >= 0 && voice[j].el_type !== 'bar') {\n\t\t\t\tvoice[j].noChordVoice = true;\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getTrackTitle(staff, voiceNumber) {\n\t\tif (!staff || staff.length <= voiceNumber || !staff[voiceNumber].title)\n\t\t\treturn undefined;\n\t\treturn staff[voiceNumber].title.join(\" \");\n\t}\n\n\tfunction interpretTempo(element, beatLength) {\n\t\tvar duration = 1/4;\n\t\tif (element.duration) {\n\t\t\tduration = element.duration[0];\n\t\t}\n\t\tvar bpm = 60;\n\t\tif (element.bpm) {\n\t\t\tbpm = element.bpm;\n\t\t}\n\t\t// The tempo is defined with a beat length of \"duration\". If that isn't the natural beat length then there is a translation.\n\t\treturn duration * bpm / beatLength;\n\t}\n\n\tfunction interpretMeter(element) {\n\t\tvar meter;\n\t\tswitch (element.type) {\n\t\t\tcase \"common_time\":\n\t\t\t\tmeter = { el_type: 'meter', num: 4, den: 4 };\n\t\t\t\tbreak;\n\t\t\tcase \"cut_time\":\n\t\t\t\tmeter = { el_type: 'meter', num: 2, den: 2 };\n\t\t\t\tbreak;\n\t\t\tcase \"specified\":\n\t\t\t\t// TODO-PER: only taking the first meter, so the complex meters are not handled.\n\t\t\t\tmeter = { el_type: 'meter', num: element.value[0].num, den: element.value[0].den };\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// This should never happen.\n\t\t\t\tmeter = { el_type: 'meter' };\n\t\t}\n\t\tmeasureLength = meter.num/meter.den;\n\t\treturn meter;\n\t}\n\n\tfunction removeNaturals(accidentals) {\n\t\tvar acc = [];\n\t\tfor (var i = 0; i < accidentals.length; i++) {\n\t\t\tif (accidentals[i].acc !== \"natural\")\n\t\t\t\tacc.push(accidentals[i])\n\t\t}\n\t\treturn acc;\n\t}\n\tfunction addKey(arr, key) {\n\t\tvar newKey;\n\t\tif (key.root === 'HP')\n\t\t\tnewKey = {el_type: 'key', accidentals: [{acc: 'natural', note: 'g'}, {acc: 'sharp', note: 'f'}, {acc: 'sharp', note: 'c'}]};\n\t\telse\n\t\t\tnewKey = {el_type: 'key', accidentals: removeNaturals(key.accidentals) };\n\t\taddIfDifferent(arr, newKey);\n\t}\n\tfunction addMeter(arr, meter) {\n\t\tvar newMeter = interpretMeter(meter);\n\t\taddIfDifferent(arr, newMeter);\n\t}\n\tfunction addIfDifferent(arr, item) {\n\t\tfor (var i = arr.length-1; i >= 0; i--) {\n\t\t\tif (arr[i].el_type === item.el_type) {\n\t\t\t\tif (JSON.stringify(arr[i]) !== JSON.stringify(item))\n\t\t\t\t\tarr.push(item);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tarr.push(item);\n\t}\n\n})();\n\nmodule.exports = sequence;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/abc_midi_sequencer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/active-audio-context.js":
/*!**************************************************************!*\
  !*** ./node_modules/abcjs/src/synth/active-audio-context.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var registerAudioContext = __webpack_require__(/*! ./register-audio-context.js */ \"(ssr)/./node_modules/abcjs/src/synth/register-audio-context.js\");\n\nfunction activeAudioContext() {\n\tif (!window.abcjsAudioContext)\n\t\tregisterAudioContext();\n\treturn window.abcjsAudioContext;\n}\n\nmodule.exports = activeAudioContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL2FjdGl2ZS1hdWRpby1jb250ZXh0LmpzIiwibWFwcGluZ3MiOiJBQUFBLDJCQUEyQixtQkFBTyxDQUFDLG1HQUE2Qjs7QUFFaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy9zeW50aC9hY3RpdmUtYXVkaW8tY29udGV4dC5qcz9kYTBlIl0sInNvdXJjZXNDb250ZW50IjpbInZhciByZWdpc3RlckF1ZGlvQ29udGV4dCA9IHJlcXVpcmUoJy4vcmVnaXN0ZXItYXVkaW8tY29udGV4dC5qcycpO1xuXG5mdW5jdGlvbiBhY3RpdmVBdWRpb0NvbnRleHQoKSB7XG5cdGlmICghd2luZG93LmFiY2pzQXVkaW9Db250ZXh0KVxuXHRcdHJlZ2lzdGVyQXVkaW9Db250ZXh0KCk7XG5cdHJldHVybiB3aW5kb3cuYWJjanNBdWRpb0NvbnRleHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYWN0aXZlQXVkaW9Db250ZXh0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/active-audio-context.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/cents-to-factor.js":
/*!*********************************************************!*\
  !*** ./node_modules/abcjs/src/synth/cents-to-factor.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("// This turns the number of cents to detune into a value that is convenient to use in pitch calculations\n// A cent is 1/100 of a musical half step and is calculated exponentially over the course of an octave.\n// The equation is:\n// Two to the power of cents divided by 1200\n\nfunction centsToFactor(cents) {\n\treturn Math.pow(2, cents/1200);\n}\n\nmodule.exports = centsToFactor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL2NlbnRzLXRvLWZhY3Rvci5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvc3ludGgvY2VudHMtdG8tZmFjdG9yLmpzPzcwYWMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyB0dXJucyB0aGUgbnVtYmVyIG9mIGNlbnRzIHRvIGRldHVuZSBpbnRvIGEgdmFsdWUgdGhhdCBpcyBjb252ZW5pZW50IHRvIHVzZSBpbiBwaXRjaCBjYWxjdWxhdGlvbnNcbi8vIEEgY2VudCBpcyAxLzEwMCBvZiBhIG11c2ljYWwgaGFsZiBzdGVwIGFuZCBpcyBjYWxjdWxhdGVkIGV4cG9uZW50aWFsbHkgb3ZlciB0aGUgY291cnNlIG9mIGFuIG9jdGF2ZS5cbi8vIFRoZSBlcXVhdGlvbiBpczpcbi8vIFR3byB0byB0aGUgcG93ZXIgb2YgY2VudHMgZGl2aWRlZCBieSAxMjAwXG5cbmZ1bmN0aW9uIGNlbnRzVG9GYWN0b3IoY2VudHMpIHtcblx0cmV0dXJuIE1hdGgucG93KDIsIGNlbnRzLzEyMDApO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNlbnRzVG9GYWN0b3I7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/cents-to-factor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/chord-track.js":
/*!*****************************************************!*\
  !*** ./node_modules/abcjs/src/synth/chord-track.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("//\n// The algorithm for chords is:\n// - The chords are done in a separate track.\n// - If there are notes before the first chord, then put that much silence to start the track.\n// - The pattern of chord expression depends on the meter, and how many chords are in a measure.\n// - There is a possibility that a measure will have an incorrect number of beats, if that is the case, then\n// start the pattern anew on the next measure number.\n// - If a chord root is not A-G, then ignore it as if the chord wasn't there at all.\n// - If a chord modification isn't in our supported list, change it to a major triad.\n//\n// - There is a standard pattern of boom-chick for each time sig, or it can be overridden.\n// - For any unrecognized meter, play the full chord on each beat.\n//\n//\t- If there is a chord specified that is not on a beat, move it earlier to the previous beat, unless there is already a chord on that beat.\n//\t- Otherwise, move it later, unless there is already a chord on that beat.\n// \t- Otherwise, ignore it. (TODO-PER: expand this as more support is added.)\n//\n// If there is any note in the melody that has a rhythm head, then assume the melody controls the rhythm, so there is no chord added for that entire measure.\n\nvar ChordTrack = function ChordTrack(numVoices, chordsOff, midiOptions, meter) {\n\tthis.chordTrack = [];\n\tthis.chordTrackFinished = false;\n\tthis.chordChannel = numVoices; // first free channel for chords\n\tthis.currentChords = [];\n\tthis.lastChord;\n\tthis.chordLastBar;\n\tthis.chordsOff = !!chordsOff\n\tthis.gChordTacet = this.chordsOff;\n\tthis.hasRhythmHead = false;\n\tthis.transpose = 0;\n\tthis.lastBarTime = 0;\n\tthis.meter = meter;\n\tthis.tempoChangeFactor = 1;\n\n\t// MAE 17 Jun 2024 - To allow for bass and chord instrument octave shifts\n\tthis.bassInstrument = midiOptions.bassprog && midiOptions.bassprog.length >= 1 ? midiOptions.bassprog[0] : 0;\n\tthis.chordInstrument = midiOptions.chordprog && midiOptions.chordprog.length >= 1 ? midiOptions.chordprog[0] : 0;\n\n\t// MAE For octave shifted bass and chords\n\tthis.bassOctaveShift = midiOptions.bassprog && midiOptions.bassprog.length === 2 ? midiOptions.bassprog[1] : 0;\n\tthis.chordOctaveShift = midiOptions.chordprog && midiOptions.chordprog.length === 2 ? midiOptions.chordprog[1] : 0;\n\n\tthis.boomVolume = midiOptions.bassvol && midiOptions.bassvol.length === 1 ? midiOptions.bassvol[0] : 64;\n\tthis.chickVolume = midiOptions.chordvol && midiOptions.chordvol.length === 1 ? midiOptions.chordvol[0] : 48;\n\n\t// This allows for an initial %%MIDI gchord with no string\n\tif (midiOptions.gchord && (midiOptions.gchord.length > 0)) {\n\t\tthis.overridePattern = parseGChord(midiOptions.gchord[0])\n\t}\n\telse {\n\t\tthis.overridePattern = undefined;\n\t}\n};\n\nChordTrack.prototype.setMeter = function (meter) {\n\tthis.meter = meter\n};\n\nChordTrack.prototype.setTempoChangeFactor = function (tempoChangeFactor) {\n\tthis.tempoChangeFactor = tempoChangeFactor\n};\n\nChordTrack.prototype.setLastBarTime = function (lastBarTime) {\n\tthis.lastBarTime = lastBarTime\n};\n\nChordTrack.prototype.setTranspose = function (transpose) {\n\tthis.transpose = transpose\n};\n\nChordTrack.prototype.setRhythmHead = function (isRhythmHead, elem) {\n\tthis.hasRhythmHead = isRhythmHead\n\tvar ePitches = [];\n\tif (isRhythmHead) {\n\t\tif (this.lastChord && this.lastChord.chick) {\n\t\t\tfor (var i2 = 0; i2 < this.lastChord.chick.length; i2++) {\n\t\t\t\tvar note2 = Object.assign({},elem.pitches[0]);\n\t\t\t\tnote2.actualPitch = this.lastChord.chick[i2];\n\t\t\t\tePitches.push(note2);\n\t\t\t}\n\t\t}\n\t}\n\treturn ePitches\n};\n\nChordTrack.prototype.barEnd = function (element) {\n\tif (this.chordTrack.length > 0 && !this.chordTrackFinished) {\n\t\tthis.resolveChords(this.lastBarTime, timeToRealTime(element.time));\n\t\tthis.currentChords = [];\n\t}\n\tthis.chordLastBar = this.lastChord;\n};\n\nChordTrack.prototype.gChordOn = function (element) {\n\tif (!this.chordsOff)\n\t\tthis.gChordTacet = element.tacet;\n};\n\nChordTrack.prototype.paramChange = function (element) {\n\tswitch (element.el_type) {\n\t\tcase \"gchord\":\n\t\t\t// Skips gchord elements that don't have pattern strings\n\t\t\tif (element.param && element.param.length > 0) {\n\t\t\t\tthis.overridePattern = parseGChord(element.param);\n\n\t\t\t\t// Generate a default duration scale based on the pattern\n\t\t\t\t//this.gchordduration = generateDefaultDurationScale(element.param);\n\t\t\t} else\n\t\t\t\tthis.overridePattern = undefined;\n\t\t\tbreak;\n\t\tcase \"bassprog\":\n\t\t\tthis.bassInstrument = element.value;\n\t\t\tif ((element.octaveShift != undefined) && (element.octaveShift != null)) {\n\t\t\t\tthis.bassOctaveShift = element.octaveShift;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.bassOctaveShift = 0;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"chordprog\":\n\t\t\tthis.chordInstrument = element.value;\n\t\t\tif ((element.octaveShift != undefined) && (element.octaveShift != null)) {\n\t\t\t\tthis.chordOctaveShift = element.octaveShift;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.chordOctaveShift = 0;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"bassvol\":\n\t\t\tthis.boomVolume = element.param;\n\t\t\tbreak;\n\t\tcase \"chordvol\":\n\t\t\tthis.chickVolume = element.param;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log(\"unhandled midi param\", element)\t\n\t}\n};\n\nChordTrack.prototype.finish = function () {\n\tif (!this.chordTrackEmpty()) // Don't do chords on more than one track, so turn off chord detection after we create it.\n\t\tthis.chordTrackFinished = true;\n};\n\nChordTrack.prototype.addTrack = function (tracks) {\n\tif (!this.chordTrackEmpty())\n\t\ttracks.push(this.chordTrack);\n};\n\nChordTrack.prototype.findChord = function (elem) {\n\tif (this.gChordTacet)\n\t\treturn 'break';\n\n\t// TODO-PER: Just using the first chord if there are more than one.\n\tif (this.chordTrackFinished || !elem.chord || elem.chord.length === 0)\n\t\treturn null;\n\n\t// Return the first annotation that is a regular chord: that is, it is in the default place or is a recognized \"tacet\" phrase.\n\tfor (var i = 0; i < elem.chord.length; i++) {\n\t\tvar ch = elem.chord[i];\n\t\tif (ch.position === 'default')\n\t\t\treturn ch.name;\n\t\tif (this.breakSynonyms.indexOf(ch.name.toLowerCase()) >= 0)\n\t\t\treturn 'break';\n\t}\n\treturn null;\n}\n\nChordTrack.prototype.interpretChord = function (name) {\n\t// chords have the format:\n\t// [root][acc][modifier][/][bass][acc]\n\t// (The chord might be surrounded by parens. Just ignore them.)\n\t// root must be present and must be from A-G.\n\t// acc is optional and can be # or b\n\t// The modifier can be a wide variety of things, like \"maj7\". As they are discovered, more are supported here.\n\t// If there is a slash, then there is a bass note, which can be from A-G, with an optional acc.\n\t// If the root is unrecognized, then \"undefined\" is returned and there is no chord.\n\t// If the modifier is unrecognized, a major triad is returned.\n\t// If the bass notes is unrecognized, it is ignored.\n\tif (name.length === 0)\n\t\treturn undefined;\n\tif (name === 'break')\n\t\treturn { chick: [] };\n\tvar root = name.substring(0, 1);\n\tif (root === '(') {\n\t\tname = name.substring(1, name.length - 1);\n\t\tif (name.length === 0)\n\t\t\treturn undefined;\n\t\troot = name.substring(0, 1);\n\t}\n\tvar bass = this.basses[root];\n\tif (!bass)\t// If the bass note isn't listed, then this was an unknown root. Only A-G are accepted.\n\t\treturn undefined;\n\t// Don't transpose the chords more than an octave.\n\tvar chordTranspose = this.transpose;\n\twhile (chordTranspose < -8)\n\t\tchordTranspose += 12;\n\twhile (chordTranspose > 8)\n\t\tchordTranspose -= 12;\n\tbass += chordTranspose;\n\t\n    \t// MAE 31 Aug 2024 - For visual transpose backup range issue\n    \t// If transposed below A or above G, bring it back in the normal backup range\n    \tif (bass < 33){\n      \t\tbass += 12;\n    \t}\n    \telse if (bass > 44){\n\t     \t bass -= 12;\n    \t}\n\n\t// MAE 17 Jun 2024 - Supporting octave shifted bass and chords\n\tvar unshiftedBass = bass;\n\n\tbass += this.bassOctaveShift * 12;\n\n\tvar bass2 = bass - 5;\t// The alternating bass is a 4th below\n\tvar chick;\n\tif (name.length === 1)\n\t\tchick = this.chordNotes(bass, '');\n\tvar remaining = name.substring(1);\n\tvar acc = remaining.substring(0, 1);\n\tif (acc === 'b' || acc === '♭') {\n\t\tunshiftedBass--;\n\t\tbass--;\n\t\tbass2--;\n\t\tremaining = remaining.substring(1);\n\t} else if (acc === '#' || acc === '♯') {\n\t\tunshiftedBass++;\n\t\tbass++;\n\t\tbass2++;\n\t\tremaining = remaining.substring(1);\n\t}\n\tvar arr = remaining.split('/');\n\tchick = this.chordNotes(unshiftedBass, arr[0]);\n\t// If the 5th is altered then the bass is altered. Normally the bass is 7 from the root, so adjust if it isn't.\n\tif (chick.length >= 3) {\n\t\tvar fifth = chick[2] - chick[0];\n\t\tbass2 = bass2 + fifth - 7;\n\t}\n\n\tif (arr.length === 2) {\n\t\tvar explicitBass = this.basses[arr[1].substring(0, 1)];\n\t\tif (explicitBass) {\n\t\t\tvar bassAcc = arr[1].substring(1);\n\t\t\tvar bassShift = { '#': 1, '♯': 1, 'b': -1, '♭': -1 }[bassAcc] || 0;\n\t\t\tbass = this.basses[arr[1].substring(0, 1)] + bassShift + chordTranspose;\n\n\t\t\t// MAE 22 May 2024 - Supporting octave shifted bass and chords\n\t\t\tbass += this.bassOctaveShift * 12;\n\n\t\t\tbass2 = bass;\n\t\t}\n\t}\n\treturn { boom: bass, boom2: bass2, chick: chick };\n}\n\nChordTrack.prototype.chordNotes = function (bass, modifier) {\n\tvar intervals = this.chordIntervals[modifier];\n\tif (!intervals) {\n\t\tif (modifier.slice(0, 2).toLowerCase() === 'ma' || modifier[0] === 'M')\n\t\t\tintervals = this.chordIntervals.M;\n\t\telse if (modifier[0] === 'm' || modifier[0] === '-')\n\t\t\tintervals = this.chordIntervals.m;\n\t\telse\n\t\t\tintervals = this.chordIntervals.M;\n\t}\n\tbass += 12;\t// the chord is an octave above the bass note.\n\n\t// MAE 22 May 2024 - For chick octave shift\n\tbass += (this.chordOctaveShift * 12);\n\n\tvar notes = [];\n\tfor (var i = 0; i < intervals.length; i++) {\n\t\tnotes.push(bass + intervals[i]);\n\t}\n\treturn notes;\n}\n\nChordTrack.prototype.writeNote = function (note, beatLength, volume, beat, noteLength, instrument) {\n\t// undefined means there is a stop time.\n\tif (note !== undefined)\n\t\tthis.chordTrack.push({ cmd: 'note', pitch: note, volume: volume, start: this.lastBarTime + beat * durationRounded(beatLength, this.tempoChangeFactor), duration: durationRounded(noteLength, this.tempoChangeFactor), gap: 0, instrument: instrument });\n}\n\nChordTrack.prototype.chordTrackEmpty = function () {\n\tvar isEmpty = true;\n\tfor (var i = 0; i < this.chordTrack.length && isEmpty; i++) {\n\t\tif (this.chordTrack[i].cmd === 'note')\n\t\t\tisEmpty = false\n\t}\n\treturn isEmpty;\n}\n\nChordTrack.prototype.resolveChords = function (startTime, endTime) {\n\t// If there is a rhythm head anywhere in the measure then don't add a separate rhythm track\n\tif (this.hasRhythmHead)\n\t\treturn\n\n\tvar num = this.meter.num;\n\tvar den = this.meter.den;\n\tvar beatLength = 1 / den;\n\tvar noteLength = beatLength / 2;\n\tvar thisMeasureLength = parseInt(num, 10) / parseInt(den, 10);\n\tvar portionOfAMeasure = thisMeasureLength - (endTime - startTime) / this.tempoChangeFactor;\n\tif (Math.abs(portionOfAMeasure) < 0.00001)\n\t\tportionOfAMeasure = 0;\n\n\t // there wasn't a new chord this measure, so use the last chord declared.\n\t // also the case where there is a chord declared in the measure, but not on its first beat.\n\tif (this.currentChords.length === 0 || this.currentChords[0].beat !== 0) {\n\t\tthis.currentChords.unshift({ beat: 0, chord: this.chordLastBar });\n\t}\n\n\t//console.log(this.currentChords)\n\tvar currentChordsExpanded = expandCurrentChords(this.currentChords, 8*num/den, beatLength)\n\t//console.log(currentChordsExpanded)\n\tvar thisPattern = this.overridePattern ? this.overridePattern : this.rhythmPatterns[num + '/' + den]\n\tif (portionOfAMeasure) {\n\t\tthisPattern = [];\n\t\tvar beatsPresent = ((endTime - startTime) / this.tempoChangeFactor) * 8;\n\t\tfor (var p = 0; p < beatsPresent/2; p += 2) {\n\t\t\tthisPattern.push(\"chick\");\n\t\t\tthisPattern.push(\"\");\n\t\t}\n\t}\n\tif (!thisPattern) {\n\t\tthisPattern = []\n\t\tfor (var p = 0; p < (8*num/den)/2; p++) {\n\t\t\tthisPattern.push('chick')\n\t\t\tthisPattern.push(\"\");\n\t\t}\n\t}\n\tvar firstBoom = true\n\t// If the pattern is overridden, it might be longer than the length of a measure. If so, then ignore the rest of it\n\tvar minLength = Math.min(thisPattern.length, currentChordsExpanded.length)\n\tfor (var p = 0; p < minLength; p++) {\n\t\tif (p > 0 && currentChordsExpanded[p-1] && currentChordsExpanded[p] && currentChordsExpanded[p-1].boom !== currentChordsExpanded[p].boom)\n\t\t\tfirstBoom = true\n\t\tvar type = thisPattern[p]\n\t\tvar isBoom = type.indexOf('boom') >= 0\n\t\t// If we changed chords at a time when we're not expecting a bass note, then add an extra bass note in if the first thing in the pattern is a bass note.\n\t\tvar newBass = !isBoom &&\n\t\t\tp !== 0 &&\n\t\t\tthisPattern[0].indexOf('boom') >= 0 &&\n\t\t\t(!currentChordsExpanded[p-1] || currentChordsExpanded[p-1].boom !== currentChordsExpanded[p].boom)\n\t\tvar pitches = resolvePitch(currentChordsExpanded[p], type, firstBoom, newBass)\n\t\tif (isBoom)\n\t\t\tfirstBoom = false\n\t\tfor (var oo = 0; oo < pitches.length; oo++) {\n\t\t\tthis.writeNote(pitches[oo], \n\t\t\t\t0.125,\n\t\t\t\tisBoom || newBass ? this.boomVolume : this.chickVolume,\n\t\t\t\tp,\n\t\t\t\tnoteLength,\n\t\t\t\tisBoom || newBass ? this.bassInstrument : this.chordInstrument\n\t\t\t)\n\t\t\tif (newBass)\n\t\t\t\tnewBass = false\n\t\t\telse\n\t\t\t\tisBoom = false // only the first note in a chord is a bass note. This handles the case where bass and chord are played at the same time.\n\t\t}\n\t}\n\treturn\n}\n\nChordTrack.prototype.processChord = function (elem) {\n\tif (this.chordTrackFinished)\n\t\treturn\n\tvar chord = this.findChord(elem);\n\tif (chord) {\n\t\tvar c = this.interpretChord(chord);\n\t\t// If this isn't a recognized chord, just completely ignore it.\n\t\tif (c) {\n\t\t\t// If we ever have a chord in this voice, then we add the chord track.\n\t\t\t// However, if there are chords on more than one voice, then just use the first voice.\n\t\t\tif (this.chordTrack.length === 0) {\n\t\t\t\tthis.chordTrack.push({ cmd: 'program', channel: this.chordChannel, instrument: this.chordInstrument });\n\t\t\t}\n\n\t\t\tthis.lastChord = c;\n\t\t\tvar barBeat = calcBeat(this.lastBarTime, timeToRealTime(elem.time));\n\t\t\tthis.currentChords.push({ chord: this.lastChord, beat: barBeat, start: timeToRealTime(elem.time) });\n\t\t}\n\t}\n}\n\nfunction resolvePitch(currentChord, type, firstBoom, newBass) {\n\tvar ret = []\n\tif (!currentChord)\n\t\treturn ret\n\tif (type.indexOf('boom') >= 0)\n\t\tret.push(firstBoom ? currentChord.boom : currentChord.boom2)\n\telse if (newBass)\n\t\tret.push(currentChord.boom)\n\tvar numChordNotes = currentChord.chick.length\n\tif (type.indexOf('chick') >= 0) {\n\t\tfor (var i = 0; i < numChordNotes; i++)\n\t\t\tret.push(currentChord.chick[i])\n\t}\n\tswitch (type) {\n\t\tcase 'DO': ret.push(currentChord.chick[0]); break;\n\t\tcase 'MI': ret.push(currentChord.chick[1]); break;\n\t\tcase 'SOL': ret.push(extractNote(currentChord,2)); break;\n\t\tcase 'TI': ret.push(extractNote(currentChord,3)); break;\n\t\tcase 'TOP': ret.push(extractNote(currentChord,4)); break;\n\t\tcase 'do': ret.push(currentChord.chick[0]+12); break;\n\t\tcase 'mi': ret.push(currentChord.chick[1]+12); break;\n\t\tcase 'sol': ret.push(extractNote(currentChord,2)+12); break;\n\t\tcase 'ti': ret.push(extractNote(currentChord,3)+12); break;\n\t\tcase 'top': ret.push(extractNote(currentChord,4)+12); break;\n\t}\n\treturn ret\n}\n\nfunction extractNote(chord, index) {\n\t// This creates an arpeggio note no matter how many notes are in the chord - if it runs out of notes it continues in the next octave\n\tvar octave = Math.floor(index / chord.chick.length)\n\tvar note = chord.chick[index % chord.chick.length]\n\t//console.log(chord.chick, {index, octave, note}, index % chord.chick.length)\n\treturn note + octave * 12\n}\n\nfunction parseGChord(gchord) {\n\t// TODO-PER: The spec is more complicated than this but for now this will not try to do anything with error cases like the wrong number of beats.\n\tvar pattern = []\n\tfor (var i = 0; i < gchord.length; i++) {\n\t\tvar ch = gchord[i]\n\t\tswitch(ch) {\n\t\t\tcase 'z' : pattern.push(''); break;\n\t\t\tcase '2' : pattern.push(''); break; // TODO-PER: This should extend the last note, but that's a small effect\n\t\t\tcase 'c' : pattern.push('chick'); break;\n\t\t\tcase 'b' : pattern.push('boom&chick'); break;\n\t\t\tcase 'f' : pattern.push('boom'); break;\n\t\t\tcase 'G' : pattern.push('DO'); break;\n\t\t\tcase 'H' : pattern.push('MI'); break;\n\t\t\tcase 'I' : pattern.push('SOL'); break;\n\t\t\tcase 'J' : pattern.push('TI'); break;\n\t\t\tcase 'K' : pattern.push('TOP'); break;\n\t\t\tcase 'g' : pattern.push('do'); break;\n\t\t\tcase 'h' : pattern.push('mi'); break;\n\t\t\tcase 'i' : pattern.push('sol'); break;\n\t\t\tcase 'j' : pattern.push('ti'); break;\n\t\t\tcase 'k' : pattern.push('top'); break;\n\t\t}\n\t}\n\treturn pattern\n}\n\n// This returns an array that has a chord for each 1/8th note position in the current measure\nfunction expandCurrentChords(currentChords, num8thNotes, beatLength) {\n\tbeatLength = beatLength * 8 // this is expressed as a fraction, so that 0.25 is a quarter notes. We want it to be the number of 8th notes\n\tvar chords = []\n\tif (currentChords.length === 0)\n\t\treturn chords\n\n\tvar currentChord = currentChords[0].chord\n\tfor (var i = 1; i < currentChords.length; i++) {\n\t\tvar current = currentChords[i]\n\t\twhile (chords.length < current.beat) {\n\t\t\tchords.push(currentChord)\n\t\t}\n\t\tcurrentChord = current.chord\n\t}\n\twhile (chords.length < num8thNotes)\n\t\tchords.push(currentChord)\n\treturn chords\n}\n\nfunction calcBeat(measureStart, currTime) {\n\tvar distanceFromStart = currTime - measureStart;\n\treturn distanceFromStart * 8;\n}\n\nChordTrack.prototype.breakSynonyms = ['break', '(break)', 'no chord', 'n.c.', 'tacet'];\n\nChordTrack.prototype.basses = {\n\t'A': 33, 'B': 35, 'C': 36, 'D': 38, 'E': 40, 'F': 41, 'G': 43\n};\n\nChordTrack.prototype.chordIntervals = {\n\t// diminished (all flat 5 chords)\n\t'dim': [0, 3, 6],\n\t'°': [0, 3, 6],\n\t'˚': [0, 3, 6],\n\n\t'dim7': [0, 3, 6, 9],\n\t'°7': [0, 3, 6, 9],\n\t'˚7': [0, 3, 6, 9],\n\n\t'ø7': [0, 3, 6, 10],\n\t'm7(b5)': [0, 3, 6, 10],\n\t'm7b5': [0, 3, 6, 10],\n\t'm7♭5': [0, 3, 6, 10],\n\t'-7(b5)': [0, 3, 6, 10],\n\t'-7b5': [0, 3, 6, 10],\n\n\t'7b5': [0, 4, 6, 10],\n\t'7(b5)': [0, 4, 6, 10],\n\t'7♭5': [0, 4, 6, 10],\n\n\t'7(b9,b5)': [0, 4, 6, 10, 13],\n\t'7b9,b5': [0, 4, 6, 10, 13],\n\t'7(#9,b5)': [0, 4, 6, 10, 15],\n\t'7#9b5': [0, 4, 6, 10, 15],\n\t'maj7(b5)': [0, 4, 6, 11],\n\t'maj7b5': [0, 4, 6, 11],\n\t'13(b5)': [0, 4, 6, 10, 14, 21],\n\t'13b5': [0, 4, 6, 10, 14, 21],\n\n\t// minor (all normal 5, minor 3 chords)\n\t'm': [0, 3, 7],\n\t'-': [0, 3, 7],\n\t'm6': [0, 3, 7, 9],\n\t'-6': [0, 3, 7, 9],\n\t'm7': [0, 3, 7, 10],\n\t'-7': [0, 3, 7, 10],\n\n\t'-(b6)': [0, 3, 7, 8],\n\t'-b6': [0, 3, 7, 8],\n\t'-6/9': [0, 3, 7, 9, 14],\n\t'-7(b9)': [0, 3, 7, 10, 13],\n\t'-7b9': [0, 3, 7, 10, 13],\n\t'-maj7': [0, 3, 7, 11],\n\t'-9+7': [0, 3, 7, 11, 13],\n\t'-11': [0, 3, 7, 11, 14, 17],\n\t'm11': [0, 3, 7, 11, 14, 17],\n\t'-maj9': [0, 3, 7, 11, 14],\n\t'-∆9': [0, 3, 7, 11, 14],\n\t'mM9': [0, 3, 7, 11, 14],\n\n\t// major (all normal 5, major 3 chords)\n\t'M': [0, 4, 7],\n\t'6': [0, 4, 7, 9],\n\t'6/9': [0, 4, 7, 9, 14],\n\t'6add9': [0, 4, 7, 9, 14],\n\t'69': [0, 4, 7, 9, 14],\n\n\t'7': [0, 4, 7, 10],\n\t'9': [0, 4, 7, 10, 14],\n\t'11': [0, 7, 10, 14, 17],\n\t'13': [0, 4, 7, 10, 14, 21],\n\t'7b9': [0, 4, 7, 10, 13],\n\t'7♭9': [0, 4, 7, 10, 13],\n\t'7(b9)': [0, 4, 7, 10, 13],\n\t'7(#9)': [0, 4, 7, 10, 15],\n\t'7#9': [0, 4, 7, 10, 15],\n\t'(13)': [0, 4, 7, 10, 14, 21],\n\t'7(9,13)': [0, 4, 7, 10, 14, 21],\n\t'7(#9,b13)': [0, 4, 7, 10, 15, 20],\n\t'7(#11)': [0, 4, 7, 10, 14, 18],\n\t'7#11': [0, 4, 7, 10, 14, 18],\n\t'7(b13)': [0, 4, 7, 10, 20],\n\t'7b13': [0, 4, 7, 10, 20],\n\t'9(#11)': [0, 4, 7, 10, 14, 18],\n\t'9#11': [0, 4, 7, 10, 14, 18],\n\t'13(#11)': [0, 4, 7, 10, 18, 21],\n\t'13#11': [0, 4, 7, 10, 18, 21],\n\n\t'maj7': [0, 4, 7, 11],\n\t'∆7': [0, 4, 7, 11],\n\t'Δ7': [0, 4, 7, 11],\n\t'maj9': [0, 4, 7, 11, 14],\n\t'maj7(9)': [0, 4, 7, 11, 14],\n\t'maj7(11)': [0, 4, 7, 11, 17],\n\t'maj7(#11)': [0, 4, 7, 11, 18],\n\t'maj7(13)': [0, 4, 7, 14, 21],\n\t'maj7(9,13)': [0, 4, 7, 11, 14, 21],\n\n\t'7sus4': [0, 5, 7, 10],\n\t'm7sus4': [0, 3, 7, 10, 17],\n\t'sus4': [0, 5, 7],\n\t'sus2': [0, 2, 7],\n\t'7sus2': [0, 2, 7, 10],\n\t'9sus4': [0, 5, 7, 10, 14],\n\t'13sus4': [0, 5, 7, 10, 14, 21],\n\n\t// augmented (all sharp 5 chords)\n\t'aug7': [0, 4, 8, 10],\n\t'+7': [0, 4, 8, 10],\n\t'+': [0, 4, 8],\n\t'7#5': [0, 4, 8, 10],\n\t'7♯5': [0, 4, 8, 10],\n\t'7+5': [0, 4, 8, 10],\n\t'9#5': [0, 4, 8, 10, 14],\n\t'9♯5': [0, 4, 8, 10, 14],\n\t'9+5': [0, 4, 8, 10, 14],\n\t'-7(#5)': [0, 3, 8, 10],\n\t'-7#5': [0, 3, 8, 10],\n\t'7(#5)': [0, 4, 8, 10],\n\t'7(b9,#5)': [0, 4, 8, 10, 13],\n\t'7b9#5': [0, 4, 8, 10, 13],\n\t'maj7(#5)': [0, 4, 8, 11],\n\t'maj7#5': [0, 4, 8, 11],\n\t'maj7(#5,#11)': [0, 4, 8, 11, 18],\n\t'maj7#5#11': [0, 4, 8, 11, 18],\n\t'9(#5)': [0, 4, 8, 10, 14],\n\t'13(#5)': [0, 4, 8, 10, 14, 21],\n\t'13#5': [0, 4, 8, 10, 14, 21],\n\t// MAE Power chords added 10 April 2024\n\t'5': [0, 7],\n\t'5(8)': [0, 7, 12],\n\t'5add8': [0, 7, 12]\n\n};\n\nChordTrack.prototype.rhythmPatterns = {\n\t\"2/2\": ['boom', '', '', '', 'chick', '', '', ''],\n\t\"3/2\": ['boom', '', '', '', 'chick', '', '', '', 'chick', '', '', ''],\n\t\"4/2\": ['boom', '', '', '', 'chick', '', '', '', 'boom', '', '', '', 'chick', '', '', ''],\n\n\t\"2/4\": ['boom', '', 'chick', ''],\n\t\"3/4\": ['boom', '', 'chick', '', 'chick', ''],\n\t\"4/4\": ['boom', '', 'chick', '', 'boom', '', 'chick', ''],\n\t\"5/4\": ['boom', '', 'chick', '', 'chick', '', 'boom', '', 'chick', ''],\n\t\"6/4\": ['boom', '', 'chick', '', 'boom', '', 'chick', '', 'boom', '', 'chick', ''],\n\n\t\"3/8\": ['boom', '', 'chick'],\n\t\"5/8\": ['boom', 'chick', 'chick', 'boom', 'chick'],\n\t\"6/8\": ['boom', '', 'chick', 'boom', '', 'chick'],\n\t\"7/8\": ['boom', 'chick', 'chick', 'boom', 'chick', 'boom', 'chick'],\n\t\"9/8\": ['boom', '', 'chick', 'boom', '', 'chick', 'boom', '', 'chick'],\n\t\"10/8\": ['boom', 'chick', 'chick', 'boom', 'chick', 'chick', 'boom', 'chick', 'boom', 'chick'],\n\t\"11/8\": ['boom', 'chick', 'chick', 'boom', 'chick', 'chick', 'boom', 'chick', 'boom', 'chick', 'chick'],\n\t\"12/8\": ['boom', '', 'chick', 'boom', '', 'chick', 'boom', '', 'chick', 'boom', '', 'chick'],\n};\n\n// TODO-PER: these are repeated in flattener. Can it be shared?\n\nfunction timeToRealTime(time) {\n\treturn time / 1000000;\n}\n\nfunction durationRounded(duration, tempoChangeFactor) {\n\treturn Math.round(duration * tempoChangeFactor * 1000000) / 1000000;\n}\n\nmodule.exports = ChordTrack;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL2Nob3JkLXRyYWNrLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isa0NBQWtDO0FBQ3RELGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQix1QkFBdUI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGtDQUFrQztBQUN2RDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7O0FBRWI7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQixzQkFBc0I7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLCtOQUErTjtBQUN4UDs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCLHVDQUF1QztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLG1DQUFtQztBQUNsRTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixvQkFBb0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG1CQUFtQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixlQUFlO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixxQkFBcUI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsOEVBQThFO0FBQ3pHOztBQUVBO0FBQ0E7QUFDQSw2QkFBNkIsd0VBQXdFO0FBQ3JHO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixtQkFBbUI7QUFDckM7QUFDQTtBQUNBO0FBQ0EsOENBQThDO0FBQzlDLDhDQUE4QztBQUM5QyxxREFBcUQ7QUFDckQsb0RBQW9EO0FBQ3BELHFEQUFxRDtBQUNyRCxpREFBaUQ7QUFDakQsaURBQWlEO0FBQ2pELHdEQUF3RDtBQUN4RCx1REFBdUQ7QUFDdkQsd0RBQXdEO0FBQ3hEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixvQkFBb0I7QUFDakQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsbUJBQW1CO0FBQ3BDO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEMsZ0NBQWdDLE9BQU87QUFDdkMscUNBQXFDO0FBQ3JDLDBDQUEwQztBQUMxQyxvQ0FBb0M7QUFDcEMsa0NBQWtDO0FBQ2xDLGtDQUFrQztBQUNsQyxtQ0FBbUM7QUFDbkMsa0NBQWtDO0FBQ2xDLG1DQUFtQztBQUNuQyxrQ0FBa0M7QUFDbEMsa0NBQWtDO0FBQ2xDLG1DQUFtQztBQUNuQyxrQ0FBa0M7QUFDbEMsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQiwwQkFBMEI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy9zeW50aC9jaG9yZC10cmFjay5qcz9lNjhiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vXG4vLyBUaGUgYWxnb3JpdGhtIGZvciBjaG9yZHMgaXM6XG4vLyAtIFRoZSBjaG9yZHMgYXJlIGRvbmUgaW4gYSBzZXBhcmF0ZSB0cmFjay5cbi8vIC0gSWYgdGhlcmUgYXJlIG5vdGVzIGJlZm9yZSB0aGUgZmlyc3QgY2hvcmQsIHRoZW4gcHV0IHRoYXQgbXVjaCBzaWxlbmNlIHRvIHN0YXJ0IHRoZSB0cmFjay5cbi8vIC0gVGhlIHBhdHRlcm4gb2YgY2hvcmQgZXhwcmVzc2lvbiBkZXBlbmRzIG9uIHRoZSBtZXRlciwgYW5kIGhvdyBtYW55IGNob3JkcyBhcmUgaW4gYSBtZWFzdXJlLlxuLy8gLSBUaGVyZSBpcyBhIHBvc3NpYmlsaXR5IHRoYXQgYSBtZWFzdXJlIHdpbGwgaGF2ZSBhbiBpbmNvcnJlY3QgbnVtYmVyIG9mIGJlYXRzLCBpZiB0aGF0IGlzIHRoZSBjYXNlLCB0aGVuXG4vLyBzdGFydCB0aGUgcGF0dGVybiBhbmV3IG9uIHRoZSBuZXh0IG1lYXN1cmUgbnVtYmVyLlxuLy8gLSBJZiBhIGNob3JkIHJvb3QgaXMgbm90IEEtRywgdGhlbiBpZ25vcmUgaXQgYXMgaWYgdGhlIGNob3JkIHdhc24ndCB0aGVyZSBhdCBhbGwuXG4vLyAtIElmIGEgY2hvcmQgbW9kaWZpY2F0aW9uIGlzbid0IGluIG91ciBzdXBwb3J0ZWQgbGlzdCwgY2hhbmdlIGl0IHRvIGEgbWFqb3IgdHJpYWQuXG4vL1xuLy8gLSBUaGVyZSBpcyBhIHN0YW5kYXJkIHBhdHRlcm4gb2YgYm9vbS1jaGljayBmb3IgZWFjaCB0aW1lIHNpZywgb3IgaXQgY2FuIGJlIG92ZXJyaWRkZW4uXG4vLyAtIEZvciBhbnkgdW5yZWNvZ25pemVkIG1ldGVyLCBwbGF5IHRoZSBmdWxsIGNob3JkIG9uIGVhY2ggYmVhdC5cbi8vXG4vL1x0LSBJZiB0aGVyZSBpcyBhIGNob3JkIHNwZWNpZmllZCB0aGF0IGlzIG5vdCBvbiBhIGJlYXQsIG1vdmUgaXQgZWFybGllciB0byB0aGUgcHJldmlvdXMgYmVhdCwgdW5sZXNzIHRoZXJlIGlzIGFscmVhZHkgYSBjaG9yZCBvbiB0aGF0IGJlYXQuXG4vL1x0LSBPdGhlcndpc2UsIG1vdmUgaXQgbGF0ZXIsIHVubGVzcyB0aGVyZSBpcyBhbHJlYWR5IGEgY2hvcmQgb24gdGhhdCBiZWF0LlxuLy8gXHQtIE90aGVyd2lzZSwgaWdub3JlIGl0LiAoVE9ETy1QRVI6IGV4cGFuZCB0aGlzIGFzIG1vcmUgc3VwcG9ydCBpcyBhZGRlZC4pXG4vL1xuLy8gSWYgdGhlcmUgaXMgYW55IG5vdGUgaW4gdGhlIG1lbG9keSB0aGF0IGhhcyBhIHJoeXRobSBoZWFkLCB0aGVuIGFzc3VtZSB0aGUgbWVsb2R5IGNvbnRyb2xzIHRoZSByaHl0aG0sIHNvIHRoZXJlIGlzIG5vIGNob3JkIGFkZGVkIGZvciB0aGF0IGVudGlyZSBtZWFzdXJlLlxuXG52YXIgQ2hvcmRUcmFjayA9IGZ1bmN0aW9uIENob3JkVHJhY2sobnVtVm9pY2VzLCBjaG9yZHNPZmYsIG1pZGlPcHRpb25zLCBtZXRlcikge1xuXHR0aGlzLmNob3JkVHJhY2sgPSBbXTtcblx0dGhpcy5jaG9yZFRyYWNrRmluaXNoZWQgPSBmYWxzZTtcblx0dGhpcy5jaG9yZENoYW5uZWwgPSBudW1Wb2ljZXM7IC8vIGZpcnN0IGZyZWUgY2hhbm5lbCBmb3IgY2hvcmRzXG5cdHRoaXMuY3VycmVudENob3JkcyA9IFtdO1xuXHR0aGlzLmxhc3RDaG9yZDtcblx0dGhpcy5jaG9yZExhc3RCYXI7XG5cdHRoaXMuY2hvcmRzT2ZmID0gISFjaG9yZHNPZmZcblx0dGhpcy5nQ2hvcmRUYWNldCA9IHRoaXMuY2hvcmRzT2ZmO1xuXHR0aGlzLmhhc1JoeXRobUhlYWQgPSBmYWxzZTtcblx0dGhpcy50cmFuc3Bvc2UgPSAwO1xuXHR0aGlzLmxhc3RCYXJUaW1lID0gMDtcblx0dGhpcy5tZXRlciA9IG1ldGVyO1xuXHR0aGlzLnRlbXBvQ2hhbmdlRmFjdG9yID0gMTtcblxuXHQvLyBNQUUgMTcgSnVuIDIwMjQgLSBUbyBhbGxvdyBmb3IgYmFzcyBhbmQgY2hvcmQgaW5zdHJ1bWVudCBvY3RhdmUgc2hpZnRzXG5cdHRoaXMuYmFzc0luc3RydW1lbnQgPSBtaWRpT3B0aW9ucy5iYXNzcHJvZyAmJiBtaWRpT3B0aW9ucy5iYXNzcHJvZy5sZW5ndGggPj0gMSA/IG1pZGlPcHRpb25zLmJhc3Nwcm9nWzBdIDogMDtcblx0dGhpcy5jaG9yZEluc3RydW1lbnQgPSBtaWRpT3B0aW9ucy5jaG9yZHByb2cgJiYgbWlkaU9wdGlvbnMuY2hvcmRwcm9nLmxlbmd0aCA+PSAxID8gbWlkaU9wdGlvbnMuY2hvcmRwcm9nWzBdIDogMDtcblxuXHQvLyBNQUUgRm9yIG9jdGF2ZSBzaGlmdGVkIGJhc3MgYW5kIGNob3Jkc1xuXHR0aGlzLmJhc3NPY3RhdmVTaGlmdCA9IG1pZGlPcHRpb25zLmJhc3Nwcm9nICYmIG1pZGlPcHRpb25zLmJhc3Nwcm9nLmxlbmd0aCA9PT0gMiA/IG1pZGlPcHRpb25zLmJhc3Nwcm9nWzFdIDogMDtcblx0dGhpcy5jaG9yZE9jdGF2ZVNoaWZ0ID0gbWlkaU9wdGlvbnMuY2hvcmRwcm9nICYmIG1pZGlPcHRpb25zLmNob3JkcHJvZy5sZW5ndGggPT09IDIgPyBtaWRpT3B0aW9ucy5jaG9yZHByb2dbMV0gOiAwO1xuXG5cdHRoaXMuYm9vbVZvbHVtZSA9IG1pZGlPcHRpb25zLmJhc3N2b2wgJiYgbWlkaU9wdGlvbnMuYmFzc3ZvbC5sZW5ndGggPT09IDEgPyBtaWRpT3B0aW9ucy5iYXNzdm9sWzBdIDogNjQ7XG5cdHRoaXMuY2hpY2tWb2x1bWUgPSBtaWRpT3B0aW9ucy5jaG9yZHZvbCAmJiBtaWRpT3B0aW9ucy5jaG9yZHZvbC5sZW5ndGggPT09IDEgPyBtaWRpT3B0aW9ucy5jaG9yZHZvbFswXSA6IDQ4O1xuXG5cdC8vIFRoaXMgYWxsb3dzIGZvciBhbiBpbml0aWFsICUlTUlESSBnY2hvcmQgd2l0aCBubyBzdHJpbmdcblx0aWYgKG1pZGlPcHRpb25zLmdjaG9yZCAmJiAobWlkaU9wdGlvbnMuZ2Nob3JkLmxlbmd0aCA+IDApKSB7XG5cdFx0dGhpcy5vdmVycmlkZVBhdHRlcm4gPSBwYXJzZUdDaG9yZChtaWRpT3B0aW9ucy5nY2hvcmRbMF0pXG5cdH1cblx0ZWxzZSB7XG5cdFx0dGhpcy5vdmVycmlkZVBhdHRlcm4gPSB1bmRlZmluZWQ7XG5cdH1cbn07XG5cbkNob3JkVHJhY2sucHJvdG90eXBlLnNldE1ldGVyID0gZnVuY3Rpb24gKG1ldGVyKSB7XG5cdHRoaXMubWV0ZXIgPSBtZXRlclxufTtcblxuQ2hvcmRUcmFjay5wcm90b3R5cGUuc2V0VGVtcG9DaGFuZ2VGYWN0b3IgPSBmdW5jdGlvbiAodGVtcG9DaGFuZ2VGYWN0b3IpIHtcblx0dGhpcy50ZW1wb0NoYW5nZUZhY3RvciA9IHRlbXBvQ2hhbmdlRmFjdG9yXG59O1xuXG5DaG9yZFRyYWNrLnByb3RvdHlwZS5zZXRMYXN0QmFyVGltZSA9IGZ1bmN0aW9uIChsYXN0QmFyVGltZSkge1xuXHR0aGlzLmxhc3RCYXJUaW1lID0gbGFzdEJhclRpbWVcbn07XG5cbkNob3JkVHJhY2sucHJvdG90eXBlLnNldFRyYW5zcG9zZSA9IGZ1bmN0aW9uICh0cmFuc3Bvc2UpIHtcblx0dGhpcy50cmFuc3Bvc2UgPSB0cmFuc3Bvc2Vcbn07XG5cbkNob3JkVHJhY2sucHJvdG90eXBlLnNldFJoeXRobUhlYWQgPSBmdW5jdGlvbiAoaXNSaHl0aG1IZWFkLCBlbGVtKSB7XG5cdHRoaXMuaGFzUmh5dGhtSGVhZCA9IGlzUmh5dGhtSGVhZFxuXHR2YXIgZVBpdGNoZXMgPSBbXTtcblx0aWYgKGlzUmh5dGhtSGVhZCkge1xuXHRcdGlmICh0aGlzLmxhc3RDaG9yZCAmJiB0aGlzLmxhc3RDaG9yZC5jaGljaykge1xuXHRcdFx0Zm9yICh2YXIgaTIgPSAwOyBpMiA8IHRoaXMubGFzdENob3JkLmNoaWNrLmxlbmd0aDsgaTIrKykge1xuXHRcdFx0XHR2YXIgbm90ZTIgPSBPYmplY3QuYXNzaWduKHt9LGVsZW0ucGl0Y2hlc1swXSk7XG5cdFx0XHRcdG5vdGUyLmFjdHVhbFBpdGNoID0gdGhpcy5sYXN0Q2hvcmQuY2hpY2tbaTJdO1xuXHRcdFx0XHRlUGl0Y2hlcy5wdXNoKG5vdGUyKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0cmV0dXJuIGVQaXRjaGVzXG59O1xuXG5DaG9yZFRyYWNrLnByb3RvdHlwZS5iYXJFbmQgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuXHRpZiAodGhpcy5jaG9yZFRyYWNrLmxlbmd0aCA+IDAgJiYgIXRoaXMuY2hvcmRUcmFja0ZpbmlzaGVkKSB7XG5cdFx0dGhpcy5yZXNvbHZlQ2hvcmRzKHRoaXMubGFzdEJhclRpbWUsIHRpbWVUb1JlYWxUaW1lKGVsZW1lbnQudGltZSkpO1xuXHRcdHRoaXMuY3VycmVudENob3JkcyA9IFtdO1xuXHR9XG5cdHRoaXMuY2hvcmRMYXN0QmFyID0gdGhpcy5sYXN0Q2hvcmQ7XG59O1xuXG5DaG9yZFRyYWNrLnByb3RvdHlwZS5nQ2hvcmRPbiA9IGZ1bmN0aW9uIChlbGVtZW50KSB7XG5cdGlmICghdGhpcy5jaG9yZHNPZmYpXG5cdFx0dGhpcy5nQ2hvcmRUYWNldCA9IGVsZW1lbnQudGFjZXQ7XG59O1xuXG5DaG9yZFRyYWNrLnByb3RvdHlwZS5wYXJhbUNoYW5nZSA9IGZ1bmN0aW9uIChlbGVtZW50KSB7XG5cdHN3aXRjaCAoZWxlbWVudC5lbF90eXBlKSB7XG5cdFx0Y2FzZSBcImdjaG9yZFwiOlxuXHRcdFx0Ly8gU2tpcHMgZ2Nob3JkIGVsZW1lbnRzIHRoYXQgZG9uJ3QgaGF2ZSBwYXR0ZXJuIHN0cmluZ3Ncblx0XHRcdGlmIChlbGVtZW50LnBhcmFtICYmIGVsZW1lbnQucGFyYW0ubGVuZ3RoID4gMCkge1xuXHRcdFx0XHR0aGlzLm92ZXJyaWRlUGF0dGVybiA9IHBhcnNlR0Nob3JkKGVsZW1lbnQucGFyYW0pO1xuXG5cdFx0XHRcdC8vIEdlbmVyYXRlIGEgZGVmYXVsdCBkdXJhdGlvbiBzY2FsZSBiYXNlZCBvbiB0aGUgcGF0dGVyblxuXHRcdFx0XHQvL3RoaXMuZ2Nob3JkZHVyYXRpb24gPSBnZW5lcmF0ZURlZmF1bHREdXJhdGlvblNjYWxlKGVsZW1lbnQucGFyYW0pO1xuXHRcdFx0fSBlbHNlXG5cdFx0XHRcdHRoaXMub3ZlcnJpZGVQYXR0ZXJuID0gdW5kZWZpbmVkO1xuXHRcdFx0YnJlYWs7XG5cdFx0Y2FzZSBcImJhc3Nwcm9nXCI6XG5cdFx0XHR0aGlzLmJhc3NJbnN0cnVtZW50ID0gZWxlbWVudC52YWx1ZTtcblx0XHRcdGlmICgoZWxlbWVudC5vY3RhdmVTaGlmdCAhPSB1bmRlZmluZWQpICYmIChlbGVtZW50Lm9jdGF2ZVNoaWZ0ICE9IG51bGwpKSB7XG5cdFx0XHRcdHRoaXMuYmFzc09jdGF2ZVNoaWZ0ID0gZWxlbWVudC5vY3RhdmVTaGlmdDtcblx0XHRcdH1cblx0XHRcdGVsc2Uge1xuXHRcdFx0XHR0aGlzLmJhc3NPY3RhdmVTaGlmdCA9IDA7XG5cdFx0XHR9XG5cdFx0XHRicmVhaztcblx0XHRjYXNlIFwiY2hvcmRwcm9nXCI6XG5cdFx0XHR0aGlzLmNob3JkSW5zdHJ1bWVudCA9IGVsZW1lbnQudmFsdWU7XG5cdFx0XHRpZiAoKGVsZW1lbnQub2N0YXZlU2hpZnQgIT0gdW5kZWZpbmVkKSAmJiAoZWxlbWVudC5vY3RhdmVTaGlmdCAhPSBudWxsKSkge1xuXHRcdFx0XHR0aGlzLmNob3JkT2N0YXZlU2hpZnQgPSBlbGVtZW50Lm9jdGF2ZVNoaWZ0O1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSB7XG5cdFx0XHRcdHRoaXMuY2hvcmRPY3RhdmVTaGlmdCA9IDA7XG5cdFx0XHR9XG5cdFx0XHRicmVhaztcblx0XHRjYXNlIFwiYmFzc3ZvbFwiOlxuXHRcdFx0dGhpcy5ib29tVm9sdW1lID0gZWxlbWVudC5wYXJhbTtcblx0XHRcdGJyZWFrO1xuXHRcdGNhc2UgXCJjaG9yZHZvbFwiOlxuXHRcdFx0dGhpcy5jaGlja1ZvbHVtZSA9IGVsZW1lbnQucGFyYW07XG5cdFx0XHRicmVhaztcblx0XHRkZWZhdWx0OlxuXHRcdFx0Y29uc29sZS5sb2coXCJ1bmhhbmRsZWQgbWlkaSBwYXJhbVwiLCBlbGVtZW50KVx0XG5cdH1cbn07XG5cbkNob3JkVHJhY2sucHJvdG90eXBlLmZpbmlzaCA9IGZ1bmN0aW9uICgpIHtcblx0aWYgKCF0aGlzLmNob3JkVHJhY2tFbXB0eSgpKSAvLyBEb24ndCBkbyBjaG9yZHMgb24gbW9yZSB0aGFuIG9uZSB0cmFjaywgc28gdHVybiBvZmYgY2hvcmQgZGV0ZWN0aW9uIGFmdGVyIHdlIGNyZWF0ZSBpdC5cblx0XHR0aGlzLmNob3JkVHJhY2tGaW5pc2hlZCA9IHRydWU7XG59O1xuXG5DaG9yZFRyYWNrLnByb3RvdHlwZS5hZGRUcmFjayA9IGZ1bmN0aW9uICh0cmFja3MpIHtcblx0aWYgKCF0aGlzLmNob3JkVHJhY2tFbXB0eSgpKVxuXHRcdHRyYWNrcy5wdXNoKHRoaXMuY2hvcmRUcmFjayk7XG59O1xuXG5DaG9yZFRyYWNrLnByb3RvdHlwZS5maW5kQ2hvcmQgPSBmdW5jdGlvbiAoZWxlbSkge1xuXHRpZiAodGhpcy5nQ2hvcmRUYWNldClcblx0XHRyZXR1cm4gJ2JyZWFrJztcblxuXHQvLyBUT0RPLVBFUjogSnVzdCB1c2luZyB0aGUgZmlyc3QgY2hvcmQgaWYgdGhlcmUgYXJlIG1vcmUgdGhhbiBvbmUuXG5cdGlmICh0aGlzLmNob3JkVHJhY2tGaW5pc2hlZCB8fCAhZWxlbS5jaG9yZCB8fCBlbGVtLmNob3JkLmxlbmd0aCA9PT0gMClcblx0XHRyZXR1cm4gbnVsbDtcblxuXHQvLyBSZXR1cm4gdGhlIGZpcnN0IGFubm90YXRpb24gdGhhdCBpcyBhIHJlZ3VsYXIgY2hvcmQ6IHRoYXQgaXMsIGl0IGlzIGluIHRoZSBkZWZhdWx0IHBsYWNlIG9yIGlzIGEgcmVjb2duaXplZCBcInRhY2V0XCIgcGhyYXNlLlxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGVsZW0uY2hvcmQubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgY2ggPSBlbGVtLmNob3JkW2ldO1xuXHRcdGlmIChjaC5wb3NpdGlvbiA9PT0gJ2RlZmF1bHQnKVxuXHRcdFx0cmV0dXJuIGNoLm5hbWU7XG5cdFx0aWYgKHRoaXMuYnJlYWtTeW5vbnltcy5pbmRleE9mKGNoLm5hbWUudG9Mb3dlckNhc2UoKSkgPj0gMClcblx0XHRcdHJldHVybiAnYnJlYWsnO1xuXHR9XG5cdHJldHVybiBudWxsO1xufVxuXG5DaG9yZFRyYWNrLnByb3RvdHlwZS5pbnRlcnByZXRDaG9yZCA9IGZ1bmN0aW9uIChuYW1lKSB7XG5cdC8vIGNob3JkcyBoYXZlIHRoZSBmb3JtYXQ6XG5cdC8vIFtyb290XVthY2NdW21vZGlmaWVyXVsvXVtiYXNzXVthY2NdXG5cdC8vIChUaGUgY2hvcmQgbWlnaHQgYmUgc3Vycm91bmRlZCBieSBwYXJlbnMuIEp1c3QgaWdub3JlIHRoZW0uKVxuXHQvLyByb290IG11c3QgYmUgcHJlc2VudCBhbmQgbXVzdCBiZSBmcm9tIEEtRy5cblx0Ly8gYWNjIGlzIG9wdGlvbmFsIGFuZCBjYW4gYmUgIyBvciBiXG5cdC8vIFRoZSBtb2RpZmllciBjYW4gYmUgYSB3aWRlIHZhcmlldHkgb2YgdGhpbmdzLCBsaWtlIFwibWFqN1wiLiBBcyB0aGV5IGFyZSBkaXNjb3ZlcmVkLCBtb3JlIGFyZSBzdXBwb3J0ZWQgaGVyZS5cblx0Ly8gSWYgdGhlcmUgaXMgYSBzbGFzaCwgdGhlbiB0aGVyZSBpcyBhIGJhc3Mgbm90ZSwgd2hpY2ggY2FuIGJlIGZyb20gQS1HLCB3aXRoIGFuIG9wdGlvbmFsIGFjYy5cblx0Ly8gSWYgdGhlIHJvb3QgaXMgdW5yZWNvZ25pemVkLCB0aGVuIFwidW5kZWZpbmVkXCIgaXMgcmV0dXJuZWQgYW5kIHRoZXJlIGlzIG5vIGNob3JkLlxuXHQvLyBJZiB0aGUgbW9kaWZpZXIgaXMgdW5yZWNvZ25pemVkLCBhIG1ham9yIHRyaWFkIGlzIHJldHVybmVkLlxuXHQvLyBJZiB0aGUgYmFzcyBub3RlcyBpcyB1bnJlY29nbml6ZWQsIGl0IGlzIGlnbm9yZWQuXG5cdGlmIChuYW1lLmxlbmd0aCA9PT0gMClcblx0XHRyZXR1cm4gdW5kZWZpbmVkO1xuXHRpZiAobmFtZSA9PT0gJ2JyZWFrJylcblx0XHRyZXR1cm4geyBjaGljazogW10gfTtcblx0dmFyIHJvb3QgPSBuYW1lLnN1YnN0cmluZygwLCAxKTtcblx0aWYgKHJvb3QgPT09ICcoJykge1xuXHRcdG5hbWUgPSBuYW1lLnN1YnN0cmluZygxLCBuYW1lLmxlbmd0aCAtIDEpO1xuXHRcdGlmIChuYW1lLmxlbmd0aCA9PT0gMClcblx0XHRcdHJldHVybiB1bmRlZmluZWQ7XG5cdFx0cm9vdCA9IG5hbWUuc3Vic3RyaW5nKDAsIDEpO1xuXHR9XG5cdHZhciBiYXNzID0gdGhpcy5iYXNzZXNbcm9vdF07XG5cdGlmICghYmFzcylcdC8vIElmIHRoZSBiYXNzIG5vdGUgaXNuJ3QgbGlzdGVkLCB0aGVuIHRoaXMgd2FzIGFuIHVua25vd24gcm9vdC4gT25seSBBLUcgYXJlIGFjY2VwdGVkLlxuXHRcdHJldHVybiB1bmRlZmluZWQ7XG5cdC8vIERvbid0IHRyYW5zcG9zZSB0aGUgY2hvcmRzIG1vcmUgdGhhbiBhbiBvY3RhdmUuXG5cdHZhciBjaG9yZFRyYW5zcG9zZSA9IHRoaXMudHJhbnNwb3NlO1xuXHR3aGlsZSAoY2hvcmRUcmFuc3Bvc2UgPCAtOClcblx0XHRjaG9yZFRyYW5zcG9zZSArPSAxMjtcblx0d2hpbGUgKGNob3JkVHJhbnNwb3NlID4gOClcblx0XHRjaG9yZFRyYW5zcG9zZSAtPSAxMjtcblx0YmFzcyArPSBjaG9yZFRyYW5zcG9zZTtcblx0XG4gICAgXHQvLyBNQUUgMzEgQXVnIDIwMjQgLSBGb3IgdmlzdWFsIHRyYW5zcG9zZSBiYWNrdXAgcmFuZ2UgaXNzdWVcbiAgICBcdC8vIElmIHRyYW5zcG9zZWQgYmVsb3cgQSBvciBhYm92ZSBHLCBicmluZyBpdCBiYWNrIGluIHRoZSBub3JtYWwgYmFja3VwIHJhbmdlXG4gICAgXHRpZiAoYmFzcyA8IDMzKXtcbiAgICAgIFx0XHRiYXNzICs9IDEyO1xuICAgIFx0fVxuICAgIFx0ZWxzZSBpZiAoYmFzcyA+IDQ0KXtcblx0ICAgICBcdCBiYXNzIC09IDEyO1xuICAgIFx0fVxuXG5cdC8vIE1BRSAxNyBKdW4gMjAyNCAtIFN1cHBvcnRpbmcgb2N0YXZlIHNoaWZ0ZWQgYmFzcyBhbmQgY2hvcmRzXG5cdHZhciB1bnNoaWZ0ZWRCYXNzID0gYmFzcztcblxuXHRiYXNzICs9IHRoaXMuYmFzc09jdGF2ZVNoaWZ0ICogMTI7XG5cblx0dmFyIGJhc3MyID0gYmFzcyAtIDU7XHQvLyBUaGUgYWx0ZXJuYXRpbmcgYmFzcyBpcyBhIDR0aCBiZWxvd1xuXHR2YXIgY2hpY2s7XG5cdGlmIChuYW1lLmxlbmd0aCA9PT0gMSlcblx0XHRjaGljayA9IHRoaXMuY2hvcmROb3RlcyhiYXNzLCAnJyk7XG5cdHZhciByZW1haW5pbmcgPSBuYW1lLnN1YnN0cmluZygxKTtcblx0dmFyIGFjYyA9IHJlbWFpbmluZy5zdWJzdHJpbmcoMCwgMSk7XG5cdGlmIChhY2MgPT09ICdiJyB8fCBhY2MgPT09ICfima0nKSB7XG5cdFx0dW5zaGlmdGVkQmFzcy0tO1xuXHRcdGJhc3MtLTtcblx0XHRiYXNzMi0tO1xuXHRcdHJlbWFpbmluZyA9IHJlbWFpbmluZy5zdWJzdHJpbmcoMSk7XG5cdH0gZWxzZSBpZiAoYWNjID09PSAnIycgfHwgYWNjID09PSAn4pmvJykge1xuXHRcdHVuc2hpZnRlZEJhc3MrKztcblx0XHRiYXNzKys7XG5cdFx0YmFzczIrKztcblx0XHRyZW1haW5pbmcgPSByZW1haW5pbmcuc3Vic3RyaW5nKDEpO1xuXHR9XG5cdHZhciBhcnIgPSByZW1haW5pbmcuc3BsaXQoJy8nKTtcblx0Y2hpY2sgPSB0aGlzLmNob3JkTm90ZXModW5zaGlmdGVkQmFzcywgYXJyWzBdKTtcblx0Ly8gSWYgdGhlIDV0aCBpcyBhbHRlcmVkIHRoZW4gdGhlIGJhc3MgaXMgYWx0ZXJlZC4gTm9ybWFsbHkgdGhlIGJhc3MgaXMgNyBmcm9tIHRoZSByb290LCBzbyBhZGp1c3QgaWYgaXQgaXNuJ3QuXG5cdGlmIChjaGljay5sZW5ndGggPj0gMykge1xuXHRcdHZhciBmaWZ0aCA9IGNoaWNrWzJdIC0gY2hpY2tbMF07XG5cdFx0YmFzczIgPSBiYXNzMiArIGZpZnRoIC0gNztcblx0fVxuXG5cdGlmIChhcnIubGVuZ3RoID09PSAyKSB7XG5cdFx0dmFyIGV4cGxpY2l0QmFzcyA9IHRoaXMuYmFzc2VzW2FyclsxXS5zdWJzdHJpbmcoMCwgMSldO1xuXHRcdGlmIChleHBsaWNpdEJhc3MpIHtcblx0XHRcdHZhciBiYXNzQWNjID0gYXJyWzFdLnN1YnN0cmluZygxKTtcblx0XHRcdHZhciBiYXNzU2hpZnQgPSB7ICcjJzogMSwgJ+KZryc6IDEsICdiJzogLTEsICfima0nOiAtMSB9W2Jhc3NBY2NdIHx8IDA7XG5cdFx0XHRiYXNzID0gdGhpcy5iYXNzZXNbYXJyWzFdLnN1YnN0cmluZygwLCAxKV0gKyBiYXNzU2hpZnQgKyBjaG9yZFRyYW5zcG9zZTtcblxuXHRcdFx0Ly8gTUFFIDIyIE1heSAyMDI0IC0gU3VwcG9ydGluZyBvY3RhdmUgc2hpZnRlZCBiYXNzIGFuZCBjaG9yZHNcblx0XHRcdGJhc3MgKz0gdGhpcy5iYXNzT2N0YXZlU2hpZnQgKiAxMjtcblxuXHRcdFx0YmFzczIgPSBiYXNzO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4geyBib29tOiBiYXNzLCBib29tMjogYmFzczIsIGNoaWNrOiBjaGljayB9O1xufVxuXG5DaG9yZFRyYWNrLnByb3RvdHlwZS5jaG9yZE5vdGVzID0gZnVuY3Rpb24gKGJhc3MsIG1vZGlmaWVyKSB7XG5cdHZhciBpbnRlcnZhbHMgPSB0aGlzLmNob3JkSW50ZXJ2YWxzW21vZGlmaWVyXTtcblx0aWYgKCFpbnRlcnZhbHMpIHtcblx0XHRpZiAobW9kaWZpZXIuc2xpY2UoMCwgMikudG9Mb3dlckNhc2UoKSA9PT0gJ21hJyB8fCBtb2RpZmllclswXSA9PT0gJ00nKVxuXHRcdFx0aW50ZXJ2YWxzID0gdGhpcy5jaG9yZEludGVydmFscy5NO1xuXHRcdGVsc2UgaWYgKG1vZGlmaWVyWzBdID09PSAnbScgfHwgbW9kaWZpZXJbMF0gPT09ICctJylcblx0XHRcdGludGVydmFscyA9IHRoaXMuY2hvcmRJbnRlcnZhbHMubTtcblx0XHRlbHNlXG5cdFx0XHRpbnRlcnZhbHMgPSB0aGlzLmNob3JkSW50ZXJ2YWxzLk07XG5cdH1cblx0YmFzcyArPSAxMjtcdC8vIHRoZSBjaG9yZCBpcyBhbiBvY3RhdmUgYWJvdmUgdGhlIGJhc3Mgbm90ZS5cblxuXHQvLyBNQUUgMjIgTWF5IDIwMjQgLSBGb3IgY2hpY2sgb2N0YXZlIHNoaWZ0XG5cdGJhc3MgKz0gKHRoaXMuY2hvcmRPY3RhdmVTaGlmdCAqIDEyKTtcblxuXHR2YXIgbm90ZXMgPSBbXTtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBpbnRlcnZhbHMubGVuZ3RoOyBpKyspIHtcblx0XHRub3Rlcy5wdXNoKGJhc3MgKyBpbnRlcnZhbHNbaV0pO1xuXHR9XG5cdHJldHVybiBub3Rlcztcbn1cblxuQ2hvcmRUcmFjay5wcm90b3R5cGUud3JpdGVOb3RlID0gZnVuY3Rpb24gKG5vdGUsIGJlYXRMZW5ndGgsIHZvbHVtZSwgYmVhdCwgbm90ZUxlbmd0aCwgaW5zdHJ1bWVudCkge1xuXHQvLyB1bmRlZmluZWQgbWVhbnMgdGhlcmUgaXMgYSBzdG9wIHRpbWUuXG5cdGlmIChub3RlICE9PSB1bmRlZmluZWQpXG5cdFx0dGhpcy5jaG9yZFRyYWNrLnB1c2goeyBjbWQ6ICdub3RlJywgcGl0Y2g6IG5vdGUsIHZvbHVtZTogdm9sdW1lLCBzdGFydDogdGhpcy5sYXN0QmFyVGltZSArIGJlYXQgKiBkdXJhdGlvblJvdW5kZWQoYmVhdExlbmd0aCwgdGhpcy50ZW1wb0NoYW5nZUZhY3RvciksIGR1cmF0aW9uOiBkdXJhdGlvblJvdW5kZWQobm90ZUxlbmd0aCwgdGhpcy50ZW1wb0NoYW5nZUZhY3RvciksIGdhcDogMCwgaW5zdHJ1bWVudDogaW5zdHJ1bWVudCB9KTtcbn1cblxuQ2hvcmRUcmFjay5wcm90b3R5cGUuY2hvcmRUcmFja0VtcHR5ID0gZnVuY3Rpb24gKCkge1xuXHR2YXIgaXNFbXB0eSA9IHRydWU7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5jaG9yZFRyYWNrLmxlbmd0aCAmJiBpc0VtcHR5OyBpKyspIHtcblx0XHRpZiAodGhpcy5jaG9yZFRyYWNrW2ldLmNtZCA9PT0gJ25vdGUnKVxuXHRcdFx0aXNFbXB0eSA9IGZhbHNlXG5cdH1cblx0cmV0dXJuIGlzRW1wdHk7XG59XG5cbkNob3JkVHJhY2sucHJvdG90eXBlLnJlc29sdmVDaG9yZHMgPSBmdW5jdGlvbiAoc3RhcnRUaW1lLCBlbmRUaW1lKSB7XG5cdC8vIElmIHRoZXJlIGlzIGEgcmh5dGhtIGhlYWQgYW55d2hlcmUgaW4gdGhlIG1lYXN1cmUgdGhlbiBkb24ndCBhZGQgYSBzZXBhcmF0ZSByaHl0aG0gdHJhY2tcblx0aWYgKHRoaXMuaGFzUmh5dGhtSGVhZClcblx0XHRyZXR1cm5cblxuXHR2YXIgbnVtID0gdGhpcy5tZXRlci5udW07XG5cdHZhciBkZW4gPSB0aGlzLm1ldGVyLmRlbjtcblx0dmFyIGJlYXRMZW5ndGggPSAxIC8gZGVuO1xuXHR2YXIgbm90ZUxlbmd0aCA9IGJlYXRMZW5ndGggLyAyO1xuXHR2YXIgdGhpc01lYXN1cmVMZW5ndGggPSBwYXJzZUludChudW0sIDEwKSAvIHBhcnNlSW50KGRlbiwgMTApO1xuXHR2YXIgcG9ydGlvbk9mQU1lYXN1cmUgPSB0aGlzTWVhc3VyZUxlbmd0aCAtIChlbmRUaW1lIC0gc3RhcnRUaW1lKSAvIHRoaXMudGVtcG9DaGFuZ2VGYWN0b3I7XG5cdGlmIChNYXRoLmFicyhwb3J0aW9uT2ZBTWVhc3VyZSkgPCAwLjAwMDAxKVxuXHRcdHBvcnRpb25PZkFNZWFzdXJlID0gMDtcblxuXHQgLy8gdGhlcmUgd2Fzbid0IGEgbmV3IGNob3JkIHRoaXMgbWVhc3VyZSwgc28gdXNlIHRoZSBsYXN0IGNob3JkIGRlY2xhcmVkLlxuXHQgLy8gYWxzbyB0aGUgY2FzZSB3aGVyZSB0aGVyZSBpcyBhIGNob3JkIGRlY2xhcmVkIGluIHRoZSBtZWFzdXJlLCBidXQgbm90IG9uIGl0cyBmaXJzdCBiZWF0LlxuXHRpZiAodGhpcy5jdXJyZW50Q2hvcmRzLmxlbmd0aCA9PT0gMCB8fCB0aGlzLmN1cnJlbnRDaG9yZHNbMF0uYmVhdCAhPT0gMCkge1xuXHRcdHRoaXMuY3VycmVudENob3Jkcy51bnNoaWZ0KHsgYmVhdDogMCwgY2hvcmQ6IHRoaXMuY2hvcmRMYXN0QmFyIH0pO1xuXHR9XG5cblx0Ly9jb25zb2xlLmxvZyh0aGlzLmN1cnJlbnRDaG9yZHMpXG5cdHZhciBjdXJyZW50Q2hvcmRzRXhwYW5kZWQgPSBleHBhbmRDdXJyZW50Q2hvcmRzKHRoaXMuY3VycmVudENob3JkcywgOCpudW0vZGVuLCBiZWF0TGVuZ3RoKVxuXHQvL2NvbnNvbGUubG9nKGN1cnJlbnRDaG9yZHNFeHBhbmRlZClcblx0dmFyIHRoaXNQYXR0ZXJuID0gdGhpcy5vdmVycmlkZVBhdHRlcm4gPyB0aGlzLm92ZXJyaWRlUGF0dGVybiA6IHRoaXMucmh5dGhtUGF0dGVybnNbbnVtICsgJy8nICsgZGVuXVxuXHRpZiAocG9ydGlvbk9mQU1lYXN1cmUpIHtcblx0XHR0aGlzUGF0dGVybiA9IFtdO1xuXHRcdHZhciBiZWF0c1ByZXNlbnQgPSAoKGVuZFRpbWUgLSBzdGFydFRpbWUpIC8gdGhpcy50ZW1wb0NoYW5nZUZhY3RvcikgKiA4O1xuXHRcdGZvciAodmFyIHAgPSAwOyBwIDwgYmVhdHNQcmVzZW50LzI7IHAgKz0gMikge1xuXHRcdFx0dGhpc1BhdHRlcm4ucHVzaChcImNoaWNrXCIpO1xuXHRcdFx0dGhpc1BhdHRlcm4ucHVzaChcIlwiKTtcblx0XHR9XG5cdH1cblx0aWYgKCF0aGlzUGF0dGVybikge1xuXHRcdHRoaXNQYXR0ZXJuID0gW11cblx0XHRmb3IgKHZhciBwID0gMDsgcCA8ICg4Km51bS9kZW4pLzI7IHArKykge1xuXHRcdFx0dGhpc1BhdHRlcm4ucHVzaCgnY2hpY2snKVxuXHRcdFx0dGhpc1BhdHRlcm4ucHVzaChcIlwiKTtcblx0XHR9XG5cdH1cblx0dmFyIGZpcnN0Qm9vbSA9IHRydWVcblx0Ly8gSWYgdGhlIHBhdHRlcm4gaXMgb3ZlcnJpZGRlbiwgaXQgbWlnaHQgYmUgbG9uZ2VyIHRoYW4gdGhlIGxlbmd0aCBvZiBhIG1lYXN1cmUuIElmIHNvLCB0aGVuIGlnbm9yZSB0aGUgcmVzdCBvZiBpdFxuXHR2YXIgbWluTGVuZ3RoID0gTWF0aC5taW4odGhpc1BhdHRlcm4ubGVuZ3RoLCBjdXJyZW50Q2hvcmRzRXhwYW5kZWQubGVuZ3RoKVxuXHRmb3IgKHZhciBwID0gMDsgcCA8IG1pbkxlbmd0aDsgcCsrKSB7XG5cdFx0aWYgKHAgPiAwICYmIGN1cnJlbnRDaG9yZHNFeHBhbmRlZFtwLTFdICYmIGN1cnJlbnRDaG9yZHNFeHBhbmRlZFtwXSAmJiBjdXJyZW50Q2hvcmRzRXhwYW5kZWRbcC0xXS5ib29tICE9PSBjdXJyZW50Q2hvcmRzRXhwYW5kZWRbcF0uYm9vbSlcblx0XHRcdGZpcnN0Qm9vbSA9IHRydWVcblx0XHR2YXIgdHlwZSA9IHRoaXNQYXR0ZXJuW3BdXG5cdFx0dmFyIGlzQm9vbSA9IHR5cGUuaW5kZXhPZignYm9vbScpID49IDBcblx0XHQvLyBJZiB3ZSBjaGFuZ2VkIGNob3JkcyBhdCBhIHRpbWUgd2hlbiB3ZSdyZSBub3QgZXhwZWN0aW5nIGEgYmFzcyBub3RlLCB0aGVuIGFkZCBhbiBleHRyYSBiYXNzIG5vdGUgaW4gaWYgdGhlIGZpcnN0IHRoaW5nIGluIHRoZSBwYXR0ZXJuIGlzIGEgYmFzcyBub3RlLlxuXHRcdHZhciBuZXdCYXNzID0gIWlzQm9vbSAmJlxuXHRcdFx0cCAhPT0gMCAmJlxuXHRcdFx0dGhpc1BhdHRlcm5bMF0uaW5kZXhPZignYm9vbScpID49IDAgJiZcblx0XHRcdCghY3VycmVudENob3Jkc0V4cGFuZGVkW3AtMV0gfHwgY3VycmVudENob3Jkc0V4cGFuZGVkW3AtMV0uYm9vbSAhPT0gY3VycmVudENob3Jkc0V4cGFuZGVkW3BdLmJvb20pXG5cdFx0dmFyIHBpdGNoZXMgPSByZXNvbHZlUGl0Y2goY3VycmVudENob3Jkc0V4cGFuZGVkW3BdLCB0eXBlLCBmaXJzdEJvb20sIG5ld0Jhc3MpXG5cdFx0aWYgKGlzQm9vbSlcblx0XHRcdGZpcnN0Qm9vbSA9IGZhbHNlXG5cdFx0Zm9yICh2YXIgb28gPSAwOyBvbyA8IHBpdGNoZXMubGVuZ3RoOyBvbysrKSB7XG5cdFx0XHR0aGlzLndyaXRlTm90ZShwaXRjaGVzW29vXSwgXG5cdFx0XHRcdDAuMTI1LFxuXHRcdFx0XHRpc0Jvb20gfHwgbmV3QmFzcyA/IHRoaXMuYm9vbVZvbHVtZSA6IHRoaXMuY2hpY2tWb2x1bWUsXG5cdFx0XHRcdHAsXG5cdFx0XHRcdG5vdGVMZW5ndGgsXG5cdFx0XHRcdGlzQm9vbSB8fCBuZXdCYXNzID8gdGhpcy5iYXNzSW5zdHJ1bWVudCA6IHRoaXMuY2hvcmRJbnN0cnVtZW50XG5cdFx0XHQpXG5cdFx0XHRpZiAobmV3QmFzcylcblx0XHRcdFx0bmV3QmFzcyA9IGZhbHNlXG5cdFx0XHRlbHNlXG5cdFx0XHRcdGlzQm9vbSA9IGZhbHNlIC8vIG9ubHkgdGhlIGZpcnN0IG5vdGUgaW4gYSBjaG9yZCBpcyBhIGJhc3Mgbm90ZS4gVGhpcyBoYW5kbGVzIHRoZSBjYXNlIHdoZXJlIGJhc3MgYW5kIGNob3JkIGFyZSBwbGF5ZWQgYXQgdGhlIHNhbWUgdGltZS5cblx0XHR9XG5cdH1cblx0cmV0dXJuXG59XG5cbkNob3JkVHJhY2sucHJvdG90eXBlLnByb2Nlc3NDaG9yZCA9IGZ1bmN0aW9uIChlbGVtKSB7XG5cdGlmICh0aGlzLmNob3JkVHJhY2tGaW5pc2hlZClcblx0XHRyZXR1cm5cblx0dmFyIGNob3JkID0gdGhpcy5maW5kQ2hvcmQoZWxlbSk7XG5cdGlmIChjaG9yZCkge1xuXHRcdHZhciBjID0gdGhpcy5pbnRlcnByZXRDaG9yZChjaG9yZCk7XG5cdFx0Ly8gSWYgdGhpcyBpc24ndCBhIHJlY29nbml6ZWQgY2hvcmQsIGp1c3QgY29tcGxldGVseSBpZ25vcmUgaXQuXG5cdFx0aWYgKGMpIHtcblx0XHRcdC8vIElmIHdlIGV2ZXIgaGF2ZSBhIGNob3JkIGluIHRoaXMgdm9pY2UsIHRoZW4gd2UgYWRkIHRoZSBjaG9yZCB0cmFjay5cblx0XHRcdC8vIEhvd2V2ZXIsIGlmIHRoZXJlIGFyZSBjaG9yZHMgb24gbW9yZSB0aGFuIG9uZSB2b2ljZSwgdGhlbiBqdXN0IHVzZSB0aGUgZmlyc3Qgdm9pY2UuXG5cdFx0XHRpZiAodGhpcy5jaG9yZFRyYWNrLmxlbmd0aCA9PT0gMCkge1xuXHRcdFx0XHR0aGlzLmNob3JkVHJhY2sucHVzaCh7IGNtZDogJ3Byb2dyYW0nLCBjaGFubmVsOiB0aGlzLmNob3JkQ2hhbm5lbCwgaW5zdHJ1bWVudDogdGhpcy5jaG9yZEluc3RydW1lbnQgfSk7XG5cdFx0XHR9XG5cblx0XHRcdHRoaXMubGFzdENob3JkID0gYztcblx0XHRcdHZhciBiYXJCZWF0ID0gY2FsY0JlYXQodGhpcy5sYXN0QmFyVGltZSwgdGltZVRvUmVhbFRpbWUoZWxlbS50aW1lKSk7XG5cdFx0XHR0aGlzLmN1cnJlbnRDaG9yZHMucHVzaCh7IGNob3JkOiB0aGlzLmxhc3RDaG9yZCwgYmVhdDogYmFyQmVhdCwgc3RhcnQ6IHRpbWVUb1JlYWxUaW1lKGVsZW0udGltZSkgfSk7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIHJlc29sdmVQaXRjaChjdXJyZW50Q2hvcmQsIHR5cGUsIGZpcnN0Qm9vbSwgbmV3QmFzcykge1xuXHR2YXIgcmV0ID0gW11cblx0aWYgKCFjdXJyZW50Q2hvcmQpXG5cdFx0cmV0dXJuIHJldFxuXHRpZiAodHlwZS5pbmRleE9mKCdib29tJykgPj0gMClcblx0XHRyZXQucHVzaChmaXJzdEJvb20gPyBjdXJyZW50Q2hvcmQuYm9vbSA6IGN1cnJlbnRDaG9yZC5ib29tMilcblx0ZWxzZSBpZiAobmV3QmFzcylcblx0XHRyZXQucHVzaChjdXJyZW50Q2hvcmQuYm9vbSlcblx0dmFyIG51bUNob3JkTm90ZXMgPSBjdXJyZW50Q2hvcmQuY2hpY2subGVuZ3RoXG5cdGlmICh0eXBlLmluZGV4T2YoJ2NoaWNrJykgPj0gMCkge1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbnVtQ2hvcmROb3RlczsgaSsrKVxuXHRcdFx0cmV0LnB1c2goY3VycmVudENob3JkLmNoaWNrW2ldKVxuXHR9XG5cdHN3aXRjaCAodHlwZSkge1xuXHRcdGNhc2UgJ0RPJzogcmV0LnB1c2goY3VycmVudENob3JkLmNoaWNrWzBdKTsgYnJlYWs7XG5cdFx0Y2FzZSAnTUknOiByZXQucHVzaChjdXJyZW50Q2hvcmQuY2hpY2tbMV0pOyBicmVhaztcblx0XHRjYXNlICdTT0wnOiByZXQucHVzaChleHRyYWN0Tm90ZShjdXJyZW50Q2hvcmQsMikpOyBicmVhaztcblx0XHRjYXNlICdUSSc6IHJldC5wdXNoKGV4dHJhY3ROb3RlKGN1cnJlbnRDaG9yZCwzKSk7IGJyZWFrO1xuXHRcdGNhc2UgJ1RPUCc6IHJldC5wdXNoKGV4dHJhY3ROb3RlKGN1cnJlbnRDaG9yZCw0KSk7IGJyZWFrO1xuXHRcdGNhc2UgJ2RvJzogcmV0LnB1c2goY3VycmVudENob3JkLmNoaWNrWzBdKzEyKTsgYnJlYWs7XG5cdFx0Y2FzZSAnbWknOiByZXQucHVzaChjdXJyZW50Q2hvcmQuY2hpY2tbMV0rMTIpOyBicmVhaztcblx0XHRjYXNlICdzb2wnOiByZXQucHVzaChleHRyYWN0Tm90ZShjdXJyZW50Q2hvcmQsMikrMTIpOyBicmVhaztcblx0XHRjYXNlICd0aSc6IHJldC5wdXNoKGV4dHJhY3ROb3RlKGN1cnJlbnRDaG9yZCwzKSsxMik7IGJyZWFrO1xuXHRcdGNhc2UgJ3RvcCc6IHJldC5wdXNoKGV4dHJhY3ROb3RlKGN1cnJlbnRDaG9yZCw0KSsxMik7IGJyZWFrO1xuXHR9XG5cdHJldHVybiByZXRcbn1cblxuZnVuY3Rpb24gZXh0cmFjdE5vdGUoY2hvcmQsIGluZGV4KSB7XG5cdC8vIFRoaXMgY3JlYXRlcyBhbiBhcnBlZ2dpbyBub3RlIG5vIG1hdHRlciBob3cgbWFueSBub3RlcyBhcmUgaW4gdGhlIGNob3JkIC0gaWYgaXQgcnVucyBvdXQgb2Ygbm90ZXMgaXQgY29udGludWVzIGluIHRoZSBuZXh0IG9jdGF2ZVxuXHR2YXIgb2N0YXZlID0gTWF0aC5mbG9vcihpbmRleCAvIGNob3JkLmNoaWNrLmxlbmd0aClcblx0dmFyIG5vdGUgPSBjaG9yZC5jaGlja1tpbmRleCAlIGNob3JkLmNoaWNrLmxlbmd0aF1cblx0Ly9jb25zb2xlLmxvZyhjaG9yZC5jaGljaywge2luZGV4LCBvY3RhdmUsIG5vdGV9LCBpbmRleCAlIGNob3JkLmNoaWNrLmxlbmd0aClcblx0cmV0dXJuIG5vdGUgKyBvY3RhdmUgKiAxMlxufVxuXG5mdW5jdGlvbiBwYXJzZUdDaG9yZChnY2hvcmQpIHtcblx0Ly8gVE9ETy1QRVI6IFRoZSBzcGVjIGlzIG1vcmUgY29tcGxpY2F0ZWQgdGhhbiB0aGlzIGJ1dCBmb3Igbm93IHRoaXMgd2lsbCBub3QgdHJ5IHRvIGRvIGFueXRoaW5nIHdpdGggZXJyb3IgY2FzZXMgbGlrZSB0aGUgd3JvbmcgbnVtYmVyIG9mIGJlYXRzLlxuXHR2YXIgcGF0dGVybiA9IFtdXG5cdGZvciAodmFyIGkgPSAwOyBpIDwgZ2Nob3JkLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGNoID0gZ2Nob3JkW2ldXG5cdFx0c3dpdGNoKGNoKSB7XG5cdFx0XHRjYXNlICd6JyA6IHBhdHRlcm4ucHVzaCgnJyk7IGJyZWFrO1xuXHRcdFx0Y2FzZSAnMicgOiBwYXR0ZXJuLnB1c2goJycpOyBicmVhazsgLy8gVE9ETy1QRVI6IFRoaXMgc2hvdWxkIGV4dGVuZCB0aGUgbGFzdCBub3RlLCBidXQgdGhhdCdzIGEgc21hbGwgZWZmZWN0XG5cdFx0XHRjYXNlICdjJyA6IHBhdHRlcm4ucHVzaCgnY2hpY2snKTsgYnJlYWs7XG5cdFx0XHRjYXNlICdiJyA6IHBhdHRlcm4ucHVzaCgnYm9vbSZjaGljaycpOyBicmVhaztcblx0XHRcdGNhc2UgJ2YnIDogcGF0dGVybi5wdXNoKCdib29tJyk7IGJyZWFrO1xuXHRcdFx0Y2FzZSAnRycgOiBwYXR0ZXJuLnB1c2goJ0RPJyk7IGJyZWFrO1xuXHRcdFx0Y2FzZSAnSCcgOiBwYXR0ZXJuLnB1c2goJ01JJyk7IGJyZWFrO1xuXHRcdFx0Y2FzZSAnSScgOiBwYXR0ZXJuLnB1c2goJ1NPTCcpOyBicmVhaztcblx0XHRcdGNhc2UgJ0onIDogcGF0dGVybi5wdXNoKCdUSScpOyBicmVhaztcblx0XHRcdGNhc2UgJ0snIDogcGF0dGVybi5wdXNoKCdUT1AnKTsgYnJlYWs7XG5cdFx0XHRjYXNlICdnJyA6IHBhdHRlcm4ucHVzaCgnZG8nKTsgYnJlYWs7XG5cdFx0XHRjYXNlICdoJyA6IHBhdHRlcm4ucHVzaCgnbWknKTsgYnJlYWs7XG5cdFx0XHRjYXNlICdpJyA6IHBhdHRlcm4ucHVzaCgnc29sJyk7IGJyZWFrO1xuXHRcdFx0Y2FzZSAnaicgOiBwYXR0ZXJuLnB1c2goJ3RpJyk7IGJyZWFrO1xuXHRcdFx0Y2FzZSAnaycgOiBwYXR0ZXJuLnB1c2goJ3RvcCcpOyBicmVhaztcblx0XHR9XG5cdH1cblx0cmV0dXJuIHBhdHRlcm5cbn1cblxuLy8gVGhpcyByZXR1cm5zIGFuIGFycmF5IHRoYXQgaGFzIGEgY2hvcmQgZm9yIGVhY2ggMS84dGggbm90ZSBwb3NpdGlvbiBpbiB0aGUgY3VycmVudCBtZWFzdXJlXG5mdW5jdGlvbiBleHBhbmRDdXJyZW50Q2hvcmRzKGN1cnJlbnRDaG9yZHMsIG51bTh0aE5vdGVzLCBiZWF0TGVuZ3RoKSB7XG5cdGJlYXRMZW5ndGggPSBiZWF0TGVuZ3RoICogOCAvLyB0aGlzIGlzIGV4cHJlc3NlZCBhcyBhIGZyYWN0aW9uLCBzbyB0aGF0IDAuMjUgaXMgYSBxdWFydGVyIG5vdGVzLiBXZSB3YW50IGl0IHRvIGJlIHRoZSBudW1iZXIgb2YgOHRoIG5vdGVzXG5cdHZhciBjaG9yZHMgPSBbXVxuXHRpZiAoY3VycmVudENob3Jkcy5sZW5ndGggPT09IDApXG5cdFx0cmV0dXJuIGNob3Jkc1xuXG5cdHZhciBjdXJyZW50Q2hvcmQgPSBjdXJyZW50Q2hvcmRzWzBdLmNob3JkXG5cdGZvciAodmFyIGkgPSAxOyBpIDwgY3VycmVudENob3Jkcy5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBjdXJyZW50ID0gY3VycmVudENob3Jkc1tpXVxuXHRcdHdoaWxlIChjaG9yZHMubGVuZ3RoIDwgY3VycmVudC5iZWF0KSB7XG5cdFx0XHRjaG9yZHMucHVzaChjdXJyZW50Q2hvcmQpXG5cdFx0fVxuXHRcdGN1cnJlbnRDaG9yZCA9IGN1cnJlbnQuY2hvcmRcblx0fVxuXHR3aGlsZSAoY2hvcmRzLmxlbmd0aCA8IG51bTh0aE5vdGVzKVxuXHRcdGNob3Jkcy5wdXNoKGN1cnJlbnRDaG9yZClcblx0cmV0dXJuIGNob3Jkc1xufVxuXG5mdW5jdGlvbiBjYWxjQmVhdChtZWFzdXJlU3RhcnQsIGN1cnJUaW1lKSB7XG5cdHZhciBkaXN0YW5jZUZyb21TdGFydCA9IGN1cnJUaW1lIC0gbWVhc3VyZVN0YXJ0O1xuXHRyZXR1cm4gZGlzdGFuY2VGcm9tU3RhcnQgKiA4O1xufVxuXG5DaG9yZFRyYWNrLnByb3RvdHlwZS5icmVha1N5bm9ueW1zID0gWydicmVhaycsICcoYnJlYWspJywgJ25vIGNob3JkJywgJ24uYy4nLCAndGFjZXQnXTtcblxuQ2hvcmRUcmFjay5wcm90b3R5cGUuYmFzc2VzID0ge1xuXHQnQSc6IDMzLCAnQic6IDM1LCAnQyc6IDM2LCAnRCc6IDM4LCAnRSc6IDQwLCAnRic6IDQxLCAnRyc6IDQzXG59O1xuXG5DaG9yZFRyYWNrLnByb3RvdHlwZS5jaG9yZEludGVydmFscyA9IHtcblx0Ly8gZGltaW5pc2hlZCAoYWxsIGZsYXQgNSBjaG9yZHMpXG5cdCdkaW0nOiBbMCwgMywgNl0sXG5cdCfCsCc6IFswLCAzLCA2XSxcblx0J8uaJzogWzAsIDMsIDZdLFxuXG5cdCdkaW03JzogWzAsIDMsIDYsIDldLFxuXHQnwrA3JzogWzAsIDMsIDYsIDldLFxuXHQny5o3JzogWzAsIDMsIDYsIDldLFxuXG5cdCfDuDcnOiBbMCwgMywgNiwgMTBdLFxuXHQnbTcoYjUpJzogWzAsIDMsIDYsIDEwXSxcblx0J203YjUnOiBbMCwgMywgNiwgMTBdLFxuXHQnbTfima01JzogWzAsIDMsIDYsIDEwXSxcblx0Jy03KGI1KSc6IFswLCAzLCA2LCAxMF0sXG5cdCctN2I1JzogWzAsIDMsIDYsIDEwXSxcblxuXHQnN2I1JzogWzAsIDQsIDYsIDEwXSxcblx0JzcoYjUpJzogWzAsIDQsIDYsIDEwXSxcblx0Jzfima01JzogWzAsIDQsIDYsIDEwXSxcblxuXHQnNyhiOSxiNSknOiBbMCwgNCwgNiwgMTAsIDEzXSxcblx0JzdiOSxiNSc6IFswLCA0LCA2LCAxMCwgMTNdLFxuXHQnNygjOSxiNSknOiBbMCwgNCwgNiwgMTAsIDE1XSxcblx0JzcjOWI1JzogWzAsIDQsIDYsIDEwLCAxNV0sXG5cdCdtYWo3KGI1KSc6IFswLCA0LCA2LCAxMV0sXG5cdCdtYWo3YjUnOiBbMCwgNCwgNiwgMTFdLFxuXHQnMTMoYjUpJzogWzAsIDQsIDYsIDEwLCAxNCwgMjFdLFxuXHQnMTNiNSc6IFswLCA0LCA2LCAxMCwgMTQsIDIxXSxcblxuXHQvLyBtaW5vciAoYWxsIG5vcm1hbCA1LCBtaW5vciAzIGNob3Jkcylcblx0J20nOiBbMCwgMywgN10sXG5cdCctJzogWzAsIDMsIDddLFxuXHQnbTYnOiBbMCwgMywgNywgOV0sXG5cdCctNic6IFswLCAzLCA3LCA5XSxcblx0J203JzogWzAsIDMsIDcsIDEwXSxcblx0Jy03JzogWzAsIDMsIDcsIDEwXSxcblxuXHQnLShiNiknOiBbMCwgMywgNywgOF0sXG5cdCctYjYnOiBbMCwgMywgNywgOF0sXG5cdCctNi85JzogWzAsIDMsIDcsIDksIDE0XSxcblx0Jy03KGI5KSc6IFswLCAzLCA3LCAxMCwgMTNdLFxuXHQnLTdiOSc6IFswLCAzLCA3LCAxMCwgMTNdLFxuXHQnLW1hajcnOiBbMCwgMywgNywgMTFdLFxuXHQnLTkrNyc6IFswLCAzLCA3LCAxMSwgMTNdLFxuXHQnLTExJzogWzAsIDMsIDcsIDExLCAxNCwgMTddLFxuXHQnbTExJzogWzAsIDMsIDcsIDExLCAxNCwgMTddLFxuXHQnLW1hajknOiBbMCwgMywgNywgMTEsIDE0XSxcblx0Jy3iiIY5JzogWzAsIDMsIDcsIDExLCAxNF0sXG5cdCdtTTknOiBbMCwgMywgNywgMTEsIDE0XSxcblxuXHQvLyBtYWpvciAoYWxsIG5vcm1hbCA1LCBtYWpvciAzIGNob3Jkcylcblx0J00nOiBbMCwgNCwgN10sXG5cdCc2JzogWzAsIDQsIDcsIDldLFxuXHQnNi85JzogWzAsIDQsIDcsIDksIDE0XSxcblx0JzZhZGQ5JzogWzAsIDQsIDcsIDksIDE0XSxcblx0JzY5JzogWzAsIDQsIDcsIDksIDE0XSxcblxuXHQnNyc6IFswLCA0LCA3LCAxMF0sXG5cdCc5JzogWzAsIDQsIDcsIDEwLCAxNF0sXG5cdCcxMSc6IFswLCA3LCAxMCwgMTQsIDE3XSxcblx0JzEzJzogWzAsIDQsIDcsIDEwLCAxNCwgMjFdLFxuXHQnN2I5JzogWzAsIDQsIDcsIDEwLCAxM10sXG5cdCc34pmtOSc6IFswLCA0LCA3LCAxMCwgMTNdLFxuXHQnNyhiOSknOiBbMCwgNCwgNywgMTAsIDEzXSxcblx0JzcoIzkpJzogWzAsIDQsIDcsIDEwLCAxNV0sXG5cdCc3IzknOiBbMCwgNCwgNywgMTAsIDE1XSxcblx0JygxMyknOiBbMCwgNCwgNywgMTAsIDE0LCAyMV0sXG5cdCc3KDksMTMpJzogWzAsIDQsIDcsIDEwLCAxNCwgMjFdLFxuXHQnNygjOSxiMTMpJzogWzAsIDQsIDcsIDEwLCAxNSwgMjBdLFxuXHQnNygjMTEpJzogWzAsIDQsIDcsIDEwLCAxNCwgMThdLFxuXHQnNyMxMSc6IFswLCA0LCA3LCAxMCwgMTQsIDE4XSxcblx0JzcoYjEzKSc6IFswLCA0LCA3LCAxMCwgMjBdLFxuXHQnN2IxMyc6IFswLCA0LCA3LCAxMCwgMjBdLFxuXHQnOSgjMTEpJzogWzAsIDQsIDcsIDEwLCAxNCwgMThdLFxuXHQnOSMxMSc6IFswLCA0LCA3LCAxMCwgMTQsIDE4XSxcblx0JzEzKCMxMSknOiBbMCwgNCwgNywgMTAsIDE4LCAyMV0sXG5cdCcxMyMxMSc6IFswLCA0LCA3LCAxMCwgMTgsIDIxXSxcblxuXHQnbWFqNyc6IFswLCA0LCA3LCAxMV0sXG5cdCfiiIY3JzogWzAsIDQsIDcsIDExXSxcblx0J86UNyc6IFswLCA0LCA3LCAxMV0sXG5cdCdtYWo5JzogWzAsIDQsIDcsIDExLCAxNF0sXG5cdCdtYWo3KDkpJzogWzAsIDQsIDcsIDExLCAxNF0sXG5cdCdtYWo3KDExKSc6IFswLCA0LCA3LCAxMSwgMTddLFxuXHQnbWFqNygjMTEpJzogWzAsIDQsIDcsIDExLCAxOF0sXG5cdCdtYWo3KDEzKSc6IFswLCA0LCA3LCAxNCwgMjFdLFxuXHQnbWFqNyg5LDEzKSc6IFswLCA0LCA3LCAxMSwgMTQsIDIxXSxcblxuXHQnN3N1czQnOiBbMCwgNSwgNywgMTBdLFxuXHQnbTdzdXM0JzogWzAsIDMsIDcsIDEwLCAxN10sXG5cdCdzdXM0JzogWzAsIDUsIDddLFxuXHQnc3VzMic6IFswLCAyLCA3XSxcblx0JzdzdXMyJzogWzAsIDIsIDcsIDEwXSxcblx0JzlzdXM0JzogWzAsIDUsIDcsIDEwLCAxNF0sXG5cdCcxM3N1czQnOiBbMCwgNSwgNywgMTAsIDE0LCAyMV0sXG5cblx0Ly8gYXVnbWVudGVkIChhbGwgc2hhcnAgNSBjaG9yZHMpXG5cdCdhdWc3JzogWzAsIDQsIDgsIDEwXSxcblx0Jys3JzogWzAsIDQsIDgsIDEwXSxcblx0JysnOiBbMCwgNCwgOF0sXG5cdCc3IzUnOiBbMCwgNCwgOCwgMTBdLFxuXHQnN+KZrzUnOiBbMCwgNCwgOCwgMTBdLFxuXHQnNys1JzogWzAsIDQsIDgsIDEwXSxcblx0JzkjNSc6IFswLCA0LCA4LCAxMCwgMTRdLFxuXHQnOeKZrzUnOiBbMCwgNCwgOCwgMTAsIDE0XSxcblx0JzkrNSc6IFswLCA0LCA4LCAxMCwgMTRdLFxuXHQnLTcoIzUpJzogWzAsIDMsIDgsIDEwXSxcblx0Jy03IzUnOiBbMCwgMywgOCwgMTBdLFxuXHQnNygjNSknOiBbMCwgNCwgOCwgMTBdLFxuXHQnNyhiOSwjNSknOiBbMCwgNCwgOCwgMTAsIDEzXSxcblx0JzdiOSM1JzogWzAsIDQsIDgsIDEwLCAxM10sXG5cdCdtYWo3KCM1KSc6IFswLCA0LCA4LCAxMV0sXG5cdCdtYWo3IzUnOiBbMCwgNCwgOCwgMTFdLFxuXHQnbWFqNygjNSwjMTEpJzogWzAsIDQsIDgsIDExLCAxOF0sXG5cdCdtYWo3IzUjMTEnOiBbMCwgNCwgOCwgMTEsIDE4XSxcblx0JzkoIzUpJzogWzAsIDQsIDgsIDEwLCAxNF0sXG5cdCcxMygjNSknOiBbMCwgNCwgOCwgMTAsIDE0LCAyMV0sXG5cdCcxMyM1JzogWzAsIDQsIDgsIDEwLCAxNCwgMjFdLFxuXHQvLyBNQUUgUG93ZXIgY2hvcmRzIGFkZGVkIDEwIEFwcmlsIDIwMjRcblx0JzUnOiBbMCwgN10sXG5cdCc1KDgpJzogWzAsIDcsIDEyXSxcblx0JzVhZGQ4JzogWzAsIDcsIDEyXVxuXG59O1xuXG5DaG9yZFRyYWNrLnByb3RvdHlwZS5yaHl0aG1QYXR0ZXJucyA9IHtcblx0XCIyLzJcIjogWydib29tJywgJycsICcnLCAnJywgJ2NoaWNrJywgJycsICcnLCAnJ10sXG5cdFwiMy8yXCI6IFsnYm9vbScsICcnLCAnJywgJycsICdjaGljaycsICcnLCAnJywgJycsICdjaGljaycsICcnLCAnJywgJyddLFxuXHRcIjQvMlwiOiBbJ2Jvb20nLCAnJywgJycsICcnLCAnY2hpY2snLCAnJywgJycsICcnLCAnYm9vbScsICcnLCAnJywgJycsICdjaGljaycsICcnLCAnJywgJyddLFxuXG5cdFwiMi80XCI6IFsnYm9vbScsICcnLCAnY2hpY2snLCAnJ10sXG5cdFwiMy80XCI6IFsnYm9vbScsICcnLCAnY2hpY2snLCAnJywgJ2NoaWNrJywgJyddLFxuXHRcIjQvNFwiOiBbJ2Jvb20nLCAnJywgJ2NoaWNrJywgJycsICdib29tJywgJycsICdjaGljaycsICcnXSxcblx0XCI1LzRcIjogWydib29tJywgJycsICdjaGljaycsICcnLCAnY2hpY2snLCAnJywgJ2Jvb20nLCAnJywgJ2NoaWNrJywgJyddLFxuXHRcIjYvNFwiOiBbJ2Jvb20nLCAnJywgJ2NoaWNrJywgJycsICdib29tJywgJycsICdjaGljaycsICcnLCAnYm9vbScsICcnLCAnY2hpY2snLCAnJ10sXG5cblx0XCIzLzhcIjogWydib29tJywgJycsICdjaGljayddLFxuXHRcIjUvOFwiOiBbJ2Jvb20nLCAnY2hpY2snLCAnY2hpY2snLCAnYm9vbScsICdjaGljayddLFxuXHRcIjYvOFwiOiBbJ2Jvb20nLCAnJywgJ2NoaWNrJywgJ2Jvb20nLCAnJywgJ2NoaWNrJ10sXG5cdFwiNy84XCI6IFsnYm9vbScsICdjaGljaycsICdjaGljaycsICdib29tJywgJ2NoaWNrJywgJ2Jvb20nLCAnY2hpY2snXSxcblx0XCI5LzhcIjogWydib29tJywgJycsICdjaGljaycsICdib29tJywgJycsICdjaGljaycsICdib29tJywgJycsICdjaGljayddLFxuXHRcIjEwLzhcIjogWydib29tJywgJ2NoaWNrJywgJ2NoaWNrJywgJ2Jvb20nLCAnY2hpY2snLCAnY2hpY2snLCAnYm9vbScsICdjaGljaycsICdib29tJywgJ2NoaWNrJ10sXG5cdFwiMTEvOFwiOiBbJ2Jvb20nLCAnY2hpY2snLCAnY2hpY2snLCAnYm9vbScsICdjaGljaycsICdjaGljaycsICdib29tJywgJ2NoaWNrJywgJ2Jvb20nLCAnY2hpY2snLCAnY2hpY2snXSxcblx0XCIxMi84XCI6IFsnYm9vbScsICcnLCAnY2hpY2snLCAnYm9vbScsICcnLCAnY2hpY2snLCAnYm9vbScsICcnLCAnY2hpY2snLCAnYm9vbScsICcnLCAnY2hpY2snXSxcbn07XG5cbi8vIFRPRE8tUEVSOiB0aGVzZSBhcmUgcmVwZWF0ZWQgaW4gZmxhdHRlbmVyLiBDYW4gaXQgYmUgc2hhcmVkP1xuXG5mdW5jdGlvbiB0aW1lVG9SZWFsVGltZSh0aW1lKSB7XG5cdHJldHVybiB0aW1lIC8gMTAwMDAwMDtcbn1cblxuZnVuY3Rpb24gZHVyYXRpb25Sb3VuZGVkKGR1cmF0aW9uLCB0ZW1wb0NoYW5nZUZhY3Rvcikge1xuXHRyZXR1cm4gTWF0aC5yb3VuZChkdXJhdGlvbiAqIHRlbXBvQ2hhbmdlRmFjdG9yICogMTAwMDAwMCkgLyAxMDAwMDAwO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IENob3JkVHJhY2s7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/chord-track.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/create-note-map.js":
/*!*********************************************************!*\
  !*** ./node_modules/abcjs/src/synth/create-note-map.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Convert the input structure to a more useful structure where each item has a length of its own.\n\nvar instrumentIndexToName = __webpack_require__(/*! ./instrument-index-to-name */ \"(ssr)/./node_modules/abcjs/src/synth/instrument-index-to-name.js\");\n\nvar createNoteMap = function(sequence) {\n\tvar map = [];\n\tfor (var i = 0; i < sequence.tracks.length; i++)\n\t\tmap.push([]);\n\n\t// TODO-PER: handle more than one note in a track\n\tvar nextNote = {};\n\tvar currentInstrument = instrumentIndexToName[0];\n\t// ev.start and ev.duration are in whole notes. Need to turn them into\n\tsequence.tracks.forEach(function(track, i) {\n\t\ttrack.forEach(function(ev) {\n\t\t\tswitch (ev.cmd) {\n\t\t\t\tcase \"note\":\n\t\t\t\t\t// ev contains:\n\t\t\t\t\t// {\"cmd\":\"note\",\"pitch\":72,\"volume\":95,\"start\":0.125,\"duration\":0.25,\"instrument\":0,\"gap\":0}\n\t\t\t\t\t// where start and duration are in whole notes, gap is in 1/1920 of a second (i.e. MIDI ticks)\n\t\t\t\t\tvar inst = ev.instrument !== undefined ? instrumentIndexToName[ev.instrument] : currentInstrument\n\t\t\t\t\tif (ev.duration > 0) {\n\t\t\t\t\t\tvar gap = ev.gap ? ev.gap : 0;\n\t\t\t\t\t\tvar len = ev.duration;\n\t\t\t\t\t\tgap = Math.min(gap, len * 2 / 3);\n\t\t\t\t\t\tvar obj = {\n\t\t\t\t\t\t\tpitch: ev.pitch,\n\t\t\t\t\t\t\tinstrument: inst,\n\t\t\t\t\t\t\tstart: Math.round((ev.start) * 1000000)/1000000,\n\t\t\t\t\t\t\tend: Math.round((ev.start + len - gap) * 1000000)/1000000,\n\t\t\t\t\t\t\tvolume: ev.volume\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (ev.startChar)\n\t\t\t\t\t\t\tobj.startChar = ev.startChar;\n\t\t\t\t\t\tif (ev.endChar)\n\t\t\t\t\t\t\tobj.endChar = ev.endChar;\n\t\t\t\t\t\tif (ev.style)\n\t\t\t\t\t\t\tobj.style = ev.style;\n\t\t\t\t\t\tif (ev.cents)\n\t\t\t\t\t\t\tobj.cents = ev.cents;\n\t\t\t\t\t\tmap[i].push(obj);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"program\":\n\t\t\t\t\tcurrentInstrument = instrumentIndexToName[ev.instrument];\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"text\":\n\t\t\t\t\t// Ignore the track names - that is just for midi files.\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// TODO-PER: handle other event types\n\t\t\t\t\tconsole.log(\"Unhandled midi event\", ev);\n\t\t\t}\n\t\t});\n\t});\n\treturn map;\n};\n\nmodule.exports = createNoteMap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL2NyZWF0ZS1ub3RlLW1hcC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSw0QkFBNEIsbUJBQU8sQ0FBQyxvR0FBNEI7O0FBRWhFO0FBQ0E7QUFDQSxpQkFBaUIsNEJBQTRCO0FBQzdDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxFQUFFO0FBQ0Y7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy9zeW50aC9jcmVhdGUtbm90ZS1tYXAuanM/Nzg2NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb252ZXJ0IHRoZSBpbnB1dCBzdHJ1Y3R1cmUgdG8gYSBtb3JlIHVzZWZ1bCBzdHJ1Y3R1cmUgd2hlcmUgZWFjaCBpdGVtIGhhcyBhIGxlbmd0aCBvZiBpdHMgb3duLlxuXG52YXIgaW5zdHJ1bWVudEluZGV4VG9OYW1lID0gcmVxdWlyZSgnLi9pbnN0cnVtZW50LWluZGV4LXRvLW5hbWUnKTtcblxudmFyIGNyZWF0ZU5vdGVNYXAgPSBmdW5jdGlvbihzZXF1ZW5jZSkge1xuXHR2YXIgbWFwID0gW107XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgc2VxdWVuY2UudHJhY2tzLmxlbmd0aDsgaSsrKVxuXHRcdG1hcC5wdXNoKFtdKTtcblxuXHQvLyBUT0RPLVBFUjogaGFuZGxlIG1vcmUgdGhhbiBvbmUgbm90ZSBpbiBhIHRyYWNrXG5cdHZhciBuZXh0Tm90ZSA9IHt9O1xuXHR2YXIgY3VycmVudEluc3RydW1lbnQgPSBpbnN0cnVtZW50SW5kZXhUb05hbWVbMF07XG5cdC8vIGV2LnN0YXJ0IGFuZCBldi5kdXJhdGlvbiBhcmUgaW4gd2hvbGUgbm90ZXMuIE5lZWQgdG8gdHVybiB0aGVtIGludG9cblx0c2VxdWVuY2UudHJhY2tzLmZvckVhY2goZnVuY3Rpb24odHJhY2ssIGkpIHtcblx0XHR0cmFjay5mb3JFYWNoKGZ1bmN0aW9uKGV2KSB7XG5cdFx0XHRzd2l0Y2ggKGV2LmNtZCkge1xuXHRcdFx0XHRjYXNlIFwibm90ZVwiOlxuXHRcdFx0XHRcdC8vIGV2IGNvbnRhaW5zOlxuXHRcdFx0XHRcdC8vIHtcImNtZFwiOlwibm90ZVwiLFwicGl0Y2hcIjo3MixcInZvbHVtZVwiOjk1LFwic3RhcnRcIjowLjEyNSxcImR1cmF0aW9uXCI6MC4yNSxcImluc3RydW1lbnRcIjowLFwiZ2FwXCI6MH1cblx0XHRcdFx0XHQvLyB3aGVyZSBzdGFydCBhbmQgZHVyYXRpb24gYXJlIGluIHdob2xlIG5vdGVzLCBnYXAgaXMgaW4gMS8xOTIwIG9mIGEgc2Vjb25kIChpLmUuIE1JREkgdGlja3MpXG5cdFx0XHRcdFx0dmFyIGluc3QgPSBldi5pbnN0cnVtZW50ICE9PSB1bmRlZmluZWQgPyBpbnN0cnVtZW50SW5kZXhUb05hbWVbZXYuaW5zdHJ1bWVudF0gOiBjdXJyZW50SW5zdHJ1bWVudFxuXHRcdFx0XHRcdGlmIChldi5kdXJhdGlvbiA+IDApIHtcblx0XHRcdFx0XHRcdHZhciBnYXAgPSBldi5nYXAgPyBldi5nYXAgOiAwO1xuXHRcdFx0XHRcdFx0dmFyIGxlbiA9IGV2LmR1cmF0aW9uO1xuXHRcdFx0XHRcdFx0Z2FwID0gTWF0aC5taW4oZ2FwLCBsZW4gKiAyIC8gMyk7XG5cdFx0XHRcdFx0XHR2YXIgb2JqID0ge1xuXHRcdFx0XHRcdFx0XHRwaXRjaDogZXYucGl0Y2gsXG5cdFx0XHRcdFx0XHRcdGluc3RydW1lbnQ6IGluc3QsXG5cdFx0XHRcdFx0XHRcdHN0YXJ0OiBNYXRoLnJvdW5kKChldi5zdGFydCkgKiAxMDAwMDAwKS8xMDAwMDAwLFxuXHRcdFx0XHRcdFx0XHRlbmQ6IE1hdGgucm91bmQoKGV2LnN0YXJ0ICsgbGVuIC0gZ2FwKSAqIDEwMDAwMDApLzEwMDAwMDAsXG5cdFx0XHRcdFx0XHRcdHZvbHVtZTogZXYudm9sdW1lXG5cdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdFx0aWYgKGV2LnN0YXJ0Q2hhcilcblx0XHRcdFx0XHRcdFx0b2JqLnN0YXJ0Q2hhciA9IGV2LnN0YXJ0Q2hhcjtcblx0XHRcdFx0XHRcdGlmIChldi5lbmRDaGFyKVxuXHRcdFx0XHRcdFx0XHRvYmouZW5kQ2hhciA9IGV2LmVuZENoYXI7XG5cdFx0XHRcdFx0XHRpZiAoZXYuc3R5bGUpXG5cdFx0XHRcdFx0XHRcdG9iai5zdHlsZSA9IGV2LnN0eWxlO1xuXHRcdFx0XHRcdFx0aWYgKGV2LmNlbnRzKVxuXHRcdFx0XHRcdFx0XHRvYmouY2VudHMgPSBldi5jZW50cztcblx0XHRcdFx0XHRcdG1hcFtpXS5wdXNoKG9iaik7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwicHJvZ3JhbVwiOlxuXHRcdFx0XHRcdGN1cnJlbnRJbnN0cnVtZW50ID0gaW5zdHJ1bWVudEluZGV4VG9OYW1lW2V2Lmluc3RydW1lbnRdO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwidGV4dFwiOlxuXHRcdFx0XHRcdC8vIElnbm9yZSB0aGUgdHJhY2sgbmFtZXMgLSB0aGF0IGlzIGp1c3QgZm9yIG1pZGkgZmlsZXMuXG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0Ly8gVE9ETy1QRVI6IGhhbmRsZSBvdGhlciBldmVudCB0eXBlc1xuXHRcdFx0XHRcdGNvbnNvbGUubG9nKFwiVW5oYW5kbGVkIG1pZGkgZXZlbnRcIiwgZXYpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHR9KTtcblx0cmV0dXJuIG1hcDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gY3JlYXRlTm90ZU1hcDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/create-note-map.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/create-synth-control.js":
/*!**************************************************************!*\
  !*** ./node_modules/abcjs/src/synth/create-synth-control.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var supportsAudio = __webpack_require__(/*! ./supports-audio */ \"(ssr)/./node_modules/abcjs/src/synth/supports-audio.js\");\nvar registerAudioContext = __webpack_require__(/*! ./register-audio-context */ \"(ssr)/./node_modules/abcjs/src/synth/register-audio-context.js\");\nvar activeAudioContext = __webpack_require__(/*! ./active-audio-context */ \"(ssr)/./node_modules/abcjs/src/synth/active-audio-context.js\");\n\nvar loopImage = __webpack_require__(/*! ./images/loop.svg.js */ \"(ssr)/./node_modules/abcjs/src/synth/images/loop.svg.js\");\nvar playImage = __webpack_require__(/*! ./images/play.svg.js */ \"(ssr)/./node_modules/abcjs/src/synth/images/play.svg.js\");\nvar pauseImage = __webpack_require__(/*! ./images/pause.svg.js */ \"(ssr)/./node_modules/abcjs/src/synth/images/pause.svg.js\");\nvar loadingImage = __webpack_require__(/*! ./images/loading.svg.js */ \"(ssr)/./node_modules/abcjs/src/synth/images/loading.svg.js\");\nvar resetImage = __webpack_require__(/*! ./images/reset.svg.js */ \"(ssr)/./node_modules/abcjs/src/synth/images/reset.svg.js\");\n\nfunction CreateSynthControl(parent, options) {\n\tvar self = this;\n\t// parent is either an element or a selector.\n\tif (typeof parent === \"string\") {\n\t\tvar selector = parent;\n\t\tparent = document.querySelector(selector);\n\t\tif (!parent)\n\t\t\tthrow new Error(\"Cannot find element \\\"\" + selector + \"\\\" in the DOM.\");\n\t} else if (!(parent instanceof HTMLElement))\n\t\tthrow new Error(\"The first parameter must be a valid element or selector in the DOM.\");\n\n\tself.parent = parent;\n\tself.options = {};\n\tif (options)\n\t\tself.options = Object.assign({},options);\n\n\t// This can be called in the following cases:\n\t// AC already registered and not suspended\n\t// AC already registered and suspended\n\t// AC not registered and not passed in\n\t// AC not registered but passed in (but suspended)\n\t// AC not registered but passed in (not suspended)\n\t// If the AC is already registered, then just use it - ignore what is passed in\n\t// Create the AC if necessary if there isn't one already.\n\t// We don't care right now if the AC is suspended - whenever a button is clicked then we check it.\n\tif (self.options.ac)\n\t\tregisterAudioContext(self.options.ac);\n\tbuildDom(self.parent, self.options);\n\tattachListeners(self);\n\n\tself.disable = function(isDisabled) {\n\t\tvar el = self.parent.querySelector(\".abcjs-inline-audio\");\n\t\tif (isDisabled)\n\t\t\tel.classList.add(\"abcjs-disabled\");\n\t\telse\n\t\t\tel.classList.remove(\"abcjs-disabled\");\n\t};\n\tself.setWarp = function(tempo, warp) {\n\t\tvar el = self.parent.querySelector(\".abcjs-midi-tempo\");\n\t\tel.value = Math.round(warp);\n\t\tself.setTempo(tempo)\n\t};\n\tself.setTempo = function(tempo) {\n\t\tvar el = self.parent.querySelector(\".abcjs-midi-current-tempo\");\n\t\tif (el)\n\t\t\tel.innerHTML = Math.round(tempo);\n\t};\n\tself.resetAll = function() {\n\t\tvar pushedButtons = self.parent.querySelectorAll(\".abcjs-pushed\");\n\t\tfor (var i = 0; i < pushedButtons.length; i++) {\n\t\t\tvar button = pushedButtons[i];\n\t\t\tbutton.classList.remove(\"abcjs-pushed\");\n\t\t}\n\t};\n\tself.pushPlay = function(push) {\n\t\tvar startButton = self.parent.querySelector(\".abcjs-midi-start\");\n\t\tif (!startButton)\n\t\t\treturn;\n\t\tif (push)\n\t\t\tstartButton.classList.add(\"abcjs-pushed\");\n\t\telse\n\t\t\tstartButton.classList.remove(\"abcjs-pushed\");\n\t};\n\tself.pushLoop = function(push) {\n\t\tvar loopButton = self.parent.querySelector(\".abcjs-midi-loop\");\n\t\tif (!loopButton)\n\t\t\treturn;\n\t\tif (push)\n\t\t\tloopButton.classList.add(\"abcjs-pushed\");\n\t\telse\n\t\t\tloopButton.classList.remove(\"abcjs-pushed\");\n\t};\n\n\tself.setProgress = function (percent, totalTime) {\n\t\tvar progressBackground = self.parent.querySelector(\".abcjs-midi-progress-background\");\n\t\tvar progressThumb = self.parent.querySelector(\".abcjs-midi-progress-indicator\");\n\t\tif (!progressBackground || !progressThumb)\n\t\t\treturn;\n\t\tvar width = progressBackground.clientWidth;\n\t\tvar left = width * percent;\n\t\tprogressThumb.style.left = left + \"px\";\n\n\t\tvar clock = self.parent.querySelector(\".abcjs-midi-clock\");\n\t\tif (clock) {\n\t\t\tvar totalSeconds = (totalTime * percent) / 1000;\n\t\t\tvar minutes = Math.floor(totalSeconds / 60);\n\t\t\tvar seconds = Math.floor(totalSeconds % 60);\n\t\t\tvar secondsFormatted = seconds < 10 ? \"0\" + seconds : seconds;\n\t\t\tclock.innerHTML = minutes + \":\" + secondsFormatted;\n\t\t}\n\t};\n\n\tif (self.options.afterResume) {\n\t\tvar isResumed = false;\n\t\tif (self.options.ac) {\n\t\t\tisResumed = self.options.ac.state !== \"suspended\";\n\t\t} else if (activeAudioContext()) {\n\t\t\tisResumed = activeAudioContext().state !== \"suspended\";\n\t\t}\n\t\tif (isResumed)\n\t\t\tself.options.afterResume();\n\t}\n}\n\nfunction buildDom(parent, options) {\n\tvar hasLoop = !!options.loopHandler;\n\tvar hasRestart = !!options.restartHandler;\n\tvar hasPlay = !!options.playHandler || !!options.playPromiseHandler;\n\tvar hasProgress = !!options.progressHandler;\n\tvar hasWarp = !!options.warpHandler;\n\tvar hasClock = options.hasClock !== false;\n\n\tvar html = '<div class=\"abcjs-inline-audio\">\\n';\n\tif (hasLoop) {\n\t\tvar repeatTitle = options.repeatTitle ? options.repeatTitle : \"Click to toggle play once/repeat.\";\n\t\tvar repeatAria = options.repeatAria ? options.repeatAria : repeatTitle;\n\t\thtml += '<button type=\"button\" class=\"abcjs-midi-loop abcjs-btn\" title=\"' + repeatTitle + '\" aria-label=\"' + repeatAria + '\">' + loopImage + '</button>\\n';\n\t}\n\tif (hasRestart) {\n\t\tvar restartTitle = options.restartTitle ? options.restartTitle : \"Click to go to beginning.\";\n\t\tvar restartAria = options.restartAria ? options.restartAria : restartTitle;\n\t\thtml += '<button type=\"button\" class=\"abcjs-midi-reset abcjs-btn\" title=\"' + restartTitle + '\" aria-label=\"' + restartAria + '\">' + resetImage + '</button>\\n';\n\t}\n\tif (hasPlay) {\n\t\tvar playTitle = options.playTitle ? options.playTitle : \"Click to play/pause.\";\n\t\tvar playAria = options.playAria ? options.playAria : playTitle;\n\t\thtml += '<button type=\"button\" class=\"abcjs-midi-start abcjs-btn\" title=\"' + playTitle + '\" aria-label=\"' + playAria + '\">' + playImage + pauseImage + loadingImage + '</button>\\n';\n\t}\n\tif (hasProgress) {\n\t\tvar randomTitle = options.randomTitle ? options.randomTitle : \"Click to change the playback position.\";\n\t\tvar randomAria = options.randomAria ? options.randomAria : randomTitle;\n\t\thtml += '<button type=\"button\" class=\"abcjs-midi-progress-background\" title=\"' + randomTitle + '\" aria-label=\"' + randomAria + '\"><span class=\"abcjs-midi-progress-indicator\"></span></button>\\n';\n\t}\n\tif (hasClock) {\n\t\thtml += '<span class=\"abcjs-midi-clock\"></span>\\n';\n\t}\n\tif (hasWarp) {\n\t\tvar warpTitle = options.warpTitle ? options.warpTitle : \"Change the playback speed.\";\n\t\tvar warpAria = options.warpAria ? options.warpAria : warpTitle;\n\t\tvar bpm = options.bpm ? options.bpm : \"BPM\";\n\t\thtml += '<span class=\"abcjs-tempo-wrapper\"><label><input class=\"abcjs-midi-tempo\" type=\"number\" min=\"1\" max=\"300\" value=\"100\" title=\"' + warpTitle + '\" aria-label=\"' + warpAria + '\">%</label><span>&nbsp;(<span class=\"abcjs-midi-current-tempo\"></span> ' + bpm + ')</span></span>\\n';\n\t}\n\thtml += '<div class=\"abcjs-css-warning\" style=\"font-size: 12px;color:red;border: 1px solid red;text-align: center;width: 300px;margin-top: 4px;font-weight: bold;border-radius: 4px;\">CSS required: load abcjs-audio.css</div>';\n\thtml += '</div>\\n';\n\tparent.innerHTML = html;\n}\n\nfunction acResumerMiddleWare(next, ev, playBtn, afterResume, isPromise) {\n\tvar needsInit = true;\n\tif (!activeAudioContext()) {\n\t\tregisterAudioContext();\n\t} else {\n\t\tneedsInit = activeAudioContext().state === \"suspended\";\n\t}\n\tif (!supportsAudio()) {\n\t\tthrow { status: \"NotSupported\", message: \"This browser does not support audio.\"};\n\t}\n\n\tif ((needsInit || isPromise) && playBtn)\n\t\tplayBtn.classList.add(\"abcjs-loading\");\n\n\tif (needsInit) {\n\t\tactiveAudioContext().resume().then(function () {\n\t\t\tif (afterResume) {\n\t\t\t\tafterResume().then(function (response) {\n\t\t\t\t\tdoNext(next, ev, playBtn, isPromise);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdoNext(next, ev, playBtn, isPromise);\n\t\t\t}\n\t\t});\n\t} else {\n\t\tdoNext(next, ev, playBtn, isPromise);\n\t}\n}\n\nfunction doNext(next, ev, playBtn, isPromise) {\n\tif (isPromise) {\n\t\tnext(ev).then(function() {\n\t\t\tif (playBtn)\n\t\t\t\tplayBtn.classList.remove(\"abcjs-loading\");\n\t\t});\n\t} else {\n\t\tnext(ev);\n\t\tif (playBtn)\n\t\t\tplayBtn.classList.remove(\"abcjs-loading\");\n\t}\n}\n\nfunction attachListeners(self) {\n\tvar hasLoop = !!self.options.loopHandler;\n\tvar hasRestart = !!self.options.restartHandler;\n\tvar hasPlay = !!self.options.playHandler || !!self.options.playPromiseHandler;\n\tvar hasProgress = !!self.options.progressHandler;\n\tvar hasWarp = !!self.options.warpHandler;\n\tvar playBtn = self.parent.querySelector(\".abcjs-midi-start\");\n\n\tif (hasLoop)\n\t\tself.parent.querySelector(\".abcjs-midi-loop\").addEventListener(\"click\", function(ev){acResumerMiddleWare(self.options.loopHandler, ev, playBtn, self.options.afterResume)});\n\tif (hasRestart)\n\t\tself.parent.querySelector(\".abcjs-midi-reset\").addEventListener(\"click\", function(ev){acResumerMiddleWare(self.options.restartHandler, ev, playBtn, self.options.afterResume)});\n\tif (hasPlay)\n\t\tplayBtn.addEventListener(\"click\", function(ev){\n\t\t\tacResumerMiddleWare(\n\t\t\t\tself.options.playPromiseHandler || self.options.playHandler,\n\t\t\t\tev,\n\t\t\t\tplayBtn,\n\t\t\t\tself.options.afterResume,\n\t\t\t\t!!self.options.playPromiseHandler)\n\t\t});\n\tif (hasProgress)\n\t\tself.parent.querySelector(\".abcjs-midi-progress-background\").addEventListener(\"click\", function(ev){acResumerMiddleWare(self.options.progressHandler, ev, playBtn, self.options.afterResume)});\n\tif (hasWarp)\n\t\tself.parent.querySelector(\".abcjs-midi-tempo\").addEventListener(\"change\", function(ev){acResumerMiddleWare(self.options.warpHandler, ev, playBtn, self.options.afterResume)});\n}\nmodule.exports = CreateSynthControl;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/create-synth-control.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/create-synth.js":
/*!******************************************************!*\
  !*** ./node_modules/abcjs/src/synth/create-synth.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var getNote = __webpack_require__(/*! ./load-note */ \"(ssr)/./node_modules/abcjs/src/synth/load-note.js\");\nvar createNoteMap = __webpack_require__(/*! ./create-note-map */ \"(ssr)/./node_modules/abcjs/src/synth/create-note-map.js\");\nvar registerAudioContext = __webpack_require__(/*! ./register-audio-context */ \"(ssr)/./node_modules/abcjs/src/synth/register-audio-context.js\");\nvar activeAudioContext = __webpack_require__(/*! ./active-audio-context */ \"(ssr)/./node_modules/abcjs/src/synth/active-audio-context.js\");\nvar supportsAudio = __webpack_require__(/*! ./supports-audio */ \"(ssr)/./node_modules/abcjs/src/synth/supports-audio.js\");\nvar pitchToNoteName = __webpack_require__(/*! ./pitch-to-note-name */ \"(ssr)/./node_modules/abcjs/src/synth/pitch-to-note-name.js\");\nvar instrumentIndexToName = __webpack_require__(/*! ./instrument-index-to-name */ \"(ssr)/./node_modules/abcjs/src/synth/instrument-index-to-name.js\");\nvar downloadBuffer = __webpack_require__(/*! ./download-buffer */ \"(ssr)/./node_modules/abcjs/src/synth/download-buffer.js\");\nvar placeNote = __webpack_require__(/*! ./place-note */ \"(ssr)/./node_modules/abcjs/src/synth/place-note.js\");\nvar soundsCache = __webpack_require__(/*! ./sounds-cache */ \"(ssr)/./node_modules/abcjs/src/synth/sounds-cache.js\");\n\n// TODO-PER: remove the midi tests from here: I don't think the object can be constructed unless it passes.\nvar notSupportedMessage = \"MIDI is not supported in this browser.\";\n\nvar originalSoundFontUrl = \"https://paulrosen.github.io/midi-js-soundfonts/abcjs/\";\n// These are the original soundfonts supplied. They will need a volume boost:\nvar defaultSoundFontUrl = \"https://paulrosen.github.io/midi-js-soundfonts/FluidR3_GM/\";\nvar alternateSoundFontUrl = \"https://paulrosen.github.io/midi-js-soundfonts/MusyngKite/\";\n\nfunction CreateSynth() {\n\tvar self = this;\n\tself.audioBufferPossible = undefined;\n\tself.directSource = []; // type: AudioBufferSourceNode\n\tself.startTimeSec = undefined; // the time (in seconds) that the audio started: used for pause to get the pausedTimeSec.\n\tself.pausedTimeSec = undefined; // the position (in seconds) that the audio was paused: used for resume.\n\tself.audioBuffers = []; // cache of the buffers so starting play can be fast.\n\tself.duration = undefined; // the duration of the tune in seconds.\n\tself.isRunning = false; // whether there is currently a sound buffer running.\n\tself.options = {} // Thx tomohirohiratsuka\n\tself.pickupLength = 0\n\n\t// Load and cache all needed sounds\n\tself.init = function(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tif (options.options)\n\t\t\tself.options = options.options\n\t\tregisterAudioContext(options.audioContext); // This works no matter what - if there is already an ac it is a nop; if the context is not passed in, then it creates one.\n\t\tvar startTime = activeAudioContext().currentTime;\n\t\tself.debugCallback = options.debugCallback;\n\t\tif (self.debugCallback)\n\t\t\tself.debugCallback(\"init called\");\n\t\tself.audioBufferPossible = self._deviceCapable();\n\t\tif (!self.audioBufferPossible)\n\t\t\treturn Promise.reject({ status: \"NotSupported\", message: notSupportedMessage});\n\t\tvar params = options.options ? options.options : {};\n\t\tself.soundFontUrl = params.soundFontUrl ? params.soundFontUrl : defaultSoundFontUrl;\n\t\tif (self.soundFontUrl[self.soundFontUrl.length-1] !== '/')\n\t\t\tself.soundFontUrl += '/';\n\t\tif (params.soundFontVolumeMultiplier || params.soundFontVolumeMultiplier === 0)\n\t\t\tself.soundFontVolumeMultiplier = params.soundFontVolumeMultiplier;\n\t\telse if (self.soundFontUrl === defaultSoundFontUrl || self.soundFontUrl === alternateSoundFontUrl)\n\t\t\tself.soundFontVolumeMultiplier = 3.0;\n\t\telse if (self.soundFontUrl === originalSoundFontUrl)\n\t\t\tself.soundFontVolumeMultiplier = 0.4;\n\t\telse\n\t\t\tself.soundFontVolumeMultiplier = 1.0;\n\t\tif (params.programOffsets)\n\t\t\tself.programOffsets = params.programOffsets;\n\t\telse if (self.soundFontUrl === originalSoundFontUrl)\n\t\t\tself.programOffsets = {\n\t\t\t\t\"bright_acoustic_piano\": 20,\n\t\t\t\t\"honkytonk_piano\": 20,\n\t\t\t\t\"electric_piano_1\": 30,\n\t\t\t\t\"electric_piano_2\": 30,\n\t\t\t\t\"harpsichord\": 40,\n\t\t\t\t\"clavinet\": 20,\n\t\t\t\t\"celesta\": 20,\n\t\t\t\t\"glockenspiel\": 40,\n\t\t\t\t\"vibraphone\": 30,\n\t\t\t\t\"marimba\": 35,\n\t\t\t\t\"xylophone\": 30,\n\t\t\t\t\"tubular_bells\": 35,\n\t\t\t\t\"dulcimer\": 30,\n\t\t\t\t\"drawbar_organ\": 20,\n\t\t\t\t\"percussive_organ\": 25,\n\t\t\t\t\"rock_organ\": 20,\n\t\t\t\t\"church_organ\": 40,\n\t\t\t\t\"reed_organ\": 40,\n\t\t\t\t\"accordion\": 40,\n\t\t\t\t\"harmonica\": 40,\n\t\t\t\t\"acoustic_guitar_nylon\": 20,\n\t\t\t\t\"acoustic_guitar_steel\": 30,\n\t\t\t\t\"electric_guitar_jazz\": 25,\n\t\t\t\t\"electric_guitar_clean\": 15,\n\t\t\t\t\"electric_guitar_muted\": 35,\n\t\t\t\t\"overdriven_guitar\": 25,\n\t\t\t\t\"distortion_guitar\": 20,\n\t\t\t\t\"guitar_harmonics\": 30,\n\t\t\t\t\"electric_bass_finger\": 15,\n\t\t\t\t\"electric_bass_pick\": 30,\n\t\t\t\t\"fretless_bass\": 40,\n\t\t\t\t\"violin\": 105,\n\t\t\t\t\"viola\": 50,\n\t\t\t\t\"cello\": 40,\n\t\t\t\t\"contrabass\": 60,\n\t\t\t\t\"trumpet\": 10,\n\t\t\t\t\"trombone\": 90,\n\t\t\t\t\"alto_sax\": 20,\n\t\t\t\t\"tenor_sax\": 20,\n\t\t\t\t\"clarinet\": 20,\n\t\t\t\t\"flute\": 50,\n\t\t\t\t\"banjo\": 50,\n\t\t\t\t\"woodblock\": 20,\n\t\t\t};\n\t\telse\n\t\t\tself.programOffsets = {};\n\t\tvar p = params.fadeLength !== undefined ? parseInt(params.fadeLength,10) : NaN;\n\t\tself.fadeLength = isNaN(p) ? 200 : p;\n\t\tp = params.noteEnd !== undefined ? parseInt(params.noteEnd,10) : NaN;\n\t\tself.noteEnd = isNaN(p) ? 0 : p;\n\n\t\tself.pan = params.pan;\n\t\tself.meterSize = 1;\n\t\tif (options.visualObj) {\n\t\t\tself.flattened = options.visualObj.setUpAudio(params);\n\t\t\tvar meter = options.visualObj.getMeterFraction();\n\t\t\tif (meter.den)\n\t\t\t\tself.meterSize = options.visualObj.getMeterFraction().num / options.visualObj.getMeterFraction().den;\n\t\t\tself.pickupLength = options.visualObj.getPickupLength()\n\t\t} else if (options.sequence)\n\t\t\tself.flattened = options.sequence;\n\t\telse\n\t\t\treturn Promise.reject(new Error(\"Must pass in either a visualObj or a sequence\"));\n\t\tself.millisecondsPerMeasure = options.millisecondsPerMeasure ? options.millisecondsPerMeasure : (options.visualObj ? options.visualObj.millisecondsPerMeasure(self.flattened.tempo) : 1000);\n\t\tself.beatsPerMeasure = options.visualObj ? options.visualObj.getBeatsPerMeasure() : 4;\n\t\tself.sequenceCallback = params.sequenceCallback;\n\t\tself.callbackContext = params.callbackContext;\n\t\tself.onEnded = params.onEnded;\n\t\tself.meterFraction = options.visualObj ? options.visualObj.getMeterFraction() : {den: 1} // If we are given a sequence instead of a regular visual obj, then don't do the swing\n\n\t\tvar allNotes = {};\n\t\tvar cached = [];\n\t\tvar errorNotes = [];\n\t\tvar currentInstrument = instrumentIndexToName[0];\n\t\tself.flattened.tracks.forEach(function(track) {\n\t\t\ttrack.forEach(function(event) {\n\t\t\t\tif (event.cmd === \"program\" && instrumentIndexToName[event.instrument])\n\t\t\t\t\tcurrentInstrument = instrumentIndexToName[event.instrument];\n\t\t\t\tif (event.pitch !== undefined) {\n\t\t\t\t\tvar pitchNumber = event.pitch;\n\t\t\t\t\tvar noteName = pitchToNoteName[pitchNumber];\n\t\t\t\t\tvar inst = event.instrument !== undefined ? instrumentIndexToName[event.instrument] : currentInstrument\n\t\t\t\t\tif (noteName) {\n\t\t\t\t\t\tif (!allNotes[inst])\n\t\t\t\t\t\t\tallNotes[inst] = {};\n\t\t\t\t\t\tif (!soundsCache[inst] || !soundsCache[inst][noteName])\n\t\t\t\t\t\t\tallNotes[inst][noteName] = true;\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvar label2 = inst+\":\"+noteName\n\t\t\t\t\t\t\tif (cached.indexOf(label2) < 0)\n\t\t\t\t\t\t\t\tcached.push(label2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar label = inst+\":\"+noteName\n\t\t\t\t\t\tconsole.log(\"Can't find note: \", pitchNumber, label);\n\t\t\t\t\t\tif (errorNotes.indexOf(label) < 0)\n\t\t\t\t\t\t\terrorNotes.push(label)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tif (self.debugCallback)\n\t\t\tself.debugCallback(\"note gathering time = \" + Math.floor((activeAudioContext().currentTime - startTime)*1000)+\"ms\");\n\t\tstartTime = activeAudioContext().currentTime;\n\n\t\tvar notes = [];\n\t\tObject.keys(allNotes).forEach(function(instrument) {\n\t\t\tObject.keys(allNotes[instrument]).forEach(function(note) {\n\t\t\t\tnotes.push({ instrument: instrument, note: note });\n\t\t\t});\n\t\t});\n\t\tif (self.debugCallback)\n\t\t\tself.debugCallback(\"notes \"+JSON.stringify(notes));\n\n\t\t// If there are lots of notes, load them in batches\n\t\tvar batches = [];\n\t\tvar CHUNK = 256;\n\t\tfor (var i=0; i < notes.length; i += CHUNK) {\n\t\t\tbatches.push(notes.slice(i, i + CHUNK));\n\t\t}\n\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tvar results = {\n\t\t\t\tcached: cached,\n\t\t\t\terror: errorNotes,\n\t\t\t\tloaded: []\n\t\t\t};\n\n\t\t\tvar index = 0;\n\t\t\tvar next = function() {\n\t\t\t\tif (self.debugCallback)\n\t\t\t\t\tself.debugCallback(\"loadBatch idx=\"+index+ \" len=\"+batches.length);\n\t\n\t\t\t\tif (index < batches.length) {\n\t\t\t\t\tself._loadBatch(batches[index], self.soundFontUrl, startTime).then(function(data) {\n\t\t\t\t\t\tif (self.debugCallback)\n\t\t\t\t\t\t\tself.debugCallback(\"loadBatch then\");\n\t\t\t\t\t\tstartTime = activeAudioContext().currentTime;\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\tif (data.error)\n\t\t\t\t\t\t\t\tresults.error = results.error.concat(data.error);\n\t\t\t\t\t\t\tif (data.loaded)\n\t\t\t\t\t\t\t\tresults.loaded = results.loaded.concat(data.loaded);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}, reject);\n\t\t\t\t} else {\n\t\t\t\t\tif (self.debugCallback)\n\t\t\t\t\t\tself.debugCallback(\"resolve init\");\n\t\t\n\t\t\t\t\tresolve(results);\n\t\t\t\t}\n\t\t\t};\n\t\t\tnext();\n\t\t});\n\t};\n\n\tself._loadBatch = (function(batch, soundFontUrl, startTime, delay) {\n\t\t// This is called recursively to see if the sounds have loaded. The \"delay\" parameter is how long it has been since the original call.\n\t\tvar promises = [];\n\t\tbatch.forEach(function(item) {\n\t\t\tif (self.debugCallback)\n\t\t\t\tself.debugCallback(\"getNote \" + item.instrument+':'+item.note);\n\t\t\tpromises.push(getNote(soundFontUrl, item.instrument, item.note, activeAudioContext()));\n\t\t});\n\t\treturn Promise.all(promises).then(function(response) {\n\t\t\tif (self.debugCallback)\n\t\t\t\tself.debugCallback(\"mp3 load time = \" + Math.floor((activeAudioContext().currentTime - startTime)*1000)+\"ms\");\n\t\t\tvar loaded = [];\n\t\t\tvar cached = [];\n\t\t\tvar pending = [];\n\t\t\tvar error = [];\n\t\t\tfor (var i = 0; i < response.length; i++) {\n\t\t\t\tvar oneResponse = response[i];\n\t\t\t\tvar which = oneResponse.instrument + \":\" + oneResponse.name;\n\t\t\t\tif (oneResponse.status === \"loaded\")\n\t\t\t\t\tloaded.push(which);\n\t\t\t\telse if (oneResponse.status === \"pending\")\n\t\t\t\t\tpending.push(which);\n\t\t\t\telse if (oneResponse.status === \"cached\")\n\t\t\t\t\tcached.push(which);\n\t\t\t\telse\n\t\t\t\t\terror.push(which + ' ' + oneResponse.message);\n\t\t\t}\n\t\t\tif (pending.length > 0) {\n\t\t\t\tif (self.debugCallback)\n\t\t\t\t\tself.debugCallback(\"pending \" + JSON.stringify(pending));\n\t\t\t\t// There was probably a second call for notes before the first one finished, so just retry a few times to see if they stop being pending.\n\t\t\t\t// Retry quickly at first so that there isn't an unnecessary delay, but increase the delay each time.\n\t\t\t\tif (!delay)\n\t\t\t\t\tdelay = 50;\n\t\t\t\telse\n\t\t\t\t\tdelay = delay * 2;\n\t\t\t\tif (delay < 90000) {\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\tvar newBatch = [];\n\t\t\t\t\t\t\tfor (i = 0; i < pending.length; i++) {\n\t\t\t\t\t\t\t\twhich = pending[i].split(\":\");\n\t\t\t\t\t\t\t\tnewBatch.push({instrument: which[0], note: which[1]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (self.debugCallback)\n\t\t\t\t\t\t\t\tself.debugCallback(\"retry \" + JSON.stringify(newBatch));\n\t\t\t\t\t\t\t\t\tself._loadBatch(newBatch, soundFontUrl, startTime, delay).then(function (response) {\n\t\t\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t\t\t}).catch(function (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, delay);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tvar list = [];\n\t\t\t\t\tfor (var j = 0; j < batch.length; j++)\n\t\t\t\t\t\tlist.push(batch[j].instrument+'/'+batch[j].note)\n\t\t\t\t\t\tif (self.debugCallback)\n\t\t\t\t\t\t\tself.debugCallback(\"loadBatch timeout\")\n\t\t\t\t\t\treturn Promise.reject(new Error(\"timeout attempting to load: \" + list.join(\", \")));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (self.debugCallback)\n\t\t\t\t\tself.debugCallback(\"loadBatch resolve\")\n\t\t\t\treturn Promise.resolve({loaded: loaded, cached: cached, error: error});\n\t\t\t}\n\t\t}).catch(function (error) {\n\t\t\tif (self.debugCallback)\n\t\t\t\tself.debugCallback(\"loadBatch catch \"+error.message)\n\t\t});\n\t});\n\n\tself.prime = function() {\n\t\t// At this point all of the notes are loaded. This function writes them into the output buffer.\n\t\t// Most music has a lot of repeating notes. If a note is the same pitch, volume, length, etc. as another one,\n\t\t// It saves a lot of time to just create it once and place it repeatedly where ever it needs to be.\n\t\tvar fadeTimeSec = self.fadeLength/1000;\n\t\tself.isRunning = false;\n\t\tif (!self.audioBufferPossible)\n\t\t\treturn Promise.reject(new Error(notSupportedMessage));\n\t\tif (self.debugCallback)\n\t\t\tself.debugCallback(\"prime called\");\n\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\ttry {\n\t\t\t\tvar startTime = activeAudioContext().currentTime;\n\t\t\t\tvar tempoMultiplier = self.millisecondsPerMeasure / 1000 / self.meterSize;\n\t\t\t\tself.duration = self.flattened.totalDuration * tempoMultiplier;\n\t\t\t\tif (self.duration <= 0) {\n\t\t\t\t\tself.audioBuffers = [];\n\t\t\t\t\treturn resolve({status: \"empty\", seconds: 0});\n\t\t\t\t}\n\t\t\t\tself.duration += fadeTimeSec;\n\t\t\t\tvar totalSamples = Math.floor(activeAudioContext().sampleRate * self.duration);\n\n\t\t\t\t// There might be a previous run that needs to be turned off.\n\t\t\t\tself.stop();\n\n\t\t\t\tvar noteMapTracks = createNoteMap(self.flattened);\n\n\t\t\t\tif (self.options.swing)\n\t\t\t\t\taddSwing(noteMapTracks, self.options.swing, self.meterFraction, self.pickupLength)\n\n\t\t\t\tif (self.sequenceCallback)\n\t\t\t\t\tself.sequenceCallback(noteMapTracks, self.callbackContext);\n\n\t\t\t\tvar panDistances = setPan(noteMapTracks.length, self.pan);\n\n\t\t\t\t// Create a simple list of all the unique sounds in this music and where they should be placed.\n\t\t\t\t// There appears to be a limit on how many audio buffers can be created at once so this technique limits the number needed.\n\t\t\t\tvar uniqueSounds = {};\n\t\t\t\tnoteMapTracks.forEach(function (noteMap, trackNumber) {\n\t\t\t\t\tvar panDistance = panDistances && panDistances.length > trackNumber ? panDistances[trackNumber] : 0;\n\t\t\t\t\tnoteMap.forEach(function (note) {\n\t\t\t\t\t\tvar key = note.instrument + ':' + note.pitch + ':' + note.volume + ':' + Math.round((note.end - note.start) * 1000) / 1000 + ':' + panDistance + ':' + tempoMultiplier + ':' + (note.cents ? note.cents : 0);\n\t\t\t\t\t\tif (self.debugCallback)\n\t\t\t\t\t\t\tself.debugCallback(\"noteMapTrack \" + key)\n\t\t\t\t\t\tif (!uniqueSounds[key])\n\t\t\t\t\t\t\tuniqueSounds[key] = [];\n\t\t\t\t\t\tuniqueSounds[key].push(note.start);\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t// Now that we know what we are trying to create, construct the audio buffer by creating each sound and placing it.\n\t\t\t\tvar allPromises = [];\n\t\t\t\tvar audioBuffer = activeAudioContext().createBuffer(2, totalSamples, activeAudioContext().sampleRate);\n\t\t\t\tfor (var key2 = 0; key2 < Object.keys(uniqueSounds).length; key2++) {\n\t\t\t\t\tvar k = Object.keys(uniqueSounds)[key2];\n\t\t\t\t\tvar parts = k.split(\":\");\n\t\t\t\t\tvar cents = parts[6] !== undefined ? parseFloat(parts[6]) : 0;\n\t\t\t\t\tparts = {instrument: parts[0], pitch: parseInt(parts[1], 10), volume: parseInt(parts[2], 10), len: parseFloat(parts[3]), pan: parseFloat(parts[4]), tempoMultiplier: parseFloat(parts[5]), cents: cents};\n\t\t\t\t\tallPromises.push(placeNote(audioBuffer, activeAudioContext().sampleRate, parts, uniqueSounds[k], self.soundFontVolumeMultiplier, self.programOffsets[parts.instrument], fadeTimeSec, self.noteEnd / 1000, self.debugCallback));\n\t\t\t\t}\n\t\t\t\tself.audioBuffers = [audioBuffer];\n\n\t\t\t\tif (self.debugCallback) {\n\t\t\t\t\tself.debugCallback(\"sampleRate = \" + activeAudioContext().sampleRate);\n\t\t\t\t\tself.debugCallback(\"totalSamples = \" + totalSamples);\n\t\t\t\t\tself.debugCallback(\"creationTime = \" + Math.floor((activeAudioContext().currentTime - startTime) * 1000) + \"ms\");\n\t\t\t\t}\n\n\t\t\t\tfunction resolveData(me) {\n\t\t\t\t\tvar duration = me && me.audioBuffers && me.audioBuffers.length > 0 ? me.audioBuffers[0].duration : 0;\n\t\t\t\t\treturn {status: activeAudioContext().state, duration: duration}\n\t\t\t\t}\n\n\t\t\t\tPromise.all(allPromises).then(function () {\n\t\t\t\t\t// Safari iOS can mess with the audioContext state, so resume if needed.\n\t\t\t\t\tif (activeAudioContext().state === \"suspended\") {\n\t\t\t\t\t\tactiveAudioContext().resume().then(function () {\n\t\t\t\t\t\t\tresolve(resolveData(self));\n\t\t\t\t\t\t})\n\t\t\t\t\t} else if (activeAudioContext().state === \"interrupted\") {\n\t\t\t\t\t\tactiveAudioContext().suspend().then(function () {\n\t\t\t\t\t\t\tactiveAudioContext().resume().then(function () {\n\t\t\t\t\t\t\t\tresolve(resolveData(self));\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(resolveData(self));\n\t\t\t\t\t}\n\t\t\t\t}).catch(function (error) {\n\t\t\t\t\treject(error)\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\treject(error)\n\t\t\t}\n\t\t});\n\t};\n\n\tfunction setPan(numTracks, panParam) {\n\t\t// panParam, if it is set, can be either a number representing the separation between each track,\n\t\t// or an array, which is the absolute pan position for each track.\n\t\tif (panParam === null || panParam === undefined)\n\t\t\treturn null;\n\n\t\tvar panDistances = [];\n\t\tif (panParam.length) {\n\t\t\t// We received an array. If there are the same number of items in the pan array as the number of tracks,\n\t\t\t// it all lines up perfectly. If there are more items in the pan array than the tracks then the excess items are ignored.\n\t\t\t// If there are more tracks than items in the pan array then the remaining tracks are placed in the middle.\n\t\t\t// If any of the pan numbers are out of range then they are adjusted.\n\t\t\tfor (var pp = 0; pp < numTracks; pp++) {\n\t\t\t\tif (pp < panParam.length) {\n\t\t\t\t\tvar x = parseFloat(panParam[pp]);\n\t\t\t\t\tif (x < -1)\n\t\t\t\t\t\tx = -1;\n\t\t\t\t\telse if (x > 1)\n\t\t\t\t\t\tx = 1;\n\t\t\t\t\tpanDistances.push(x);\n\t\t\t\t} else\n\t\t\t\t\tpanDistances.push(0)\n\t\t\t}\n\t\t\treturn panDistances;\n\t\t} else {\n\t\t\tvar panNumber = parseFloat(panParam);\n\t\t\t// the separation needs to be no further than 2 (i.e. -1 to 1) so test to see if there are too many tracks for the passed in distance\n\t\t\tif (panNumber*(numTracks-1) > 2)\n\t\t\t\treturn null;\n\n\t\t\t// If there are an even number of tracks, then offset so that the first two are centered around the middle\n\t\t\tvar even = numTracks % 2 === 0;\n\t\t\tvar currLow = even ? 0 - panNumber/2 : 0;\n\t\t\tvar currHigh = currLow+panNumber;\n\t\t\t// Now add the tracks to either side\n\t\t\tfor (var p = 0; p < numTracks; p++) {\n\t\t\t\teven = p % 2 === 0;\n\t\t\t\tif (even) {\n\t\t\t\t\tpanDistances.push(currLow);\n\t\t\t\t\tcurrLow -= panNumber;\n\t\t\t\t} else {\n\t\t\t\t\tpanDistances.push(currHigh);\n\t\t\t\t\tcurrHigh += panNumber;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn panDistances;\n\t\t}\n\t\t// There was either no panning, or the parameters were illegal\n\t\treturn null;\n\t}\n\n\t// This is called after everything is set up, so it can quickly make sound\n\tself.start = function() {\n\t\tif (!self.audioBufferPossible)\n\t\t\tthrow new Error(notSupportedMessage);\n\t\tif (self.debugCallback)\n\t\t\tself.debugCallback(\"start called\");\n\n\t\tvar resumePosition = self.pausedTimeSec ? self.pausedTimeSec : 0;\n\t\tself._kickOffSound(resumePosition);\n\t\tself.startTimeSec = activeAudioContext().currentTime - resumePosition;\n\t\tself.pausedTimeSec = undefined;\n\n\t\tif (self.debugCallback)\n\t\t\tself.debugCallback(\"MIDI STARTED\", self.startTimeSec);\n\t};\n\n\tself.pause = function() {\n\t\tif (!self.audioBufferPossible)\n\t\t\tthrow new Error(notSupportedMessage);\n\t\tif (self.debugCallback)\n\t\t\tself.debugCallback(\"pause called\");\n\n\t\tself.pausedTimeSec = self.stop();\n\t\treturn self.pausedTimeSec;\n\t};\n\n\tself.resume = function() {\n\t\tself.start();\n\t};\n\n\tself.seek = function(position, units) {\n\t\tvar offset;\n\t\tswitch (units) {\n\t\t\tcase \"seconds\":\n\t\t\t\toffset = position;\n\t\t\t\tbreak;\n\t\t\tcase \"beats\":\n\t\t\t\toffset = position * self.millisecondsPerMeasure / self.beatsPerMeasure / 1000;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// this is \"percent\" or any illegal value\n\t\t\t\toffset = (self.duration-self.fadeLength/1000) * position;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// TODO-PER: can seek when paused or when playing\n\t\tif (!self.audioBufferPossible)\n\t\t\tthrow new Error(notSupportedMessage);\n\t\tif (self.debugCallback)\n\t\t\tself.debugCallback(\"seek called sec=\" + offset);\n\n\t\tif (self.isRunning) {\n\t\t\tself.stop();\n\t\t\tself._kickOffSound(offset);\n\t\t} else {\n\t\t\tself.pausedTimeSec = offset;\n\t\t}\n\t\tself.pausedTimeSec = offset;\n\t};\n\n\tself.stop = function() {\n\t\tself.isRunning = false;\n\t\tself.pausedTimeSec = undefined;\n\t\tself.directSource.forEach(function(source) {\n\t\t\ttry {\n\t\t\t\tsource.stop();\n\t\t\t} catch (error) {\n\t\t\t\t// We don't care if self succeeds: it might fail if something else turned off the sound or it ended for some reason.\n\t\t\t\tconsole.log(\"direct source didn't stop:\", error)\n\t\t\t}\n\t\t});\n\t\tself.directSource = [];\n\t\tvar elapsed = activeAudioContext().currentTime - self.startTimeSec;\n\t\treturn elapsed;\n\t};\n\tself.finished = function() {\n\t\tself.startTimeSec = undefined;\n\t\tself.pausedTimeSec = undefined;\n\t\tself.isRunning = false;\n\t};\n\n\tself.download = function() {\n\t\treturn downloadBuffer(self);\n\t};\n\n\tself.getAudioBuffer = function() {\n\t\treturn self.audioBuffers[0];\n\t};\n\n\tself.getIsRunning = function() {\n\t\treturn self.isRunning;\n\t}\n\n\t/////////////// Private functions //////////////\n\n\tself._deviceCapable = function() {\n\t\tif (!supportsAudio()) {\n\t\t\tconsole.warn(notSupportedMessage);\n\t\t\tif (self.debugCallback)\n\t\t\t\tself.debugCallback(notSupportedMessage);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n\n\tself._kickOffSound = function(seconds) {\n\t\tself.isRunning = true;\n\t\tself.directSource = [];\n\t\tself.audioBuffers.forEach(function(audioBuffer, trackNum) {\n\t\t\tself.directSource[trackNum] = activeAudioContext().createBufferSource(); // creates a sound source\n\t\t\tself.directSource[trackNum].buffer = audioBuffer; // tell the source which sound to play\n\t\t\tself.directSource[trackNum].connect(activeAudioContext().destination); // connect the source to the context's destination (the speakers)\n\t\t});\n\t\tself.directSource.forEach(function(source) {\n\t\t\tsource.start(0, seconds);\n\t\t});\n\t\tif (self.onEnded) {\n\t\t\tself.directSource[0].onended = function () {\n\t\t\t\tself.onEnded(self.callbackContext);\n\t\t\t};\n\t\t}\n\t};\n\n\tfunction addSwing(noteMapTracks, swing, meterFraction, pickupLength) {\n\n\t\t// we can only swing in X/4 and X/8 meters.\n\t\tif (meterFraction.den != 4 && meterFraction.den != 8)\n\t\t\treturn;\n\n\t\tswing = parseFloat(swing);\n\n\t\t// 50 (or less) is no swing, \n\t\tif (isNaN(swing) || swing <= 50)\n\t\t\treturn;\n\n\t\t// 66 is triplet swing 2:1, and \n\t\t// 60 is swing with a ratio of 3:2. \n\t\t// 75 is the maximum swing where the first eight is played as a dotted eight and the second as a sixteenth. \n\t\tif (swing > 75)\n\t\t\tswing = 75;\n\n\t\t// convert the swing percentage to a percentage of increase for the first half of the beat\n\t\tswing = swing/50 - 1;\n\n\t\t// The volume of the swung notes is increased by this factor\n\t\t// could be also in the settings. Try out values such 0.1, 0.2\n\t\tvar volumeIncrease = 0.0;\n\n\t\t// the beatLength in X/8 meters\n\t\tvar beatLength = 0.25; \n\n\t\t// in X/8 meters the 16s swing so the beatLength is halved\n\t\tif (meterFraction.den === 8) \n\t\t\tbeatLength = beatLength/2; \n\n\t\t// duration of a half beat\n\t\tvar halfbeatLength = beatLength/2;\n\n\t\t// the extra duration of the first swung notes and the delay of the second notes\n\t\tvar swingDuration = halfbeatLength * swing;\n\n\t\tfor (var t = 0; t < noteMapTracks.length; t++) {\n\t\t\tvar track = noteMapTracks[t];\n\t\t\tfor (var i = 0; i < track.length; i++) {\n\t\t\t\tvar event = track[i];\n\t\t\t\tif (\n\t\t\t\t\t// is halfbeat\n\t\t\t\t\t(event.start-pickupLength) % halfbeatLength == 0 && (event.start-pickupLength) % beatLength != 0 \n\t\t\t\t\t&& (\n\t\t\t\t\t\t// the previous note is on the beat or before OR there is no previous note \n\t\t\t\t\t\ti == 0 \n\t\t\t\t\t\t|| track[i-1].start <= track[i].start - halfbeatLength\n\t\t\t\t\t)\n\t\t\t\t\t&& (\n\t\t\t\t\t\t// the next note is on the beat or after OR there is no next note\n\t\t\t\t\t\ti == track.length - 1 \n\t\t\t\t\t\t|| track[i+1].start >= track[i].start + halfbeatLength\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tvar oldEventStart = event.start;\n\n\t\t\t\t\tevent.start += swingDuration;\n\n\t\t\t\t\t// Increase volume of swung notes\n\t\t\t\t\tevent.volume *= 1 + volumeIncrease;\n\n\t\t\t\t\t// if there is a previous note ending at the start of this note, extend its end\n\t\t\t\t\t// and decrease its volume\n\t\t\t\t\tif (i > 0 && track[i-1].end == oldEventStart) {\n\t\t\t\t\t\ttrack[i-1].end = event.start;\n\t\t\t\t\t\ttrack[i-1].volume *= 1 - volumeIncrease;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n}\n\nmodule.exports = CreateSynth;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/create-synth.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/download-buffer.js":
/*!*********************************************************!*\
  !*** ./node_modules/abcjs/src/synth/download-buffer.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("var downloadBuffer = function(buffer) {\n\treturn window.URL.createObjectURL(bufferToWave(buffer.audioBuffers));\n};\n\n// Convert an AudioBuffer to a Blob using WAVE representation\nfunction bufferToWave(audioBuffers) {\n\tvar audioBuffer = audioBuffers[0];\n\tvar numOfChan = audioBuffer.numberOfChannels;\n\tvar length = audioBuffer.length * numOfChan * 2 + 44;\n\tvar buffer = new ArrayBuffer(length);\n\tvar view = new DataView(buffer);\n\tvar channels = [];\n\tvar i;\n\tvar sample;\n\tvar offset = 0;\n\tvar pos = 0;\n\n\t// write WAVE header\n\tsetUint32(0x46464952);                         // \"RIFF\"\n\tsetUint32(length - 8);                         // file length - 8\n\tsetUint32(0x45564157);                         // \"WAVE\"\n\n\tsetUint32(0x20746d66);                         // \"fmt \" chunk\n\tsetUint32(16);                                 // length = 16\n\tsetUint16(1);                                  // PCM (uncompressed)\n\tsetUint16(numOfChan);\n\tsetUint32(audioBuffer.sampleRate);\n\tsetUint32(audioBuffer.sampleRate * 2 * numOfChan); // avg. bytes/sec\n\tsetUint16(numOfChan * 2);                      // block-align\n\tsetUint16(16);                                 // 16-bit (hardcoded in this demo)\n\n\tsetUint32(0x61746164);                         // \"data\" - chunk\n\tsetUint32(length - pos - 4);                   // chunk length\n\n\t// write interleaved data\n\tfor(i = 0; i < numOfChan; i++)\n\t\tchannels.push(audioBuffer.getChannelData(i));\n\n\twhile(pos < length) {\n\t\tfor(i = 0; i < channels.length; i++) {             // interleave channels\n\t\t\tsample = Math.max(-1, Math.min(1, channels[i][offset])); // clamp\n\t\t\tsample = (0.5 + sample < 0 ? sample * 32768 : sample * 32767)|0; // scale to 16-bit signed int\n\t\t\tview.setInt16(pos, sample, true);          // write 16-bit sample\n\t\t\tpos += 2;\n\t\t}\n\t\toffset++; // next source sample\n\t}\n\n\t// create Blob\n\treturn new Blob([buffer], {type: \"audio/wav\"});\n\n\tfunction setUint16(data) {\n\t\tview.setUint16(pos, data, true);\n\t\tpos += 2;\n\t}\n\n\tfunction setUint32(data) {\n\t\tview.setUint32(pos, data, true);\n\t\tpos += 4;\n\t}\n}\n\nmodule.exports = downloadBuffer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL2Rvd25sb2FkLWJ1ZmZlci5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0RBQWdEO0FBQ2hELGdEQUFnRDtBQUNoRCxnREFBZ0Q7O0FBRWhELGdEQUFnRDtBQUNoRCxnREFBZ0Q7QUFDaEQsZ0RBQWdEO0FBQ2hEO0FBQ0E7QUFDQSxvREFBb0Q7QUFDcEQsZ0RBQWdEO0FBQ2hELGdEQUFnRDs7QUFFaEQsZ0RBQWdEO0FBQ2hELGdEQUFnRDs7QUFFaEQ7QUFDQSxZQUFZLGVBQWU7QUFDM0I7O0FBRUE7QUFDQSxhQUFhLHFCQUFxQixtQkFBbUI7QUFDckQsNERBQTREO0FBQzVELG9FQUFvRTtBQUNwRSw4Q0FBOEM7QUFDOUM7QUFDQTtBQUNBLFlBQVk7QUFDWjs7QUFFQTtBQUNBLDRCQUE0QixrQkFBa0I7O0FBRTlDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvc3ludGgvZG93bmxvYWQtYnVmZmVyLmpzP2U1ZmQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGRvd25sb2FkQnVmZmVyID0gZnVuY3Rpb24oYnVmZmVyKSB7XG5cdHJldHVybiB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChidWZmZXJUb1dhdmUoYnVmZmVyLmF1ZGlvQnVmZmVycykpO1xufTtcblxuLy8gQ29udmVydCBhbiBBdWRpb0J1ZmZlciB0byBhIEJsb2IgdXNpbmcgV0FWRSByZXByZXNlbnRhdGlvblxuZnVuY3Rpb24gYnVmZmVyVG9XYXZlKGF1ZGlvQnVmZmVycykge1xuXHR2YXIgYXVkaW9CdWZmZXIgPSBhdWRpb0J1ZmZlcnNbMF07XG5cdHZhciBudW1PZkNoYW4gPSBhdWRpb0J1ZmZlci5udW1iZXJPZkNoYW5uZWxzO1xuXHR2YXIgbGVuZ3RoID0gYXVkaW9CdWZmZXIubGVuZ3RoICogbnVtT2ZDaGFuICogMiArIDQ0O1xuXHR2YXIgYnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKGxlbmd0aCk7XG5cdHZhciB2aWV3ID0gbmV3IERhdGFWaWV3KGJ1ZmZlcik7XG5cdHZhciBjaGFubmVscyA9IFtdO1xuXHR2YXIgaTtcblx0dmFyIHNhbXBsZTtcblx0dmFyIG9mZnNldCA9IDA7XG5cdHZhciBwb3MgPSAwO1xuXG5cdC8vIHdyaXRlIFdBVkUgaGVhZGVyXG5cdHNldFVpbnQzMigweDQ2NDY0OTUyKTsgICAgICAgICAgICAgICAgICAgICAgICAgLy8gXCJSSUZGXCJcblx0c2V0VWludDMyKGxlbmd0aCAtIDgpOyAgICAgICAgICAgICAgICAgICAgICAgICAvLyBmaWxlIGxlbmd0aCAtIDhcblx0c2V0VWludDMyKDB4NDU1NjQxNTcpOyAgICAgICAgICAgICAgICAgICAgICAgICAvLyBcIldBVkVcIlxuXG5cdHNldFVpbnQzMigweDIwNzQ2ZDY2KTsgICAgICAgICAgICAgICAgICAgICAgICAgLy8gXCJmbXQgXCIgY2h1bmtcblx0c2V0VWludDMyKDE2KTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBsZW5ndGggPSAxNlxuXHRzZXRVaW50MTYoMSk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFBDTSAodW5jb21wcmVzc2VkKVxuXHRzZXRVaW50MTYobnVtT2ZDaGFuKTtcblx0c2V0VWludDMyKGF1ZGlvQnVmZmVyLnNhbXBsZVJhdGUpO1xuXHRzZXRVaW50MzIoYXVkaW9CdWZmZXIuc2FtcGxlUmF0ZSAqIDIgKiBudW1PZkNoYW4pOyAvLyBhdmcuIGJ5dGVzL3NlY1xuXHRzZXRVaW50MTYobnVtT2ZDaGFuICogMik7ICAgICAgICAgICAgICAgICAgICAgIC8vIGJsb2NrLWFsaWduXG5cdHNldFVpbnQxNigxNik7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gMTYtYml0IChoYXJkY29kZWQgaW4gdGhpcyBkZW1vKVxuXG5cdHNldFVpbnQzMigweDYxNzQ2MTY0KTsgICAgICAgICAgICAgICAgICAgICAgICAgLy8gXCJkYXRhXCIgLSBjaHVua1xuXHRzZXRVaW50MzIobGVuZ3RoIC0gcG9zIC0gNCk7ICAgICAgICAgICAgICAgICAgIC8vIGNodW5rIGxlbmd0aFxuXG5cdC8vIHdyaXRlIGludGVybGVhdmVkIGRhdGFcblx0Zm9yKGkgPSAwOyBpIDwgbnVtT2ZDaGFuOyBpKyspXG5cdFx0Y2hhbm5lbHMucHVzaChhdWRpb0J1ZmZlci5nZXRDaGFubmVsRGF0YShpKSk7XG5cblx0d2hpbGUocG9zIDwgbGVuZ3RoKSB7XG5cdFx0Zm9yKGkgPSAwOyBpIDwgY2hhbm5lbHMubGVuZ3RoOyBpKyspIHsgICAgICAgICAgICAgLy8gaW50ZXJsZWF2ZSBjaGFubmVsc1xuXHRcdFx0c2FtcGxlID0gTWF0aC5tYXgoLTEsIE1hdGgubWluKDEsIGNoYW5uZWxzW2ldW29mZnNldF0pKTsgLy8gY2xhbXBcblx0XHRcdHNhbXBsZSA9ICgwLjUgKyBzYW1wbGUgPCAwID8gc2FtcGxlICogMzI3NjggOiBzYW1wbGUgKiAzMjc2Nyl8MDsgLy8gc2NhbGUgdG8gMTYtYml0IHNpZ25lZCBpbnRcblx0XHRcdHZpZXcuc2V0SW50MTYocG9zLCBzYW1wbGUsIHRydWUpOyAgICAgICAgICAvLyB3cml0ZSAxNi1iaXQgc2FtcGxlXG5cdFx0XHRwb3MgKz0gMjtcblx0XHR9XG5cdFx0b2Zmc2V0Kys7IC8vIG5leHQgc291cmNlIHNhbXBsZVxuXHR9XG5cblx0Ly8gY3JlYXRlIEJsb2Jcblx0cmV0dXJuIG5ldyBCbG9iKFtidWZmZXJdLCB7dHlwZTogXCJhdWRpby93YXZcIn0pO1xuXG5cdGZ1bmN0aW9uIHNldFVpbnQxNihkYXRhKSB7XG5cdFx0dmlldy5zZXRVaW50MTYocG9zLCBkYXRhLCB0cnVlKTtcblx0XHRwb3MgKz0gMjtcblx0fVxuXG5cdGZ1bmN0aW9uIHNldFVpbnQzMihkYXRhKSB7XG5cdFx0dmlldy5zZXRVaW50MzIocG9zLCBkYXRhLCB0cnVlKTtcblx0XHRwb3MgKz0gNDtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvd25sb2FkQnVmZmVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/download-buffer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/get-midi-file.js":
/*!*******************************************************!*\
  !*** ./node_modules/abcjs/src/synth/get-midi-file.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var tunebook = __webpack_require__(/*! ../api/abc_tunebook */ \"(ssr)/./node_modules/abcjs/src/api/abc_tunebook.js\");\nvar midiCreate = __webpack_require__(/*! ../midi/abc_midi_create */ \"(ssr)/./node_modules/abcjs/src/midi/abc_midi_create.js\");\n\nvar getMidiFile = function(source, options) {\n\tvar params = {};\n\tif (options) {\n\t\tfor (var key in options) {\n\t\t\tif (options.hasOwnProperty(key)) {\n\t\t\t\tparams[key] = options[key];\n\t\t\t}\n\t\t}\n\t}\n\tparams.generateInline = false;\n\n\tfunction callback(div, tune, index) {\n\t\tvar downloadMidi = midiCreate(tune, params);\n\t\tswitch (params.midiOutputType) {\n\t\t\tcase \"encoded\":\n\t\t\t\treturn downloadMidi;\n\t\t\tcase \"binary\":\n\t\t\t\tvar decoded = downloadMidi.replace(\"data:audio/midi,\", \"\");\n\t\t\t\tdecoded = decoded.replace(/MThd/g,\"%4d%54%68%64\");\n\t\t\t\tdecoded = decoded.replace(/MTrk/g,\"%4d%54%72%6b\");\n\t\t\t\tvar buffer = new ArrayBuffer(decoded.length/3);\n\t\t\t\tvar output = new Uint8Array(buffer);\n\t\t\t\tfor (var i = 0; i < decoded.length/3; i++) {\n\t\t\t\t\tvar p = i*3+1;\n\t\t\t\t\tvar d = parseInt(decoded.substring(p, p+2), 16);\n\t\t\t\t\toutput[i] = d;\n\t\t\t\t}\n\t\t\t\treturn output;\n\t\t\tcase \"link\":\n\t\t\tdefault:\n\t\t\t\treturn generateMidiDownloadLink(tune, params, downloadMidi, index);\n\t\t}\n\t}\n\n\tif (typeof source === \"string\")\n\t\treturn tunebook.renderEngine(callback, \"*\", source, params);\n\telse\n\t\treturn callback(null, source, 0);\n};\n\nfunction isFunction(functionToCheck) {\n\tvar getType = {};\n\treturn functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\nvar generateMidiDownloadLink = function(tune, midiParams, midi, index) {\n\tvar divClasses = ['abcjs-download-midi', 'abcjs-midi-' + index]\n\tif (midiParams.downloadClass)\n\t\tdivClasses.push(midiParams.downloadClass)\n\tvar html = '<div class=\"' + divClasses.join(' ') + '\">';\n\tif (midiParams.preTextDownload)\n\t\thtml += midiParams.preTextDownload;\n\tvar title = tune.metaText && tune.metaText.title ? tune.metaText.title : 'Untitled';\n\tvar label;\n\tif (midiParams.downloadLabel && isFunction(midiParams.downloadLabel))\n\t\tlabel = midiParams.downloadLabel(tune, index);\n\telse if (midiParams.downloadLabel)\n\t\tlabel = midiParams.downloadLabel.replace(/%T/, title);\n\telse\n\t\tlabel = \"Download MIDI for \\\"\" + title + \"\\\"\";\n\ttitle = title.toLowerCase().replace(/'/g, '').replace(/\\W/g, '_').replace(/__/g, '_');\n\tvar filename = (midiParams.fileName) ? midiParams.fileName :  title + '.midi';\n\thtml += '<a download=\"' + filename + '\" href=\"' + midi + '\">' + label + '</a>';\n\tif (midiParams.postTextDownload)\n\t\thtml += midiParams.postTextDownload;\n\treturn html + \"</div>\";\n};\n\n\nmodule.exports = getMidiFile;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL2dldC1taWRpLWZpbGUuanMiLCJtYXBwaW5ncyI6IkFBQUEsZUFBZSxtQkFBTyxDQUFDLCtFQUFxQjtBQUM1QyxpQkFBaUIsbUJBQU8sQ0FBQyx1RkFBeUI7O0FBRWxEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isc0JBQXNCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL2dldC1taWRpLWZpbGUuanM/MjMyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdHVuZWJvb2sgPSByZXF1aXJlKCcuLi9hcGkvYWJjX3R1bmVib29rJyk7XG52YXIgbWlkaUNyZWF0ZSA9IHJlcXVpcmUoJy4uL21pZGkvYWJjX21pZGlfY3JlYXRlJyk7XG5cbnZhciBnZXRNaWRpRmlsZSA9IGZ1bmN0aW9uKHNvdXJjZSwgb3B0aW9ucykge1xuXHR2YXIgcGFyYW1zID0ge307XG5cdGlmIChvcHRpb25zKSB7XG5cdFx0Zm9yICh2YXIga2V5IGluIG9wdGlvbnMpIHtcblx0XHRcdGlmIChvcHRpb25zLmhhc093blByb3BlcnR5KGtleSkpIHtcblx0XHRcdFx0cGFyYW1zW2tleV0gPSBvcHRpb25zW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdHBhcmFtcy5nZW5lcmF0ZUlubGluZSA9IGZhbHNlO1xuXG5cdGZ1bmN0aW9uIGNhbGxiYWNrKGRpdiwgdHVuZSwgaW5kZXgpIHtcblx0XHR2YXIgZG93bmxvYWRNaWRpID0gbWlkaUNyZWF0ZSh0dW5lLCBwYXJhbXMpO1xuXHRcdHN3aXRjaCAocGFyYW1zLm1pZGlPdXRwdXRUeXBlKSB7XG5cdFx0XHRjYXNlIFwiZW5jb2RlZFwiOlxuXHRcdFx0XHRyZXR1cm4gZG93bmxvYWRNaWRpO1xuXHRcdFx0Y2FzZSBcImJpbmFyeVwiOlxuXHRcdFx0XHR2YXIgZGVjb2RlZCA9IGRvd25sb2FkTWlkaS5yZXBsYWNlKFwiZGF0YTphdWRpby9taWRpLFwiLCBcIlwiKTtcblx0XHRcdFx0ZGVjb2RlZCA9IGRlY29kZWQucmVwbGFjZSgvTVRoZC9nLFwiJTRkJTU0JTY4JTY0XCIpO1xuXHRcdFx0XHRkZWNvZGVkID0gZGVjb2RlZC5yZXBsYWNlKC9NVHJrL2csXCIlNGQlNTQlNzIlNmJcIik7XG5cdFx0XHRcdHZhciBidWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIoZGVjb2RlZC5sZW5ndGgvMyk7XG5cdFx0XHRcdHZhciBvdXRwdXQgPSBuZXcgVWludDhBcnJheShidWZmZXIpO1xuXHRcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGRlY29kZWQubGVuZ3RoLzM7IGkrKykge1xuXHRcdFx0XHRcdHZhciBwID0gaSozKzE7XG5cdFx0XHRcdFx0dmFyIGQgPSBwYXJzZUludChkZWNvZGVkLnN1YnN0cmluZyhwLCBwKzIpLCAxNik7XG5cdFx0XHRcdFx0b3V0cHV0W2ldID0gZDtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gb3V0cHV0O1xuXHRcdFx0Y2FzZSBcImxpbmtcIjpcblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdHJldHVybiBnZW5lcmF0ZU1pZGlEb3dubG9hZExpbmsodHVuZSwgcGFyYW1zLCBkb3dubG9hZE1pZGksIGluZGV4KTtcblx0XHR9XG5cdH1cblxuXHRpZiAodHlwZW9mIHNvdXJjZSA9PT0gXCJzdHJpbmdcIilcblx0XHRyZXR1cm4gdHVuZWJvb2sucmVuZGVyRW5naW5lKGNhbGxiYWNrLCBcIipcIiwgc291cmNlLCBwYXJhbXMpO1xuXHRlbHNlXG5cdFx0cmV0dXJuIGNhbGxiYWNrKG51bGwsIHNvdXJjZSwgMCk7XG59O1xuXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKGZ1bmN0aW9uVG9DaGVjaykge1xuXHR2YXIgZ2V0VHlwZSA9IHt9O1xuXHRyZXR1cm4gZnVuY3Rpb25Ub0NoZWNrICYmIGdldFR5cGUudG9TdHJpbmcuY2FsbChmdW5jdGlvblRvQ2hlY2spID09PSAnW29iamVjdCBGdW5jdGlvbl0nO1xufVxuXG52YXIgZ2VuZXJhdGVNaWRpRG93bmxvYWRMaW5rID0gZnVuY3Rpb24odHVuZSwgbWlkaVBhcmFtcywgbWlkaSwgaW5kZXgpIHtcblx0dmFyIGRpdkNsYXNzZXMgPSBbJ2FiY2pzLWRvd25sb2FkLW1pZGknLCAnYWJjanMtbWlkaS0nICsgaW5kZXhdXG5cdGlmIChtaWRpUGFyYW1zLmRvd25sb2FkQ2xhc3MpXG5cdFx0ZGl2Q2xhc3Nlcy5wdXNoKG1pZGlQYXJhbXMuZG93bmxvYWRDbGFzcylcblx0dmFyIGh0bWwgPSAnPGRpdiBjbGFzcz1cIicgKyBkaXZDbGFzc2VzLmpvaW4oJyAnKSArICdcIj4nO1xuXHRpZiAobWlkaVBhcmFtcy5wcmVUZXh0RG93bmxvYWQpXG5cdFx0aHRtbCArPSBtaWRpUGFyYW1zLnByZVRleHREb3dubG9hZDtcblx0dmFyIHRpdGxlID0gdHVuZS5tZXRhVGV4dCAmJiB0dW5lLm1ldGFUZXh0LnRpdGxlID8gdHVuZS5tZXRhVGV4dC50aXRsZSA6ICdVbnRpdGxlZCc7XG5cdHZhciBsYWJlbDtcblx0aWYgKG1pZGlQYXJhbXMuZG93bmxvYWRMYWJlbCAmJiBpc0Z1bmN0aW9uKG1pZGlQYXJhbXMuZG93bmxvYWRMYWJlbCkpXG5cdFx0bGFiZWwgPSBtaWRpUGFyYW1zLmRvd25sb2FkTGFiZWwodHVuZSwgaW5kZXgpO1xuXHRlbHNlIGlmIChtaWRpUGFyYW1zLmRvd25sb2FkTGFiZWwpXG5cdFx0bGFiZWwgPSBtaWRpUGFyYW1zLmRvd25sb2FkTGFiZWwucmVwbGFjZSgvJVQvLCB0aXRsZSk7XG5cdGVsc2Vcblx0XHRsYWJlbCA9IFwiRG93bmxvYWQgTUlESSBmb3IgXFxcIlwiICsgdGl0bGUgKyBcIlxcXCJcIjtcblx0dGl0bGUgPSB0aXRsZS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoLycvZywgJycpLnJlcGxhY2UoL1xcVy9nLCAnXycpLnJlcGxhY2UoL19fL2csICdfJyk7XG5cdHZhciBmaWxlbmFtZSA9IChtaWRpUGFyYW1zLmZpbGVOYW1lKSA/IG1pZGlQYXJhbXMuZmlsZU5hbWUgOiAgdGl0bGUgKyAnLm1pZGknO1xuXHRodG1sICs9ICc8YSBkb3dubG9hZD1cIicgKyBmaWxlbmFtZSArICdcIiBocmVmPVwiJyArIG1pZGkgKyAnXCI+JyArIGxhYmVsICsgJzwvYT4nO1xuXHRpZiAobWlkaVBhcmFtcy5wb3N0VGV4dERvd25sb2FkKVxuXHRcdGh0bWwgKz0gbWlkaVBhcmFtcy5wb3N0VGV4dERvd25sb2FkO1xuXHRyZXR1cm4gaHRtbCArIFwiPC9kaXY+XCI7XG59O1xuXG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0TWlkaUZpbGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/get-midi-file.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/images/loading.svg.js":
/*!************************************************************!*\
  !*** ./node_modules/abcjs/src/synth/images/loading.svg.js ***!
  \************************************************************/
/***/ ((module) => {

eval("var svg = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" class=\"abcjs-loading-svg\">\n    <circle cx=\"50\" cy=\"50\" fill=\"none\" stroke-width=\"20\" r=\"35\" stroke-dasharray=\"160 55\"></circle>\n</svg>\n`\n\nmodule.exports = svg\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL2ltYWdlcy9sb2FkaW5nLnN2Zy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL2ltYWdlcy9sb2FkaW5nLnN2Zy5qcz84Y2VlIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBzdmcgPSBgXG48c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDEwMCAxMDBcIiBjbGFzcz1cImFiY2pzLWxvYWRpbmctc3ZnXCI+XG4gICAgPGNpcmNsZSBjeD1cIjUwXCIgY3k9XCI1MFwiIGZpbGw9XCJub25lXCIgc3Ryb2tlLXdpZHRoPVwiMjBcIiByPVwiMzVcIiBzdHJva2UtZGFzaGFycmF5PVwiMTYwIDU1XCI+PC9jaXJjbGU+XG48L3N2Zz5cbmBcblxubW9kdWxlLmV4cG9ydHMgPSBzdmdcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/images/loading.svg.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/images/loop.svg.js":
/*!*********************************************************!*\
  !*** ./node_modules/abcjs/src/synth/images/loop.svg.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("var svg = `\n<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 700 700\" preserveAspectRatio=\"xMidYMid meet\">\n\t<g transform=\"translate(0,700) scale(0.1,-0.1)\" >\n\t<path d=\"M3111 6981 c-20 -37 -90 -55 -364 -96 -120 -18 -190 -33 -244 -55\n\t-42 -17 -124 -42 -182 -56 -78 -18 -119 -34 -157 -60 -28 -19 -86 -46 -128\n\t-60 -43 -13 -107 -42 -144 -64 -37 -23 -84 -46 -106 -52 -21 -7 -56 -29 -79\n\t-50 -22 -22 -61 -50 -86 -63 -26 -13 -67 -40 -91 -60 -24 -20 -65 -47 -90 -60\n\t-25 -13 -53 -31 -61 -41 -8 -9 -32 -30 -54 -46 -75 -54 -486 -460 -512 -507\n\t-15 -25 -48 -69 -75 -98 -26 -28 -48 -57 -48 -63 0 -6 -18 -29 -39 -53 -21\n\t-23 -56 -71 -77 -107 -20 -36 -50 -80 -65 -97 -16 -18 -33 -52 -40 -75 -12\n\t-47 -47 -115 -84 -166 -13 -18 -30 -56 -38 -83 -8 -27 -34 -80 -56 -118 -33\n\t-53 -46 -91 -62 -167 -12 -63 -34 -127 -59 -179 -42 -84 -60 -166 -60 -270 0\n\t-90 26 -122 125 -154 54 -17 96 -19 430 -20 305 -1 381 2 430 14 82 22 140 51\n\t153 78 6 12 22 47 37 77 14 30 38 77 54 103 15 27 34 73 40 103 7 30 28 78 48\n\t107 19 28 44 74 55 101 10 28 34 67 53 87 18 20 49 61 68 90 19 30 44 63 57\n\t74 13 11 36 40 52 65 59 94 232 270 306 313 20 11 57 37 82 58 25 20 70 52\n\t100 72 30 19 66 47 79 61 13 14 49 35 80 46 30 12 80 37 111 56 31 19 95 45\n\t143 58 48 12 110 37 139 55 63 40 127 55 323 76 83 9 208 28 279 41 156 29\n\t165 29 330 4 453 -71 514 -84 606 -130 31 -16 83 -36 116 -45 32 -9 84 -34\n\t115 -56 31 -21 82 -48 113 -60 32 -11 72 -33 89 -48 18 -16 59 -45 92 -65 33\n\t-21 74 -51 90 -66 17 -15 49 -40 73 -54 52 -32 65 -61 50 -113 -8 -31 -61 -90\n\t-277 -308 -300 -303 -361 -382 -369 -481 -2 -29 0 -66 6 -81 13 -40 88 -138\n\t115 -151 12 -6 54 -26 92 -44 l70 -33 945 -2 c520 -1 975 2 1012 7 64 8 191\n\t50 231 76 11 7 33 34 50 60 22 34 42 51 65 58 l32 9 0 1101 0 1102 -32 9 c-21\n\t7 -44 26 -64 55 -60 84 -77 97 -140 110 -44 9 -76 10 -127 2 -59 -9 -77 -17\n\t-134 -62 -37 -28 -172 -155 -301 -281 -129 -127 -249 -237 -267 -245 -25 -10\n\t-41 -11 -71 -2 -58 15 -112 45 -124 69 -6 11 -35 35 -64 54 -28 18 -58 41 -66\n\t50 -8 9 -41 35 -75 58 -33 22 -77 56 -99 75 -21 18 -64 46 -95 61 -31 14 -73\n\t39 -93 55 -20 15 -70 40 -110 55 -40 15 -97 44 -127 64 -29 21 -78 44 -107 53\n\t-30 8 -77 31 -105 51 -42 28 -73 39 -173 60 -68 14 -154 39 -196 58 -95 43\n\t-131 51 -343 76 -209 24 -242 32 -279 70 l-30 29 -328 0 c-312 0 -330 -1 -339\n\t-19z\"></path>\n\t<path d=\"M254 2875 c-89 -16 -107 -26 -145 -78 -32 -44 -62 -66 -91 -67 -17 0\n\t-18 -61 -18 -1140 l0 -1140 24 0 c16 0 41 -17 72 -50 40 -42 61 -55 117 -72\n\tl69 -21 82 23 c44 12 96 30 114 39 18 9 148 132 290 272 141 141 267 261 279\n\t268 51 26 86 14 176 -61 32 -26 62 -48 66 -48 5 0 36 -25 70 -55 34 -30 74\n\t-61 89 -69 15 -8 37 -28 50 -45 12 -17 50 -45 84 -62 34 -17 78 -44 98 -60 19\n\t-16 61 -37 93 -48 32 -11 81 -37 107 -56 27 -20 76 -45 109 -56 33 -12 75 -31\n\t93 -44 62 -45 93 -58 191 -82 54 -12 130 -37 168 -54 68 -29 180 -58 226 -59\n\t62 0 183 -64 183 -96 0 -12 88 -14 639 -14 l639 0 12 30 c18 44 76 66 233 89\n\t89 14 160 30 200 47 34 15 106 42 159 60 54 18 112 44 130 57 47 35 85 52 146\n\t67 29 7 76 28 105 48 29 20 77 48 107 63 30 15 66 39 80 54 14 15 50 40 81 56\n\t31 15 78 46 104 69 26 22 61 46 79 54 17 7 43 26 56 42 14 16 41 41 60 56 64\n\t48 380 362 408 405 15 23 40 51 55 63 15 12 36 38 46 58 11 21 37 57 58 82 22\n\t25 49 62 62 83 13 20 38 56 57 78 19 23 50 74 69 113 19 39 46 86 59 104 14\n\t18 34 62 46 98 12 36 32 77 45 92 31 38 60 97 80 167 9 33 26 76 37 95 29 50\n\t47 103 68 206 10 52 32 117 51 155 29 56 33 74 34 140 0 94 -10 108 -101 138\n\t-61 20 -83 21 -463 21 -226 0 -421 -4 -451 -10 -63 -12 -86 -30 -110 -85 -10\n\t-22 -33 -63 -52 -92 -21 -31 -42 -80 -53 -123 -11 -44 -32 -93 -56 -128 -20\n\t-32 -47 -83 -59 -115 -12 -32 -37 -77 -56 -100 -19 -23 -50 -65 -69 -94 -19\n\t-29 -44 -57 -54 -63 -11 -5 -29 -27 -42 -47 -52 -85 -234 -277 -300 -315 -25\n\t-15 -53 -38 -62 -51 -9 -14 -42 -39 -74 -57 -32 -18 -75 -48 -95 -66 -21 -18\n\t-59 -44 -85 -58 -26 -13 -72 -40 -100 -59 -35 -24 -78 -41 -128 -52 -47 -11\n\t-99 -31 -139 -56 -69 -42 -94 -49 -391 -110 -245 -51 -425 -66 -595 -50 -168\n\t16 -230 27 -330 61 -47 16 -123 35 -170 44 -98 17 -123 25 -172 58 -20 14 -71\n\t37 -114 53 -44 15 -95 40 -115 56 -20 16 -70 42 -110 59 -40 16 -88 45 -108\n\t63 -20 19 -55 46 -78 61 -24 14 -49 35 -55 47 -7 11 -34 33 -60 49 -50 31 -65\n\t61 -53 102 4 13 130 147 281 298 236 238 277 283 299 335 15 32 35 71 46 86\n\t12 18 19 44 19 76 0 42 -8 63 -53 138 -92 151 11 139 -1207 141 -798 2 -1030\n\t0 -1086 -11z\"></path>\n\t</g>\n</svg>\n`\n\nmodule.exports = svg\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL2ltYWdlcy9sb29wLnN2Zy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvc3ludGgvaW1hZ2VzL2xvb3Auc3ZnLmpzP2VmMjAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHN2ZyA9IGBcbjxzdmcgdmVyc2lvbj1cIjEuMFwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDcwMCA3MDBcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwieE1pZFlNaWQgbWVldFwiPlxuXHQ8ZyB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoMCw3MDApIHNjYWxlKDAuMSwtMC4xKVwiID5cblx0PHBhdGggZD1cIk0zMTExIDY5ODEgYy0yMCAtMzcgLTkwIC01NSAtMzY0IC05NiAtMTIwIC0xOCAtMTkwIC0zMyAtMjQ0IC01NVxuXHQtNDIgLTE3IC0xMjQgLTQyIC0xODIgLTU2IC03OCAtMTggLTExOSAtMzQgLTE1NyAtNjAgLTI4IC0xOSAtODYgLTQ2IC0xMjhcblx0LTYwIC00MyAtMTMgLTEwNyAtNDIgLTE0NCAtNjQgLTM3IC0yMyAtODQgLTQ2IC0xMDYgLTUyIC0yMSAtNyAtNTYgLTI5IC03OVxuXHQtNTAgLTIyIC0yMiAtNjEgLTUwIC04NiAtNjMgLTI2IC0xMyAtNjcgLTQwIC05MSAtNjAgLTI0IC0yMCAtNjUgLTQ3IC05MCAtNjBcblx0LTI1IC0xMyAtNTMgLTMxIC02MSAtNDEgLTggLTkgLTMyIC0zMCAtNTQgLTQ2IC03NSAtNTQgLTQ4NiAtNDYwIC01MTIgLTUwN1xuXHQtMTUgLTI1IC00OCAtNjkgLTc1IC05OCAtMjYgLTI4IC00OCAtNTcgLTQ4IC02MyAwIC02IC0xOCAtMjkgLTM5IC01MyAtMjFcblx0LTIzIC01NiAtNzEgLTc3IC0xMDcgLTIwIC0zNiAtNTAgLTgwIC02NSAtOTcgLTE2IC0xOCAtMzMgLTUyIC00MCAtNzUgLTEyXG5cdC00NyAtNDcgLTExNSAtODQgLTE2NiAtMTMgLTE4IC0zMCAtNTYgLTM4IC04MyAtOCAtMjcgLTM0IC04MCAtNTYgLTExOCAtMzNcblx0LTUzIC00NiAtOTEgLTYyIC0xNjcgLTEyIC02MyAtMzQgLTEyNyAtNTkgLTE3OSAtNDIgLTg0IC02MCAtMTY2IC02MCAtMjcwIDBcblx0LTkwIDI2IC0xMjIgMTI1IC0xNTQgNTQgLTE3IDk2IC0xOSA0MzAgLTIwIDMwNSAtMSAzODEgMiA0MzAgMTQgODIgMjIgMTQwIDUxXG5cdDE1MyA3OCA2IDEyIDIyIDQ3IDM3IDc3IDE0IDMwIDM4IDc3IDU0IDEwMyAxNSAyNyAzNCA3MyA0MCAxMDMgNyAzMCAyOCA3OCA0OFxuXHQxMDcgMTkgMjggNDQgNzQgNTUgMTAxIDEwIDI4IDM0IDY3IDUzIDg3IDE4IDIwIDQ5IDYxIDY4IDkwIDE5IDMwIDQ0IDYzIDU3XG5cdDc0IDEzIDExIDM2IDQwIDUyIDY1IDU5IDk0IDIzMiAyNzAgMzA2IDMxMyAyMCAxMSA1NyAzNyA4MiA1OCAyNSAyMCA3MCA1MlxuXHQxMDAgNzIgMzAgMTkgNjYgNDcgNzkgNjEgMTMgMTQgNDkgMzUgODAgNDYgMzAgMTIgODAgMzcgMTExIDU2IDMxIDE5IDk1IDQ1XG5cdDE0MyA1OCA0OCAxMiAxMTAgMzcgMTM5IDU1IDYzIDQwIDEyNyA1NSAzMjMgNzYgODMgOSAyMDggMjggMjc5IDQxIDE1NiAyOVxuXHQxNjUgMjkgMzMwIDQgNDUzIC03MSA1MTQgLTg0IDYwNiAtMTMwIDMxIC0xNiA4MyAtMzYgMTE2IC00NSAzMiAtOSA4NCAtMzRcblx0MTE1IC01NiAzMSAtMjEgODIgLTQ4IDExMyAtNjAgMzIgLTExIDcyIC0zMyA4OSAtNDggMTggLTE2IDU5IC00NSA5MiAtNjUgMzNcblx0LTIxIDc0IC01MSA5MCAtNjYgMTcgLTE1IDQ5IC00MCA3MyAtNTQgNTIgLTMyIDY1IC02MSA1MCAtMTEzIC04IC0zMSAtNjEgLTkwXG5cdC0yNzcgLTMwOCAtMzAwIC0zMDMgLTM2MSAtMzgyIC0zNjkgLTQ4MSAtMiAtMjkgMCAtNjYgNiAtODEgMTMgLTQwIDg4IC0xMzhcblx0MTE1IC0xNTEgMTIgLTYgNTQgLTI2IDkyIC00NCBsNzAgLTMzIDk0NSAtMiBjNTIwIC0xIDk3NSAyIDEwMTIgNyA2NCA4IDE5MVxuXHQ1MCAyMzEgNzYgMTEgNyAzMyAzNCA1MCA2MCAyMiAzNCA0MiA1MSA2NSA1OCBsMzIgOSAwIDExMDEgMCAxMTAyIC0zMiA5IGMtMjFcblx0NyAtNDQgMjYgLTY0IDU1IC02MCA4NCAtNzcgOTcgLTE0MCAxMTAgLTQ0IDkgLTc2IDEwIC0xMjcgMiAtNTkgLTkgLTc3IC0xN1xuXHQtMTM0IC02MiAtMzcgLTI4IC0xNzIgLTE1NSAtMzAxIC0yODEgLTEyOSAtMTI3IC0yNDkgLTIzNyAtMjY3IC0yNDUgLTI1IC0xMFxuXHQtNDEgLTExIC03MSAtMiAtNTggMTUgLTExMiA0NSAtMTI0IDY5IC02IDExIC0zNSAzNSAtNjQgNTQgLTI4IDE4IC01OCA0MSAtNjZcblx0NTAgLTggOSAtNDEgMzUgLTc1IDU4IC0zMyAyMiAtNzcgNTYgLTk5IDc1IC0yMSAxOCAtNjQgNDYgLTk1IDYxIC0zMSAxNCAtNzNcblx0MzkgLTkzIDU1IC0yMCAxNSAtNzAgNDAgLTExMCA1NSAtNDAgMTUgLTk3IDQ0IC0xMjcgNjQgLTI5IDIxIC03OCA0NCAtMTA3IDUzXG5cdC0zMCA4IC03NyAzMSAtMTA1IDUxIC00MiAyOCAtNzMgMzkgLTE3MyA2MCAtNjggMTQgLTE1NCAzOSAtMTk2IDU4IC05NSA0M1xuXHQtMTMxIDUxIC0zNDMgNzYgLTIwOSAyNCAtMjQyIDMyIC0yNzkgNzAgbC0zMCAyOSAtMzI4IDAgYy0zMTIgMCAtMzMwIC0xIC0zMzlcblx0LTE5elwiPjwvcGF0aD5cblx0PHBhdGggZD1cIk0yNTQgMjg3NSBjLTg5IC0xNiAtMTA3IC0yNiAtMTQ1IC03OCAtMzIgLTQ0IC02MiAtNjYgLTkxIC02NyAtMTcgMFxuXHQtMTggLTYxIC0xOCAtMTE0MCBsMCAtMTE0MCAyNCAwIGMxNiAwIDQxIC0xNyA3MiAtNTAgNDAgLTQyIDYxIC01NSAxMTcgLTcyXG5cdGw2OSAtMjEgODIgMjMgYzQ0IDEyIDk2IDMwIDExNCAzOSAxOCA5IDE0OCAxMzIgMjkwIDI3MiAxNDEgMTQxIDI2NyAyNjEgMjc5XG5cdDI2OCA1MSAyNiA4NiAxNCAxNzYgLTYxIDMyIC0yNiA2MiAtNDggNjYgLTQ4IDUgMCAzNiAtMjUgNzAgLTU1IDM0IC0zMCA3NFxuXHQtNjEgODkgLTY5IDE1IC04IDM3IC0yOCA1MCAtNDUgMTIgLTE3IDUwIC00NSA4NCAtNjIgMzQgLTE3IDc4IC00NCA5OCAtNjAgMTlcblx0LTE2IDYxIC0zNyA5MyAtNDggMzIgLTExIDgxIC0zNyAxMDcgLTU2IDI3IC0yMCA3NiAtNDUgMTA5IC01NiAzMyAtMTIgNzUgLTMxXG5cdDkzIC00NCA2MiAtNDUgOTMgLTU4IDE5MSAtODIgNTQgLTEyIDEzMCAtMzcgMTY4IC01NCA2OCAtMjkgMTgwIC01OCAyMjYgLTU5XG5cdDYyIDAgMTgzIC02NCAxODMgLTk2IDAgLTEyIDg4IC0xNCA2MzkgLTE0IGw2MzkgMCAxMiAzMCBjMTggNDQgNzYgNjYgMjMzIDg5XG5cdDg5IDE0IDE2MCAzMCAyMDAgNDcgMzQgMTUgMTA2IDQyIDE1OSA2MCA1NCAxOCAxMTIgNDQgMTMwIDU3IDQ3IDM1IDg1IDUyIDE0NlxuXHQ2NyAyOSA3IDc2IDI4IDEwNSA0OCAyOSAyMCA3NyA0OCAxMDcgNjMgMzAgMTUgNjYgMzkgODAgNTQgMTQgMTUgNTAgNDAgODEgNTZcblx0MzEgMTUgNzggNDYgMTA0IDY5IDI2IDIyIDYxIDQ2IDc5IDU0IDE3IDcgNDMgMjYgNTYgNDIgMTQgMTYgNDEgNDEgNjAgNTYgNjRcblx0NDggMzgwIDM2MiA0MDggNDA1IDE1IDIzIDQwIDUxIDU1IDYzIDE1IDEyIDM2IDM4IDQ2IDU4IDExIDIxIDM3IDU3IDU4IDgyIDIyXG5cdDI1IDQ5IDYyIDYyIDgzIDEzIDIwIDM4IDU2IDU3IDc4IDE5IDIzIDUwIDc0IDY5IDExMyAxOSAzOSA0NiA4NiA1OSAxMDQgMTRcblx0MTggMzQgNjIgNDYgOTggMTIgMzYgMzIgNzcgNDUgOTIgMzEgMzggNjAgOTcgODAgMTY3IDkgMzMgMjYgNzYgMzcgOTUgMjkgNTBcblx0NDcgMTAzIDY4IDIwNiAxMCA1MiAzMiAxMTcgNTEgMTU1IDI5IDU2IDMzIDc0IDM0IDE0MCAwIDk0IC0xMCAxMDggLTEwMSAxMzhcblx0LTYxIDIwIC04MyAyMSAtNDYzIDIxIC0yMjYgMCAtNDIxIC00IC00NTEgLTEwIC02MyAtMTIgLTg2IC0zMCAtMTEwIC04NSAtMTBcblx0LTIyIC0zMyAtNjMgLTUyIC05MiAtMjEgLTMxIC00MiAtODAgLTUzIC0xMjMgLTExIC00NCAtMzIgLTkzIC01NiAtMTI4IC0yMFxuXHQtMzIgLTQ3IC04MyAtNTkgLTExNSAtMTIgLTMyIC0zNyAtNzcgLTU2IC0xMDAgLTE5IC0yMyAtNTAgLTY1IC02OSAtOTQgLTE5XG5cdC0yOSAtNDQgLTU3IC01NCAtNjMgLTExIC01IC0yOSAtMjcgLTQyIC00NyAtNTIgLTg1IC0yMzQgLTI3NyAtMzAwIC0zMTUgLTI1XG5cdC0xNSAtNTMgLTM4IC02MiAtNTEgLTkgLTE0IC00MiAtMzkgLTc0IC01NyAtMzIgLTE4IC03NSAtNDggLTk1IC02NiAtMjEgLTE4XG5cdC01OSAtNDQgLTg1IC01OCAtMjYgLTEzIC03MiAtNDAgLTEwMCAtNTkgLTM1IC0yNCAtNzggLTQxIC0xMjggLTUyIC00NyAtMTFcblx0LTk5IC0zMSAtMTM5IC01NiAtNjkgLTQyIC05NCAtNDkgLTM5MSAtMTEwIC0yNDUgLTUxIC00MjUgLTY2IC01OTUgLTUwIC0xNjhcblx0MTYgLTIzMCAyNyAtMzMwIDYxIC00NyAxNiAtMTIzIDM1IC0xNzAgNDQgLTk4IDE3IC0xMjMgMjUgLTE3MiA1OCAtMjAgMTQgLTcxXG5cdDM3IC0xMTQgNTMgLTQ0IDE1IC05NSA0MCAtMTE1IDU2IC0yMCAxNiAtNzAgNDIgLTExMCA1OSAtNDAgMTYgLTg4IDQ1IC0xMDhcblx0NjMgLTIwIDE5IC01NSA0NiAtNzggNjEgLTI0IDE0IC00OSAzNSAtNTUgNDcgLTcgMTEgLTM0IDMzIC02MCA0OSAtNTAgMzEgLTY1XG5cdDYxIC01MyAxMDIgNCAxMyAxMzAgMTQ3IDI4MSAyOTggMjM2IDIzOCAyNzcgMjgzIDI5OSAzMzUgMTUgMzIgMzUgNzEgNDYgODZcblx0MTIgMTggMTkgNDQgMTkgNzYgMCA0MiAtOCA2MyAtNTMgMTM4IC05MiAxNTEgMTEgMTM5IC0xMjA3IDE0MSAtNzk4IDIgLTEwMzBcblx0MCAtMTA4NiAtMTF6XCI+PC9wYXRoPlxuXHQ8L2c+XG48L3N2Zz5cbmBcblxubW9kdWxlLmV4cG9ydHMgPSBzdmdcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/images/loop.svg.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/images/pause.svg.js":
/*!**********************************************************!*\
  !*** ./node_modules/abcjs/src/synth/images/pause.svg.js ***!
  \**********************************************************/
/***/ ((module) => {

eval("var svg = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 25 25\" class=\"abcjs-pause-svg\">\n  <g>\n    <rect width=\"8.23\" height=\"25\"/>\n    <rect width=\"8.23\" height=\"25\" x=\"17\"/>\n  </g>\n</svg>\n`\n\nmodule.exports = svg\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL2ltYWdlcy9wYXVzZS5zdmcuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy9zeW50aC9pbWFnZXMvcGF1c2Uuc3ZnLmpzP2I4Y2MiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHN2ZyA9IGBcbjxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMjUgMjVcIiBjbGFzcz1cImFiY2pzLXBhdXNlLXN2Z1wiPlxuICA8Zz5cbiAgICA8cmVjdCB3aWR0aD1cIjguMjNcIiBoZWlnaHQ9XCIyNVwiLz5cbiAgICA8cmVjdCB3aWR0aD1cIjguMjNcIiBoZWlnaHQ9XCIyNVwiIHg9XCIxN1wiLz5cbiAgPC9nPlxuPC9zdmc+XG5gXG5cbm1vZHVsZS5leHBvcnRzID0gc3ZnXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/images/pause.svg.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/images/play.svg.js":
/*!*********************************************************!*\
  !*** ./node_modules/abcjs/src/synth/images/play.svg.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("var svg = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 25 25\" class=\"abcjs-play-svg\">\n    <g>\n    <polygon points=\"4 0 23 12.5 4 25\"/>\n    </g>\n</svg>\n`\n\nmodule.exports = svg\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL2ltYWdlcy9wbGF5LnN2Zy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy9zeW50aC9pbWFnZXMvcGxheS5zdmcuanM/NjU2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc3ZnID0gYFxuPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCAyNSAyNVwiIGNsYXNzPVwiYWJjanMtcGxheS1zdmdcIj5cbiAgICA8Zz5cbiAgICA8cG9seWdvbiBwb2ludHM9XCI0IDAgMjMgMTIuNSA0IDI1XCIvPlxuICAgIDwvZz5cbjwvc3ZnPlxuYFxuXG5tb2R1bGUuZXhwb3J0cyA9IHN2Z1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/images/play.svg.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/images/reset.svg.js":
/*!**********************************************************!*\
  !*** ./node_modules/abcjs/src/synth/images/reset.svg.js ***!
  \**********************************************************/
/***/ ((module) => {

eval("var svg = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 25 25\">\n  <g>\n    <polygon points=\"5 12.5 24 0 24 25\"/>\n    <rect width=\"3\" height=\"25\" x=\"0\" y=\"0\"/>\n  </g>\n</svg>\n`\n\nmodule.exports = svg\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL2ltYWdlcy9yZXNldC5zdmcuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy9zeW50aC9pbWFnZXMvcmVzZXQuc3ZnLmpzPzJkYmUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHN2ZyA9IGBcbjxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMjUgMjVcIj5cbiAgPGc+XG4gICAgPHBvbHlnb24gcG9pbnRzPVwiNSAxMi41IDI0IDAgMjQgMjVcIi8+XG4gICAgPHJlY3Qgd2lkdGg9XCIzXCIgaGVpZ2h0PVwiMjVcIiB4PVwiMFwiIHk9XCIwXCIvPlxuICA8L2c+XG48L3N2Zz5cbmBcblxubW9kdWxlLmV4cG9ydHMgPSBzdmdcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/images/reset.svg.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/instrument-index-to-name.js":
/*!******************************************************************!*\
  !*** ./node_modules/abcjs/src/synth/instrument-index-to-name.js ***!
  \******************************************************************/
/***/ ((module) => {

eval("var instrumentIndexToName = [\n\t\"acoustic_grand_piano\",\n\t\"bright_acoustic_piano\",\n\t\"electric_grand_piano\",\n\t\"honkytonk_piano\",\n\t\"electric_piano_1\",\n\t\"electric_piano_2\",\n\t\"harpsichord\",\n\t\"clavinet\",\n\n\t\"celesta\",\n\t\"glockenspiel\",\n\t\"music_box\",\n\t\"vibraphone\",\n\t\"marimba\",\n\t\"xylophone\",\n\t\"tubular_bells\",\n\t\"dulcimer\",\n\n\t\"drawbar_organ\",\n\t\"percussive_organ\",\n\t\"rock_organ\",\n\t\"church_organ\",\n\t\"reed_organ\",\n\t\"accordion\",\n\t\"harmonica\",\n\t\"tango_accordion\",\n\n\t\"acoustic_guitar_nylon\",\n\t\"acoustic_guitar_steel\",\n\t\"electric_guitar_jazz\",\n\t\"electric_guitar_clean\",\n\t\"electric_guitar_muted\",\n\t\"overdriven_guitar\",\n\t\"distortion_guitar\",\n\t\"guitar_harmonics\",\n\n\t\"acoustic_bass\",\n\t\"electric_bass_finger\",\n\t\"electric_bass_pick\",\n\t\"fretless_bass\",\n\t\"slap_bass_1\",\n\t\"slap_bass_2\",\n\t\"synth_bass_1\",\n\t\"synth_bass_2\",\n\n\t\"violin\",\n\t\"viola\",\n\t\"cello\",\n\t\"contrabass\",\n\t\"tremolo_strings\",\n\t\"pizzicato_strings\",\n\t\"orchestral_harp\",\n\t\"timpani\",\n\n\t\"string_ensemble_1\",\n\t\"string_ensemble_2\",\n\t\"synth_strings_1\",\n\t\"synth_strings_2\",\n\t\"choir_aahs\",\n\t\"voice_oohs\",\n\t\"synth_choir\",\n\t\"orchestra_hit\",\n\n\t\"trumpet\",\n\t\"trombone\",\n\t\"tuba\",\n\t\"muted_trumpet\",\n\t\"french_horn\",\n\t\"brass_section\",\n\t\"synth_brass_1\",\n\t\"synth_brass_2\",\n\n\t\"soprano_sax\",\n\t\"alto_sax\",\n\t\"tenor_sax\",\n\t\"baritone_sax\",\n\t\"oboe\",\n\t\"english_horn\",\n\t\"bassoon\",\n\t\"clarinet\",\n\n\t\"piccolo\",\n\t\"flute\",\n\t\"recorder\",\n\t\"pan_flute\",\n\t\"blown_bottle\",\n\t\"shakuhachi\",\n\t\"whistle\",\n\t\"ocarina\",\n\n\t\"lead_1_square\",\n\t\"lead_2_sawtooth\",\n\t\"lead_3_calliope\",\n\t\"lead_4_chiff\",\n\t\"lead_5_charang\",\n\t\"lead_6_voice\",\n\t\"lead_7_fifths\",\n\t\"lead_8_bass_lead\",\n\n\t\"pad_1_new_age\",\n\t\"pad_2_warm\",\n\t\"pad_3_polysynth\",\n\t\"pad_4_choir\",\n\t\"pad_5_bowed\",\n\t\"pad_6_metallic\",\n\t\"pad_7_halo\",\n\t\"pad_8_sweep\",\n\n\t\"fx_1_rain\",\n\t\"fx_2_soundtrack\",\n\t\"fx_3_crystal\",\n\t\"fx_4_atmosphere\",\n\t\"fx_5_brightness\",\n\t\"fx_6_goblins\",\n\t\"fx_7_echoes\",\n\t\"fx_8_scifi\",\n\n\t\"sitar\",\n\t\"banjo\",\n\t\"shamisen\",\n\t\"koto\",\n\t\"kalimba\",\n\t\"bagpipe\",\n\t\"fiddle\",\n\t\"shanai\",\n\n\t\"tinkle_bell\",\n\t\"agogo\",\n\t\"steel_drums\",\n\t\"woodblock\",\n\t\"taiko_drum\",\n\t\"melodic_tom\",\n\t\"synth_drum\",\n\t\"reverse_cymbal\",\n\n\t\"guitar_fret_noise\",\n\t\"breath_noise\",\n\t\"seashore\",\n\t\"bird_tweet\",\n\t\"telephone_ring\",\n\t\"helicopter\",\n\t\"applause\",\n\t\"gunshot\",\n\n\t\"percussion\"\n];\n\nmodule.exports = instrumentIndexToName;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL2luc3RydW1lbnQtaW5kZXgtdG8tbmFtZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy9zeW50aC9pbnN0cnVtZW50LWluZGV4LXRvLW5hbWUuanM/NzNmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaW5zdHJ1bWVudEluZGV4VG9OYW1lID0gW1xuXHRcImFjb3VzdGljX2dyYW5kX3BpYW5vXCIsXG5cdFwiYnJpZ2h0X2Fjb3VzdGljX3BpYW5vXCIsXG5cdFwiZWxlY3RyaWNfZ3JhbmRfcGlhbm9cIixcblx0XCJob25reXRvbmtfcGlhbm9cIixcblx0XCJlbGVjdHJpY19waWFub18xXCIsXG5cdFwiZWxlY3RyaWNfcGlhbm9fMlwiLFxuXHRcImhhcnBzaWNob3JkXCIsXG5cdFwiY2xhdmluZXRcIixcblxuXHRcImNlbGVzdGFcIixcblx0XCJnbG9ja2Vuc3BpZWxcIixcblx0XCJtdXNpY19ib3hcIixcblx0XCJ2aWJyYXBob25lXCIsXG5cdFwibWFyaW1iYVwiLFxuXHRcInh5bG9waG9uZVwiLFxuXHRcInR1YnVsYXJfYmVsbHNcIixcblx0XCJkdWxjaW1lclwiLFxuXG5cdFwiZHJhd2Jhcl9vcmdhblwiLFxuXHRcInBlcmN1c3NpdmVfb3JnYW5cIixcblx0XCJyb2NrX29yZ2FuXCIsXG5cdFwiY2h1cmNoX29yZ2FuXCIsXG5cdFwicmVlZF9vcmdhblwiLFxuXHRcImFjY29yZGlvblwiLFxuXHRcImhhcm1vbmljYVwiLFxuXHRcInRhbmdvX2FjY29yZGlvblwiLFxuXG5cdFwiYWNvdXN0aWNfZ3VpdGFyX255bG9uXCIsXG5cdFwiYWNvdXN0aWNfZ3VpdGFyX3N0ZWVsXCIsXG5cdFwiZWxlY3RyaWNfZ3VpdGFyX2phenpcIixcblx0XCJlbGVjdHJpY19ndWl0YXJfY2xlYW5cIixcblx0XCJlbGVjdHJpY19ndWl0YXJfbXV0ZWRcIixcblx0XCJvdmVyZHJpdmVuX2d1aXRhclwiLFxuXHRcImRpc3RvcnRpb25fZ3VpdGFyXCIsXG5cdFwiZ3VpdGFyX2hhcm1vbmljc1wiLFxuXG5cdFwiYWNvdXN0aWNfYmFzc1wiLFxuXHRcImVsZWN0cmljX2Jhc3NfZmluZ2VyXCIsXG5cdFwiZWxlY3RyaWNfYmFzc19waWNrXCIsXG5cdFwiZnJldGxlc3NfYmFzc1wiLFxuXHRcInNsYXBfYmFzc18xXCIsXG5cdFwic2xhcF9iYXNzXzJcIixcblx0XCJzeW50aF9iYXNzXzFcIixcblx0XCJzeW50aF9iYXNzXzJcIixcblxuXHRcInZpb2xpblwiLFxuXHRcInZpb2xhXCIsXG5cdFwiY2VsbG9cIixcblx0XCJjb250cmFiYXNzXCIsXG5cdFwidHJlbW9sb19zdHJpbmdzXCIsXG5cdFwicGl6emljYXRvX3N0cmluZ3NcIixcblx0XCJvcmNoZXN0cmFsX2hhcnBcIixcblx0XCJ0aW1wYW5pXCIsXG5cblx0XCJzdHJpbmdfZW5zZW1ibGVfMVwiLFxuXHRcInN0cmluZ19lbnNlbWJsZV8yXCIsXG5cdFwic3ludGhfc3RyaW5nc18xXCIsXG5cdFwic3ludGhfc3RyaW5nc18yXCIsXG5cdFwiY2hvaXJfYWFoc1wiLFxuXHRcInZvaWNlX29vaHNcIixcblx0XCJzeW50aF9jaG9pclwiLFxuXHRcIm9yY2hlc3RyYV9oaXRcIixcblxuXHRcInRydW1wZXRcIixcblx0XCJ0cm9tYm9uZVwiLFxuXHRcInR1YmFcIixcblx0XCJtdXRlZF90cnVtcGV0XCIsXG5cdFwiZnJlbmNoX2hvcm5cIixcblx0XCJicmFzc19zZWN0aW9uXCIsXG5cdFwic3ludGhfYnJhc3NfMVwiLFxuXHRcInN5bnRoX2JyYXNzXzJcIixcblxuXHRcInNvcHJhbm9fc2F4XCIsXG5cdFwiYWx0b19zYXhcIixcblx0XCJ0ZW5vcl9zYXhcIixcblx0XCJiYXJpdG9uZV9zYXhcIixcblx0XCJvYm9lXCIsXG5cdFwiZW5nbGlzaF9ob3JuXCIsXG5cdFwiYmFzc29vblwiLFxuXHRcImNsYXJpbmV0XCIsXG5cblx0XCJwaWNjb2xvXCIsXG5cdFwiZmx1dGVcIixcblx0XCJyZWNvcmRlclwiLFxuXHRcInBhbl9mbHV0ZVwiLFxuXHRcImJsb3duX2JvdHRsZVwiLFxuXHRcInNoYWt1aGFjaGlcIixcblx0XCJ3aGlzdGxlXCIsXG5cdFwib2NhcmluYVwiLFxuXG5cdFwibGVhZF8xX3NxdWFyZVwiLFxuXHRcImxlYWRfMl9zYXd0b290aFwiLFxuXHRcImxlYWRfM19jYWxsaW9wZVwiLFxuXHRcImxlYWRfNF9jaGlmZlwiLFxuXHRcImxlYWRfNV9jaGFyYW5nXCIsXG5cdFwibGVhZF82X3ZvaWNlXCIsXG5cdFwibGVhZF83X2ZpZnRoc1wiLFxuXHRcImxlYWRfOF9iYXNzX2xlYWRcIixcblxuXHRcInBhZF8xX25ld19hZ2VcIixcblx0XCJwYWRfMl93YXJtXCIsXG5cdFwicGFkXzNfcG9seXN5bnRoXCIsXG5cdFwicGFkXzRfY2hvaXJcIixcblx0XCJwYWRfNV9ib3dlZFwiLFxuXHRcInBhZF82X21ldGFsbGljXCIsXG5cdFwicGFkXzdfaGFsb1wiLFxuXHRcInBhZF84X3N3ZWVwXCIsXG5cblx0XCJmeF8xX3JhaW5cIixcblx0XCJmeF8yX3NvdW5kdHJhY2tcIixcblx0XCJmeF8zX2NyeXN0YWxcIixcblx0XCJmeF80X2F0bW9zcGhlcmVcIixcblx0XCJmeF81X2JyaWdodG5lc3NcIixcblx0XCJmeF82X2dvYmxpbnNcIixcblx0XCJmeF83X2VjaG9lc1wiLFxuXHRcImZ4Xzhfc2NpZmlcIixcblxuXHRcInNpdGFyXCIsXG5cdFwiYmFuam9cIixcblx0XCJzaGFtaXNlblwiLFxuXHRcImtvdG9cIixcblx0XCJrYWxpbWJhXCIsXG5cdFwiYmFncGlwZVwiLFxuXHRcImZpZGRsZVwiLFxuXHRcInNoYW5haVwiLFxuXG5cdFwidGlua2xlX2JlbGxcIixcblx0XCJhZ29nb1wiLFxuXHRcInN0ZWVsX2RydW1zXCIsXG5cdFwid29vZGJsb2NrXCIsXG5cdFwidGFpa29fZHJ1bVwiLFxuXHRcIm1lbG9kaWNfdG9tXCIsXG5cdFwic3ludGhfZHJ1bVwiLFxuXHRcInJldmVyc2VfY3ltYmFsXCIsXG5cblx0XCJndWl0YXJfZnJldF9ub2lzZVwiLFxuXHRcImJyZWF0aF9ub2lzZVwiLFxuXHRcInNlYXNob3JlXCIsXG5cdFwiYmlyZF90d2VldFwiLFxuXHRcInRlbGVwaG9uZV9yaW5nXCIsXG5cdFwiaGVsaWNvcHRlclwiLFxuXHRcImFwcGxhdXNlXCIsXG5cdFwiZ3Vuc2hvdFwiLFxuXG5cdFwicGVyY3Vzc2lvblwiXG5dO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGluc3RydW1lbnRJbmRleFRvTmFtZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/instrument-index-to-name.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/load-note.js":
/*!***************************************************!*\
  !*** ./node_modules/abcjs/src/synth/load-note.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Load one mp3 file for one note.\n// url = the base url for the soundfont\n// instrument = the instrument name (e.g. \"acoustic_grand_piano\")\n// name = the pitch name (e.g. \"A3\")\nvar soundsCache = __webpack_require__(/*! ./sounds-cache */ \"(ssr)/./node_modules/abcjs/src/synth/sounds-cache.js\");\n\nvar getNote = function (url, instrument, name, audioContext) {\n\tif (!soundsCache[instrument]) soundsCache[instrument] = {};\n\tvar instrumentCache = soundsCache[instrument];\n\n\tif (!instrumentCache[name])\n\t\tinstrumentCache[name] = new Promise(function (resolve, reject) {\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\tlet noteUrl = url + instrument + \"-mp3/\" + name + \".mp3\";\n\t\t\txhr.open(\"GET\", noteUrl, true);\n\t\t\txhr.responseType = \"arraybuffer\";\n\t\t\txhr.onload = function () {\n\t\t\t\tif (xhr.status !== 200) {\n\t\t\t\t\treject(Error(\"Can't load sound at \" + noteUrl + ' status=' + xhr.status));\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tvar noteDecoded = function(audioBuffer) {\n\t\t\t\t\tresolve({instrument: instrument, name: name, status: \"loaded\", audioBuffer: audioBuffer})\n\t\t\t\t}\n\t\t\t\tvar maybePromise = audioContext.decodeAudioData(xhr.response, noteDecoded, function () {\n\t\t\t\t\treject(Error(\"Can't decode sound at \" + noteUrl));\n\t\t\t\t});\n\t\t\t\t// In older browsers `BaseAudioContext.decodeAudio()` did not return a promise\n\t\t\t\tif (maybePromise && typeof maybePromise.catch === \"function\") maybePromise.catch(reject);\n\t\t\t};\n\t\t\txhr.onerror = function () {\n\t\t\t\treject(Error(\"Can't load sound at \" + noteUrl));\n\t\t\t};\n\t\t\txhr.send();\n\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.error(\"Didn't load note\", instrument, name, \":\", err.message);\n\t\t\t\tthrow err;\n\t\t\t});\n\n\treturn instrumentCache[name];\n};\n\nmodule.exports = getNote;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL2xvYWQtbm90ZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixtQkFBTyxDQUFDLDRFQUFnQjs7QUFFMUM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsK0VBQStFO0FBQzdGO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxJQUFJOztBQUVKO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvc3ludGgvbG9hZC1ub3RlLmpzPzA5Y2MiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTG9hZCBvbmUgbXAzIGZpbGUgZm9yIG9uZSBub3RlLlxuLy8gdXJsID0gdGhlIGJhc2UgdXJsIGZvciB0aGUgc291bmRmb250XG4vLyBpbnN0cnVtZW50ID0gdGhlIGluc3RydW1lbnQgbmFtZSAoZS5nLiBcImFjb3VzdGljX2dyYW5kX3BpYW5vXCIpXG4vLyBuYW1lID0gdGhlIHBpdGNoIG5hbWUgKGUuZy4gXCJBM1wiKVxudmFyIHNvdW5kc0NhY2hlID0gcmVxdWlyZShcIi4vc291bmRzLWNhY2hlXCIpO1xuXG52YXIgZ2V0Tm90ZSA9IGZ1bmN0aW9uICh1cmwsIGluc3RydW1lbnQsIG5hbWUsIGF1ZGlvQ29udGV4dCkge1xuXHRpZiAoIXNvdW5kc0NhY2hlW2luc3RydW1lbnRdKSBzb3VuZHNDYWNoZVtpbnN0cnVtZW50XSA9IHt9O1xuXHR2YXIgaW5zdHJ1bWVudENhY2hlID0gc291bmRzQ2FjaGVbaW5zdHJ1bWVudF07XG5cblx0aWYgKCFpbnN0cnVtZW50Q2FjaGVbbmFtZV0pXG5cdFx0aW5zdHJ1bWVudENhY2hlW25hbWVdID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuXHRcdFx0dmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuXHRcdFx0bGV0IG5vdGVVcmwgPSB1cmwgKyBpbnN0cnVtZW50ICsgXCItbXAzL1wiICsgbmFtZSArIFwiLm1wM1wiO1xuXHRcdFx0eGhyLm9wZW4oXCJHRVRcIiwgbm90ZVVybCwgdHJ1ZSk7XG5cdFx0XHR4aHIucmVzcG9uc2VUeXBlID0gXCJhcnJheWJ1ZmZlclwiO1xuXHRcdFx0eGhyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0aWYgKHhoci5zdGF0dXMgIT09IDIwMCkge1xuXHRcdFx0XHRcdHJlamVjdChFcnJvcihcIkNhbid0IGxvYWQgc291bmQgYXQgXCIgKyBub3RlVXJsICsgJyBzdGF0dXM9JyArIHhoci5zdGF0dXMpKTtcblx0XHRcdFx0XHRyZXR1cm5cblx0XHRcdFx0fVxuXHRcdFx0XHR2YXIgbm90ZURlY29kZWQgPSBmdW5jdGlvbihhdWRpb0J1ZmZlcikge1xuXHRcdFx0XHRcdHJlc29sdmUoe2luc3RydW1lbnQ6IGluc3RydW1lbnQsIG5hbWU6IG5hbWUsIHN0YXR1czogXCJsb2FkZWRcIiwgYXVkaW9CdWZmZXI6IGF1ZGlvQnVmZmVyfSlcblx0XHRcdFx0fVxuXHRcdFx0XHR2YXIgbWF5YmVQcm9taXNlID0gYXVkaW9Db250ZXh0LmRlY29kZUF1ZGlvRGF0YSh4aHIucmVzcG9uc2UsIG5vdGVEZWNvZGVkLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0cmVqZWN0KEVycm9yKFwiQ2FuJ3QgZGVjb2RlIHNvdW5kIGF0IFwiICsgbm90ZVVybCkpO1xuXHRcdFx0XHR9KTtcblx0XHRcdFx0Ly8gSW4gb2xkZXIgYnJvd3NlcnMgYEJhc2VBdWRpb0NvbnRleHQuZGVjb2RlQXVkaW8oKWAgZGlkIG5vdCByZXR1cm4gYSBwcm9taXNlXG5cdFx0XHRcdGlmIChtYXliZVByb21pc2UgJiYgdHlwZW9mIG1heWJlUHJvbWlzZS5jYXRjaCA9PT0gXCJmdW5jdGlvblwiKSBtYXliZVByb21pc2UuY2F0Y2gocmVqZWN0KTtcblx0XHRcdH07XG5cdFx0XHR4aHIub25lcnJvciA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0cmVqZWN0KEVycm9yKFwiQ2FuJ3QgbG9hZCBzb3VuZCBhdCBcIiArIG5vdGVVcmwpKTtcblx0XHRcdH07XG5cdFx0XHR4aHIuc2VuZCgpO1xuXHRcdH0pXG5cdFx0XHQuY2F0Y2goZXJyID0+IHtcblx0XHRcdFx0Y29uc29sZS5lcnJvcihcIkRpZG4ndCBsb2FkIG5vdGVcIiwgaW5zdHJ1bWVudCwgbmFtZSwgXCI6XCIsIGVyci5tZXNzYWdlKTtcblx0XHRcdFx0dGhyb3cgZXJyO1xuXHRcdFx0fSk7XG5cblx0cmV0dXJuIGluc3RydW1lbnRDYWNoZVtuYW1lXTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0Tm90ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/load-note.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/note-to-midi.js":
/*!******************************************************!*\
  !*** ./node_modules/abcjs/src/synth/note-to-midi.js ***!
  \******************************************************/
/***/ ((module) => {

eval("var accidentals = {\n\t\"__\": -2,\n\t\"_\": -1,\n\t\"_/\": -0.5,\n\t\"=\": 0,\n\t\"\": 0,\n\t\"^/\": 0.5,\n\t\"^\": 1,\n\t\"^^\": 2\n}\n\nvar notesInOrder = ['C', '-', 'D', '-', 'E', 'F', '-', 'G', '-', 'A', '-', 'B', 'c', '-', 'd', '-', 'e', 'f', '-', 'g', '-', 'a', '-', 'b']\n\nfunction noteToMidi(note) {\n\tvar reg = note.match(/([_^\\/]*)([ABCDEFGabcdefg])(,*)('*)/)\n\tif (reg && reg.length === 5) {\n\t\tvar acc = accidentals[reg[1]]\n\t\tvar pitch = notesInOrder.indexOf(reg[2])\n\t\tvar octave = reg[4].length - reg[3].length\n\t\treturn 48 + pitch + acc + octave * 12;\n\t}\n\treturn 0;\n}\n\nfunction midiToNote(midi) {\n\tmidi = parseInt(midi, 10) // TODO-PER: not sure how to handle quarter sharps and flats, so strip them for now.\n\tvar octave = Math.floor(midi / 12)\n\tvar pitch = midi % 12\n\tvar name = notesInOrder[pitch]\n\tif (name === '-') {\n\t\tname = '^' + notesInOrder[pitch-1]\n\t}\n\t\n\tif (octave > 4) {\n\t\tname = name.toLowerCase()\n\t\toctave -= 5\n\t\twhile (octave > 0) {\n\t\t\tname += \"'\"\n\t\t\toctave--\n\t\t}\n\t} else {\n\t\twhile (octave < 4) {\n\t\t\tname += ','\n\t\t\toctave++\n\t\t}\n\t}\t\n\treturn name\n}\n\nmodule.exports = {noteToMidi: noteToMidi, midiToNote: midiToNote};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL25vdGUtdG8tbWlkaS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvc3ludGgvbm90ZS10by1taWRpLmpzP2U2ZGYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFjY2lkZW50YWxzID0ge1xuXHRcIl9fXCI6IC0yLFxuXHRcIl9cIjogLTEsXG5cdFwiXy9cIjogLTAuNSxcblx0XCI9XCI6IDAsXG5cdFwiXCI6IDAsXG5cdFwiXi9cIjogMC41LFxuXHRcIl5cIjogMSxcblx0XCJeXlwiOiAyXG59XG5cbnZhciBub3Rlc0luT3JkZXIgPSBbJ0MnLCAnLScsICdEJywgJy0nLCAnRScsICdGJywgJy0nLCAnRycsICctJywgJ0EnLCAnLScsICdCJywgJ2MnLCAnLScsICdkJywgJy0nLCAnZScsICdmJywgJy0nLCAnZycsICctJywgJ2EnLCAnLScsICdiJ11cblxuZnVuY3Rpb24gbm90ZVRvTWlkaShub3RlKSB7XG5cdHZhciByZWcgPSBub3RlLm1hdGNoKC8oW19eXFwvXSopKFtBQkNERUZHYWJjZGVmZ10pKCwqKSgnKikvKVxuXHRpZiAocmVnICYmIHJlZy5sZW5ndGggPT09IDUpIHtcblx0XHR2YXIgYWNjID0gYWNjaWRlbnRhbHNbcmVnWzFdXVxuXHRcdHZhciBwaXRjaCA9IG5vdGVzSW5PcmRlci5pbmRleE9mKHJlZ1syXSlcblx0XHR2YXIgb2N0YXZlID0gcmVnWzRdLmxlbmd0aCAtIHJlZ1szXS5sZW5ndGhcblx0XHRyZXR1cm4gNDggKyBwaXRjaCArIGFjYyArIG9jdGF2ZSAqIDEyO1xuXHR9XG5cdHJldHVybiAwO1xufVxuXG5mdW5jdGlvbiBtaWRpVG9Ob3RlKG1pZGkpIHtcblx0bWlkaSA9IHBhcnNlSW50KG1pZGksIDEwKSAvLyBUT0RPLVBFUjogbm90IHN1cmUgaG93IHRvIGhhbmRsZSBxdWFydGVyIHNoYXJwcyBhbmQgZmxhdHMsIHNvIHN0cmlwIHRoZW0gZm9yIG5vdy5cblx0dmFyIG9jdGF2ZSA9IE1hdGguZmxvb3IobWlkaSAvIDEyKVxuXHR2YXIgcGl0Y2ggPSBtaWRpICUgMTJcblx0dmFyIG5hbWUgPSBub3Rlc0luT3JkZXJbcGl0Y2hdXG5cdGlmIChuYW1lID09PSAnLScpIHtcblx0XHRuYW1lID0gJ14nICsgbm90ZXNJbk9yZGVyW3BpdGNoLTFdXG5cdH1cblx0XG5cdGlmIChvY3RhdmUgPiA0KSB7XG5cdFx0bmFtZSA9IG5hbWUudG9Mb3dlckNhc2UoKVxuXHRcdG9jdGF2ZSAtPSA1XG5cdFx0d2hpbGUgKG9jdGF2ZSA+IDApIHtcblx0XHRcdG5hbWUgKz0gXCInXCJcblx0XHRcdG9jdGF2ZS0tXG5cdFx0fVxuXHR9IGVsc2Uge1xuXHRcdHdoaWxlIChvY3RhdmUgPCA0KSB7XG5cdFx0XHRuYW1lICs9ICcsJ1xuXHRcdFx0b2N0YXZlKytcblx0XHR9XG5cdH1cdFxuXHRyZXR1cm4gbmFtZVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtub3RlVG9NaWRpOiBub3RlVG9NaWRpLCBtaWRpVG9Ob3RlOiBtaWRpVG9Ob3RlfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/note-to-midi.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/pitch-to-note-name.js":
/*!************************************************************!*\
  !*** ./node_modules/abcjs/src/synth/pitch-to-note-name.js ***!
  \************************************************************/
/***/ ((module) => {

eval("var pitchToNoteName = {\n\t21: 'A0',\n\t22: 'Bb0',\n\t23: 'B0',\n\t24: 'C1',\n\t25: 'Db1',\n\t26: 'D1',\n\t27: 'Eb1',\n\t28: 'E1',\n\t29: 'F1',\n\t30: 'Gb1',\n\t31: 'G1',\n\t32: 'Ab1',\n\t33: 'A1',\n\t34: 'Bb1',\n\t35: 'B1',\n\t36: 'C2',\n\t37: 'Db2',\n\t38: 'D2',\n\t39: 'Eb2',\n\t40: 'E2',\n\t41: 'F2',\n\t42: 'Gb2',\n\t43: 'G2',\n\t44: 'Ab2',\n\t45: 'A2',\n\t46: 'Bb2',\n\t47: 'B2',\n\t48: 'C3',\n\t49: 'Db3',\n\t50: 'D3',\n\t51: 'Eb3',\n\t52: 'E3',\n\t53: 'F3',\n\t54: 'Gb3',\n\t55: 'G3',\n\t56: 'Ab3',\n\t57: 'A3',\n\t58: 'Bb3',\n\t59: 'B3',\n\t60: 'C4',\n\t61: 'Db4',\n\t62: 'D4',\n\t63: 'Eb4',\n\t64: 'E4',\n\t65: 'F4',\n\t66: 'Gb4',\n\t67: 'G4',\n\t68: 'Ab4',\n\t69: 'A4',\n\t70: 'Bb4',\n\t71: 'B4',\n\t72: 'C5',\n\t73: 'Db5',\n\t74: 'D5',\n\t75: 'Eb5',\n\t76: 'E5',\n\t77: 'F5',\n\t78: 'Gb5',\n\t79: 'G5',\n\t80: 'Ab5',\n\t81: 'A5',\n\t82: 'Bb5',\n\t83: 'B5',\n\t84: 'C6',\n\t85: 'Db6',\n\t86: 'D6',\n\t87: 'Eb6',\n\t88: 'E6',\n\t89: 'F6',\n\t90: 'Gb6',\n\t91: 'G6',\n\t92: 'Ab6',\n\t93: 'A6',\n\t94: 'Bb6',\n\t95: 'B6',\n\t96: 'C7',\n\t97: 'Db7',\n\t98: 'D7',\n\t99: 'Eb7',\n\t100: 'E7',\n\t101: 'F7',\n\t102: 'Gb7',\n\t103: 'G7',\n\t104: 'Ab7',\n\t105: 'A7',\n\t106: 'Bb7',\n\t107: 'B7',\n\t108: 'C8',\n\t109: 'Db8',\n\t110: 'D8',\n\t111: 'Eb8',\n\t112: 'E8',\n\t113: 'F8',\n\t114: 'Gb8',\n\t115: 'G8',\n\t116: 'Ab8',\n\t117: 'A8',\n\t118: 'Bb8',\n\t119: 'B8',\n\t120: 'C9',\n\t121: 'Db9'\n};\n\nmodule.exports = pitchToNoteName;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL3BpdGNoLXRvLW5vdGUtbmFtZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy9zeW50aC9waXRjaC10by1ub3RlLW5hbWUuanM/YzRjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcGl0Y2hUb05vdGVOYW1lID0ge1xuXHQyMTogJ0EwJyxcblx0MjI6ICdCYjAnLFxuXHQyMzogJ0IwJyxcblx0MjQ6ICdDMScsXG5cdDI1OiAnRGIxJyxcblx0MjY6ICdEMScsXG5cdDI3OiAnRWIxJyxcblx0Mjg6ICdFMScsXG5cdDI5OiAnRjEnLFxuXHQzMDogJ0diMScsXG5cdDMxOiAnRzEnLFxuXHQzMjogJ0FiMScsXG5cdDMzOiAnQTEnLFxuXHQzNDogJ0JiMScsXG5cdDM1OiAnQjEnLFxuXHQzNjogJ0MyJyxcblx0Mzc6ICdEYjInLFxuXHQzODogJ0QyJyxcblx0Mzk6ICdFYjInLFxuXHQ0MDogJ0UyJyxcblx0NDE6ICdGMicsXG5cdDQyOiAnR2IyJyxcblx0NDM6ICdHMicsXG5cdDQ0OiAnQWIyJyxcblx0NDU6ICdBMicsXG5cdDQ2OiAnQmIyJyxcblx0NDc6ICdCMicsXG5cdDQ4OiAnQzMnLFxuXHQ0OTogJ0RiMycsXG5cdDUwOiAnRDMnLFxuXHQ1MTogJ0ViMycsXG5cdDUyOiAnRTMnLFxuXHQ1MzogJ0YzJyxcblx0NTQ6ICdHYjMnLFxuXHQ1NTogJ0czJyxcblx0NTY6ICdBYjMnLFxuXHQ1NzogJ0EzJyxcblx0NTg6ICdCYjMnLFxuXHQ1OTogJ0IzJyxcblx0NjA6ICdDNCcsXG5cdDYxOiAnRGI0Jyxcblx0NjI6ICdENCcsXG5cdDYzOiAnRWI0Jyxcblx0NjQ6ICdFNCcsXG5cdDY1OiAnRjQnLFxuXHQ2NjogJ0diNCcsXG5cdDY3OiAnRzQnLFxuXHQ2ODogJ0FiNCcsXG5cdDY5OiAnQTQnLFxuXHQ3MDogJ0JiNCcsXG5cdDcxOiAnQjQnLFxuXHQ3MjogJ0M1Jyxcblx0NzM6ICdEYjUnLFxuXHQ3NDogJ0Q1Jyxcblx0NzU6ICdFYjUnLFxuXHQ3NjogJ0U1Jyxcblx0Nzc6ICdGNScsXG5cdDc4OiAnR2I1Jyxcblx0Nzk6ICdHNScsXG5cdDgwOiAnQWI1Jyxcblx0ODE6ICdBNScsXG5cdDgyOiAnQmI1Jyxcblx0ODM6ICdCNScsXG5cdDg0OiAnQzYnLFxuXHQ4NTogJ0RiNicsXG5cdDg2OiAnRDYnLFxuXHQ4NzogJ0ViNicsXG5cdDg4OiAnRTYnLFxuXHQ4OTogJ0Y2Jyxcblx0OTA6ICdHYjYnLFxuXHQ5MTogJ0c2Jyxcblx0OTI6ICdBYjYnLFxuXHQ5MzogJ0E2Jyxcblx0OTQ6ICdCYjYnLFxuXHQ5NTogJ0I2Jyxcblx0OTY6ICdDNycsXG5cdDk3OiAnRGI3Jyxcblx0OTg6ICdENycsXG5cdDk5OiAnRWI3Jyxcblx0MTAwOiAnRTcnLFxuXHQxMDE6ICdGNycsXG5cdDEwMjogJ0diNycsXG5cdDEwMzogJ0c3Jyxcblx0MTA0OiAnQWI3Jyxcblx0MTA1OiAnQTcnLFxuXHQxMDY6ICdCYjcnLFxuXHQxMDc6ICdCNycsXG5cdDEwODogJ0M4Jyxcblx0MTA5OiAnRGI4Jyxcblx0MTEwOiAnRDgnLFxuXHQxMTE6ICdFYjgnLFxuXHQxMTI6ICdFOCcsXG5cdDExMzogJ0Y4Jyxcblx0MTE0OiAnR2I4Jyxcblx0MTE1OiAnRzgnLFxuXHQxMTY6ICdBYjgnLFxuXHQxMTc6ICdBOCcsXG5cdDExODogJ0JiOCcsXG5cdDExOTogJ0I4Jyxcblx0MTIwOiAnQzknLFxuXHQxMjE6ICdEYjknXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBpdGNoVG9Ob3RlTmFtZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/pitch-to-note-name.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/pitches-to-perc.js":
/*!*********************************************************!*\
  !*** ./node_modules/abcjs/src/synth/pitches-to-perc.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("var pitchMap = {\n\tf0: \"_C\",\n\tn0: \"=C\",\n\ts0: \"^C\",\n\tx0: \"C\",\n\tf1: \"_D\",\n\tn1: \"=D\",\n\ts1: \"^D\",\n\tx1: \"D\",\n\tf2: \"_E\",\n\tn2: \"=E\",\n\ts2: \"^E\",\n\tx2: \"E\",\n\tf3: \"_F\",\n\tn3: \"=F\",\n\ts3: \"^F\",\n\tx3: \"F\",\n\tf4: \"_G\",\n\tn4: \"=G\",\n\ts4: \"^G\",\n\tx4: \"G\",\n\tf5: \"_A\",\n\tn5: \"=A\",\n\ts5: \"^A\",\n\tx5: \"A\",\n\tf6: \"_B\",\n\tn6: \"=B\",\n\ts6: \"^B\",\n\tx6: \"B\",\n\tf7: \"_c\",\n\tn7: \"=c\",\n\ts7: \"^c\",\n\tx7: \"c\",\n\tf8: \"_d\",\n\tn8: \"=d\",\n\ts8: \"^d\",\n\tx8: \"d\",\n\tf9: \"_e\",\n\tn9: \"=e\",\n\ts9: \"^e\",\n\tx9: \"e\",\n\tf10: \"_f\",\n\tn10: \"=f\",\n\ts10: \"^f\",\n\tx10: \"f\",\n\tf11: \"_g\",\n\tn11: \"=g\",\n\ts11: \"^g\",\n\tx11: \"g\",\n\tf12: \"_a\",\n\tn12: \"=a\",\n\ts12: \"^a\",\n\tx12: \"a\",\n\tf13: \"_b\",\n\tn13: \"=b\",\n\ts13: \"^b\",\n\tx13: \"b\",\n\tf14: \"_c'\",\n\tn14: \"=c'\",\n\ts14: \"^c'\",\n\tx14: \"c'\",\n\tf15: \"_d'\",\n\tn15: \"=d'\",\n\ts15: \"^d'\",\n\tx15: \"d'\",\n\tf16: \"_e'\",\n\tn16: \"=e'\",\n\ts16: \"^e'\",\n\tx16: \"e'\",\n}\n\nfunction pitchesToPerc(pitchObj) {\n\tvar pitch = (pitchObj.accidental ? pitchObj.accidental[0] : 'x') + pitchObj.verticalPos;\n\treturn pitchMap[pitch];\n}\nmodule.exports = pitchesToPerc;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL3BpdGNoZXMtdG8tcGVyYy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL3BpdGNoZXMtdG8tcGVyYy5qcz9kMjg0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBwaXRjaE1hcCA9IHtcblx0ZjA6IFwiX0NcIixcblx0bjA6IFwiPUNcIixcblx0czA6IFwiXkNcIixcblx0eDA6IFwiQ1wiLFxuXHRmMTogXCJfRFwiLFxuXHRuMTogXCI9RFwiLFxuXHRzMTogXCJeRFwiLFxuXHR4MTogXCJEXCIsXG5cdGYyOiBcIl9FXCIsXG5cdG4yOiBcIj1FXCIsXG5cdHMyOiBcIl5FXCIsXG5cdHgyOiBcIkVcIixcblx0ZjM6IFwiX0ZcIixcblx0bjM6IFwiPUZcIixcblx0czM6IFwiXkZcIixcblx0eDM6IFwiRlwiLFxuXHRmNDogXCJfR1wiLFxuXHRuNDogXCI9R1wiLFxuXHRzNDogXCJeR1wiLFxuXHR4NDogXCJHXCIsXG5cdGY1OiBcIl9BXCIsXG5cdG41OiBcIj1BXCIsXG5cdHM1OiBcIl5BXCIsXG5cdHg1OiBcIkFcIixcblx0ZjY6IFwiX0JcIixcblx0bjY6IFwiPUJcIixcblx0czY6IFwiXkJcIixcblx0eDY6IFwiQlwiLFxuXHRmNzogXCJfY1wiLFxuXHRuNzogXCI9Y1wiLFxuXHRzNzogXCJeY1wiLFxuXHR4NzogXCJjXCIsXG5cdGY4OiBcIl9kXCIsXG5cdG44OiBcIj1kXCIsXG5cdHM4OiBcIl5kXCIsXG5cdHg4OiBcImRcIixcblx0Zjk6IFwiX2VcIixcblx0bjk6IFwiPWVcIixcblx0czk6IFwiXmVcIixcblx0eDk6IFwiZVwiLFxuXHRmMTA6IFwiX2ZcIixcblx0bjEwOiBcIj1mXCIsXG5cdHMxMDogXCJeZlwiLFxuXHR4MTA6IFwiZlwiLFxuXHRmMTE6IFwiX2dcIixcblx0bjExOiBcIj1nXCIsXG5cdHMxMTogXCJeZ1wiLFxuXHR4MTE6IFwiZ1wiLFxuXHRmMTI6IFwiX2FcIixcblx0bjEyOiBcIj1hXCIsXG5cdHMxMjogXCJeYVwiLFxuXHR4MTI6IFwiYVwiLFxuXHRmMTM6IFwiX2JcIixcblx0bjEzOiBcIj1iXCIsXG5cdHMxMzogXCJeYlwiLFxuXHR4MTM6IFwiYlwiLFxuXHRmMTQ6IFwiX2MnXCIsXG5cdG4xNDogXCI9YydcIixcblx0czE0OiBcIl5jJ1wiLFxuXHR4MTQ6IFwiYydcIixcblx0ZjE1OiBcIl9kJ1wiLFxuXHRuMTU6IFwiPWQnXCIsXG5cdHMxNTogXCJeZCdcIixcblx0eDE1OiBcImQnXCIsXG5cdGYxNjogXCJfZSdcIixcblx0bjE2OiBcIj1lJ1wiLFxuXHRzMTY6IFwiXmUnXCIsXG5cdHgxNjogXCJlJ1wiLFxufVxuXG5mdW5jdGlvbiBwaXRjaGVzVG9QZXJjKHBpdGNoT2JqKSB7XG5cdHZhciBwaXRjaCA9IChwaXRjaE9iai5hY2NpZGVudGFsID8gcGl0Y2hPYmouYWNjaWRlbnRhbFswXSA6ICd4JykgKyBwaXRjaE9iai52ZXJ0aWNhbFBvcztcblx0cmV0dXJuIHBpdGNoTWFwW3BpdGNoXTtcbn1cbm1vZHVsZS5leHBvcnRzID0gcGl0Y2hlc1RvUGVyYztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/pitches-to-perc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/place-note.js":
/*!****************************************************!*\
  !*** ./node_modules/abcjs/src/synth/place-note.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var soundsCache = __webpack_require__(/*! ./sounds-cache */ \"(ssr)/./node_modules/abcjs/src/synth/sounds-cache.js\");\nvar pitchToNoteName = __webpack_require__(/*! ./pitch-to-note-name */ \"(ssr)/./node_modules/abcjs/src/synth/pitch-to-note-name.js\");\nvar centsToFactor = __webpack_require__(/*! ./cents-to-factor */ \"(ssr)/./node_modules/abcjs/src/synth/cents-to-factor.js\");\n\nfunction placeNote(outputAudioBuffer, sampleRate, sound, startArray, volumeMultiplier, ofsMs, fadeTimeSec, noteEndSec, debugCallback) {\n\t// sound contains { instrument, pitch, volume, len, pan, tempoMultiplier\n\t// len is in whole notes. Multiply by tempoMultiplier to get seconds.\n\t// ofsMs is an offset to subtract from the note to line up programs that have different length onsets.\n\tvar OfflineAC = window.OfflineAudioContext ||\n\t\twindow.webkitOfflineAudioContext;\n\n\tvar len = sound.len * sound.tempoMultiplier;\n\tif (ofsMs)\n\t\tlen +=ofsMs/1000;\n\tlen -= noteEndSec;\n\tif (len < 0)\n\t\tlen = 0.005; // Have some small audible length no matter how short the note is.\n\tvar offlineCtx = new OfflineAC(2,Math.floor((len+fadeTimeSec)*sampleRate),sampleRate);\n\tvar noteName = pitchToNoteName[sound.pitch];\n\tif (!soundsCache[sound.instrument]) {\n\t\t// It shouldn't happen that the entire instrument cache wasn't created, but this has been seen in practice, so guard against it.\n\t\tif (debugCallback)\n\t\t\tdebugCallback('placeNote skipped (instrument empty): '+sound.instrument+':'+noteName)\n\t\treturn Promise.resolve();\n\t}\n\tvar noteBufferPromise = soundsCache[sound.instrument][noteName];\n\n\tif (!noteBufferPromise) {\n\t\t// if the note isn't present then just skip it - it will leave a blank spot in the audio.\n\t\tif (debugCallback)\n\t\t\tdebugCallback('placeNote skipped: '+sound.instrument+':'+noteName)\n\t\treturn Promise.resolve();\n\t}\n\n\treturn noteBufferPromise\n\t\t.then(function (response) {\n\t\t\t// create audio buffer\n\t\t\tvar source = offlineCtx.createBufferSource();\n\t\t\tsource.buffer = response.audioBuffer;\n\n\t\t\t// add gain\n\t\t\t// volume can be between 1 to 127. This translation to gain is just trial and error.\n\t\t\t// The smaller the first number, the more dynamic range between the quietest to loudest.\n\t\t\t// The larger the second number, the louder it will be in general.\n\t\t\tvar volume = (sound.volume / 96) * volumeMultiplier;\n\t\t\tsource.gainNode = offlineCtx.createGain();\n\n\t\t\t// add pan if supported and present\n\t\t\tif (sound.pan && offlineCtx.createStereoPanner) {\n\t\t\t\tsource.panNode = offlineCtx.createStereoPanner();\n\t\t\t\tsource.panNode.pan.setValueAtTime(sound.pan, 0);\n\t\t\t}\n\t\t\tsource.gainNode.gain.value = volume; // Math.min(2, Math.max(0, volume));\n\t\t\tsource.gainNode.gain.linearRampToValueAtTime(source.gainNode.gain.value, len);\n\t\t\tsource.gainNode.gain.linearRampToValueAtTime(0.0, len + fadeTimeSec);\n\n\t\t\tif (sound.cents) {\n\t\t\t\tsource.playbackRate.value = centsToFactor(sound.cents);\n\t\t\t}\n\n\t\t\t// connect all the nodes\n\t\t\tif (source.panNode) {\n\t\t\t\tsource.panNode.connect(offlineCtx.destination);\n\t\t\t\tsource.gainNode.connect(source.panNode);\n\t\t\t} else {\n\t\t\t\tsource.gainNode.connect(offlineCtx.destination);\n\t\t\t}\n\t\t\tsource.connect(source.gainNode);\n\n\t\t\t// Do the process of creating the sound and placing it in the buffer\n\t\t\tsource.start(0);\n\n\t\t\tif (source.noteOff) {\n\t\t\t\tsource.noteOff(len + fadeTimeSec);\n\t\t\t} else {\n\t\t\t\tsource.stop(len + fadeTimeSec);\n\t\t\t}\n\t\t\tvar fnResolve;\n\t\t\tofflineCtx.oncomplete = function(e) {\n\t\t\t\tif (e.renderedBuffer && e.renderedBuffer.getChannelData) { // If the system gets overloaded or there are network problems then this can start failing. Just drop the note if so.\n\t\t\t\t\tfor (var i = 0; i < startArray.length; i++) {\n\t\t\t\t\t\t//Math.floor(startArray[i] * sound.tempoMultiplier * sampleRate)\n\t\t\t\t\t\tvar start = startArray[i] * sound.tempoMultiplier;\n\t\t\t\t\t\tif (ofsMs)\n\t\t\t\t\t\t\tstart -=ofsMs/1000;\n\t\t\t\t\t\tif (start < 0)\n\t\t\t\t\t\t\tstart = 0; // If the item that is moved back is at the very beginning of the buffer then don't move it back. To do that would be to push everything else forward. TODO-PER: this should probably be done at some point but then it would change timing in existing apps.\n\t\t\t\t\t\tstart = Math.floor(start*sampleRate);\n\t\t\t\t\t\tcopyToChannel(outputAudioBuffer, e.renderedBuffer, start);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (debugCallback)\n\t\t\t\t\tdebugCallback('placeNote: '+sound.instrument+':'+noteName)\n\t\t\t\tfnResolve();\n\t\t\t};\n\t\t\tofflineCtx.startRendering();\n\t\t\treturn new Promise(function(resolve) {\n\t\t\t\tfnResolve = resolve;\n\t\t\t});\n\t\t})\n\t\t.catch(function (error) {\n\t\t\tif (debugCallback)\n\t\t\t\tdebugCallback('placeNote catch: '+error.message)\n\t\t\treturn Promise.reject(error)\n\t\t});\n}\n\nvar copyToChannel = function(toBuffer, fromBuffer, start) {\n\tfor (var ch = 0; ch < 2; ch++) {\n\t\tvar fromData = fromBuffer.getChannelData(ch);\n\t\tvar toData = toBuffer.getChannelData(ch);\n\n\t\t// Mix the current note into the existing track\n\t\tfor (var n = 0; n < fromData.length; n++) {\n\t\t\ttoData[n + start] += fromData[n];\n\t\t}\n\t}\n};\n\nmodule.exports = placeNote;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/place-note.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/play-event.js":
/*!****************************************************!*\
  !*** ./node_modules/abcjs/src/synth/play-event.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var SynthSequence = __webpack_require__(/*! ./synth-sequence */ \"(ssr)/./node_modules/abcjs/src/synth/synth-sequence.js\");\nvar CreateSynth = __webpack_require__(/*! ./create-synth */ \"(ssr)/./node_modules/abcjs/src/synth/create-synth.js\");\nvar activeAudioContext = __webpack_require__(/*! ./active-audio-context */ \"(ssr)/./node_modules/abcjs/src/synth/active-audio-context.js\");\n\nfunction playEvent(midiPitches, midiGracePitches, millisecondsPerMeasure, soundFontUrl, debugCallback) {\n\tvar sequence = new SynthSequence();\n\n\tfor (var i = 0; i < midiPitches.length; i++) {\n\t\tvar note = midiPitches[i];\n\t\tvar trackNum = sequence.addTrack();\n\t\tsequence.setInstrument(trackNum, note.instrument);\n\t\tif (i === 0 && midiGracePitches) {\n\t\t\tfor (var j = 0; j < midiGracePitches.length; j++) {\n\t\t\t\tvar grace = midiGracePitches[j];\n\t\t\t\tsequence.appendNote(trackNum, grace.pitch, 1 / 64, grace.volume, grace.cents);\n\t\t\t}\n\t\t}\n\t\tsequence.appendNote(trackNum, note.pitch, note.duration, note.volume, note.cents);\n\t}\n\n\tvar ac = activeAudioContext();\n\tif (ac.state === \"suspended\") {\n\t\treturn ac.resume().then(function () {\n\t\t\treturn doPlay(sequence, millisecondsPerMeasure, soundFontUrl, debugCallback);\n\t\t});\n\t} else {\n\t\treturn doPlay(sequence, millisecondsPerMeasure, soundFontUrl, debugCallback);\n\t}\n}\n\nfunction doPlay(sequence, millisecondsPerMeasure, soundFontUrl, debugCallback) {\n\tvar buffer = new CreateSynth();\n\treturn buffer.init({\n\t\tsequence: sequence,\n\t\tmillisecondsPerMeasure: millisecondsPerMeasure,\n\t\toptions: { soundFontUrl: soundFontUrl },\n\t\tdebugCallback: debugCallback,\n\t}).then(function () {\n\t\treturn buffer.prime();\n\t}).then(function () {\n\t\tbuffer.start();\n\t\treturn Promise.resolve();\n\t});\n}\n\nmodule.exports = playEvent;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL3BsYXktZXZlbnQuanMiLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CLG1CQUFPLENBQUMsZ0ZBQWtCO0FBQzlDLGtCQUFrQixtQkFBTyxDQUFDLDRFQUFnQjtBQUMxQyx5QkFBeUIsbUJBQU8sQ0FBQyw0RkFBd0I7O0FBRXpEO0FBQ0E7O0FBRUEsaUJBQWlCLHdCQUF3QjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw2QkFBNkI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsNEJBQTRCO0FBQ3pDO0FBQ0EsRUFBRTtBQUNGO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvc3ludGgvcGxheS1ldmVudC5qcz80YmY4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBTeW50aFNlcXVlbmNlID0gcmVxdWlyZSgnLi9zeW50aC1zZXF1ZW5jZScpO1xudmFyIENyZWF0ZVN5bnRoID0gcmVxdWlyZSgnLi9jcmVhdGUtc3ludGgnKTtcbnZhciBhY3RpdmVBdWRpb0NvbnRleHQgPSByZXF1aXJlKFwiLi9hY3RpdmUtYXVkaW8tY29udGV4dFwiKTtcblxuZnVuY3Rpb24gcGxheUV2ZW50KG1pZGlQaXRjaGVzLCBtaWRpR3JhY2VQaXRjaGVzLCBtaWxsaXNlY29uZHNQZXJNZWFzdXJlLCBzb3VuZEZvbnRVcmwsIGRlYnVnQ2FsbGJhY2spIHtcblx0dmFyIHNlcXVlbmNlID0gbmV3IFN5bnRoU2VxdWVuY2UoKTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IG1pZGlQaXRjaGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIG5vdGUgPSBtaWRpUGl0Y2hlc1tpXTtcblx0XHR2YXIgdHJhY2tOdW0gPSBzZXF1ZW5jZS5hZGRUcmFjaygpO1xuXHRcdHNlcXVlbmNlLnNldEluc3RydW1lbnQodHJhY2tOdW0sIG5vdGUuaW5zdHJ1bWVudCk7XG5cdFx0aWYgKGkgPT09IDAgJiYgbWlkaUdyYWNlUGl0Y2hlcykge1xuXHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBtaWRpR3JhY2VQaXRjaGVzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdHZhciBncmFjZSA9IG1pZGlHcmFjZVBpdGNoZXNbal07XG5cdFx0XHRcdHNlcXVlbmNlLmFwcGVuZE5vdGUodHJhY2tOdW0sIGdyYWNlLnBpdGNoLCAxIC8gNjQsIGdyYWNlLnZvbHVtZSwgZ3JhY2UuY2VudHMpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRzZXF1ZW5jZS5hcHBlbmROb3RlKHRyYWNrTnVtLCBub3RlLnBpdGNoLCBub3RlLmR1cmF0aW9uLCBub3RlLnZvbHVtZSwgbm90ZS5jZW50cyk7XG5cdH1cblxuXHR2YXIgYWMgPSBhY3RpdmVBdWRpb0NvbnRleHQoKTtcblx0aWYgKGFjLnN0YXRlID09PSBcInN1c3BlbmRlZFwiKSB7XG5cdFx0cmV0dXJuIGFjLnJlc3VtZSgpLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIGRvUGxheShzZXF1ZW5jZSwgbWlsbGlzZWNvbmRzUGVyTWVhc3VyZSwgc291bmRGb250VXJsLCBkZWJ1Z0NhbGxiYWNrKTtcblx0XHR9KTtcblx0fSBlbHNlIHtcblx0XHRyZXR1cm4gZG9QbGF5KHNlcXVlbmNlLCBtaWxsaXNlY29uZHNQZXJNZWFzdXJlLCBzb3VuZEZvbnRVcmwsIGRlYnVnQ2FsbGJhY2spO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGRvUGxheShzZXF1ZW5jZSwgbWlsbGlzZWNvbmRzUGVyTWVhc3VyZSwgc291bmRGb250VXJsLCBkZWJ1Z0NhbGxiYWNrKSB7XG5cdHZhciBidWZmZXIgPSBuZXcgQ3JlYXRlU3ludGgoKTtcblx0cmV0dXJuIGJ1ZmZlci5pbml0KHtcblx0XHRzZXF1ZW5jZTogc2VxdWVuY2UsXG5cdFx0bWlsbGlzZWNvbmRzUGVyTWVhc3VyZTogbWlsbGlzZWNvbmRzUGVyTWVhc3VyZSxcblx0XHRvcHRpb25zOiB7IHNvdW5kRm9udFVybDogc291bmRGb250VXJsIH0sXG5cdFx0ZGVidWdDYWxsYmFjazogZGVidWdDYWxsYmFjayxcblx0fSkudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0cmV0dXJuIGJ1ZmZlci5wcmltZSgpO1xuXHR9KS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHRidWZmZXIuc3RhcnQoKTtcblx0XHRyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG5cdH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHBsYXlFdmVudDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/play-event.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/register-audio-context.js":
/*!****************************************************************!*\
  !*** ./node_modules/abcjs/src/synth/register-audio-context.js ***!
  \****************************************************************/
/***/ ((module) => {

eval("// Call this when it is safe for the abcjs to produce sound. This is after the first user gesture on the page.\n// If you call it with no parameters, then an AudioContext is created and stored.\n// If you call it with a parameter, that is used as an already created AudioContext.\n\nfunction registerAudioContext(ac) {\n\t// If one is passed in, that is the one to use even if there was already one created.\n\tif (ac)\n\t\twindow.abcjsAudioContext = ac;\n\telse {\n\t\t// no audio context passed in, so create it unless there is already one from before.\n\t\tif (!window.abcjsAudioContext) {\n\t\t\tvar AudioContext = window.AudioContext || window.webkitAudioContext;\n\t\t\tif (AudioContext)\n\t\t\t\twindow.abcjsAudioContext = new AudioContext();\n\t\t\telse\n\t\t\t\treturn false;\n\t\t}\n\t}\n\treturn window.abcjsAudioContext.state !== \"suspended\";\n}\n\nmodule.exports = registerAudioContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL3JlZ2lzdGVyLWF1ZGlvLWNvbnRleHQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL3JlZ2lzdGVyLWF1ZGlvLWNvbnRleHQuanM/ZTg5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDYWxsIHRoaXMgd2hlbiBpdCBpcyBzYWZlIGZvciB0aGUgYWJjanMgdG8gcHJvZHVjZSBzb3VuZC4gVGhpcyBpcyBhZnRlciB0aGUgZmlyc3QgdXNlciBnZXN0dXJlIG9uIHRoZSBwYWdlLlxuLy8gSWYgeW91IGNhbGwgaXQgd2l0aCBubyBwYXJhbWV0ZXJzLCB0aGVuIGFuIEF1ZGlvQ29udGV4dCBpcyBjcmVhdGVkIGFuZCBzdG9yZWQuXG4vLyBJZiB5b3UgY2FsbCBpdCB3aXRoIGEgcGFyYW1ldGVyLCB0aGF0IGlzIHVzZWQgYXMgYW4gYWxyZWFkeSBjcmVhdGVkIEF1ZGlvQ29udGV4dC5cblxuZnVuY3Rpb24gcmVnaXN0ZXJBdWRpb0NvbnRleHQoYWMpIHtcblx0Ly8gSWYgb25lIGlzIHBhc3NlZCBpbiwgdGhhdCBpcyB0aGUgb25lIHRvIHVzZSBldmVuIGlmIHRoZXJlIHdhcyBhbHJlYWR5IG9uZSBjcmVhdGVkLlxuXHRpZiAoYWMpXG5cdFx0d2luZG93LmFiY2pzQXVkaW9Db250ZXh0ID0gYWM7XG5cdGVsc2Uge1xuXHRcdC8vIG5vIGF1ZGlvIGNvbnRleHQgcGFzc2VkIGluLCBzbyBjcmVhdGUgaXQgdW5sZXNzIHRoZXJlIGlzIGFscmVhZHkgb25lIGZyb20gYmVmb3JlLlxuXHRcdGlmICghd2luZG93LmFiY2pzQXVkaW9Db250ZXh0KSB7XG5cdFx0XHR2YXIgQXVkaW9Db250ZXh0ID0gd2luZG93LkF1ZGlvQ29udGV4dCB8fCB3aW5kb3cud2Via2l0QXVkaW9Db250ZXh0O1xuXHRcdFx0aWYgKEF1ZGlvQ29udGV4dClcblx0XHRcdFx0d2luZG93LmFiY2pzQXVkaW9Db250ZXh0ID0gbmV3IEF1ZGlvQ29udGV4dCgpO1xuXHRcdFx0ZWxzZVxuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXHR9XG5cdHJldHVybiB3aW5kb3cuYWJjanNBdWRpb0NvbnRleHQuc3RhdGUgIT09IFwic3VzcGVuZGVkXCI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcmVnaXN0ZXJBdWRpb0NvbnRleHQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/register-audio-context.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/sounds-cache.js":
/*!******************************************************!*\
  !*** ./node_modules/abcjs/src/synth/sounds-cache.js ***!
  \******************************************************/
/***/ ((module) => {

eval("var soundsCache = {\n};\n\nmodule.exports = soundsCache;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL3NvdW5kcy1jYWNoZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL3NvdW5kcy1jYWNoZS5qcz8yNTI1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBzb3VuZHNDYWNoZSA9IHtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gc291bmRzQ2FjaGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/sounds-cache.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/supports-audio.js":
/*!********************************************************!*\
  !*** ./node_modules/abcjs/src/synth/supports-audio.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var activeAudioContext = __webpack_require__(/*! ./active-audio-context */ \"(ssr)/./node_modules/abcjs/src/synth/active-audio-context.js\");\n\n//\n// Support for audio depends on three things: support for Promise, support for AudioContext, and support for AudioContext.resume.\n// Unfortunately, AudioContext.resume cannot be detected unless an AudioContext is created, and creating an AudioContext can't\n// be done until a user click, so there is no way to know for sure if audio is supported until the user tries.\n// We can get close, though - we can test for Promises and AudioContext - there are just a few evergreen browsers that supported\n// that before supporting resume, so we'll test what we can.\n\n// The best use of this routine is to call it before doing any audio related stuff to decide whether to bother.\n// But then, call it again after a user interaction to test for resume.\n\nfunction supportsAudio() {\n\tif (!window.Promise)\n\t\treturn false;\n\n\tif (!window.AudioContext &&\n\t\t!window.webkitAudioContext &&\n\t\t!navigator.mozAudioContext &&\n\t\t!navigator.msAudioContext)\n\t\treturn false;\n\n\tvar aac = activeAudioContext();\n\tif (aac)\n\t\treturn aac.resume !== undefined;\n}\n\nmodule.exports = supportsAudio;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL3N1cHBvcnRzLWF1ZGlvLmpzIiwibWFwcGluZ3MiOiJBQUFBLHlCQUF5QixtQkFBTyxDQUFDLDRGQUF3Qjs7QUFFekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvc3ludGgvc3VwcG9ydHMtYXVkaW8uanM/ZDFjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYWN0aXZlQXVkaW9Db250ZXh0ID0gcmVxdWlyZSgnLi9hY3RpdmUtYXVkaW8tY29udGV4dCcpO1xuXG4vL1xuLy8gU3VwcG9ydCBmb3IgYXVkaW8gZGVwZW5kcyBvbiB0aHJlZSB0aGluZ3M6IHN1cHBvcnQgZm9yIFByb21pc2UsIHN1cHBvcnQgZm9yIEF1ZGlvQ29udGV4dCwgYW5kIHN1cHBvcnQgZm9yIEF1ZGlvQ29udGV4dC5yZXN1bWUuXG4vLyBVbmZvcnR1bmF0ZWx5LCBBdWRpb0NvbnRleHQucmVzdW1lIGNhbm5vdCBiZSBkZXRlY3RlZCB1bmxlc3MgYW4gQXVkaW9Db250ZXh0IGlzIGNyZWF0ZWQsIGFuZCBjcmVhdGluZyBhbiBBdWRpb0NvbnRleHQgY2FuJ3Rcbi8vIGJlIGRvbmUgdW50aWwgYSB1c2VyIGNsaWNrLCBzbyB0aGVyZSBpcyBubyB3YXkgdG8ga25vdyBmb3Igc3VyZSBpZiBhdWRpbyBpcyBzdXBwb3J0ZWQgdW50aWwgdGhlIHVzZXIgdHJpZXMuXG4vLyBXZSBjYW4gZ2V0IGNsb3NlLCB0aG91Z2ggLSB3ZSBjYW4gdGVzdCBmb3IgUHJvbWlzZXMgYW5kIEF1ZGlvQ29udGV4dCAtIHRoZXJlIGFyZSBqdXN0IGEgZmV3IGV2ZXJncmVlbiBicm93c2VycyB0aGF0IHN1cHBvcnRlZFxuLy8gdGhhdCBiZWZvcmUgc3VwcG9ydGluZyByZXN1bWUsIHNvIHdlJ2xsIHRlc3Qgd2hhdCB3ZSBjYW4uXG5cbi8vIFRoZSBiZXN0IHVzZSBvZiB0aGlzIHJvdXRpbmUgaXMgdG8gY2FsbCBpdCBiZWZvcmUgZG9pbmcgYW55IGF1ZGlvIHJlbGF0ZWQgc3R1ZmYgdG8gZGVjaWRlIHdoZXRoZXIgdG8gYm90aGVyLlxuLy8gQnV0IHRoZW4sIGNhbGwgaXQgYWdhaW4gYWZ0ZXIgYSB1c2VyIGludGVyYWN0aW9uIHRvIHRlc3QgZm9yIHJlc3VtZS5cblxuZnVuY3Rpb24gc3VwcG9ydHNBdWRpbygpIHtcblx0aWYgKCF3aW5kb3cuUHJvbWlzZSlcblx0XHRyZXR1cm4gZmFsc2U7XG5cblx0aWYgKCF3aW5kb3cuQXVkaW9Db250ZXh0ICYmXG5cdFx0IXdpbmRvdy53ZWJraXRBdWRpb0NvbnRleHQgJiZcblx0XHQhbmF2aWdhdG9yLm1vekF1ZGlvQ29udGV4dCAmJlxuXHRcdCFuYXZpZ2F0b3IubXNBdWRpb0NvbnRleHQpXG5cdFx0cmV0dXJuIGZhbHNlO1xuXG5cdHZhciBhYWMgPSBhY3RpdmVBdWRpb0NvbnRleHQoKTtcblx0aWYgKGFhYylcblx0XHRyZXR1cm4gYWFjLnJlc3VtZSAhPT0gdW5kZWZpbmVkO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN1cHBvcnRzQXVkaW87XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/supports-audio.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/synth-controller.js":
/*!**********************************************************!*\
  !*** ./node_modules/abcjs/src/synth/synth-controller.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var CreateSynthControl = __webpack_require__(/*! ./create-synth-control */ \"(ssr)/./node_modules/abcjs/src/synth/create-synth-control.js\");\nvar CreateSynth = __webpack_require__(/*! ./create-synth */ \"(ssr)/./node_modules/abcjs/src/synth/create-synth.js\");\nvar TimingCallbacks = __webpack_require__(/*! ../api/abc_timing_callbacks */ \"(ssr)/./node_modules/abcjs/src/api/abc_timing_callbacks.js\");\nvar activeAudioContext = __webpack_require__(/*! ./active-audio-context */ \"(ssr)/./node_modules/abcjs/src/synth/active-audio-context.js\");\n\nfunction SynthController() {\n\tvar self = this;\n\tself.warp = 100;\n\tself.cursorControl = null;\n\tself.visualObj = null;\n\tself.timer = null;\n\tself.midiBuffer = null;\n\tself.options = null;\n\tself.currentTempo = null;\n\tself.control = null;\n\tself.isLooping = false;\n\tself.isStarted = false;\n\tself.isLoaded = false;\n\tself.isLoading = false;\n\n\tself.load = function (selector, cursorControl, visualOptions) {\n\t\tif (!visualOptions)\n\t\t\tvisualOptions = {};\n\t\tif (visualOptions.displayPlay === undefined)\n\t\t\tvisualOptions.displayPlay = true\n\t\tif (visualOptions.displayProgress === undefined)\n\t\t\tvisualOptions.displayProgress = true\n\t\tself.control = new CreateSynthControl(selector, {\n\t\t\tloopHandler: visualOptions.displayLoop ? self.toggleLoop : undefined,\n\t\t\trestartHandler: visualOptions.displayRestart ? self.restart : undefined,\n\t\t\tplayPromiseHandler: visualOptions.displayPlay ? self.play : undefined,\n\t\t\tprogressHandler: visualOptions.displayProgress ? self.randomAccess : undefined,\n\t\t\twarpHandler: visualOptions.displayWarp ? self.onWarp : undefined,\n\t\t\tafterResume: self.init\n\t\t});\n\t\tself.cursorControl = cursorControl;\n\t\tself.disable(true);\n\t};\n\n\tself.disable = function(isDisabled) {\n\t\tif (self.control)\n\t\t\tself.control.disable(isDisabled);\n\t};\n\n\tself.setTune = function(visualObj, userAction, audioParams) {\n\t\tself.visualObj = visualObj;\n\t\tself.disable(false);\n\t\tself.options = audioParams ? audioParams : {};\n\n\t\tif (self.control) {\n\t\t\tself.pause();\n\t\t\tself.setProgress(0, 1);\n\t\t\tself.control.resetAll();\n\t\t\tself.restart();\n\t\t\tself.isStarted = false;\n\t\t}\n\t\tself.isLooping = false;\n\n\t\tif (userAction)\n\t\t\treturn self.go();\n\t\telse {\n\t\t\treturn Promise.resolve({status: \"no-audio-context\"});\n\t\t}\n\t};\n\n\tself.go = function () {\n\t\tself.isLoading = true;\n\t\tvar millisecondsPerMeasure = self.visualObj.millisecondsPerMeasure() * 100 / self.warp;\n\t\tself.currentTempo = Math.round(self.visualObj.getBeatsPerMeasure() / millisecondsPerMeasure * 60000);\n\t\tif (self.control)\n\t\t\tself.control.setTempo(self.currentTempo);\n\t\tself.percent = 0;\n\t\tvar loadingResponse;\n\n\t\tif (!self.midiBuffer)\n\t\t\tself.midiBuffer = new CreateSynth();\n\t\treturn activeAudioContext().resume().then(function (response) {\n\t\t\treturn self.midiBuffer.init({\n\t\t\t\tvisualObj: self.visualObj,\n\t\t\t\toptions: self.options,\n\t\t\t\tmillisecondsPerMeasure: millisecondsPerMeasure\n\t\t\t});\n\t\t}).then(function (response) {\n\t\t\tloadingResponse = response;\n\t\t\treturn self.midiBuffer.prime();\n\t\t}).then(function () {\n\t\t\tvar subdivisions = 16;\n\t\t\tif (self.cursorControl &&\n\t\t\t\tself.cursorControl.beatSubdivisions !== undefined &&\n\t\t\t\tparseInt(self.cursorControl.beatSubdivisions, 10) >= 1 &&\n\t\t\t\tparseInt(self.cursorControl.beatSubdivisions, 10) <= 64)\n\t\t\t\tsubdivisions = parseInt(self.cursorControl.beatSubdivisions, 10);\n\n\t\t\t// Need to create the TimingCallbacks after priming the midi so that the midi data is available for the callbacks.\n\t\t\tself.timer = new TimingCallbacks(self.visualObj, {\n\t\t\t\tbeatCallback: self.beatCallback,\n\t\t\t\teventCallback: self.eventCallback,\n\t\t\t\tlineEndCallback: self.lineEndCallback,\n\t\t\t\tqpm: self.currentTempo,\n\n\t\t\t\textraMeasuresAtBeginning: self.cursorControl ? self.cursorControl.extraMeasuresAtBeginning : undefined,\n\t\t\t\tlineEndAnticipation: self.cursorControl ? self.cursorControl.lineEndAnticipation : 0,\n\t\t\t\tbeatSubdivisions: subdivisions,\n\t\t\t});\n\t\t\tif (self.cursorControl && self.cursorControl.onReady && typeof self.cursorControl.onReady  === 'function')\n\t\t\t\tself.cursorControl.onReady(self);\n\t\t\tself.isLoaded = true;\n\t\t\tself.isLoading = false;\n\t\t\treturn Promise.resolve({ status: \"created\", notesStatus: loadingResponse });\n\t\t});\n\t};\n\n\tself.destroy = function () {\n\t\tif (self.timer) {\n\t\t\tself.timer.reset();\n\t\t\tself.timer.stop();\n\t\t\tself.timer = null;\n\t\t}\n\t\tif (self.midiBuffer) {\n\t\t\tself.midiBuffer.stop();\n\t\t\tself.midiBuffer = null;\n\t\t}\n\t\tself.setProgress(0, 1);\n\t\tif (self.control)\n\t\t\tself.control.resetAll();\n\t};\n\n\tself.play = function () {\n\t\treturn self.runWhenReady(self._play, undefined);\n\t};\n\n\tfunction sleep(ms) {\n\t\treturn new Promise(function (resolve) {\n\t\t\tsetTimeout(resolve, ms)\n\t\t});\n\t}\n\n\tself.runWhenReady = function(fn, arg1) {\n\t\tif (!self.visualObj)\n\t\t\treturn Promise.resolve({status: \"loading\"});\n\t\tif (self.isLoading) {\n\t\t\t// Some other promise is waiting for the tune to be loaded, so just wait.\n\t\t\treturn sleep(500).then(function() {\n\t\t\t\tif (self.isLoading)\n\t\t\t\t\treturn self.runWhenReady(fn, arg1);\n\t\t\t\treturn fn(arg1);\n\t\t\t})\n\t\t} else if (!self.isLoaded) {\n\t\t\treturn self.go().then(function () {\n\t\t\t\treturn fn(arg1);\n\t\t\t});\n\t\t} else {\n\t\t\treturn fn(arg1);\n\t\t}\n\t};\n\n\tself._play = function () {\n\t\treturn activeAudioContext().resume().then(function () {\n\t\t\tself.isStarted = !self.isStarted;\n\t\t\tif (self.isStarted) {\n\t\t\t\tif (self.cursorControl && self.cursorControl.onStart && typeof self.cursorControl.onStart === 'function')\n\t\t\t\t\tself.cursorControl.onStart();\n\t\t\t\tself.midiBuffer.start();\n\t\t\t\tself.timer.start(self.percent);\n\t\t\t\tif (self.control)\n\t\t\t\t\tself.control.pushPlay(true);\n\t\t\t} else {\n\t\t\t\tself.pause();\n\t\t\t}\n\t\t\treturn Promise.resolve({status: \"ok\"});\n\t\t})\n\t};\n\n\tself.pause = function() {\n\t\tif (self.timer) {\n\t\t\tself.timer.pause();\n\t\t\tself.midiBuffer.pause();\n\t\t\tif (self.control)\n\t\t\t\tself.control.pushPlay(false);\n\t\t}\n\t};\n\n\tself.toggleLoop = function () {\n\t\tself.isLooping = !self.isLooping;\n\t\tif (self.control)\n\t\t\tself.control.pushLoop(self.isLooping);\n\t};\n\n\tself.restart = function () {\n\t\tif (self.timer) {\n\t\t\tself.timer.setProgress(0);\n\t\t\tself.midiBuffer.seek(0);\n\t\t}\n\t};\n\n\tself.randomAccess = function (ev) {\n\t\treturn self.runWhenReady(self._randomAccess, ev);\n\t};\n\n\tself._randomAccess = function (ev) {\n\t\tvar background = (ev.target.classList.contains('abcjs-midi-progress-indicator')) ? ev.target.parentNode : ev.target;\n\t\tvar percent = (ev.x - background.getBoundingClientRect().left) / background.offsetWidth;\n\t\tif (percent < 0)\n\t\t\tpercent = 0;\n\t\tif (percent > 1)\n\t\t\tpercent = 1;\n\t\tself.seek(percent);\n\t\treturn Promise.resolve({status: \"ok\"});\n\t};\n\n\tself.seek = function (percent, units) {\n\t\tif (self.timer && self.midiBuffer) {\n\t\t\tself.timer.setProgress(percent, units);\n\t\t\tself.midiBuffer.seek(percent, units);\n\t\t}\n\t};\n\n\tself.setWarp = function (newWarp) {\n\t\tif (parseInt(newWarp, 10) > 0) {\n\t\t\tself.warp = parseInt(newWarp, 10);\n\t\t\tvar wasPlaying = self.isStarted;\n\t\t\tvar startPercent = self.percent;\n\t\t\tself.destroy();\n\t\t\tself.isStarted = false;\n\t\t\treturn self.go().then(function () {\n\t\t\t\tself.setProgress(startPercent, self.midiBuffer.duration * 1000);\n\t\t\t\tif (self.control)\n\t\t\t\t\tself.control.setWarp(self.currentTempo, self.warp);\n\t\t\t\tif (wasPlaying) {\n\t\t\t\t\treturn self.play().then(function () {\n\t\t\t\t\t\tself.seek(startPercent);\n\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tself.seek(startPercent);\n\t\t\t\treturn Promise.resolve();\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve();\n\t};\n\n\tself.onWarp = function (ev) {\n\t\tvar newWarp = ev.target.value;\n\t\treturn self.setWarp(newWarp);\n\t};\n\n\tself.setProgress = function (percent, totalTime) {\n\t\tself.percent = percent;\n\t\tif (self.control)\n\t\t\tself.control.setProgress(percent, totalTime);\n\t};\n\n\tself.finished = function () {\n\t\tself.timer.reset();\n\t\tif (self.isLooping) {\n\t\t\tself.timer.start(0);\n\t\t\tself.midiBuffer.finished();\n\t\t\tself.midiBuffer.start();\n\t\t\treturn \"continue\";\n\t\t} else {\n\t\t\tself.timer.stop();\n\t\t\tif (self.isStarted) {\n\t\t\t\tif (self.control)\n\t\t\t\t\tself.control.pushPlay(false);\n\t\t\t\tself.isStarted = false;\n\t\t\t\tself.midiBuffer.finished();\n\t\t\t\tif (self.cursorControl && self.cursorControl.onFinished && typeof self.cursorControl.onFinished  === 'function')\n\t\t\t\t\tself.cursorControl.onFinished();\n\t\t\t\tself.setProgress(0, 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tself.beatCallback = function (beatNumber, totalBeats, totalTime, position) {\n\t\tvar percent = beatNumber / totalBeats;\n\t\tself.setProgress(percent, totalTime);\n\t\tif (self.cursorControl && self.cursorControl.onBeat && typeof self.cursorControl.onBeat  === 'function')\n\t\t\tself.cursorControl.onBeat(beatNumber, totalBeats, totalTime, position);\n\t};\n\n\tself.eventCallback = function (event) {\n\t\tif (event) {\n\t\t\tif (self.cursorControl && self.cursorControl.onEvent && typeof self.cursorControl.onEvent  === 'function')\n\t\t\t\tself.cursorControl.onEvent(event);\n\t\t} else {\n\t\t\treturn self.finished();\n\t\t}\n\t};\n\n\tself.lineEndCallback = function (lineEvent, leftEvent) {\n\t\tif (self.cursorControl && self.cursorControl.onLineEnd && typeof self.cursorControl.onLineEnd  === 'function')\n\t\t\tself.cursorControl.onLineEnd(lineEvent, leftEvent);\n\t};\n\n\tself.getUrl = function () {\n\t\treturn self.midiBuffer.download();\n\t};\n\n\tself.download = function(fileName) {\n\t\tvar url = self.getUrl();\n\t\tvar link = document.createElement('a');\n\t\tdocument.body.appendChild(link);\n\t\tlink.setAttribute(\"style\",\"display: none;\");\n\t\tlink.href = url;\n\t\tlink.download = fileName ? fileName : 'output.wav';\n\t\tlink.click();\n\t\twindow.URL.revokeObjectURL(url);\n\t\tdocument.body.removeChild(link);\n\t};\n}\n\nmodule.exports = SynthController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/synth-controller.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/synth/synth-sequence.js":
/*!********************************************************!*\
  !*** ./node_modules/abcjs/src/synth/synth-sequence.js ***!
  \********************************************************/
/***/ ((module) => {

eval("var SynthSequence = function() {\n\tvar self = this;\n\tself.tracks = [];\n\tself.totalDuration = 0;\n\tself.currentInstrument = [];\n\tself.starts = [];\n\n\tself.addTrack = function() {\n\t\tself.tracks.push([]);\n\t\tself.currentInstrument.push(0);\n\t\tself.starts.push(0);\n\t\treturn self.tracks.length - 1;\n\t};\n\n\tself.setInstrument = function(trackNumber, instrumentNumber) {\n\t\tself.tracks[trackNumber].push({\n\t\t\tchannel: 0,\n\t\t\tcmd: \"program\",\n\t\t\tinstrument: instrumentNumber\n\t\t});\n\t\tself.currentInstrument[trackNumber] = instrumentNumber;\n\t};\n\n\tself.appendNote = function(trackNumber, pitch, durationInMeasures, volume, cents) {\n\t\tvar note = {\n\t\t\tcmd: \"note\",\n\t\t\tduration: durationInMeasures,\n\t\t\tgap: 0,\n\t\t\tinstrument: self.currentInstrument[trackNumber],\n\t\t\tpitch: pitch,\n\t\t\tstart: self.starts[trackNumber],\n\t\t\tvolume: volume\n\t\t};\n\t\tif (cents)\n\t\t\tnote.cents = cents;\n\t\tself.tracks[trackNumber].push(note);\n\t\tself.starts[trackNumber] += durationInMeasures;\n\n\t\tself.totalDuration = Math.max(self.totalDuration, self.starts[trackNumber]);\n\t};\n};\n\nmodule.exports = SynthSequence;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL3N5bnRoLXNlcXVlbmNlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3N5bnRoL3N5bnRoLXNlcXVlbmNlLmpzP2M1OGMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIFN5bnRoU2VxdWVuY2UgPSBmdW5jdGlvbigpIHtcblx0dmFyIHNlbGYgPSB0aGlzO1xuXHRzZWxmLnRyYWNrcyA9IFtdO1xuXHRzZWxmLnRvdGFsRHVyYXRpb24gPSAwO1xuXHRzZWxmLmN1cnJlbnRJbnN0cnVtZW50ID0gW107XG5cdHNlbGYuc3RhcnRzID0gW107XG5cblx0c2VsZi5hZGRUcmFjayA9IGZ1bmN0aW9uKCkge1xuXHRcdHNlbGYudHJhY2tzLnB1c2goW10pO1xuXHRcdHNlbGYuY3VycmVudEluc3RydW1lbnQucHVzaCgwKTtcblx0XHRzZWxmLnN0YXJ0cy5wdXNoKDApO1xuXHRcdHJldHVybiBzZWxmLnRyYWNrcy5sZW5ndGggLSAxO1xuXHR9O1xuXG5cdHNlbGYuc2V0SW5zdHJ1bWVudCA9IGZ1bmN0aW9uKHRyYWNrTnVtYmVyLCBpbnN0cnVtZW50TnVtYmVyKSB7XG5cdFx0c2VsZi50cmFja3NbdHJhY2tOdW1iZXJdLnB1c2goe1xuXHRcdFx0Y2hhbm5lbDogMCxcblx0XHRcdGNtZDogXCJwcm9ncmFtXCIsXG5cdFx0XHRpbnN0cnVtZW50OiBpbnN0cnVtZW50TnVtYmVyXG5cdFx0fSk7XG5cdFx0c2VsZi5jdXJyZW50SW5zdHJ1bWVudFt0cmFja051bWJlcl0gPSBpbnN0cnVtZW50TnVtYmVyO1xuXHR9O1xuXG5cdHNlbGYuYXBwZW5kTm90ZSA9IGZ1bmN0aW9uKHRyYWNrTnVtYmVyLCBwaXRjaCwgZHVyYXRpb25Jbk1lYXN1cmVzLCB2b2x1bWUsIGNlbnRzKSB7XG5cdFx0dmFyIG5vdGUgPSB7XG5cdFx0XHRjbWQ6IFwibm90ZVwiLFxuXHRcdFx0ZHVyYXRpb246IGR1cmF0aW9uSW5NZWFzdXJlcyxcblx0XHRcdGdhcDogMCxcblx0XHRcdGluc3RydW1lbnQ6IHNlbGYuY3VycmVudEluc3RydW1lbnRbdHJhY2tOdW1iZXJdLFxuXHRcdFx0cGl0Y2g6IHBpdGNoLFxuXHRcdFx0c3RhcnQ6IHNlbGYuc3RhcnRzW3RyYWNrTnVtYmVyXSxcblx0XHRcdHZvbHVtZTogdm9sdW1lXG5cdFx0fTtcblx0XHRpZiAoY2VudHMpXG5cdFx0XHRub3RlLmNlbnRzID0gY2VudHM7XG5cdFx0c2VsZi50cmFja3NbdHJhY2tOdW1iZXJdLnB1c2gobm90ZSk7XG5cdFx0c2VsZi5zdGFydHNbdHJhY2tOdW1iZXJdICs9IGR1cmF0aW9uSW5NZWFzdXJlcztcblxuXHRcdHNlbGYudG90YWxEdXJhdGlvbiA9IE1hdGgubWF4KHNlbGYudG90YWxEdXJhdGlvbiwgc2VsZi5zdGFydHNbdHJhY2tOdW1iZXJdKTtcblx0fTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gU3ludGhTZXF1ZW5jZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/synth/synth-sequence.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/tablatures/abc_tablatures.js":
/*!*************************************************************!*\
  !*** ./node_modules/abcjs/src/tablatures/abc_tablatures.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n * Tablature Plugins\n * tablature are defined dynamically and registered inside abcjs\n * by calling abcTablatures.register(plugin) \n * where plugin represents a plugin instance \n * \n */\n\n// This is the only entry point to the tablatures. It is called both after parsing a tune and just before engraving\n\nvar TabString = __webpack_require__(/*! ./instruments/tab-string */ \"(ssr)/./node_modules/abcjs/src/tablatures/instruments/tab-string.js\");\n\n/* extend the table below when adding a new instrument plugin */\n\n// Existing tab classes \nvar pluginTab = {\n\t'violin': { name: 'StringTab', defaultTuning: ['G,', 'D', 'A', 'e'], isTabBig: false, tabSymbolOffset: 0 },\n\t'fiddle': { name: 'StringTab', defaultTuning: ['G,', 'D', 'A', 'e'], isTabBig: false, tabSymbolOffset: 0 },\n\t'mandolin': { name: 'StringTab', defaultTuning: ['G,', 'D', 'A', 'e'], isTabBig: false, tabSymbolOffset: 0 },\n\t'guitar': { name: 'StringTab', defaultTuning: ['E,', 'A,', 'D', 'G', 'B', 'e'], isTabBig: true, tabSymbolOffset: 0 },\n\t'fiveString': { name: 'StringTab', defaultTuning: ['C,', 'G,', 'D', 'A', 'e'], isTabBig: false, tabSymbolOffset: -.95 },\n};\n\nvar abcTablatures = {\n\n\tinited: false,\n\tplugins: {},\n\n\n\t/**\n\t * to be called once per plugin for registration \n\t * @param {*} plugin \n\t */\n\tregister: function (plugin) {\n\t\tvar name = plugin.name;\n\t\tvar tablature = plugin.tablature;\n\t\tthis.plugins[name] = tablature;\n\t},\n\n\tsetError: function (tune, msg) {\n\t\tif (tune.warnings) {\n\t\t\ttune.warning.push(msg);\n\t\t} else {\n\t\t\ttune.warnings = [msg];\n\t\t}\n\t},\n\n\t/**\n\t * handle params for current processed score\n\t * @param {*} tune current tune \n\t * @param {*} tuneNumber number in tune list\n\t * @param {*} params params to be processed for tablature\n\t * @return prepared tablatures plugin instances for current tune\n\t */\n\tpreparePlugins: function (tune, tuneNumber, params) {\n\t\t// Called after parsing a tune and before engraving it\n\t\tif (!this.inited) {\n\t\t\t// TODO-PER: I don't think this is needed - the plugin array can be hard coded, right?\n\t\t\tthis.register(new TabString());\n\t\t\tthis.inited = true;\n\t\t}\n\t\tvar returned = null;\n\t\tvar nbPlugins = 0;\n\t\tif (params.tablature) {\n\t\t\t// validate requested plugins \n\t\t\tvar tabs = params.tablature;\n\t\t\treturned = [];\n\t\t\tfor (var ii = 0; ii < tabs.length; ii++) {\n\t\t\t\tvar args = tabs[ii];\n\t\t\t\tvar instrument = args['instrument'];\n\t\t\t\tif (instrument == null) {\n\t\t\t\t\tthis.setError(tune, \"tablature 'instrument' is missing\");\n\t\t\t\t\treturn returned;\n\t\t\t\t}\n\t\t\t\tvar tabName = pluginTab[instrument];\n\t\t\t\tvar plugin = null;\n\t\t\t\tif (tabName) {\n\t\t\t\t\tplugin = this.plugins[tabName.name];\n\t\t\t\t}\n\t\t\t\tif (plugin) {\n\t\t\t\t\tif (params.visualTranspose != 0) {\n\t\t\t\t\t\t// populate transposition request to tabs\n\t\t\t\t\t\targs.visualTranspose = params.visualTranspose;\n\t\t\t\t\t}\n\t\t\t\t\targs.abcSrc = params.tablature.abcSrc;\n\t\t\t\t\tvar pluginInstance = {\n\t\t\t\t\t\tclassz: plugin,\n\t\t\t\t\t\ttuneNumber: tuneNumber,\n\t\t\t\t\t\tparams: args,\n\t\t\t\t\t\tinstance: null,\n\t\t\t\t\t\ttabType: tabName,\n\t\t\t\t\t};\n\t\t\t\t\t// proceed with tab plugin  init \n\t\t\t\t\t// plugin.init(tune, tuneNumber, args, ii);\n\t\t\t\t\treturned.push(pluginInstance);\n\t\t\t\t\tnbPlugins++;\n\t\t\t\t} else if (instrument === '') {\n\t\t\t\t\t// create a placeholder - there is no tab for this staff\n\t\t\t\t\treturned.push(null)\n\t\t\t\t} else {\n\t\t\t\t\t// unknown tab plugin \n\t\t\t\t\t//this.emit_error('Undefined tablature plugin: ' + tabName)\n\t\t\t\t\tthis.setError(tune, 'Undefined tablature plugin: ' + instrument);\n\t\t\t\t\treturn returned;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn returned;\n\t},\n\n\t/**\n\t * Call requested plugin\n\t * @param {*} renderer \n\t * @param {*} abcTune \n\t */\n\tlayoutTablatures: function layoutTablatures(renderer, abcTune) {\n\t\tvar tabs = abcTune.tablatures;\n\n\t\t// chack tabs request for each staffs\n\t\tvar staffLineCount = 0;\n\n\t\t// Clear the suppression flag\n\t\tif (tabs && (tabs.length > 0)) {\n\t\t\tvar nTabs = tabs.length;\n\t\t\tfor (var kk = 0; kk < nTabs; ++kk) {\n\t\t\t\tif (tabs[kk] && tabs[kk].params.firstStaffOnly) {\n\t\t\t\t\ttabs[kk].params.suppress = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var ii = 0; ii < abcTune.lines.length; ii++) {\n\t\t\tvar line = abcTune.lines[ii];\n\n\t\t\tif (line.staff) {\n\t\t\t\tstaffLineCount++;\n\t\t\t}\n\n\t\t\t// MAE 27Nov2023\n\t\t\t// If tab param \"firstStaffOnly\", remove the tab label after the first staff\n\t\t\tif (staffLineCount > 1) {\n\t\t\t\tif (tabs && (tabs.length > 0)) {\n\t\t\t\t\tvar nTabs = tabs.length;\n\t\t\t\t\tfor (var kk = 0; kk < nTabs; ++kk) {\n\t\t\t\t\t\tif (tabs[kk].params.firstStaffOnly) {\n\t\t\t\t\t\t\t// Set the staff draw suppression flag\n\t\t\t\t\t\t\ttabs[kk].params.suppress = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar curStaff = line.staff;\n\t\t\tif (curStaff) {\n\t\t\t\tvar maxStaves = curStaff.length\n\t\t\t\tfor (var jj = 0; jj < curStaff.length; jj++) {\n\n\t\t\t\t\tif (tabs[jj] && jj < maxStaves) {\n\t\t\t\t\t\t// tablature requested for staff\n\t\t\t\t\t\tvar tabPlugin = tabs[jj];\n\t\t\t\t\t\tif (tabPlugin.instance == null) {\n\t\t\t\t\t\t\t//console.log(\"★★★★ Tab Init line: \" + ii + \" staff: \" + jj)\n\t\t\t\t\t\t\ttabPlugin.instance = new tabPlugin.classz();\n\t\t\t\t\t\t\t// plugin.init(tune, tuneNumber, args, ii);\n\t\t\t\t\t\t\t// call initer first\n\t\t\t\t\t\t\ttabPlugin.instance.init(abcTune,\n\t\t\t\t\t\t\t\ttabPlugin.tuneNumber,\n\t\t\t\t\t\t\t\ttabPlugin.params,\n\t\t\t\t\t\t\t\ttabPlugin.tabType\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// render next\n\t\t\t\t\t\t//console.log(\"★★★★ Tab Render line: \" + ii + \" staff: \" + jj)\n\t\t\t\t\t\ttabPlugin.instance.render(renderer, line, jj);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n};\n\n\nmodule.exports = abcTablatures;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/tablatures/abc_tablatures.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/tablatures/instruments/string-patterns.js":
/*!**************************************************************************!*\
  !*** ./node_modules/abcjs/src/tablatures/instruments/string-patterns.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { noteToMidi } = __webpack_require__(/*! ../../synth/note-to-midi */ \"(ssr)/./node_modules/abcjs/src/synth/note-to-midi.js\");\nvar TabNote = __webpack_require__(/*! ./tab-note */ \"(ssr)/./node_modules/abcjs/src/tablatures/instruments/tab-note.js\");\nvar tabNotes = __webpack_require__(/*! ./tab-notes */ \"(ssr)/./node_modules/abcjs/src/tablatures/instruments/tab-notes.js\");\n\n\nfunction buildCapo(self) {\n\tvar capoTuning = null;\n\tvar tuning = self.tuning;\n\tif (self.capo > 0) {\n\t\tcapoTuning = [];\n\t\tfor (var iii = 0; iii < tuning.length; iii++) {\n\t\t\tvar curNote = new TabNote(tuning[iii]);\n\t\t\tfor (var jjj = 0; jjj < self.capo; jjj++) {\n\t\t\t\tcurNote = curNote.nextNote();\n\t\t\t}\n\t\t\tcapoTuning[iii] = curNote.emit();\n\t\t}\n\t}\n\treturn capoTuning;\n}\n\nfunction buildPatterns(self) {\n\tvar strings = [];\n\tvar tuning = self.tuning;\n\tif (self.capo > 0) {\n\t\ttuning = self.capoTuning;\n\t}\n\tvar pos = tuning.length - 1;\n\tfor (var iii = 0; iii < tuning.length; iii++) {\n\t\tvar nextNote = self.highestNote; // highest handled note\n\t\tif (iii != tuning.length - 1) {\n\t\t\tnextNote = tuning[iii + 1];\n\t\t}\n\t\tvar stringNotes = tabNotes(tuning[iii], nextNote);\n\t\tif (stringNotes.error) {\n\t\t\treturn stringNotes;\n\t\t}\n\t\tstrings[pos--] = stringNotes;\n\t}\n\treturn strings;\n}\n\n\nfunction buildSecond(first) {\n\tvar seconds = [];\n\tseconds[0] = [];\n\tvar strings = first.strings;\n\tfor (var iii = 1; iii < strings.length; iii++) {\n\t\tseconds[iii] = strings[iii - 1];\n\t}\n\treturn seconds;\n}\n\nfunction sameString(self, chord) {\n\tfor (var jjjj = 0; jjjj < chord.length - 1; jjjj++) {\n\t\tvar curPos = chord[jjjj];\n\t\tvar nextPos = chord[jjjj + 1];\n\t\tif (curPos.str == nextPos.str) {\n\t\t\t// same String\n\t\t\t// => change lower pos \n\t\t\tif (curPos.str == self.strings.length - 1) {\n\t\t\t\t// Invalid tab Chord position for instrument\n\t\t\t\tcurPos.num = \"?\";\n\t\t\t\tnextPos.num = \"?\";\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// change lower pitch on lowest string\n\t\t\tif (nextPos.num < curPos.num) {\n\t\t\t\tnextPos.str++;\n\t\t\t\tnextPos = noteToNumber(self,\n\t\t\t\t\tnextPos.note,\n\t\t\t\t\tnextPos.str,\n\t\t\t\t\tself.secondPos,\n\t\t\t\t\tself.strings[nextPos.str].length\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tcurPos.str++;\n\t\t\t\tcurPos = noteToNumber(self,\n\t\t\t\t\tcurPos.note,\n\t\t\t\t\tcurPos.str,\n\t\t\t\t\tself.secondPos,\n\t\t\t\t\tself.strings[curPos.str].length\n\t\t\t\t);\n\t\t\t}\n\t\t\t// update table\n\t\t\tchord[jjjj] = curPos;\n\t\t\tchord[jjjj + 1] = nextPos;\n\t\t}\n\t}\n\treturn null;\n}\n\nfunction handleChordNotes(self, notes) {\n\tvar retNotes = [];\n\tfor (var iiii = 0; iiii < notes.length; iiii++) {\n\t\tif (notes[iiii].endTie)\n\t\t\tcontinue;\n\t\tvar note = new TabNote(notes[iiii].name, self.clefTranspose);\n\t\tnote.checkKeyAccidentals(self.accidentals, self.measureAccidentals)\n\t\tvar curPos = toNumber(self, note);\n\t\tretNotes.push(curPos);\n\t}\n\tsameString(self, retNotes);\n\treturn retNotes;\n}\n\nfunction noteToNumber(self, note, stringNumber, secondPosition, firstSize) {\n\tvar strings = self.strings;\n\tnote.checkKeyAccidentals(self.accidentals, self.measureAccidentals);\n\tif (secondPosition) {\n\t\tstrings = secondPosition;\n\t}\n\tvar noteName = note.emitNoAccidentals();\n\tvar num = strings[stringNumber].indexOf(noteName);\n\tvar acc = note.acc;\n\tif (num != -1) {\n\t\tif (secondPosition) {\n\t\t\tnum += firstSize;\n\t\t}\n\t\tif ((note.isFlat || note.acc == -1) && (num == 0)) {\n\t\t\t// flat on 0 pos => previous string 7th position\n\t\t\tvar noteEquiv = note.getAccidentalEquiv();\n\t\t\tstringNumber++;\n\t\t\tnum = strings[stringNumber].indexOf(noteEquiv.emit());\n\t\t\tacc = 0;\n\t\t}\n\t\treturn {\n\t\t\tnum: (num + acc),\n\t\t\tstr: stringNumber,\n\t\t\tnote: note\n\t\t};\n\t}\n\treturn null;\n}\n\nfunction toNumber(self, note) {\n\tif (note.isAltered || note.natural) {\n\t\tvar acc;\n\t\tif (note.isFlat) {\n\t\t\tif (note.isDouble)\n\t\t\t\tacc = \"__\"\n\t\t\telse\n\t\t\t\tacc = \"_\"\n\t\t} else if (note.isSharp) {\n\t\t\tif (note.isDouble)\n\t\t\t\tacc = \"^^\"\n\t\t\telse\n\t\t\t\tacc = \"^\"\n\t\t} else if (note.natural)\n\t\t\tacc = \"=\"\n\t\tself.measureAccidentals[note.name.toUpperCase()] = acc\n\t}\n\tfor (var i = self.stringPitches.length - 1; i >= 0; i--) {\n\t\tif (note.pitch + note.pitchAltered >= self.stringPitches[i]) {\n\t\t\tvar num = note.pitch + note.pitchAltered - self.stringPitches[i]\n\t\t\tif (note.quarter === '^') num -= 0.5\n\t\t\telse if (note.quarter === \"v\") num += 0.5\n\t\t\treturn {\n\t\t\t\tnum: Math.round(num),\n\t\t\t\tstr: self.stringPitches.length - 1 - i, // reverse the strings because string 0 is on the bottom\n\t\t\t\tnote: note\n\t\t\t}\n\t\t}\n\t}\n\treturn {\n\t\tnum: \"?\",\n\t\tstr: self.stringPitches.length - 1,\n\t\tnote: note,\n\t};\n}\n\nStringPatterns.prototype.stringToPitch = function (stringNumber) {\n\tvar startingPitch = 5.3;\n\tvar bottom = this.strings.length - 1;\n\treturn startingPitch + ((bottom - stringNumber) * this.linePitch);\n};\n\nfunction invalidNumber(retNotes, note) {\n\tvar number = {\n\t\tnum: \"?\",\n\t\tstr: 0,\n\t\tnote: note\n\t};\n\tretNotes.push(number);\n\tretNotes.error = note.emit() + ': unexpected note for instrument';\n}\n\nStringPatterns.prototype.notesToNumber = function (notes, graces) {\n\tvar note;\n\tvar number;\n\tvar error = null;\n\tvar retNotes = null;\n\tif (notes) {\n\t\tretNotes = [];\n\t\tif (notes.length > 1) {\n\t\t\tretNotes = handleChordNotes(this, notes);\n\t\t\tif (retNotes.error) {\n\t\t\t\terror = retNotes.error;\n\t\t\t}\n\t\t} else {\n\t\t\tif (!notes[0].endTie) {\n\t\t\t\tnote = new TabNote(notes[0].name, this.clefTranspose);\n\t\t\t\tnote.checkKeyAccidentals(this.accidentals, this.measureAccidentals)\n\t\t\t\tnumber = toNumber(this, note);\n\t\t\t\tif (number) {\n\t\t\t\t\tretNotes.push(number);\n\t\t\t\t} else {\n\t\t\t\t\tinvalidNumber(retNotes, note);\n\t\t\t\t\terror = retNotes.error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (error) return retNotes;\n\tvar retGraces = null;\n\tif (graces) {\n\t\tretGraces = [];\n\t\tfor (var iiii = 0; iiii < graces.length; iiii++) {\n\t\t\tnote = new TabNote(graces[iiii].name, this.clefTranspose);\n\t\t\tnote.checkKeyAccidentals(this.accidentals, this.measureAccidentals)\n\t\t\tnumber = toNumber(this, note);\n\t\t\tif (number) {\n\t\t\t\tretGraces.push(number);\n\t\t\t} else {\n\t\t\t\tinvalidNumber(retGraces, note);\n\t\t\t\terror = retNotes.error;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tnotes: retNotes,\n\t\tgraces: retGraces,\n\t\terror: error\n\t};\n};\n\nStringPatterns.prototype.toString = function () {\n\tvar arr = []\n\tfor (var i = 0; i < this.tuning.length; i++) {\n\t\tvar str = this.tuning[i].replaceAll(',', '').replaceAll(\"'\", '').toUpperCase();\n\t\tif (str[0] === '_') str = str[1] + 'b '\n\t\telse if (str[0] === '^') str = str[1] + \"# \"\n\t\tarr.push(str)\n\t}\n\treturn arr.join('');\n};\n\nStringPatterns.prototype.tabInfos = function (plugin) {\n\tvar name = plugin.params.label;\n\tif (name) {\n\t\tvar tunePos = name.indexOf('%T');\n\t\tvar tuning = \"\";\n\t\tif (tunePos != -1) {\n\t\t\ttuning = this.toString();\n\t\t\tif (plugin.capo > 0) {\n\t\t\t\ttuning += ' capo:' + plugin.capo;\n\t\t\t}\n\t\t\tname = name.replace('%T', tuning);\n\t\t}\n\t\treturn name;\n\t}\n\treturn '';\n};\n\n// MAE 27 Nov 2023\nStringPatterns.prototype.suppress = function (plugin) {\n\tvar suppress = plugin.params.suppress;\n\tif (suppress) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n// MAE 27 Nov 2023 End\n\n/**\n * Common patterns for all string instruments\n * @param {} plugin\n * @param {} tuning\n * @param {*} capo\n * @param {*} highestNote \n */\nfunction StringPatterns(plugin) {\n\t//console.log(\"INIT StringPatterns constructor\")\n\tvar tuning = plugin.tuning;\n\tvar capo = plugin.capo;\n\tvar highestNote = plugin.params.highestNote;\n\tthis.linePitch = plugin.linePitch;\n\tthis.highestNote = \"a'\";\n\tif (highestNote) {\n\t\t// override default\n\t\tthis.highestNote = highestNote;\n\t}\n\tthis.measureAccidentals = {}\n\tthis.capo = 0;\n\tif (capo) {\n\t\tthis.capo = parseInt(capo, 10);\n\t}\n\tthis.transpose = plugin.transpose ? plugin.transpose : 0\n\tthis.tuning = tuning;\n\tthis.stringPitches = []\n\tfor (var i = 0; i < this.tuning.length; i++) {\n\t\tvar pitch = noteToMidi(this.tuning[i]) + this.capo\n\t\tthis.stringPitches.push(pitch)\n\t}\n\tif (this.capo > 0) {\n\t\tthis.capoTuning = buildCapo(this);\n\t}\n\tthis.strings = buildPatterns(this);\n\tif (this.strings.error) {\n\t\tplugin.setError(this.strings.error);\n\t\tplugin.inError = true;\n\t\treturn;\n\t}\n\t// second position pattern per string\n\tthis.secondPos = buildSecond(this);\n}\n\n\n\nmodule.exports = StringPatterns;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/tablatures/instruments/string-patterns.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/tablatures/instruments/string-tablature.js":
/*!***************************************************************************!*\
  !*** ./node_modules/abcjs/src/tablatures/instruments/string-tablature.js ***!
  \***************************************************************************/
/***/ ((module) => {

eval("\n/**\n * Layout tablature informations for draw\n * @param {*} numLines \n * @param {*} lineSpace \n */\n\nfunction StringTablature(numLines, lineSpace) {\n\t//console.log(\"INIT StringTablature constructor\")\n\tthis.numLines = numLines;\n\tthis.lineSpace = lineSpace;\n\tthis.verticalSize = this.numLines * this.lineSpace;\n\tvar pitch = 3;\n\tthis.bar = {\n\t\tpitch: pitch,\n\t\tpitch2: lineSpace * numLines,\n\t\theight: 5,\n\t};\n}\n\n/**\n * return true if current line should not produce a tab\n * @param {} line \n */\nStringTablature.prototype.bypass = function (line) {\n\t//console.log(\"RENDER StringTablature bypass\")\n\tvar voices = line.staffGroup.voices;\n\tif (voices.length > 0) {\n\t\tif (voices[0].isPercussion) return true;\n\t}\n\treturn false;\n};\n\n\nStringTablature.prototype.setRelative = function (child, relative, first) {\n\t//console.log(\"RENDER StringTablature setRelative\")\n\tswitch (child.type) {\n\t\tcase 'bar':\n\t\t\trelative.pitch = this.bar.pitch;\n\t\t\trelative.pitch2 = this.bar.pitch2;\n\t\t\trelative.height = this.height;\n\t\t\tbreak;\n\t\tcase 'symbol':\n\t\t\tvar top = this.bar.pitch2 / 2;\n\t\t\tif (child.name == 'dots.dot') {\n\t\t\t\tif (first) {\n\t\t\t\t\trelative.pitch = top;\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\trelative.pitch = top + this.lineSpace;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn first;\n};\n\nmodule.exports = StringTablature;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3RhYmxhdHVyZXMvaW5zdHJ1bWVudHMvc3RyaW5nLXRhYmxhdHVyZS5qcyIsIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLFdBQVcsR0FBRztBQUNkOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3RhYmxhdHVyZXMvaW5zdHJ1bWVudHMvc3RyaW5nLXRhYmxhdHVyZS5qcz8wNzFkIl0sInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBMYXlvdXQgdGFibGF0dXJlIGluZm9ybWF0aW9ucyBmb3IgZHJhd1xuICogQHBhcmFtIHsqfSBudW1MaW5lcyBcbiAqIEBwYXJhbSB7Kn0gbGluZVNwYWNlIFxuICovXG5cbmZ1bmN0aW9uIFN0cmluZ1RhYmxhdHVyZShudW1MaW5lcywgbGluZVNwYWNlKSB7XG5cdC8vY29uc29sZS5sb2coXCJJTklUIFN0cmluZ1RhYmxhdHVyZSBjb25zdHJ1Y3RvclwiKVxuXHR0aGlzLm51bUxpbmVzID0gbnVtTGluZXM7XG5cdHRoaXMubGluZVNwYWNlID0gbGluZVNwYWNlO1xuXHR0aGlzLnZlcnRpY2FsU2l6ZSA9IHRoaXMubnVtTGluZXMgKiB0aGlzLmxpbmVTcGFjZTtcblx0dmFyIHBpdGNoID0gMztcblx0dGhpcy5iYXIgPSB7XG5cdFx0cGl0Y2g6IHBpdGNoLFxuXHRcdHBpdGNoMjogbGluZVNwYWNlICogbnVtTGluZXMsXG5cdFx0aGVpZ2h0OiA1LFxuXHR9O1xufVxuXG4vKipcbiAqIHJldHVybiB0cnVlIGlmIGN1cnJlbnQgbGluZSBzaG91bGQgbm90IHByb2R1Y2UgYSB0YWJcbiAqIEBwYXJhbSB7fSBsaW5lIFxuICovXG5TdHJpbmdUYWJsYXR1cmUucHJvdG90eXBlLmJ5cGFzcyA9IGZ1bmN0aW9uIChsaW5lKSB7XG5cdC8vY29uc29sZS5sb2coXCJSRU5ERVIgU3RyaW5nVGFibGF0dXJlIGJ5cGFzc1wiKVxuXHR2YXIgdm9pY2VzID0gbGluZS5zdGFmZkdyb3VwLnZvaWNlcztcblx0aWYgKHZvaWNlcy5sZW5ndGggPiAwKSB7XG5cdFx0aWYgKHZvaWNlc1swXS5pc1BlcmN1c3Npb24pIHJldHVybiB0cnVlO1xuXHR9XG5cdHJldHVybiBmYWxzZTtcbn07XG5cblxuU3RyaW5nVGFibGF0dXJlLnByb3RvdHlwZS5zZXRSZWxhdGl2ZSA9IGZ1bmN0aW9uIChjaGlsZCwgcmVsYXRpdmUsIGZpcnN0KSB7XG5cdC8vY29uc29sZS5sb2coXCJSRU5ERVIgU3RyaW5nVGFibGF0dXJlIHNldFJlbGF0aXZlXCIpXG5cdHN3aXRjaCAoY2hpbGQudHlwZSkge1xuXHRcdGNhc2UgJ2Jhcic6XG5cdFx0XHRyZWxhdGl2ZS5waXRjaCA9IHRoaXMuYmFyLnBpdGNoO1xuXHRcdFx0cmVsYXRpdmUucGl0Y2gyID0gdGhpcy5iYXIucGl0Y2gyO1xuXHRcdFx0cmVsYXRpdmUuaGVpZ2h0ID0gdGhpcy5oZWlnaHQ7XG5cdFx0XHRicmVhaztcblx0XHRjYXNlICdzeW1ib2wnOlxuXHRcdFx0dmFyIHRvcCA9IHRoaXMuYmFyLnBpdGNoMiAvIDI7XG5cdFx0XHRpZiAoY2hpbGQubmFtZSA9PSAnZG90cy5kb3QnKSB7XG5cdFx0XHRcdGlmIChmaXJzdCkge1xuXHRcdFx0XHRcdHJlbGF0aXZlLnBpdGNoID0gdG9wO1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRyZWxhdGl2ZS5waXRjaCA9IHRvcCArIHRoaXMubGluZVNwYWNlO1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRicmVhaztcblx0fVxuXHRyZXR1cm4gZmlyc3Q7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFN0cmluZ1RhYmxhdHVyZTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/tablatures/instruments/string-tablature.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/tablatures/instruments/tab-note.js":
/*!*******************************************************************!*\
  !*** ./node_modules/abcjs/src/tablatures/instruments/tab-note.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var { noteToMidi, midiToNote } = __webpack_require__(/*! ../../synth/note-to-midi */ \"(ssr)/./node_modules/abcjs/src/synth/note-to-midi.js\");\n\n/**\n * \n * Note structure for Tabs\n * \n */\n\n\nfunction TabNote(note, clefTranspose) {\n\t//console.log(\"INIT/RENDER TabNote constructor\")\n\tvar pitch = noteToMidi(note)\n\tif (clefTranspose)\n\t\tpitch += clefTranspose\n\tvar newNote = midiToNote(pitch);\n\tvar isFlat = false;\n\tvar isSharp = false;\n\tvar isAltered = false;\n\tvar natural = null;\n\tvar quarter = null;\n\tvar isDouble = false;\n\tvar acc = 0;\n\n\tif (note.startsWith('_')) {\n\t\tisFlat = true;\n\t\tacc = -1;\n\t\t// check quarter flat\n\t\tif (note[1] == '/') {\n\t\t\tisFlat = false;\n\t\t\tquarter = \"v\";\n\t\t\tacc = 0;\n\t\t} else if (note[1] == '_') {\n\t\t\t// double flat\n\t\t\tisDouble = true;\n\t\t\tacc -= 1;\n\t\t}\n\t} else if (note.startsWith('^')) {\n\t\tisSharp = true;\n\t\tacc = +1;\n\t\t// check quarter sharp\n\t\tif (note[1] == '/') {\n\t\t\tisSharp = false;\n\t\t\tquarter = \"^\";\n\t\t\tacc = 0;\n\t\t} else if (note[1] == '^') {\n\t\t\t// double sharp\n\t\t\tisDouble = true;\n\t\t\tacc += 1;\n\t\t}\n\t} else if (note.startsWith('=')) {\n\t\tnatural = true;\n\t\tacc = 0;\n\t}\n\tisAltered = isFlat || isSharp || (quarter != null);\n\tif (isAltered || natural) {\n\t\tif ((quarter != null) || (isDouble)) {\n\t\t\tnewNote = note.slice(2);\n\t\t} else {\n\t\t\tnewNote = note.slice(1);\n\t\t}\n\t}\n\tvar hasComma = (newNote.match(/,/g) || []).length;\n\tvar hasQuote = (newNote.match(/'/g) || []).length;\n\n\tthis.pitch = pitch\n\tthis.pitchAltered = 0\n\tthis.name = newNote;\n\tthis.acc = acc;\n\tthis.isSharp = isSharp;\n\tthis.isKeySharp = false;\n\tthis.isDouble = isDouble;\n\tthis.isAltered = isAltered;\n\tthis.isFlat = isFlat;\n\tthis.isKeyFlat = false;\n\tthis.natural = natural;\n\tthis.quarter = quarter;\n\tthis.isLower = (this.name == this.name.toLowerCase());\n\tthis.name = this.name[0].toUpperCase();\n\tthis.hasComma = hasComma;\n\tthis.isQuoted = hasQuote;\n}\n\nfunction cloneNote(self) {\n\tvar newNote = self.name;\n\tvar newTabNote = new TabNote(newNote);\n\tnewTabNote.pitch = self.pitch;\n\tnewTabNote.hasComma = self.hasComma;\n\tnewTabNote.isLower = self.isLower;\n\tnewTabNote.isQuoted = self.isQuoted;\n\tnewTabNote.isSharp = self.isSharp;\n\tnewTabNote.isKeySharp = self.isKeySharp;\n\tnewTabNote.isFlat = self.isFlat;\n\tnewTabNote.isKeyFlat = self.isKeyFlat;\n\treturn newTabNote;\n}\nTabNote.prototype.sameNoteAs = function (note) {\n\t//console.log(\"INIT TabNote sameNoteAs\")\n\treturn note.pitch === this.pitch\n};\n\nTabNote.prototype.isLowerThan = function (note) {\n\t//console.log(\"INIT TabNote isLowerThan\")\n\treturn note.pitch > this.pitch\n};\n\nTabNote.prototype.checkKeyAccidentals = function (accidentals, measureAccidentals) {\n\t//console.log(\"RENDER TabNote checkKeyAccidentals\")\n\tif (this.isAltered || this.natural)\n\t\treturn\n\tif (measureAccidentals[this.name.toUpperCase()]) {\n\t\tswitch (measureAccidentals[this.name.toUpperCase()]) {\n\t\t\tcase \"__\": this.acc = -2; this.pitchAltered = -2; return;\n\t\t\tcase \"_\": this.acc = -1; this.pitchAltered = -1; return;\n\t\t\tcase \"=\": this.acc = 0; this.pitchAltered = 0; return;\n\t\t\tcase \"^\": this.acc = 1; this.pitchAltered = 1; return;\n\t\t\tcase \"^^\": this.acc = 2; this.pitchAltered = 2; return;\n\t\t}\n\t} else if (accidentals) {\n\t\tvar curNote = this.name;\n\t\tfor (var iii = 0; iii < accidentals.length; iii++) {\n\t\t\tvar curAccidentals = accidentals[iii];\n\t\t\tif (curNote == curAccidentals.note.toUpperCase()) {\n\t\t\t\tif (curAccidentals.acc == 'flat') {\n\t\t\t\t\tthis.acc = -1;\n\t\t\t\t\tthis.isKeyFlat = true;\n\t\t\t\t\tthis.pitchAltered = -1\n\t\t\t\t}\n\t\t\t\tif (curAccidentals.acc == 'sharp') {\n\t\t\t\t\tthis.acc = +1;\n\t\t\t\t\tthis.isKeySharp = true;\n\t\t\t\t\tthis.pitchAltered = 1\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nTabNote.prototype.getAccidentalEquiv = function () {\n\t//console.log(\"TabNote getAccidentalEquiv\")\n\tvar cloned = cloneNote(this);\n\tif (cloned.isSharp || cloned.isKeySharp) {\n\t\tcloned = cloned.nextNote();\n\t\tcloned.isFlat = true;\n\t\tcloned.isSharp = false;\n\t\tcloned.isKeySharp = false;\n\t} else if (cloned.isFlat || cloned.isKeyFlat) {\n\t\tcloned = cloned.prevNote();\n\t\tcloned.isSharp = true;\n\t\tcloned.isFlat = false;\n\t\tcloned.isKeyFlat = false;\n\t}\n\treturn cloned;\n};\n\n\nTabNote.prototype.nextNote = function () {\n\t//console.log(\"INIT TabNote nextNote\")\n\tvar note = midiToNote(this.pitch + 1 + this.pitchAltered)\n\treturn new TabNote(note)\n};\n\nTabNote.prototype.prevNote = function () {\n\t//console.log(\"TabNote prevNote\")\n\tvar note = midiToNote(this.pitch - 1 + this.pitchAltered)\n\treturn new TabNote(note)\n};\n\nTabNote.prototype.emitNoAccidentals = function () {\n\t//console.log(\"TabNote emitNoAccidentals\")\n\tvar returned = this.name;\n\tif (this.isLower) {\n\t\treturned = returned.toLowerCase();\n\t}\n\tfor (var ii = 0; ii < this.isQuoted; ii++) {\n\t\treturned += \"'\";\n\t}\n\tfor (var jj = 0; jj < this.hasComma; jj++) {\n\t\treturned += \",\";\n\t}\n\treturn returned;\n};\n\nTabNote.prototype.emit = function () {\n\t//console.log(\"INIT/RENDER TabNote emit\")\n\tvar returned = this.name;\n\tif (this.isSharp || this.isKeySharp) {\n\t\treturned = '^' + returned;\n\t\tif (this.isDouble) {\n\t\t\treturned = '^' + returned;\n\t\t}\n\t}\n\tif (this.isFlat || this.isKeyFlat) {\n\t\treturned = '_' + returned;\n\t\tif (this.isDouble) {\n\t\t\treturned = '_' + returned;\n\t\t}\n\t}\n\tif (this.quarter) {\n\t\tif (this.quarter == \"^\") {\n\t\t\treturned = \"^/\" + returned;\n\t\t} else {\n\t\t\treturned = \"_/\" + returned;\n\t\t}\n\t}\n\tif (this.natural) {\n\t\treturned = '=' + returned;\n\t}\n\tfor (var ii = 1; ii <= this.hasComma; ii++) {\n\t\treturned += ',';\n\t}\n\n\tif (this.isLower) {\n\t\treturned = returned.toLowerCase();\n\t\tfor (var jj = 1; jj <= this.isQuoted; jj++) {\n\t\t\treturned += \"'\";\n\t\t}\n\t}\n\treturn returned;\n};\n\nmodule.exports = TabNote\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/tablatures/instruments/tab-note.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/tablatures/instruments/tab-notes.js":
/*!********************************************************************!*\
  !*** ./node_modules/abcjs/src/tablatures/instruments/tab-notes.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar TabNote = __webpack_require__(/*! ./tab-note */ \"(ssr)/./node_modules/abcjs/src/tablatures/instruments/tab-note.js\");\n\nvar notes = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\n\nfunction tabNotes(fromNote, toNote) {\n\t//console.log(\"INIT TabNotes\")\n\tvar fromN = new TabNote(fromNote);\n\tvar toN = new TabNote(toNote);\n\t// check that toN is not lower than fromN\n\tif (toN.isLowerThan(fromN)) {\n\t\tvar from = fromN.emit();\n\t\tvar tn = toN.emit();\n\t\treturn {\n\t\t\terror: 'Invalid string Instrument tuning : ' +\n\t\t\t\ttn + ' string lower than ' + from + ' string'\n\t\t};\n\t}\n\tvar buildReturned = [];\n\tvar startIndex = notes.indexOf(fromN.name);\n\tvar toIndex = notes.indexOf(toN.name);\n\tif ((startIndex == -1) || (toIndex == -1)) {\n\t\treturn buildReturned;\n\t}\n\tvar finished = false;\n\twhile (!finished) {\n\t\tbuildReturned.push(fromN.emit());\n\t\tfromN = fromN.nextNote();\n\t\tif (fromN.sameNoteAs(toN)) {\n\t\t\tfinished = true;\n\t\t}\n\t}\n\treturn buildReturned;\n}\n\nmodule.exports = tabNotes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3RhYmxhdHVyZXMvaW5zdHJ1bWVudHMvdGFiLW5vdGVzLmpzIiwibWFwcGluZ3MiOiI7QUFDQSxjQUFjLG1CQUFPLENBQUMscUZBQVk7O0FBRWxDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvdGFibGF0dXJlcy9pbnN0cnVtZW50cy90YWItbm90ZXMuanM/ZWM0OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBUYWJOb3RlID0gcmVxdWlyZSgnLi90YWItbm90ZScpO1xuXG52YXIgbm90ZXMgPSBbJ0EnLCAnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnXTtcblxuZnVuY3Rpb24gdGFiTm90ZXMoZnJvbU5vdGUsIHRvTm90ZSkge1xuXHQvL2NvbnNvbGUubG9nKFwiSU5JVCBUYWJOb3Rlc1wiKVxuXHR2YXIgZnJvbU4gPSBuZXcgVGFiTm90ZShmcm9tTm90ZSk7XG5cdHZhciB0b04gPSBuZXcgVGFiTm90ZSh0b05vdGUpO1xuXHQvLyBjaGVjayB0aGF0IHRvTiBpcyBub3QgbG93ZXIgdGhhbiBmcm9tTlxuXHRpZiAodG9OLmlzTG93ZXJUaGFuKGZyb21OKSkge1xuXHRcdHZhciBmcm9tID0gZnJvbU4uZW1pdCgpO1xuXHRcdHZhciB0biA9IHRvTi5lbWl0KCk7XG5cdFx0cmV0dXJuIHtcblx0XHRcdGVycm9yOiAnSW52YWxpZCBzdHJpbmcgSW5zdHJ1bWVudCB0dW5pbmcgOiAnICtcblx0XHRcdFx0dG4gKyAnIHN0cmluZyBsb3dlciB0aGFuICcgKyBmcm9tICsgJyBzdHJpbmcnXG5cdFx0fTtcblx0fVxuXHR2YXIgYnVpbGRSZXR1cm5lZCA9IFtdO1xuXHR2YXIgc3RhcnRJbmRleCA9IG5vdGVzLmluZGV4T2YoZnJvbU4ubmFtZSk7XG5cdHZhciB0b0luZGV4ID0gbm90ZXMuaW5kZXhPZih0b04ubmFtZSk7XG5cdGlmICgoc3RhcnRJbmRleCA9PSAtMSkgfHwgKHRvSW5kZXggPT0gLTEpKSB7XG5cdFx0cmV0dXJuIGJ1aWxkUmV0dXJuZWQ7XG5cdH1cblx0dmFyIGZpbmlzaGVkID0gZmFsc2U7XG5cdHdoaWxlICghZmluaXNoZWQpIHtcblx0XHRidWlsZFJldHVybmVkLnB1c2goZnJvbU4uZW1pdCgpKTtcblx0XHRmcm9tTiA9IGZyb21OLm5leHROb3RlKCk7XG5cdFx0aWYgKGZyb21OLnNhbWVOb3RlQXModG9OKSkge1xuXHRcdFx0ZmluaXNoZWQgPSB0cnVlO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gYnVpbGRSZXR1cm5lZDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB0YWJOb3RlcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/tablatures/instruments/tab-notes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/tablatures/instruments/tab-string.js":
/*!*********************************************************************!*\
  !*** ./node_modules/abcjs/src/tablatures/instruments/tab-string.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar StringTablature = __webpack_require__(/*! ./string-tablature */ \"(ssr)/./node_modules/abcjs/src/tablatures/instruments/string-tablature.js\");\nvar tabRenderer = __webpack_require__(/*! ../render/tab-renderer */ \"(ssr)/./node_modules/abcjs/src/tablatures/render/tab-renderer.js\");\nvar StringPatterns = __webpack_require__(/*! ./string-patterns */ \"(ssr)/./node_modules/abcjs/src/tablatures/instruments/string-patterns.js\");\n\n\n/**\n * upon init mainly store provided instances for later usage\n * @param {*} abcTune  the parsed tune AST tree\n * @param {*} tuneNumber  the parsed tune AST tree\n * @param {*} params  complementary args provided to Tablature Plugin\n */\nPlugin.prototype.init = function (abcTune, tuneNumber, params, tabSettings) {\n\t//console.log(\"INIT AbcStringTab Plugin.init\")\n\tthis.tune = abcTune;\n\tthis.params = params;\n\tthis.tuneNumber = tuneNumber;\n\tthis.inError = false;\n\tthis.abcTune = abcTune;\n\tthis.linePitch = 3;\n\tthis.nbLines = tabSettings.defaultTuning.length;\n\tthis.isTabBig = tabSettings.isTabBig;\n\tthis.tabSymbolOffset = tabSettings.tabSymbolOffset;\n\tthis.capo = params.capo;\n\tthis.transpose = params.visualTranspose;\n\tthis.hideTabSymbol = params.hideTabSymbol;\n\tthis.tablature = new StringTablature(this.nbLines, this.linePitch);\n\tvar tuning = params.tuning;\n\tif (!tuning) {\n\t\ttuning = tabSettings.defaultTuning;\n\t}\n\tthis.tuning = tuning;\n\tthis.semantics = new StringPatterns(this);\n};\n\nPlugin.prototype.setError = function (error) {\n\t//console.log(\"Plugin setError\")\n\tif (error) {\n\t\tthis.error = error;\n\t\tthis.inError = true;\n\t\tif (this.tune.warnings) {\n\t\t\tthis.tune.warnings.push(error);\n\t\t} else {\n\t\t\tthis.tune.warnings = [error];\n\t\t}\n\t}\n};\n\nPlugin.prototype.render = function (renderer, line, staffIndex) {\n\t//console.log(\"RENDER AbcStringTab Plugin.render\")\n\tif (this.inError) return;\n\tif (this.tablature.bypass(line)) return;\n\ttabRenderer(this, renderer, line, staffIndex);\n};\n\nfunction Plugin() { }\n\n//\n// Tablature plugin definition\n//\nvar AbcStringTab = function () {\n\treturn { name: 'StringTab', tablature: Plugin };\n};\n\nmodule.exports = AbcStringTab;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3RhYmxhdHVyZXMvaW5zdHJ1bWVudHMvdGFiLXN0cmluZy5qcyIsIm1hcHBpbmdzIjoiO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMscUdBQW9CO0FBQ2xELGtCQUFrQixtQkFBTyxDQUFDLGdHQUF3QjtBQUNsRCxxQkFBcUIsbUJBQU8sQ0FBQyxtR0FBbUI7OztBQUdoRDtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsV0FBVyxHQUFHO0FBQ2QsV0FBVyxHQUFHO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvdGFibGF0dXJlcy9pbnN0cnVtZW50cy90YWItc3RyaW5nLmpzPzlmMTEiXSwic291cmNlc0NvbnRlbnQiOlsiXG52YXIgU3RyaW5nVGFibGF0dXJlID0gcmVxdWlyZSgnLi9zdHJpbmctdGFibGF0dXJlJyk7XG52YXIgdGFiUmVuZGVyZXIgPSByZXF1aXJlKCcuLi9yZW5kZXIvdGFiLXJlbmRlcmVyJyk7XG52YXIgU3RyaW5nUGF0dGVybnMgPSByZXF1aXJlKCcuL3N0cmluZy1wYXR0ZXJucycpO1xuXG5cbi8qKlxuICogdXBvbiBpbml0IG1haW5seSBzdG9yZSBwcm92aWRlZCBpbnN0YW5jZXMgZm9yIGxhdGVyIHVzYWdlXG4gKiBAcGFyYW0geyp9IGFiY1R1bmUgIHRoZSBwYXJzZWQgdHVuZSBBU1QgdHJlZVxuICogQHBhcmFtIHsqfSB0dW5lTnVtYmVyICB0aGUgcGFyc2VkIHR1bmUgQVNUIHRyZWVcbiAqIEBwYXJhbSB7Kn0gcGFyYW1zICBjb21wbGVtZW50YXJ5IGFyZ3MgcHJvdmlkZWQgdG8gVGFibGF0dXJlIFBsdWdpblxuICovXG5QbHVnaW4ucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoYWJjVHVuZSwgdHVuZU51bWJlciwgcGFyYW1zLCB0YWJTZXR0aW5ncykge1xuXHQvL2NvbnNvbGUubG9nKFwiSU5JVCBBYmNTdHJpbmdUYWIgUGx1Z2luLmluaXRcIilcblx0dGhpcy50dW5lID0gYWJjVHVuZTtcblx0dGhpcy5wYXJhbXMgPSBwYXJhbXM7XG5cdHRoaXMudHVuZU51bWJlciA9IHR1bmVOdW1iZXI7XG5cdHRoaXMuaW5FcnJvciA9IGZhbHNlO1xuXHR0aGlzLmFiY1R1bmUgPSBhYmNUdW5lO1xuXHR0aGlzLmxpbmVQaXRjaCA9IDM7XG5cdHRoaXMubmJMaW5lcyA9IHRhYlNldHRpbmdzLmRlZmF1bHRUdW5pbmcubGVuZ3RoO1xuXHR0aGlzLmlzVGFiQmlnID0gdGFiU2V0dGluZ3MuaXNUYWJCaWc7XG5cdHRoaXMudGFiU3ltYm9sT2Zmc2V0ID0gdGFiU2V0dGluZ3MudGFiU3ltYm9sT2Zmc2V0O1xuXHR0aGlzLmNhcG8gPSBwYXJhbXMuY2Fwbztcblx0dGhpcy50cmFuc3Bvc2UgPSBwYXJhbXMudmlzdWFsVHJhbnNwb3NlO1xuXHR0aGlzLmhpZGVUYWJTeW1ib2wgPSBwYXJhbXMuaGlkZVRhYlN5bWJvbDtcblx0dGhpcy50YWJsYXR1cmUgPSBuZXcgU3RyaW5nVGFibGF0dXJlKHRoaXMubmJMaW5lcywgdGhpcy5saW5lUGl0Y2gpO1xuXHR2YXIgdHVuaW5nID0gcGFyYW1zLnR1bmluZztcblx0aWYgKCF0dW5pbmcpIHtcblx0XHR0dW5pbmcgPSB0YWJTZXR0aW5ncy5kZWZhdWx0VHVuaW5nO1xuXHR9XG5cdHRoaXMudHVuaW5nID0gdHVuaW5nO1xuXHR0aGlzLnNlbWFudGljcyA9IG5ldyBTdHJpbmdQYXR0ZXJucyh0aGlzKTtcbn07XG5cblBsdWdpbi5wcm90b3R5cGUuc2V0RXJyb3IgPSBmdW5jdGlvbiAoZXJyb3IpIHtcblx0Ly9jb25zb2xlLmxvZyhcIlBsdWdpbiBzZXRFcnJvclwiKVxuXHRpZiAoZXJyb3IpIHtcblx0XHR0aGlzLmVycm9yID0gZXJyb3I7XG5cdFx0dGhpcy5pbkVycm9yID0gdHJ1ZTtcblx0XHRpZiAodGhpcy50dW5lLndhcm5pbmdzKSB7XG5cdFx0XHR0aGlzLnR1bmUud2FybmluZ3MucHVzaChlcnJvcik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMudHVuZS53YXJuaW5ncyA9IFtlcnJvcl07XG5cdFx0fVxuXHR9XG59O1xuXG5QbHVnaW4ucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIChyZW5kZXJlciwgbGluZSwgc3RhZmZJbmRleCkge1xuXHQvL2NvbnNvbGUubG9nKFwiUkVOREVSIEFiY1N0cmluZ1RhYiBQbHVnaW4ucmVuZGVyXCIpXG5cdGlmICh0aGlzLmluRXJyb3IpIHJldHVybjtcblx0aWYgKHRoaXMudGFibGF0dXJlLmJ5cGFzcyhsaW5lKSkgcmV0dXJuO1xuXHR0YWJSZW5kZXJlcih0aGlzLCByZW5kZXJlciwgbGluZSwgc3RhZmZJbmRleCk7XG59O1xuXG5mdW5jdGlvbiBQbHVnaW4oKSB7IH1cblxuLy9cbi8vIFRhYmxhdHVyZSBwbHVnaW4gZGVmaW5pdGlvblxuLy9cbnZhciBBYmNTdHJpbmdUYWIgPSBmdW5jdGlvbiAoKSB7XG5cdHJldHVybiB7IG5hbWU6ICdTdHJpbmdUYWInLCB0YWJsYXR1cmU6IFBsdWdpbiB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBBYmNTdHJpbmdUYWI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/tablatures/instruments/tab-string.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/tablatures/render/tab-absolute-elements.js":
/*!***************************************************************************!*\
  !*** ./node_modules/abcjs/src/tablatures/render/tab-absolute-elements.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Tablature Absolute elements factory\n */\nvar AbsoluteElement = __webpack_require__(/*! ../../write/creation/elements/absolute-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/absolute-element.js\");\nvar RelativeElement = __webpack_require__(/*! ../../write/creation/elements/relative-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/relative-element.js\");\n\nfunction isObject(a) { return a != null && a.constructor === Object; }\nfunction cloneObject(dest, src) {\n\tfor (var prop in src) {\n\t\tif (src.hasOwnProperty(prop)) {\n\t\t\tif (!(Array.isArray(src[prop]) || isObject(src[prop]))) {\n\t\t\t\tdest[prop] = src[prop];\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction cloneAbsolute(absSrc) {\n\tvar returned = new AbsoluteElement('', 0, 0, '', 0);\n\tcloneObject(returned, absSrc);\n\treturned.top = 0;\n\treturned.bottom = -1;\n\tif (absSrc.abcelem) {\n\t\treturned.abcelem = {};\n\t\tcloneObject(returned.abcelem, absSrc.abcelem);\n\t\tif (returned.abcelem.el_type === \"note\")\n\t\t\treturned.abcelem.el_type = 'tabNumber';\n\t}\n\t// TODO-PER: This fixes the classes because the element isn't created at the right time.\n\tabsSrc.cloned = returned\n\treturn returned;\n}\n\nfunction cloneAbsoluteAndRelatives(absSrc, plugin) {\n\tvar returned = cloneAbsolute(absSrc);\n\tif (plugin) {\n\t\tvar children = absSrc.children;\n\t\t// proceed with relative as well\n\t\tvar first = true;\n\t\tfor (var ii = 0; ii < children.length; ii++) {\n\t\t\tvar child = children[ii];\n\t\t\tvar relative = new RelativeElement('', 0, 0, 0, '');\n\t\t\tcloneObject(relative, child);\n\t\t\tfirst = plugin.tablature.setRelative(child, relative, first);\n\t\t\treturned.children.push(relative);\n\t\t}\n\t}\n\treturn returned;\n}\n\nfunction buildTabAbsolute(plugin, absX, relX) {\n\tvar tabIcon = 'tab.tiny';\n\tvar tabYPos = 7.5;\n\tif (plugin.isTabBig) {\n\t\ttabIcon = 'tab.big';\n\t\ttabYPos = 10;\n\t}\n\tvar element = {\n\t\tel_type: \"tab\",\n\t\ticon: tabIcon,\n\t\tYpos: tabYPos\n\t};\n\n\t// Offset the TAB symbol position if specified in the tab description\n\ttabYPos += plugin.tabSymbolOffset;\n\n\t// For tablature like whistle tab where you want the TAB symbol hidden\n\tif (!plugin.hideTabSymbol) {\n\n\t\tvar tabAbsolute = new AbsoluteElement(element, 0, 0, \"symbol\", 0);\n\t\ttabAbsolute.x = absX;\n\t\tvar tabRelative = new RelativeElement(tabIcon, 0, 0, 7.5, \"tab\");\n\t\ttabRelative.x = relX;\n\t\ttabAbsolute.children.push(tabRelative);\n\t\tif (tabAbsolute.abcelem.el_type == 'tab') {\n\t\t\ttabRelative.pitch = tabYPos;\n\t\t}\n\n\t}\n\treturn tabAbsolute;\n}\n\nfunction lyricsDim(abs) {\n\tif (abs.extra) {\n\t\tfor (var ii = 0; ii < abs.extra.length; ii++) {\n\t\t\tvar extra = abs.extra[ii];\n\t\t\tif (extra.type == 'lyric') {\n\t\t\t\treturn {\n\t\t\t\t\tbottom: extra.bottom,\n\t\t\t\t\theight: extra.height\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}\nfunction TabAbsoluteElements() {\n\t//console.log(\"RENDER TabAbsoluteElements constructor\")\n\tthis.accidentals = null;\n}\n\nfunction getInitialStaffSize(staffGroup) {\n\tvar returned = 0;\n\tfor (var ii = 0; ii < staffGroup.length; ii++) {\n\t\tif (!staffGroup[ii].tabNameInfos) returned++;\n\t}\n\treturn returned;\n}\n\nfunction buildRelativeTabNote(plugin, relX, def, curNote, isGrace) {\n\tvar strNote = curNote.num;\n\tif (curNote.note.quarter != null) {\n\t\t// add tab quarter => needs to string conversion then \n\t\tstrNote = strNote.toString();\n\t\tstrNote += curNote.note.quarter;\n\t}\n\tvar pitch = plugin.semantics.stringToPitch(curNote.str);\n\tdef.notes.push({ num: strNote, str: curNote.str, pitch: curNote.note.emit() });\n\tvar opt = {\n\t\ttype: 'tabNumber'\n\t};\n\tvar tabNoteRelative = new RelativeElement(\n\t\tstrNote, 0, 0, pitch + 0.3, opt);\n\ttabNoteRelative.x = relX;\n\ttabNoteRelative.isGrace = isGrace;\n\ttabNoteRelative.isAltered = curNote.note.isAltered;\n\treturn tabNoteRelative;\n}\n\nfunction getXGrace(abs, index) {\n\tvar found = 0;\n\tif (abs.extra) {\n\t\tfor (var ii = 0; ii < abs.extra.length; ii++) {\n\t\t\tif (abs.extra[ii].c.indexOf('noteheads') >= 0) {\n\t\t\t\tif (found === index) {\n\t\t\t\t\treturn abs.extra[ii].x + abs.extra[ii].w / 2;\n\t\t\t\t} else {\n\t\t\t\t\tfound++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction graceInRest(absElem) {\n\tif (absElem.abcelem) {\n\t\tvar elem = absElem.abcelem;\n\t\tif (elem.rest) {\n\t\t\treturn elem.gracenotes;\n\t\t}\n\t}\n\treturn null;\n}\n\nfunction convertToNumber(plugin, pitches, graceNotes) {\n\tvar tabPos = plugin.semantics.notesToNumber(pitches, graceNotes);\n\tif (tabPos.error) {\n\t\tplugin.setError(tabPos.error);\n\t\treturn tabPos; // give up on error here\n\t}\n\tif (tabPos.graces && tabPos.notes) {\n\t\t// add graces to last note in notes\n\t\tvar posNote = tabPos.notes.length - 1;\n\t\ttabPos.notes[posNote].graces = tabPos.graces;\n\t}\n\treturn tabPos;\n}\n\nfunction buildGraceRelativesForRest(plugin, abs, absChild, graceNotes, tabVoice) {\n\tfor (var mm = 0; mm < graceNotes.length; mm++) {\n\t\tvar defGrace = { el_type: \"note\", startChar: absChild.abcelem.startChar, endChar: absChild.abcelem.endChar, notes: [], grace: true };\n\t\tvar graceX = getXGrace(absChild, mm);\n\t\tvar curGrace = graceNotes[mm];\n\t\tvar tabGraceRelative = buildRelativeTabNote(plugin, graceX, defGrace, curGrace, true);\n\t\tabs.children.push(tabGraceRelative);\n\t\ttabVoice.push(defGrace);\n\t}\n}\n\n/**\n * Build tab absolutes by scanning current staff line absolute array\n * @param {*} staffAbsolute\n */\nTabAbsoluteElements.prototype.build = function (plugin,\n\tstaffAbsolute,\n\ttabVoice,\n\tvoiceIndex,\n\tstaffIndex,\n\tkeySig,\n\ttabVoiceIndex) {\n\t//console.log(\"RENDER TabAbsoluteElements build\")\n\tvar staffSize = getInitialStaffSize(staffAbsolute);\n\tvar source = staffAbsolute[staffIndex + voiceIndex];\n\tvar dest = staffAbsolute[tabVoiceIndex];\n\tvar tabPos = null;\n\tvar defNote = null;\n\tif (source.children[0].abcelem.el_type != 'clef') {\n\t\t// keysig missing => provide one for tabs\n\t\tif (keySig != 'none') {\n\t\t\tsource.children.splice(0, 0, keySig);\n\t\t}\n\t}\n\tfor (var ii = 0; ii < source.children.length; ii++) {\n\t\tvar absChild = source.children[ii];\n\t\tvar absX = absChild.x;\n\t\tvar relX = absX;\n\t\t// if (absChild.children.length > 0) {\n\t\t//   relX = absChild.children[0].x;\n\t\t// }\n\t\tif ((absChild.isClef)) {\n\t\t\tdest.children.push(buildTabAbsolute(plugin, absX, relX));\n\t\t\tif (absChild.abcelem.type.indexOf('-8') >= 0) plugin.semantics.clefTranspose = -12\n\t\t\tif (absChild.abcelem.type.indexOf('+8') >= 0) plugin.semantics.clefTranspose = 12\n\t\t}\n\t\tswitch (absChild.type) {\n\t\t\tcase 'staff-extra key-signature':\n\t\t\t\t// refresh key accidentals\n\t\t\t\tthis.accidentals = absChild.abcelem.accidentals;\n\t\t\t\tplugin.semantics.accidentals = this.accidentals;\n\t\t\t\tbreak;\n\t\t\tcase 'bar':\n\t\t\t\tplugin.semantics.measureAccidentals = {}\n\t\t\t\tvar lastBar = false;\n\t\t\t\tif (ii === source.children.length - 1) {\n\t\t\t\t\t// used for final line bar drawing\n\t\t\t\t\t// for multi tabs / multi staves\n\t\t\t\t\tlastBar = true;\n\t\t\t\t}\n\t\t\t\tvar cloned = cloneAbsoluteAndRelatives(absChild, plugin);\n\t\t\t\tif (cloned.abcelem.barNumber) {\n\t\t\t\t\tdelete cloned.abcelem.barNumber;\n\t\t\t\t\tfor (var bn = 0; bn < cloned.children.length; bn++) {\n\t\t\t\t\t\tif (cloned.children[bn].type === \"barNumber\") {\n\t\t\t\t\t\t\tcloned.children.splice(bn, 1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcloned.abcelem.lastBar = lastBar;\n\t\t\t\tdest.children.push(cloned);\n\t\t\t\ttabVoice.push({\n\t\t\t\t\tel_type: absChild.abcelem.el_type,\n\t\t\t\t\ttype: absChild.abcelem.type,\n\t\t\t\t\tendChar: absChild.abcelem.endChar,\n\t\t\t\t\tstartChar: absChild.abcelem.startChar,\n\t\t\t\t\tabselem: cloned\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'rest':\n\t\t\t\tvar restGraces = graceInRest(absChild);\n\t\t\t\tif (restGraces) {\n\t\t\t\t\t// to number conversion \n\t\t\t\t\ttabPos = convertToNumber(plugin, null, restGraces);\n\t\t\t\t\tif (tabPos.error) return;\n\t\t\t\t\t// build relative for grace\n\t\t\t\t\tdefGrace = { el_type: \"note\", startChar: absChild.abcelem.startChar, endChar: absChild.abcelem.endChar, notes: [], grace: true };\n\t\t\t\t\tbuildGraceRelativesForRest(plugin, abs, absChild, tabPos.graces, tabVoice);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'note':\n\t\t\t\tvar abs = cloneAbsolute(absChild);\n\t\t\t\tabs.x = absChild.heads[0].x + absChild.heads[0].w / 2; // center the number\n\t\t\t\tabs.lyricDim = lyricsDim(absChild);\n\t\t\t\tvar pitches = absChild.abcelem.pitches;\n\t\t\t\tvar graceNotes = absChild.abcelem.gracenotes;\n\t\t\t\tabs.type = 'tabNumber';\n\t\t\t\t// to number conversion \n\t\t\t\ttabPos = convertToNumber(plugin, pitches, graceNotes);\n\t\t\t\tif (tabPos.error) return;\n\t\t\t\tif (tabPos.graces) {\n\t\t\t\t\t// add graces to last note in notes\n\t\t\t\t\tvar posNote = tabPos.notes.length - 1;\n\t\t\t\t\ttabPos.notes[posNote].graces = tabPos.graces;\n\t\t\t\t}\n\t\t\t\t// build relative\n\t\t\t\tdefNote = { el_type: \"note\", startChar: absChild.abcelem.startChar, endChar: absChild.abcelem.endChar, notes: [] };\n\t\t\t\tfor (var ll = 0; ll < tabPos.notes.length; ll++) {\n\t\t\t\t\tvar curNote = tabPos.notes[ll];\n\t\t\t\t\tif (curNote.graces) {\n\t\t\t\t\t\tfor (var mm = 0; mm < curNote.graces.length; mm++) {\n\t\t\t\t\t\t\tvar defGrace = { el_type: \"note\", startChar: absChild.abcelem.startChar, endChar: absChild.abcelem.endChar, notes: [], grace: true };\n\t\t\t\t\t\t\tvar graceX = getXGrace(absChild, mm);\n\t\t\t\t\t\t\tvar curGrace = curNote.graces[mm];\n\t\t\t\t\t\t\tvar tabGraceRelative = buildRelativeTabNote(plugin, graceX, defGrace, curGrace, true);\n\t\t\t\t\t\t\tabs.children.push(tabGraceRelative);\n\t\t\t\t\t\t\ttabVoice.push(defGrace);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar tabNoteRelative = buildRelativeTabNote(plugin, abs.x + absChild.heads[ll].dx, defNote, curNote, false);\n\t\t\t\t\tabs.children.push(tabNoteRelative);\n\t\t\t\t}\n\t\t\t\tif (defNote.notes.length > 0) {\n\t\t\t\t\tdefNote.abselem = abs;\n\t\t\t\t\ttabVoice.push(defNote);\n\t\t\t\t\tdest.children.push(abs);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n};\n\nmodule.exports = TabAbsoluteElements;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/tablatures/render/tab-absolute-elements.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/tablatures/render/tab-renderer.js":
/*!******************************************************************!*\
  !*** ./node_modules/abcjs/src/tablatures/render/tab-renderer.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* eslint-disable no-debugger */\nvar VoiceElement = __webpack_require__(/*! ../../write/creation/elements/voice-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/voice-element.js\");\nvar TabAbsoluteElements = __webpack_require__(/*! ./tab-absolute-elements */ \"(ssr)/./node_modules/abcjs/src/tablatures/render/tab-absolute-elements.js\");\nvar spacing = __webpack_require__(/*! ../../write/helpers/spacing */ \"(ssr)/./node_modules/abcjs/src/write/helpers/spacing.js\");\n\nfunction initSpecialY() {\n\treturn {\n\t\ttempoHeightAbove: 0,\n\t\tpartHeightAbove: 0,\n\t\tvolumeHeightAbove: 0,\n\t\tdynamicHeightAbove: 0,\n\t\tendingHeightAbove: 0,\n\t\tchordHeightAbove: 0,\n\t\tlyricHeightAbove: 0,\n\t\tlyricHeightBelow: 0,\n\t\tchordHeightBelow: 0,\n\t\tvolumeHeightBelow: 0,\n\t\tdynamicHeightBelow: 0\n\t};\n}\n\nfunction getLyricHeight(voice) {\n\tvar maxLyricHeight = 0;\n\tfor (var ii = 0; ii < voice.children.length; ii++) {\n\t\tvar curAbs = voice.children[ii];\n\t\tif (curAbs.specialY) {\n\t\t\tif (curAbs.specialY.lyricHeightBelow > maxLyricHeight) {\n\t\t\t\tmaxLyricHeight = curAbs.specialY.lyricHeightBelow;\n\t\t\t}\n\t\t}\n\t}\n\treturn maxLyricHeight; // add spacing\n}\n\nfunction buildTabName(plugin, renderer, dest) {\n\tvar stringSemantics = plugin.semantics;\n\tvar textSize = renderer.controller.getTextSize;\n\tvar tabName = stringSemantics.tabInfos(plugin);\n\tvar suppress = stringSemantics.suppress(plugin);\n\tvar doDraw = true;\n\n\tif (suppress) {\n\t\tdoDraw = false\n\t}\n\n\n\tif (doDraw) {\n\t\tvar size = textSize.calc(tabName, 'tablabelfont', 'text instrumentname');\n\t\tdest.tabNameInfos = {\n\t\t\ttextSize: { height: size.height, width: size.width },\n\t\t\tname: tabName\n\t\t};\n\t\treturn size.height;\n\t}\n\treturn 0\n\n}\n\nfunction islastTabInStaff(index, staffGroup) {\n\tif (staffGroup[index].isTabStaff) {\n\t\tif (index === staffGroup.length - 1) return true;\n\t\tif (staffGroup[index + 1].isTabStaff) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction getStaffNumbers(staffs) {\n\tvar nbStaffs = 0;\n\tfor (var ii = 0; ii < staffs.length; ii++) {\n\t\tif (!staffs[ii].isTabStaff) {\n\t\t\tnbStaffs++;\n\t\t}\n\t}\n\treturn nbStaffs;\n}\n\nfunction getParentStaffIndex(staffs, index) {\n\tfor (var ii = index; ii >= 0; ii--) {\n\t\tif (!staffs[ii].isTabStaff) {\n\t\t\treturn ii;\n\t\t}\n\t}\n\treturn -1;\n}\n\n\nfunction linkStaffAndTabs(staffs) {\n\tfor (var ii = 0; ii < staffs.length; ii++) {\n\t\tif (staffs[ii].isTabStaff) {\n\t\t\t// link to parent staff\n\t\t\tvar parentIndex = getParentStaffIndex(staffs, ii);\n\t\t\tstaffs[ii].hasStaff = staffs[parentIndex];\n\t\t\tif (!staffs[parentIndex].hasTab) staffs[parentIndex].hasTab = [];\n\t\t\tstaffs[parentIndex].hasTab.push(staffs[ii]);\n\t\t}\n\t}\n}\n\nfunction isMultiVoiceSingleStaff(staffs, parent) {\n\tif (getStaffNumbers(staffs) === 1) {\n\t\tif (parent.voices.length > 1) return true;\n\t}\n\treturn false;\n}\n\n\nfunction getNextTabPos(tabIndex, staffGroup) {\n\tvar startIndex = 0;\n\tvar handledVoices = 0;\n\tvar inProgress = true;\n\tvar nbVoices = 0;\n\twhile (inProgress) {\n\t\t//for (var ii = 0; ii < staffGroup.length; ii++) {\n\t\tif (!staffGroup[startIndex])\n\t\t\treturn -1;\n\t\tif (!staffGroup[startIndex].isTabStaff) {\n\t\t\tnbVoices = staffGroup[startIndex].voices.length; // get number of staff voices\n\t\t}\n\t\tif (staffGroup[startIndex].isTabStaff) {\n\t\t\thandledVoices++;\n\t\t\tif (islastTabInStaff(startIndex, staffGroup)) {\n\t\t\t\tif (handledVoices < nbVoices) return startIndex + 1;\n\t\t\t}\n\t\t} else {\n\t\t\thandledVoices = 0;\n\t\t\tif (startIndex >= tabIndex) {\n\t\t\t\tif (startIndex + 1 == staffGroup.length) return startIndex + 1;\n\t\t\t\tif (!staffGroup[startIndex + 1].isTabStaff) return startIndex + 1;\n\t\t\t}\n\t\t}\n\t\tstartIndex++;\n\t\t// out of space case\n\t\tif (startIndex > staffGroup.length) return -1;\n\t}\n}\n\nfunction getLastStaff(staffs, lastTab) {\n\tfor (var ii = lastTab; ii >= 0; ii--) {\n\t\tif (!staffs[ii].isTabStaff) {\n\t\t\treturn staffs[ii];\n\t\t}\n\t}\n\treturn null;\n}\n\nfunction checkVoiceKeySig(voices, ii) {\n\tvar curVoice = voices[ii];\n\t// on multivoice multistaff only the first voice has key signature\n\t// folling consecutive do not have one => we should provide the first voice key sig back then\n\tvar elem0 = curVoice.children[0].abcelem;\n\tif (elem0.el_type === 'clef') return null;\n\tif (ii == 0) {\n\t\t// not found => clef=none case\n\t\treturn 'none';\n\t}\n\treturn voices[ii - 1].children[0];\n}\n\nfunction tabRenderer(plugin, renderer, line, staffIndex) {\n\t//console.log(\"RENDER tabRenderer\")\n\tvar absolutes = new TabAbsoluteElements();\n\tvar tabStaff = {\n\t\tclef: {\n\t\t\ttype: 'TAB'\n\t\t}\n\t};\n\tvar tabSize = (plugin.linePitch * plugin.nbLines);\n\tvar staffs = line.staff;\n\tif (staffs) {\n\t\t// give up on staffline=0 in key \n\t\tvar firstStaff = staffs[0];\n\t\tif (firstStaff) {\n\t\t\tif (firstStaff.clef) {\n\t\t\t\tif (firstStaff.clef.stafflines == 0) {\n\t\t\t\t\tplugin.setError(\"No tablatures when stafflines=0\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tstaffs.splice(\n\t\t\tstaffs.length, 0,\n\t\t\ttabStaff\n\t\t);\n\t}\n\tvar staffGroup = line.staffGroup;\n\n\tvar voices = staffGroup.voices;\n\tvar firstVoice = voices[0];\n\t// take lyrics into account if any\n\tvar lyricsHeight = getLyricHeight(firstVoice);\n\tvar padd = 3;\n\tvar prevIndex = staffIndex;\n\tvar previousStaff = staffGroup.staffs[prevIndex];\n\tvar tabTop = tabSize + padd - previousStaff.bottom - lyricsHeight;\n\tif (previousStaff.isTabStaff) {\n\t\ttabTop = previousStaff.top;\n\t}\n\tvar staffGroupInfos = {\n\t\tbottom: -1,\n\t\tisTabStaff: true,\n\t\tspecialY: initSpecialY(),\n\t\tlines: plugin.nbLines,\n\t\tlinePitch: plugin.linePitch,\n\t\tdy: 0.15,\n\t\ttop: tabTop,\n\t};\n\tvar nextTabPos = getNextTabPos(staffIndex, staffGroup.staffs);\n\tif (nextTabPos === -1)\n\t\treturn;\n\tstaffGroupInfos.parentIndex = nextTabPos - 1;\n\tstaffGroup.staffs.splice(nextTabPos, 0, staffGroupInfos);\n\t// staffGroup.staffs.push(staffGroupInfos);\n\tstaffGroup.height += tabSize + padd;\n\tvar parentStaff = getLastStaff(staffGroup.staffs, nextTabPos);\n\tvar nbVoices = 1;\n\tif (isMultiVoiceSingleStaff(staffGroup.staffs, parentStaff)) {\n\t\tnbVoices = parentStaff.voices.length;\n\t}\n\t// build from staff\n\ttabStaff.voices = [];\n\tfor (var ii = 0; ii < nbVoices; ii++) {\n\t\tvar tabVoice = new VoiceElement(0, 0);\n\t\tif (ii > 0) tabVoice.duplicate = true;\n\t\tvar nameHeight = buildTabName(plugin, renderer, tabVoice) / spacing.STEP;\n\t\tnameHeight = Math.max(nameHeight, 1) // If there is no label for the tab line, then there needs to be a little padding\n\t\t// This was pushing down the top staff by the tab label height\n\t\t//staffGroup.staffs[staffIndex].top += nameHeight;\n\t\tstaffGroup.staffs[staffIndex].top += 1;\n\t\tstaffGroup.height += nameHeight;\n\t\ttabVoice.staff = staffGroupInfos;\n\t\tvar tabVoiceIndex = voices.length\n\t\tvoices.splice(voices.length, 0, tabVoice);\n\t\tvar keySig = checkVoiceKeySig(voices, ii + staffIndex);\n\t\ttabStaff.voices[ii] = [];\n\t\tabsolutes.build(plugin, voices, tabStaff.voices[ii], ii, staffIndex, keySig, tabVoiceIndex);\n\t}\n\tlinkStaffAndTabs(staffGroup.staffs); // crossreference tabs and staff\n}\n\nmodule.exports = tabRenderer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/tablatures/render/tab-renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/abstract-engraver.js":
/*!********************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/abstract-engraver.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// abc_abstract_engraver.js: Creates a data structure suitable for printing a line of abc\n\nvar AbsoluteElement = __webpack_require__(/*! ./elements/absolute-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/absolute-element.js\");\nvar BeamElem = __webpack_require__(/*! ./elements/beam-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/beam-element.js\");\nvar BraceElem = __webpack_require__(/*! ./elements/brace-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/brace-element.js\");\nvar createClef = __webpack_require__(/*! ./create-clef */ \"(ssr)/./node_modules/abcjs/src/write/creation/create-clef.js\");\nvar createKeySignature = __webpack_require__(/*! ./create-key-signature */ \"(ssr)/./node_modules/abcjs/src/write/creation/create-key-signature.js\");\nvar createNoteHead = __webpack_require__(/*! ./create-note-head */ \"(ssr)/./node_modules/abcjs/src/write/creation/create-note-head.js\");\nvar createTimeSignature = __webpack_require__(/*! ./create-time-signature */ \"(ssr)/./node_modules/abcjs/src/write/creation/create-time-signature.js\");\nvar Decoration = __webpack_require__(/*! ./decoration */ \"(ssr)/./node_modules/abcjs/src/write/creation/decoration.js\");\nvar EndingElem = __webpack_require__(/*! ./elements/ending-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/ending-element.js\");\nvar glyphs = __webpack_require__(/*! ./glyphs */ \"(ssr)/./node_modules/abcjs/src/write/creation/glyphs.js\");\nvar RelativeElement = __webpack_require__(/*! ./elements/relative-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/relative-element.js\");\nvar spacing = __webpack_require__(/*! ../helpers/spacing */ \"(ssr)/./node_modules/abcjs/src/write/helpers/spacing.js\");\nvar StaffGroupElement = __webpack_require__(/*! ./elements/staff-group-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/staff-group-element.js\");\nvar TempoElement = __webpack_require__(/*! ./elements/tempo-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/tempo-element.js\");\nvar TieElem = __webpack_require__(/*! ./elements/tie-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/tie-element.js\");\nvar TripletElem = __webpack_require__(/*! ./elements/triplet-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/triplet-element.js\");\nvar VoiceElement = __webpack_require__(/*! ./elements/voice-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/voice-element.js\");\nvar addChord = __webpack_require__(/*! ./add-chord */ \"(ssr)/./node_modules/abcjs/src/write/creation/add-chord.js\");\nvar pitchesToPerc = __webpack_require__(/*! ../../synth/pitches-to-perc */ \"(ssr)/./node_modules/abcjs/src/synth/pitches-to-perc.js\")\n\nvar parseCommon = __webpack_require__(/*! ../../parse/abc_common */ \"(ssr)/./node_modules/abcjs/src/parse/abc_common.js\");\n\nvar getDuration = function (elem) {\n\tvar d = 0;\n\tif (elem.duration) {\n\t\td = elem.duration;\n\t}\n\treturn d;\n};\n\nvar hint = false;\n\nvar chartable = {\n\trest: { 0: \"rests.whole\", 1: \"rests.half\", 2: \"rests.quarter\", 3: \"rests.8th\", 4: \"rests.16th\", 5: \"rests.32nd\", 6: \"rests.64th\", 7: \"rests.128th\", \"multi\": \"rests.multimeasure\" },\n\tnote: { \"-1\": \"noteheads.dbl\", 0: \"noteheads.whole\", 1: \"noteheads.half\", 2: \"noteheads.quarter\", 3: \"noteheads.quarter\", 4: \"noteheads.quarter\", 5: \"noteheads.quarter\", 6: \"noteheads.quarter\", 7: \"noteheads.quarter\", 'nostem': \"noteheads.quarter\" },\n\trhythm: { \"-1\": \"noteheads.slash.whole\", 0: \"noteheads.slash.whole\", 1: \"noteheads.slash.whole\", 2: \"noteheads.slash.quarter\", 3: \"noteheads.slash.quarter\", 4: \"noteheads.slash.quarter\", 5: \"noteheads.slash.quarter\", 6: \"noteheads.slash.quarter\", 7: \"noteheads.slash.quarter\", nostem: \"noteheads.slash.nostem\" },\n\tx: { \"-1\": \"noteheads.indeterminate\", 0: \"noteheads.indeterminate\", 1: \"noteheads.indeterminate\", 2: \"noteheads.indeterminate\", 3: \"noteheads.indeterminate\", 4: \"noteheads.indeterminate\", 5: \"noteheads.indeterminate\", 6: \"noteheads.indeterminate\", 7: \"noteheads.indeterminate\", nostem: \"noteheads.indeterminate\" },\n\tharmonic: { \"-1\": \"noteheads.harmonic.quarter\", 0: \"noteheads.harmonic.quarter\", 1: \"noteheads.harmonic.quarter\", 2: \"noteheads.harmonic.quarter\", 3: \"noteheads.harmonic.quarter\", 4: \"noteheads.harmonic.quarter\", 5: \"noteheads.harmonic.quarter\", 6: \"noteheads.harmonic.quarter\", 7: \"noteheads.harmonic.quarter\", nostem: \"noteheads.harmonic.quarter\" },\n\ttriangle: { \"-1\": \"noteheads.triangle.quarter\", 0: \"noteheads.triangle.quarter\", 1: \"noteheads.triangle.quarter\", 2: \"noteheads.triangle.quarter\", 3: \"noteheads.triangle.quarter\", 4: \"noteheads.triangle.quarter\", 5: \"noteheads.triangle.quarter\", 6: \"noteheads.triangle.quarter\", 7: \"noteheads.triangle.quarter\", nostem: \"noteheads.triangle.quarter\" },\n\tuflags: { 3: \"flags.u8th\", 4: \"flags.u16th\", 5: \"flags.u32nd\", 6: \"flags.u64th\" },\n\tdflags: { 3: \"flags.d8th\", 4: \"flags.d16th\", 5: \"flags.d32nd\", 6: \"flags.d64th\" }\n};\n\nvar AbstractEngraver = function (getTextSize, tuneNumber, options) {\n\tthis.decoration = new Decoration();\n\tthis.getTextSize = getTextSize;\n\tthis.tuneNumber = tuneNumber;\n\tthis.isBagpipes = options.bagpipes;\n\tthis.flatBeams = options.flatbeams;\n\tthis.graceSlurs = options.graceSlurs;\n\tthis.percmap = options.percmap;\n\tthis.initialClef = options.initialClef\n\tthis.jazzchords = !!options.jazzchords\n\tthis.accentAbove = !!options.accentAbove\n\tthis.germanAlphabet = !!options.germanAlphabet\n\tthis.reset();\n};\n\nAbstractEngraver.prototype.reset = function () {\n\tthis.slurs = {};\n\tthis.ties = [];\n\tthis.voiceScale = 1;\n\tthis.voiceColor = undefined;\n\tthis.slursbyvoice = {};\n\tthis.tiesbyvoice = {};\n\tthis.endingsbyvoice = {};\n\tthis.scaleByVoice = {};\n\tthis.colorByVoice = {};\n\tthis.tripletmultiplier = 1;\n\n\tthis.abcline = undefined;\n\tthis.accidentalSlot = undefined;\n\tthis.accidentalshiftx = undefined;\n\tthis.dotshiftx = undefined;\n\tthis.hasVocals = false;\n\tthis.minY = undefined;\n\tthis.partstartelem = undefined;\n\tthis.startlimitelem = undefined;\n\tthis.stemdir = undefined;\n};\n\nAbstractEngraver.prototype.setStemHeight = function (heightInPixels) {\n\tthis.stemHeight = Math.round(heightInPixels * 10 / spacing.STEP) / 10;\n};\n\nAbstractEngraver.prototype.getCurrentVoiceId = function (s, v) {\n\treturn \"s\" + s + \"v\" + v;\n};\n\nAbstractEngraver.prototype.pushCrossLineElems = function (s, v) {\n\tthis.slursbyvoice[this.getCurrentVoiceId(s, v)] = this.slurs;\n\tthis.tiesbyvoice[this.getCurrentVoiceId(s, v)] = this.ties;\n\tthis.endingsbyvoice[this.getCurrentVoiceId(s, v)] = this.partstartelem;\n\tthis.scaleByVoice[this.getCurrentVoiceId(s, v)] = this.voiceScale;\n\tif (this.voiceColor)\n\t\tthis.colorByVoice[this.getCurrentVoiceId(s, v)] = this.voiceColor;\n};\n\nAbstractEngraver.prototype.popCrossLineElems = function (s, v) {\n\tthis.slurs = this.slursbyvoice[this.getCurrentVoiceId(s, v)] || {};\n\tthis.ties = this.tiesbyvoice[this.getCurrentVoiceId(s, v)] || [];\n\tthis.partstartelem = this.endingsbyvoice[this.getCurrentVoiceId(s, v)];\n\tthis.voiceScale = this.scaleByVoice[this.getCurrentVoiceId(s, v)];\n\tif (this.voiceScale === undefined) this.voiceScale = 1;\n\tthis.voiceColor = this.colorByVoice[this.getCurrentVoiceId(s, v)];\n};\n\nAbstractEngraver.prototype.containsLyrics = function (staves) {\n\tfor (var i = 0; i < staves.length; i++) {\n\t\tfor (var j = 0; j < staves[i].voices.length; j++) {\n\t\t\tfor (var k = 0; k < staves[i].voices[j].length; k++) {\n\t\t\t\tvar el = staves[i].voices[j][k];\n\t\t\t\tif (el.lyric) {\n\t\t\t\t\t// We just want to see if there are vocals below the music to know where to put the dynamics.\n\t\t\t\t\tif (!el.positioning || el.positioning.vocalPosition === 'below')\n\t\t\t\t\t\tthis.hasVocals = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nAbstractEngraver.prototype.createABCLine = function (staffs, tempo, l) {\n\tthis.minY = 2; // PER: This will be the lowest that any note reaches. It will be used to set the dynamics row.\n\t// See if there are any lyrics on this line.\n\tthis.containsLyrics(staffs);\n\tvar staffgroup = new StaffGroupElement(this.getTextSize);\n\tthis.tempoSet = false;\n\tfor (var s = 0; s < staffs.length; s++) {\n\t\tif (hint)\n\t\t\tthis.restoreState();\n\t\thint = false;\n\t\tthis.createABCStaff(staffgroup, staffs[s], tempo, s, l);\n\t}\n\treturn staffgroup;\n};\n\nAbstractEngraver.prototype.createABCStaff = function (staffgroup, abcstaff, tempo, s, l) {\n\t// If the tempo is passed in, then the first element should get the tempo attached to it.\n\tstaffgroup.getTextSize.updateFonts(abcstaff);\n\tfor (var v = 0; v < abcstaff.voices.length; v++) {\n\t\tvar voice = new VoiceElement(v, abcstaff.voices.length);\n\t\tif (v === 0) {\n\t\t\tvoice.barfrom = (abcstaff.connectBarLines === \"start\" || abcstaff.connectBarLines === \"continue\");\n\t\t\tvoice.barto = (abcstaff.connectBarLines === \"continue\" || abcstaff.connectBarLines === \"end\");\n\t\t} else {\n\t\t\tvoice.duplicate = true; // bar lines and other duplicate info need not be created\n\t\t}\n\t\tif (abcstaff.title && abcstaff.title[v]) {\n\t\t\tvoice.header = abcstaff.title[v].replace(/\\\\n/g, \"\\n\");\n\t\t\tvoice.headerPosition = 6 + staffgroup.getTextSize.baselineToCenter(voice.header, \"voicefont\", 'staff-extra voice-name', v, abcstaff.voices.length) / spacing.STEP;\n\t\t}\n\t\tif (abcstaff.clef && abcstaff.clef.type === \"perc\")\n\t\t\tvoice.isPercussion = true;\n\t\tvar clef = (!this.initialClef || l === 0) && createClef(abcstaff.clef, this.tuneNumber);\n\t\tif (clef) {\n\t\t\tif (v === 0 && abcstaff.barNumber) {\n\t\t\t\tthis.addMeasureNumber(abcstaff.barNumber, clef);\n\t\t\t}\n\t\t\tvoice.addChild(clef);\n\t\t\tthis.startlimitelem = clef; // limit ties here\n\t\t}\n\t\tvar keySig = createKeySignature(abcstaff.key, this.tuneNumber);\n\t\tif (keySig) {\n\t\t\tvoice.addChild(keySig);\n\t\t\tthis.startlimitelem = keySig; // limit ties here\n\t\t}\n\t\tif (abcstaff.meter) {\n\t\t\tif (abcstaff.meter.type === 'specified') {\n\t\t\t\tthis.measureLength = abcstaff.meter.value[0].num / abcstaff.meter.value[0].den;\n\t\t\t} else\n\t\t\t\tthis.measureLength = 1;\n\t\t\tvar ts = createTimeSignature(abcstaff.meter, this.tuneNumber);\n\t\t\tvoice.addChild(ts);\n\t\t\tthis.startlimitelem = ts; // limit ties here\n\t\t}\n\t\tif (voice.duplicate)\n\t\t\tvoice.children = []; // we shouldn't reprint the above if we're reusing the same staff. We just created them to get the right spacing.\n\t\tvar staffLines = abcstaff.clef.stafflines || abcstaff.clef.stafflines === 0 ? abcstaff.clef.stafflines : 5;\n\t\tstaffgroup.addVoice(voice, s, staffLines);\n\t\tvar isSingleLineStaff = staffLines === 1;\n\t\tthis.createABCVoice(abcstaff.voices[v], tempo, s, v, isSingleLineStaff, voice);\n\t\tstaffgroup.setStaffLimits(voice);\n\t\tif (v === 0) {\n\t\t\t// only do brace and bracket processing on the first voice, otherwise it would be done twice.\n\t\t\tif (abcstaff.brace === \"start\" || (!staffgroup.brace && abcstaff.brace)) {\n\t\t\t\tif (!staffgroup.brace)\n\t\t\t\t\tstaffgroup.brace = [];\n\t\t\t\tstaffgroup.brace.push(new BraceElem(voice, \"brace\"));\n\t\t\t} else if (abcstaff.brace === \"end\" && staffgroup.brace) {\n\t\t\t\tstaffgroup.brace[staffgroup.brace.length - 1].setBottomStaff(voice);\n\t\t\t} else if (abcstaff.brace === \"continue\" && staffgroup.brace) {\n\t\t\t\tstaffgroup.brace[staffgroup.brace.length - 1].continuing(voice);\n\t\t\t}\n\t\t\tif (abcstaff.bracket === \"start\" || (!staffgroup.bracket && abcstaff.bracket)) {\n\t\t\t\tif (!staffgroup.bracket)\n\t\t\t\t\tstaffgroup.bracket = [];\n\t\t\t\tstaffgroup.bracket.push(new BraceElem(voice, \"bracket\"));\n\t\t\t} else if (abcstaff.bracket === \"end\" && staffgroup.bracket) {\n\t\t\t\tstaffgroup.bracket[staffgroup.bracket.length - 1].setBottomStaff(voice);\n\t\t\t} else if (abcstaff.bracket === \"continue\" && staffgroup.bracket) {\n\t\t\t\tstaffgroup.bracket[staffgroup.bracket.length - 1].continuing(voice);\n\t\t\t}\n\t\t}\n\t}\n};\n\nfunction getBeamGroup(abcline, pos) {\n\t// If there are notes beamed together, they are handled as a group, so find all of them here.\n\tvar elem = abcline[pos];\n\tif (elem.el_type !== 'note' || !elem.startBeam || elem.endBeam)\n\t\treturn { count: 1, elem: elem };\n\n\tvar group = [];\n\twhile (pos < abcline.length && abcline[pos].el_type === 'note') {\n\t\tgroup.push(abcline[pos]);\n\t\tif (abcline[pos].endBeam)\n\t\t\tbreak;\n\t\tpos++;\n\t}\n\treturn { count: group.length, elem: group };\n}\n\nAbstractEngraver.prototype.createABCVoice = function (abcline, tempo, s, v, isSingleLineStaff, voice) {\n\tthis.popCrossLineElems(s, v);\n\tthis.stemdir = (this.isBagpipes) ? \"down\" : null;\n\tthis.abcline = abcline;\n\tif (this.partstartelem) {\n\t\tthis.partstartelem = new EndingElem(\"\", null, null);\n\t\tvoice.addOther(this.partstartelem);\n\t}\n\tvar voiceNumber = voice.voicetotal < 2 ? -1 : voice.voicenumber;\n\tfor (var slur in this.slurs) {\n\t\tif (this.slurs.hasOwnProperty(slur)) {\n\t\t\t// this is already a slur element, but it was created for the last line, so recreate it.\n\t\t\tthis.slurs[slur] = new TieElem({ force: this.slurs[slur].force, voiceNumber: voiceNumber, stemDir: this.slurs[slur].stemDir, style: this.slurs[slur].dotted });\n\t\t\tif (hint) this.slurs[slur].setHint();\n\t\t\tvoice.addOther(this.slurs[slur]);\n\t\t}\n\t}\n\tfor (var i = 0; i < this.ties.length; i++) {\n\t\t// this is already a tie element, but it was created for the last line, so recreate it.\n\t\tthis.ties[i] = new TieElem({ force: this.ties[i].force, stemDir: this.ties[i].stemDir, voiceNumber: voiceNumber, style: this.ties[i].dotted });\n\t\tif (hint) this.ties[i].setHint();\n\t\tvoice.addOther(this.ties[i]);\n\t}\n\n\tfor (var j = 0; j < this.abcline.length; j++) {\n\t\tsetAveragePitch(this.abcline[j]);\n\t\tthis.minY = Math.min(this.abcline[j].minpitch, this.minY);\n\t}\n\n\tvar isFirstStaff = (s === 0);\n\tvar pos = 0;\n\twhile (pos < this.abcline.length) {\n\t\tvar ret = getBeamGroup(this.abcline, pos);\n\t\tvar abselems = this.createABCElement(isFirstStaff, isSingleLineStaff, voice, ret.elem);\n\t\tif (abselems) {\n\t\t\tfor (i = 0; i < abselems.length; i++) {\n\t\t\t\tif (!this.tempoSet && tempo && !tempo.suppress) {\n\t\t\t\t\tthis.tempoSet = true;\n\t\t\t\t\tvar tempoElement = new AbsoluteElement(tempo, 0, 0, \"tempo\", this.tuneNumber, {});\n\t\t\t\t\ttempoElement.addFixedX(new TempoElement(tempo, this.tuneNumber, createNoteHead));\n\t\t\t\t\tvoice.addChild(tempoElement);\n\t\t\t\t}\n\t\t\t\tvoice.addChild(abselems[i]);\n\t\t\t}\n\t\t}\n\t\tpos += ret.count;\n\t}\n\tthis.pushCrossLineElems(s, v);\n};\n\nAbstractEngraver.prototype.saveState = function () {\n\tthis.tiesSave = parseCommon.cloneArray(this.ties);\n\tthis.slursSave = parseCommon.cloneHashOfHash(this.slurs);\n\tthis.slursbyvoiceSave = parseCommon.cloneHashOfHash(this.slursbyvoice);\n\tthis.tiesbyvoiceSave = parseCommon.cloneHashOfArrayOfHash(this.tiesbyvoice);\n};\n\nAbstractEngraver.prototype.restoreState = function () {\n\tthis.ties = parseCommon.cloneArray(this.tiesSave);\n\tthis.slurs = parseCommon.cloneHashOfHash(this.slursSave);\n\tthis.slursbyvoice = parseCommon.cloneHashOfHash(this.slursbyvoiceSave);\n\tthis.tiesbyvoice = parseCommon.cloneHashOfArrayOfHash(this.tiesbyvoiceSave);\n};\n\n// function writeMeasureWidth(voice) {\n// \tvar width = 0;\n// \tfor (var i = voice.children.length-1; i >= 0; i--) {\n// \t\tvar elem = voice.children[i];\n// \t\tif (elem.abcelem.el_type === 'bar')\n// \t\t\tbreak;\n// \t\twidth += elem.w;\n// \t}\n// \treturn new RelativeElement(width.toFixed(2), -70, 0, undefined, {type:\"debug\"});\n// }\n\n// return an array of AbsoluteElement\nAbstractEngraver.prototype.createABCElement = function (isFirstStaff, isSingleLineStaff, voice, elem) {\n\tvar elemset = [];\n\tswitch (elem.el_type) {\n\t\tcase undefined:\n\t\t\t// it is undefined if we were passed an array in - an array means a set of notes that should be beamed together.\n\t\t\telemset = this.createBeam(isSingleLineStaff, voice, elem);\n\t\t\tbreak;\n\t\tcase \"note\":\n\t\t\telemset[0] = this.createNote(elem, false, isSingleLineStaff, voice);\n\t\t\tif (this.triplet && this.triplet.isClosed()) {\n\t\t\t\tvoice.addOther(this.triplet);\n\t\t\t\tthis.triplet = null;\n\t\t\t\tthis.tripletmultiplier = 1;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"bar\":\n\t\t\telemset[0] = this.createBarLine(voice, elem, isFirstStaff);\n\t\t\tif (voice.duplicate && elemset.length > 0) elemset[0].invisible = true;\n\t\t\t//\t  elemset[0].addChild(writeMeasureWidth(voice));\n\t\t\tbreak;\n\t\tcase \"meter\":\n\t\t\telemset[0] = createTimeSignature(elem, this.tuneNumber);\n\t\t\tthis.startlimitelem = elemset[0]; // limit ties here\n\t\t\tif (voice.duplicate && elemset.length > 0) elemset[0].invisible = true;\n\t\t\tbreak;\n\t\tcase \"clef\":\n\t\t\telemset[0] = createClef(elem, this.tuneNumber);\n\t\t\tif (!elemset[0]) return null;\n\t\t\tif (voice.duplicate && elemset.length > 0) elemset[0].invisible = true;\n\t\t\tbreak;\n\t\tcase \"key\":\n\t\t\tvar absKey = createKeySignature(elem, this.tuneNumber);\n\t\t\tif (absKey) {\n\t\t\t\telemset[0] = absKey;\n\t\t\t\tthis.startlimitelem = elemset[0]; // limit ties here\n\t\t\t}\n\t\t\tif (voice.duplicate && elemset.length > 0) elemset[0].invisible = true;\n\t\t\tbreak;\n\t\tcase \"stem\":\n\t\t\tthis.stemdir = elem.direction === \"auto\" ? undefined : elem.direction;\n\t\t\tbreak;\n\t\tcase \"part\":\n\t\t\tvar abselem = new AbsoluteElement(elem, 0, 0, 'part', this.tuneNumber);\n\t\t\tvar dim = this.getTextSize.calc(elem.title, 'partsfont', \"part\");\n\t\t\tabselem.addFixedX(new RelativeElement(elem.title, 0, 0, undefined, { type: \"part\", height: dim.height / spacing.STEP }));\n\t\t\telemset[0] = abselem;\n\t\t\tbreak;\n\t\tcase \"tempo\":\n\t\t\tvar abselem3 = new AbsoluteElement(elem, 0, 0, 'tempo', this.tuneNumber);\n\t\t\tabselem3.addFixedX(new TempoElement(elem, this.tuneNumber, createNoteHead));\n\t\t\telemset[0] = abselem3;\n\t\t\tbreak;\n\t\tcase \"style\":\n\t\t\tif (elem.head === \"normal\")\n\t\t\t\tdelete this.style;\n\t\t\telse\n\t\t\t\tthis.style = elem.head;\n\t\t\tbreak;\n\t\tcase \"hint\":\n\t\t\thint = true;\n\t\t\tthis.saveState();\n\t\t\tbreak;\n\t\tcase \"midi\":\n\t\t\t// This has no effect on the visible music, so just skip it.\n\t\t\tbreak;\n\t\tcase \"scale\":\n\t\t\tthis.voiceScale = elem.size;\n\t\t\tbreak;\n\t\tcase \"color\":\n\t\t\tthis.voiceColor = elem.color;\n\t\t\tvoice.color = this.voiceColor;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tvar abselem2 = new AbsoluteElement(elem, 0, 0, 'unsupported', this.tuneNumber);\n\t\t\tabselem2.addFixed(new RelativeElement(\"element type \" + elem.el_type, 0, 0, undefined, { type: \"debug\" }));\n\t\t\telemset[0] = abselem2;\n\t}\n\n\treturn elemset;\n};\n\nfunction setAveragePitch(elem) {\n\tif (elem.pitches) {\n\t\tsortPitch(elem);\n\t\tvar sum = 0;\n\t\tfor (var p = 0; p < elem.pitches.length; p++) {\n\t\t\tsum += elem.pitches[p].verticalPos;\n\t\t}\n\t\telem.averagepitch = sum / elem.pitches.length;\n\t\telem.minpitch = elem.pitches[0].verticalPos;\n\t\telem.maxpitch = elem.pitches[elem.pitches.length - 1].verticalPos;\n\t}\n}\n\nAbstractEngraver.prototype.createBeam = function (isSingleLineStaff, voice, elems) {\n\tvar abselemset = [];\n\n\tvar beamelem = new BeamElem(this.stemHeight * this.voiceScale, this.stemdir, this.flatBeams, elems[0]);\n\tif (hint) beamelem.setHint();\n\tfor (var i = 0; i < elems.length; i++) {\n\t\t// Do a first pass to figure out the stem direction before creating the notes, so that staccatos and other decorations can be placed correctly.\n\t\tbeamelem.runningDirection(elems[i])\n\t}\n\tbeamelem.setStemDirection()\n\tvar tempStemDir = this.stemdir\n\tthis.stemdir = beamelem.stemsUp ? 'up' : 'down'\n\tfor (i = 0; i < elems.length; i++) {\n\t\tvar elem = elems[i];\n\t\tvar abselem = this.createNote(elem, true, isSingleLineStaff, voice);\n\t\tabselemset.push(abselem);\n\t\tbeamelem.add(abselem);\n\t\tif (this.triplet && this.triplet.isClosed()) {\n\t\t\tvoice.addOther(this.triplet);\n\t\t\tthis.triplet = null;\n\t\t\tthis.tripletmultiplier = 1;\n\t\t}\n\t}\n\tbeamelem.calcDir();\n\tvoice.addBeam(beamelem);\n\tthis.stemdir = tempStemDir\n\treturn abselemset;\n};\n\nvar sortPitch = function (elem) {\n\tvar sorted;\n\tdo {\n\t\tsorted = true;\n\t\tfor (var p = 0; p < elem.pitches.length - 1; p++) {\n\t\t\tif (elem.pitches[p].pitch > elem.pitches[p + 1].pitch) {\n\t\t\t\tsorted = false;\n\t\t\t\tvar tmp = elem.pitches[p];\n\t\t\t\telem.pitches[p] = elem.pitches[p + 1];\n\t\t\t\telem.pitches[p + 1] = tmp;\n\t\t\t}\n\t\t}\n\t} while (!sorted);\n};\n\nvar ledgerLines = function (abselem, minPitch, maxPitch, isRest, symbolWidth, additionalLedgers, dir, dx, scale) {\n\tfor (var i = maxPitch; i > 11; i--) {\n\t\tif (i % 2 === 0 && !isRest) {\n\t\t\tabselem.addFixed(new RelativeElement(null, dx, (symbolWidth + 4) * scale, i, { type: \"ledger\" }));\n\t\t}\n\t}\n\n\tfor (i = minPitch; i < 1; i++) {\n\t\tif (i % 2 === 0 && !isRest) {\n\t\t\tabselem.addFixed(new RelativeElement(null, dx, (symbolWidth + 4) * scale, i, { type: \"ledger\" }));\n\t\t}\n\t}\n\n\tfor (i = 0; i < additionalLedgers.length; i++) { // PER: draw additional ledgers\n\t\tvar ofs = symbolWidth;\n\t\tif (dir === 'down') ofs = -ofs;\n\t\tabselem.addFixed(new RelativeElement(null, ofs + dx, (symbolWidth + 4) * scale, additionalLedgers[i], { type: \"ledger\" }));\n\t}\n};\n\nAbstractEngraver.prototype.addGraceNotes = function (elem, voice, abselem, notehead, stemHeight, isBagpipes, roomtaken) {\n\tvar gracescale = 3 / 5;\n\tvar graceScaleStem = 3.5 / 5; // TODO-PER: empirically found constant.\n\tstemHeight = Math.round(stemHeight * graceScaleStem);\n\tvar gracebeam = null;\n\tvar flag;\n\n\tif (elem.gracenotes.length > 1) {\n\t\tgracebeam = new BeamElem(stemHeight, \"grace\", isBagpipes);\n\t\tif (hint) gracebeam.setHint();\n\t\tgracebeam.mainNote = abselem;\t// this gives us a reference back to the note this is attached to so that the stems can be attached somewhere.\n\t}\n\n\tvar i;\n\tvar graceoffsets = [];\n\tfor (i = elem.gracenotes.length - 1; i >= 0; i--) { // figure out where to place each gracenote\n\t\troomtaken += 10;\n\t\tgraceoffsets[i] = roomtaken;\n\t\tif (elem.gracenotes[i].accidental) {\n\t\t\troomtaken += 7;\n\t\t}\n\t}\n\n\tfor (i = 0; i < elem.gracenotes.length; i++) {\n\t\tvar gracepitch = elem.gracenotes[i].verticalPos;\n\n\t\tflag = (gracebeam) ? null : chartable.uflags[(isBagpipes) ? 5 : 3];\n\t\tvar accidentalSlot = [];\n\t\tvar ret = createNoteHead(abselem, \"noteheads.quarter\", elem.gracenotes[i],\n\t\t\t{ dir: \"up\", headx: -graceoffsets[i], extrax: -graceoffsets[i], flag: flag, scale: gracescale * this.voiceScale, accidentalSlot: accidentalSlot });\n\t\tret.notehead.highestVert = ret.notehead.pitch + stemHeight;\n\t\tvar grace = ret.notehead;\n\t\tthis.addSlursAndTies(abselem, elem.gracenotes[i], grace, voice, \"up\", true);\n\n\t\tabselem.addExtra(grace);\n\t\t// PER: added acciaccatura slash\n\t\tif (elem.gracenotes[i].acciaccatura) {\n\t\t\tvar pos = elem.gracenotes[i].verticalPos + 7 * gracescale;        // the same formula that determines the flag position.\n\t\t\tvar dAcciaccatura = gracebeam ? 5 : 6;        // just an offset to make it line up correctly.\n\t\t\tabselem.addRight(new RelativeElement(\"flags.ugrace\", -graceoffsets[i] + dAcciaccatura, 0, pos, { scalex: gracescale, scaley: gracescale }));\n\t\t}\n\t\tif (gracebeam) { // give the beam the necessary info\n\t\t\tvar graceDuration = elem.gracenotes[i].duration / 2;\n\t\t\tif (isBagpipes) graceDuration /= 2;\n\t\t\tvar pseudoabselem = {\n\t\t\t\theads: [grace],\n\t\t\t\tabcelem: { averagepitch: gracepitch, minpitch: gracepitch, maxpitch: gracepitch, duration: graceDuration }\n\t\t\t};\n\t\t\tgracebeam.add(pseudoabselem);\n\t\t} else { // draw the stem\n\t\t\tvar p1 = gracepitch + 1 / 3 * gracescale;\n\t\t\tvar p2 = gracepitch + 7 * gracescale;\n\t\t\tvar dx = grace.dx + grace.w;\n\t\t\tvar width = -0.6;\n\t\t\tabselem.addExtra(new RelativeElement(null, dx, 0, p1, { \"type\": \"stem\", \"pitch2\": p2, linewidth: width }));\n\t\t}\n\t\tledgerLines(abselem, gracepitch, gracepitch, false, glyphs.getSymbolWidth(\"noteheads.quarter\"), [], true, grace.dx - 1, 0.6);\n\n\t\t// if this is the first grace note, we might want to start a slur.\n\t\t// there is a slur if graceSlurs is specifically set.\n\t\t// there is no slur if it is bagpipes.\n\t\t// there is not a slur if the element is a spacer or invisible rest.\n\t\tvar isInvisibleRest = elem.rest && (elem.rest.type === \"spacer\" || elem.rest.type === \"invisible\");\n\t\tif (i === 0 && !isBagpipes && this.graceSlurs && !isInvisibleRest) {\n\t\t\t// This is the overall slur that is under the grace notes.\n\t\t\tvoice.addOther(new TieElem({ anchor1: grace, anchor2: notehead, isGrace: true }));\n\t\t}\n\t}\n\n\tif (gracebeam) {\n\t\tgracebeam.calcDir();\n\t\tvoice.addBeam(gracebeam);\n\t}\n\treturn roomtaken;\n};\n\nfunction addRestToAbsElement(abselem, elem, duration, dot, isMultiVoice, stemdir, isSingleLineStaff, durlog, voiceScale) {\n\tvar c;\n\tvar restpitch = 7;\n\tvar noteHead;\n\tvar roomTaken;\n\tvar roomTakenRight;\n\n\tif (isMultiVoice) {\n\t\tif (stemdir === \"down\") restpitch = 3;\n\t\tif (stemdir === \"up\") restpitch = 11;\n\t}\n\t// There is special placement for the percussion staff. If there is one staff line, then move the rest position.\n\tif (isSingleLineStaff) {\n\t\t// The half and whole rests are attached to different lines normally, so we need to tweak their position to get them to both be attached to the same one.\n\t\tif (duration < 0.5)\n\t\t\trestpitch = 7;\n\t\telse if (duration < 1)\n\t\t\trestpitch = 7;\t// half rest\n\t\telse\n\t\t\trestpitch = 5; // whole rest\n\t}\n\tswitch (elem.rest.type) {\n\t\tcase \"whole\":\n\t\t\tc = chartable.rest[0];\n\t\t\telem.averagepitch = restpitch;\n\t\t\telem.minpitch = restpitch;\n\t\t\telem.maxpitch = restpitch;\n\t\t\tdot = 0;\n\t\t\tbreak;\n\t\tcase \"rest\":\n\t\t\tif (elem.style === \"rhythm\") // special case for rhythm: rests are a handy way to express the rhythm.\n\t\t\t\tc = chartable.rhythm[-durlog];\n\t\t\telse\n\t\t\t\tc = chartable.rest[-durlog];\n\t\t\telem.averagepitch = restpitch;\n\t\t\telem.minpitch = restpitch;\n\t\t\telem.maxpitch = restpitch;\n\t\t\tbreak;\n\t\tcase \"invisible\":\n\t\tcase \"invisible-multimeasure\":\n\t\tcase \"spacer\":\n\t\t\tc = \"\";\n\t\t\telem.averagepitch = restpitch;\n\t\t\telem.minpitch = restpitch;\n\t\t\telem.maxpitch = restpitch;\n\t\t\tbreak;\n\t\tcase \"multimeasure\":\n\t\t\tc = chartable.rest['multi'];\n\t\t\telem.averagepitch = restpitch;\n\t\t\telem.minpitch = restpitch;\n\t\t\telem.maxpitch = restpitch;\n\t\t\tdot = 0;\n\t\t\tvar mmWidth = glyphs.getSymbolWidth(c);\n\t\t\tabselem.addHead(new RelativeElement(c, mmWidth, mmWidth * 2, 7));\n\t\t\tvar numMeasures = new RelativeElement(\"\" + elem.rest.text, mmWidth, mmWidth, 16, { type: \"multimeasure-text\" });\n\t\t\tabselem.addExtra(numMeasures);\n\t}\n\tif (elem.rest.type.indexOf(\"multimeasure\") < 0 && elem.rest.type !== \"invisible\") {\n\t\tvar ret = createNoteHead(abselem, c, { verticalPos: restpitch },\n\t\t\t{ dot: dot, scale: voiceScale });\n\t\tnoteHead = ret.notehead;\n\t\tif (noteHead) {\n\t\t\tabselem.addHead(noteHead);\n\t\t\troomTaken = ret.accidentalshiftx;\n\t\t\troomTakenRight = ret.dotshiftx;\n\t\t}\n\t}\n\treturn { noteHead: noteHead, roomTaken: roomTaken, roomTakenRight: roomTakenRight };\n}\n\nfunction addIfNotExist(arr, item) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (JSON.stringify(arr[i]) === JSON.stringify(item))\n\t\t\treturn;\n\t}\n\tarr.push(item);\n}\n\nAbstractEngraver.prototype.addNoteToAbcElement = function (abselem, elem, dot, stemdir, style, zeroDuration, durlog, nostem, voice) {\n\tvar dotshiftx = 0; // room taken by chords with displaced noteheads which cause dots to shift\n\tvar noteHead;\n\tvar roomTaken = 0;\n\tvar roomTakenRight = 0;\n\tvar min;\n\tvar i;\n\tvar additionalLedgers = [];\n\t// The accidentalSlot will hold a list of all the accidentals on this chord. Each element is a vertical place,\n\t// and contains a pitch, which is the last pitch that contains an accidental in that slot. The slots are numbered\n\t// from closest to the note to farther left. We only need to know the last accidental we placed because\n\t// we know that the pitches are sorted by now.\n\tvar accidentalSlot = [];\n\tvar symbolWidth = 0;\n\n\tvar dir = (elem.averagepitch >= 6) ? \"down\" : \"up\";\n\tif (stemdir) dir = stemdir;\n\n\tstyle = elem.style ? elem.style : style; // get the style of note head.\n\tif (!style || style === \"normal\") style = \"note\";\n\tvar noteSymbol;\n\tif (zeroDuration)\n\t\tnoteSymbol = chartable[style].nostem;\n\telse\n\t\tnoteSymbol = chartable[style][-durlog];\n\tif (!noteSymbol)\n\t\tconsole.log(\"noteSymbol:\", style, durlog, zeroDuration);\n\n\t// determine elements of chords which should be shifted\n\tvar p;\n\tfor (p = (dir === \"down\") ? elem.pitches.length - 2 : 1; (dir === \"down\") ? p >= 0 : p < elem.pitches.length; p = (dir === \"down\") ? p - 1 : p + 1) {\n\t\tvar prev = elem.pitches[(dir === \"down\") ? p + 1 : p - 1];\n\t\tvar curr = elem.pitches[p];\n\t\tvar delta = (dir === \"down\") ? prev.pitch - curr.pitch : curr.pitch - prev.pitch;\n\t\tif (delta <= 1 && !prev.printer_shift) {\n\t\t\tcurr.printer_shift = (delta) ? \"different\" : \"same\";\n\t\t\tif (curr.verticalPos > 11 || curr.verticalPos < 1) {        // PER: add extra ledger line\n\t\t\t\tadditionalLedgers.push(curr.verticalPos - (curr.verticalPos % 2));\n\t\t\t}\n\t\t\tif (dir === \"down\") {\n\t\t\t\troomTaken = glyphs.getSymbolWidth(noteSymbol) + 2;\n\t\t\t} else {\n\t\t\t\tdotshiftx = glyphs.getSymbolWidth(noteSymbol) + 2;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar pp = elem.pitches.length;\n\tfor (p = 0; p < elem.pitches.length; p++) {\n\n\t\tif (!nostem) {\n\t\t\tvar flag;\n\t\t\tif ((dir === \"down\" && p !== 0) || (dir === \"up\" && p !== pp - 1)) { // not the stemmed elem of the chord\n\t\t\t\tflag = null;\n\t\t\t} else {\n\t\t\t\tflag = chartable[(dir === \"down\") ? \"dflags\" : \"uflags\"][-durlog];\n\t\t\t}\n\t\t}\n\t\tvar c;\n\t\tif (elem.pitches[p].style) { // There is a style for the whole group of pitches, but there could also be an override for a particular pitch.\n\t\t\tc = chartable[elem.pitches[p].style][-durlog];\n\t\t} else if (voice.isPercussion && this.percmap) {\n\t\t\tc = noteSymbol;\n\t\t\tvar percHead = this.percmap[pitchesToPerc(elem.pitches[p])];\n\t\t\tif (percHead && percHead.noteHead) {\n\t\t\t\tif (chartable[percHead.noteHead])\n\t\t\t\t\tc = chartable[percHead.noteHead][-durlog];\n\t\t\t}\n\t\t} else\n\t\t\tc = noteSymbol;\n\t\t// The highest position for the sake of placing slurs is itself if the slur is internal. It is the highest position possible if the slur is for the whole chord.\n\t\t// If the note is the only one in the chord, then any slur it has counts as if it were on the whole chord.\n\t\telem.pitches[p].highestVert = elem.pitches[p].verticalPos;\n\t\tvar isTopWhenStemIsDown = (stemdir === \"up\" || dir === \"up\") && p === 0;\n\t\tvar isBottomWhenStemIsUp = (stemdir === \"down\" || dir === \"down\") && p === pp - 1;\n\t\tif (isTopWhenStemIsDown || isBottomWhenStemIsUp) { // place to put slurs if not already on pitches\n\n\t\t\tif (elem.startSlur || pp === 1) {\n\t\t\t\telem.pitches[p].highestVert = elem.pitches[pp - 1].verticalPos;\n\t\t\t\tif (getDuration(elem) < 1 && (stemdir === \"up\" || dir === \"up\"))\n\t\t\t\t\telem.pitches[p].highestVert += 6;        // If the stem is up, then compensate for the length of the stem\n\t\t\t}\n\t\t\tif (elem.startSlur) {\n\t\t\t\tif (!elem.pitches[p].startSlur) elem.pitches[p].startSlur = []; //TODO possibly redundant, provided array is not optional\n\t\t\t\tfor (i = 0; i < elem.startSlur.length; i++) {\n\t\t\t\t\taddIfNotExist(elem.pitches[p].startSlur, elem.startSlur[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (elem.endSlur) {\n\t\t\t\telem.pitches[p].highestVert = elem.pitches[pp - 1].verticalPos;\n\t\t\t\tif (getDuration(elem) < 1 && (stemdir === \"up\" || dir === \"up\"))\n\t\t\t\t\telem.pitches[p].highestVert += 6;        // If the stem is up, then compensate for the length of the stem\n\t\t\t\tif (!elem.pitches[p].endSlur) elem.pitches[p].endSlur = []; //TODO possibly redundant, provided array is not optional\n\t\t\t\tfor (i = 0; i < elem.endSlur.length; i++) {\n\t\t\t\t\taddIfNotExist(elem.pitches[p].endSlur, elem.endSlur[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar hasStem = !nostem && durlog <= -1;\n\t\tvar ret = createNoteHead(abselem, c, elem.pitches[p],\n\t\t\t{ dir: dir, extrax: -roomTaken, flag: flag, dot: dot, dotshiftx: dotshiftx, scale: this.voiceScale, accidentalSlot: accidentalSlot, shouldExtendStem: !stemdir, printAccidentals: !voice.isPercussion });\n\t\tsymbolWidth = Math.max(glyphs.getSymbolWidth(c), symbolWidth);\n\t\tabselem.extraw -= ret.extraLeft;\n\t\tnoteHead = ret.notehead;\n\t\tif (noteHead) {\n\t\t\tthis.addSlursAndTies(abselem, elem.pitches[p], noteHead, voice, hasStem ? dir : null, false);\n\n\t\t\tif (elem.gracenotes && elem.gracenotes.length > 0)\n\t\t\t\tnoteHead.bottom = noteHead.bottom - 1;\t // If there is a tie to the grace notes, leave a little more room for the note to avoid collisions.\n\t\t\tabselem.addHead(noteHead);\n\t\t}\n\t\troomTaken += ret.accidentalshiftx;\n\t\troomTakenRight = Math.max(roomTakenRight, ret.dotshiftx);\n\t}\n\n\t// draw stem from the furthest note to a pitch above/below the stemmed note\n\tif (hasStem) {\n\t\tvar stemHeight = Math.round(70 * this.voiceScale) / 10;\n\t\tvar p1 = (dir === \"down\") ? elem.minpitch - stemHeight : elem.minpitch + 1 / 3;\n\t\t// PER added stemdir test to make the line meet the note.\n\t\tif (p1 > 6 && !stemdir) p1 = 6;\n\t\tvar p2 = (dir === \"down\") ? elem.maxpitch - 1 / 3 : elem.maxpitch + stemHeight;\n\t\t// PER added stemdir test to make the line meet the note.\n\t\tif (p2 < 6 && !stemdir) p2 = 6;\n\t\tvar dx = (dir === \"down\" || abselem.heads.length === 0) ? 0 : abselem.heads[0].w;\n\t\tvar width = (dir === \"down\") ? 1 : -1;\n\t\t// TODO-PER-HACK: One type of note head has a different placement of the stem. This should be more generically calculated:\n\t\tif (noteHead && noteHead.c === 'noteheads.slash.quarter') {\n\t\t\tif (dir === 'down')\n\t\t\t\tp2 -= 1;\n\t\t\telse\n\t\t\t\tp1 += 1;\n\t\t}\n\t\tif (noteHead && noteHead.c === 'noteheads.triangle.quarter') {\n\t\t\tif (dir === 'down')\n\t\t\t\tp2 -= 0.7;\n\t\t\telse\n\t\t\t\tp1 -= 1.2;\n\t\t}\n\t\tabselem.addRight(new RelativeElement(null, dx, 0, p1, { \"type\": \"stem\", \"pitch2\": p2, linewidth: width, bottom: p1 - 1 }));\n\t\t//var RelativeElement = function RelativeElement(c, dx, w, pitch, opt) {\n\t\tmin = Math.min(p1, p2);\n\t}\n\treturn { noteHead: noteHead, roomTaken: roomTaken, roomTakenRight: roomTakenRight, min: min, additionalLedgers: additionalLedgers, dir: dir, symbolWidth: symbolWidth };\n};\n\nAbstractEngraver.prototype.addLyric = function (abselem, elem) {\n\tvar lyricStr = \"\";\n\telem.lyric.forEach(function (ly) {\n\t\tvar div = ly.divider === ' ' ? \"\" : ly.divider;\n\t\tlyricStr += ly.syllable + div + \"\\n\";\n\t});\n\tvar lyricDim = this.getTextSize.calc(lyricStr, 'vocalfont', \"lyric\");\n\tvar position = elem.positioning ? elem.positioning.vocalPosition : 'below';\n\tabselem.addCentered(new RelativeElement(lyricStr, 0, lyricDim.width, undefined, { type: \"lyric\", position: position, height: lyricDim.height / spacing.STEP, dim: this.getTextSize.attr('vocalfont', \"lyric\") }));\n};\n\nAbstractEngraver.prototype.createNote = function (elem, nostem, isSingleLineStaff, voice) { //stem presence: true for drawing stemless notehead\n\tvar notehead = null;\n\tvar roomtaken = 0; // room needed to the left of the note\n\tvar roomtakenright = 0; // room needed to the right of the note\n\tvar symbolWidth = 0;\n\tvar additionalLedgers = []; // PER: handle the case of [bc'], where the b doesn't have a ledger line\n\n\tvar dir;\n\n\tvar duration = getDuration(elem);\n\tvar zeroDuration = false;\n\tif (duration === 0) { zeroDuration = true; duration = 0.25; nostem = true; }        //PER: zero duration will draw a quarter note head.\n\tvar durlog = Math.floor(Math.log(duration) / Math.log(2)); //TODO use getDurlog\n\tvar dot = 0;\n\n\tfor (var tot = Math.pow(2, durlog), inc = tot / 2; tot < duration; dot++, tot += inc, inc /= 2);\n\n\n\tif (elem.startTriplet) {\n\t\tthis.tripletmultiplier = elem.tripletMultiplier;\n\t}\n\n\tvar durationForSpacing = duration * this.tripletmultiplier;\n\tif (elem.rest && elem.rest.type === 'multimeasure')\n\t\tdurationForSpacing = 1;\n\tif (elem.rest && elem.rest.type === 'invisible-multimeasure')\n\t\tdurationForSpacing = this.measureLength * elem.rest.text;\n\tvar absType = elem.rest ? \"rest\" : \"note\";\n\tvar abselem = new AbsoluteElement(elem, durationForSpacing, 1, absType, this.tuneNumber, { durationClassOveride: elem.duration * this.tripletmultiplier });\n\tif (hint) abselem.setHint();\n\n\tif (elem.rest) {\n\t\tif (this.measureLength === duration && elem.rest.type !== 'invisible' && elem.rest.type !== 'spacer' && elem.rest.type.indexOf('multimeasure') < 0)\n\t\t\telem.rest.type = 'whole'; // If the rest is exactly a measure, always use a whole rest\n\t\tvar ret1 = addRestToAbsElement(abselem, elem, duration, dot, voice.voicetotal > 1, this.stemdir, isSingleLineStaff, durlog, this.voiceScale);\n\t\tnotehead = ret1.noteHead;\n\t\troomtaken = ret1.roomTaken;\n\t\troomtakenright = ret1.roomTakenRight;\n\t} else {\n\t\tvar ret2 = this.addNoteToAbcElement(abselem, elem, dot, this.stemdir, this.style, zeroDuration, durlog, nostem, voice);\n\t\tif (ret2.min !== undefined)\n\t\t\tthis.minY = Math.min(ret2.min, this.minY);\n\t\tnotehead = ret2.noteHead;\n\t\troomtaken = ret2.roomTaken;\n\t\troomtakenright = ret2.roomTakenRight;\n\t\tadditionalLedgers = ret2.additionalLedgers;\n\t\tdir = ret2.dir;\n\t\tsymbolWidth = ret2.symbolWidth;\n\t}\n\n\tif (elem.lyric !== undefined) {\n\t\tthis.addLyric(abselem, elem);\n\t}\n\n\tif (elem.gracenotes !== undefined) {\n\t\troomtaken += this.addGraceNotes(elem, voice, abselem, notehead, this.stemHeight * this.voiceScale, this.isBagpipes, roomtaken);\n\t}\n\n\tif (elem.decoration) {\n\t\t// TODO-PER: nostem is true if this is beamed. In that case we don't know where to place the decoration yet so just make a guess. This should be refactored to not place decorations until after the beams are determined.\n\t\t// This should probably be combined with moveDecorations()\n\t\tvar bottom = nostem && dir !== 'up' ? Math.min(-3, abselem.bottom - 6) : abselem.bottom\n\t\tthis.decoration.createDecoration(voice, elem.decoration, abselem.top, (notehead) ? notehead.w : 0, abselem, roomtaken, dir, bottom, elem.positioning, this.hasVocals, this.accentAbove);\n\t}\n\n\tif (elem.barNumber) {\n\t\tabselem.addFixed(new RelativeElement(elem.barNumber, -10, 0, 0, { type: \"barNumber\" }));\n\t}\n\n\t// ledger lines\n\tledgerLines(abselem, elem.minpitch, elem.maxpitch, elem.rest, symbolWidth, additionalLedgers, dir, -2, 1);\n\n\tif (elem.chord !== undefined) {\n\t\tvar ret3 = addChord(this.getTextSize, abselem, elem, roomtaken, roomtakenright, symbolWidth, this.jazzchords, this.germanAlphabet);\n\t\troomtaken = ret3.roomTaken;\n\t\troomtakenright = ret3.roomTakenRight;\n\t}\n\n\tif (elem.startTriplet) {\n\t\tthis.triplet = new TripletElem(elem.startTriplet, notehead, { flatBeams: this.flatBeams }); // above is opposite from case of slurs\n\t}\n\n\tif (elem.endTriplet && this.triplet) {\n\t\tthis.triplet.setCloseAnchor(notehead);\n\t}\n\n\tif (this.triplet && !elem.startTriplet && !elem.endTriplet && !(elem.rest && elem.rest.type === \"spacer\")) {\n\t\tthis.triplet.middleNote(notehead);\n\t}\n\n\treturn abselem;\n};\n\nAbstractEngraver.prototype.addSlursAndTies = function (abselem, pitchelem, notehead, voice, dir, isGrace) {\n\tif (pitchelem.endTie) {\n\t\tif (this.ties.length > 0) {\n\t\t\t// If there are multiple open ties, find the one that applies by matching the pitch, if possible.\n\t\t\tvar found = false;\n\t\t\tfor (var j = 0; j < this.ties.length; j++) {\n\t\t\t\tif (this.ties[j].anchor1 && this.ties[j].anchor1.pitch === notehead.pitch) {\n\t\t\t\t\tthis.ties[j].setEndAnchor(notehead);\n\t\t\t\t\tvoice.setRange(this.ties[j])\n\t\t\t\t\tthis.ties.splice(j, 1);\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\tthis.ties[0].setEndAnchor(notehead);\n\t\t\t\tvoice.setRange(this.ties[0])\n\t\t\t\tthis.ties.splice(0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar voiceNumber = voice.voicetotal < 2 ? -1 : voice.voicenumber;\n\tif (pitchelem.startTie) {\n\t\tvar tie = new TieElem({ anchor1: notehead, force: (this.stemdir === \"down\" || this.stemdir === \"up\"), stemDir: this.stemdir, isGrace: isGrace, voiceNumber: voiceNumber, style: pitchelem.startTie.style });\n\t\tif (hint) tie.setHint();\n\n\t\tthis.ties[this.ties.length] = tie;\n\t\tvoice.addOther(tie);\n\t\t// HACK-PER: For the animation, we need to know if a note is tied to the next one, so here's a flag.\n\t\t// Unfortunately, only some of the notes in the current event might be tied, but this will consider it\n\t\t// tied if any one of them is. That will work for most cases.\n\t\tabselem.startTie = true;\n\t}\n\n\tvar slur;\n\tvar slurid;\n\tif (pitchelem.endSlur) {\n\t\tfor (var i = 0; i < pitchelem.endSlur.length; i++) {\n\t\t\tslurid = pitchelem.endSlur[i];\n\t\t\tif (this.slurs[slurid]) {\n\t\t\t\tslur = this.slurs[slurid];\n\t\t\t\tslur.setEndAnchor(notehead);\n\t\t\t\tvoice.setRange(slur)\n\t\t\t\tdelete this.slurs[slurid];\n\t\t\t} else {\n\t\t\t\tslur = new TieElem({ anchor2: notehead, stemDir: this.stemdir, voiceNumber: voiceNumber });\n\t\t\t\tif (hint) slur.setHint();\n\t\t\t\tvoice.addOther(slur);\n\t\t\t}\n\t\t\tif (this.startlimitelem) {\n\t\t\t\tslur.setStartX(this.startlimitelem);\n\t\t\t}\n\t\t}\n\t} else if (!isGrace) {\n\t\tfor (var s in this.slurs) {\n\t\t\tif (this.slurs.hasOwnProperty(s)) {\n\t\t\t\tthis.slurs[s].addInternalNote(notehead);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (pitchelem.startSlur) {\n\t\tfor (i = 0; i < pitchelem.startSlur.length; i++) {\n\t\t\tslurid = pitchelem.startSlur[i].label;\n\t\t\tslur = new TieElem({ anchor1: notehead, stemDir: this.stemdir, voiceNumber: voiceNumber, style: pitchelem.startSlur[i].style });\n\t\t\tif (hint) slur.setHint();\n\t\t\tthis.slurs[slurid] = slur;\n\t\t\tvoice.addOther(slur);\n\t\t}\n\t}\n};\n\nAbstractEngraver.prototype.addMeasureNumber = function (number, abselem) {\n\tvar measureNumDim = this.getTextSize.calc(number, \"measurefont\", 'bar-number');\n\tvar dx = 0;\n\tif (abselem.isClef) // If this is a clef rather than bar line, then the number shouldn't be centered because it could overlap the left side. This is an easy way to let it be centered but move it over, too.\n\t\tdx += measureNumDim.width / 2\n\t// MAE 1 Oct 2024 - Change 13 to 13.5 since previously bar numbers were very slightly overlapping the top of the clef\n\tvar vert = measureNumDim.width > 10 && abselem.abcelem.type === \"treble\" ? 13.5 : 11\n\tabselem.addFixed(new RelativeElement(number, dx, measureNumDim.width, vert + measureNumDim.height / spacing.STEP, { type: \"barNumber\", dim: this.getTextSize.attr(\"measurefont\", 'bar-number') }));\n};\n\nAbstractEngraver.prototype.createBarLine = function (voice, elem, isFirstStaff) {\n\t// bar_thin, bar_thin_thick, bar_thin_thin, bar_thick_thin, bar_right_repeat, bar_left_repeat, bar_double_repeat\n\n\tvar abselem = new AbsoluteElement(elem, 0, 10, 'bar', this.tuneNumber);\n\tvar anchor = null; // place to attach part lines\n\tvar dx = 0;\n\n\tif (elem.barNumber) {\n\t\tthis.addMeasureNumber(elem.barNumber, abselem);\n\t}\n\n\n\tvar firstdots = (elem.type === \"bar_right_repeat\" || elem.type === \"bar_dbl_repeat\");\n\tvar firstthin = (elem.type !== \"bar_left_repeat\" && elem.type !== \"bar_thick_thin\" && elem.type !== \"bar_invisible\");\n\tvar thick = (elem.type === \"bar_right_repeat\" || elem.type === \"bar_dbl_repeat\" || elem.type === \"bar_left_repeat\" ||\n\t\telem.type === \"bar_thin_thick\" || elem.type === \"bar_thick_thin\");\n\tvar secondthin = (elem.type === \"bar_left_repeat\" || elem.type === \"bar_thick_thin\" || elem.type === \"bar_thin_thin\" || elem.type === \"bar_dbl_repeat\");\n\tvar seconddots = (elem.type === \"bar_left_repeat\" || elem.type === \"bar_dbl_repeat\");\n\n\t// limit positioning of slurs\n\tif (firstdots || seconddots) {\n\t\tfor (var slur in this.slurs) {\n\t\t\tif (this.slurs.hasOwnProperty(slur)) {\n\t\t\t\tthis.slurs[slur].setEndX(abselem);\n\t\t\t}\n\t\t}\n\t\tthis.startlimitelem = abselem;\n\t}\n\n\tif (firstdots) {\n\t\tabselem.addRight(new RelativeElement(\"dots.dot\", dx, 1, 7));\n\t\tabselem.addRight(new RelativeElement(\"dots.dot\", dx, 1, 5));\n\t\tdx += 6; //2 hardcoded, twice;\n\t}\n\n\tif (firstthin) {\n\t\tanchor = new RelativeElement(null, dx, 1, 2, { \"type\": \"bar\", \"pitch2\": 10, linewidth: 0.6 });\n\t\tabselem.addRight(anchor);\n\t}\n\n\tif (elem.type === \"bar_invisible\") {\n\t\tanchor = new RelativeElement(null, dx, 1, 2, { \"type\": \"none\", \"pitch2\": 10, linewidth: 0.6 });\n\t\tabselem.addRight(anchor);\n\t}\n\n\tif (elem.decoration) {\n\t\tthis.decoration.createDecoration(voice, elem.decoration, 12, (thick) ? 3 : 1, abselem, 0, \"down\", 2, elem.positioning, this.hasVocals, this.accentAbove);\n\t}\n\n\tif (thick) {\n\t\tdx += 4; //3 hardcoded;\n\t\tanchor = new RelativeElement(null, dx, 4, 2, { \"type\": \"bar\", \"pitch2\": 10, linewidth: 4 });\n\t\tabselem.addRight(anchor);\n\t\tdx += 5;\n\t}\n\n\t// if (this.partstartelem && (thick || (firstthin && secondthin))) { // means end of nth part\n\t// this.partstartelem.anchor2=anchor;\n\t// this.partstartelem = null;\n\t// }\n\n\tif (this.partstartelem && elem.endEnding) {\n\t\tthis.partstartelem.anchor2 = anchor;\n\t\tthis.partstartelem = null;\n\t}\n\n\tif (secondthin) {\n\t\tdx += 3; //3 hardcoded;\n\t\tanchor = new RelativeElement(null, dx, 1, 2, { \"type\": \"bar\", \"pitch2\": 10, linewidth: 0.6 });\n\t\tabselem.addRight(anchor); // 3 is hardcoded\n\t}\n\n\tif (seconddots) {\n\t\tdx += 3; //3 hardcoded;\n\t\tabselem.addRight(new RelativeElement(\"dots.dot\", dx, 1, 7));\n\t\tabselem.addRight(new RelativeElement(\"dots.dot\", dx, 1, 5));\n\t} // 2 is hardcoded\n\n\tif (elem.startEnding && isFirstStaff) {\n\t\t// MAE 17 May 2025 - Fixes drawing issue\n\t\tif (voice.voicenumber === 0){\n\t\t\t// only put the first & second ending marks on the first staff\n\t\t\tvar textWidth = this.getTextSize.calc(elem.startEnding, \"repeatfont\", '').width;\n\t\t\tabselem.minspacing += textWidth + 10; // Give plenty of room for the ending number.\n\t\t\tthis.partstartelem = new EndingElem(elem.startEnding, anchor, null);\n\t\t\tvoice.addOther(this.partstartelem);\n\t\t}\n\t}\n\t// Add a little space to the left of the bar line so that nothing can crowd it.\n\tabselem.extraw -= 5;\n\n\tif (elem.chord !== undefined) {\n\t\tvar ret3 = addChord(this.getTextSize, abselem, elem, 0, 0, 0, false, this.germanAlphabet);\n\t}\n\n\treturn abselem;\n\n};\n\nmodule.exports = AbstractEngraver;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/abstract-engraver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/add-chord.js":
/*!************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/add-chord.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var RelativeElement = __webpack_require__(/*! ./elements/relative-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/relative-element.js\");\nvar spacing = __webpack_require__(/*! ../helpers/spacing */ \"(ssr)/./node_modules/abcjs/src/write/helpers/spacing.js\");\nconst translateChord = __webpack_require__(/*! ./translate-chord */ \"(ssr)/./node_modules/abcjs/src/write/creation/translate-chord.js\");\n\nvar addChord = function (getTextSize, abselem, elem, roomTaken, roomTakenRight, noteheadWidth, jazzchords, germanAlphabet) {\n\tfor (var i = 0; i < elem.chord.length; i++) {\n\t\tvar pos = elem.chord[i].position;\n\t\tvar rel_position = elem.chord[i].rel_position;\n\t\tvar isAnnotation = pos === \"left\" || pos === \"right\" || pos === \"below\" || pos === \"above\" || !!rel_position\n\t\tvar font;\n\t\tvar klass;\n\t\tif (isAnnotation) {\n\t\t\tfont = 'annotationfont';\n\t\t\tklass = \"abcjs-annotation\";\n\t\t} else {\n\t\t\tfont = 'gchordfont';\n\t\t\tklass = \"abcjs-chord\";\n\t\t}\n\t\tvar attr = getTextSize.attr(font, klass);\n\n\t\tvar name = elem.chord[i].name\n\t\tvar ret;\n\t\t//console.log(\"chord\",name)\n\t\tif (typeof name === \"string\") {\n\t\t\tret = chordString(name, pos, rel_position, isAnnotation, font, klass, attr, getTextSize, abselem, elem, roomTaken, roomTakenRight, noteheadWidth, jazzchords, germanAlphabet)\n\t\t\troomTaken = ret.roomTaken\n\t\t\troomTakenRight = ret.roomTakenRight\n\t\t} else {\n\t\t\tfor (var j = 0; j < name.length; j++) {\n\t\t\t\tret = chordString(name[j].text, pos, rel_position, isAnnotation, font, klass, attr, getTextSize, abselem, elem, roomTaken, roomTakenRight, noteheadWidth, jazzchords, germanAlphabet)\n\t\t\t\troomTaken = ret.roomTaken\n\t\t\t\troomTakenRight = ret.roomTakenRight\n\t\t\t}\n\t\t}\n\t}\n\treturn { roomTaken: roomTaken, roomTakenRight: roomTakenRight };\n};\n\nfunction chordString(chordString, pos, rel_position, isAnnotation, font, klass, attr, getTextSize, abselem, elem, roomTaken, roomTakenRight, noteheadWidth, jazzchords, germanAlphabet) {\n\tvar chords = chordString.split(\"\\n\");\n\tfor (var j = chords.length - 1; j >= 0; j--) { // parse these in opposite order because we place them from bottom to top.\n\t\tvar chord = chords[j];\n\t\tvar x = 0;\n\t\tvar y;\n\t\tif (!isAnnotation)\n\t\t\tchord = translateChord(chord, jazzchords, germanAlphabet);\n\t\tvar dim = getTextSize.calc(chord, font, klass);\n\t\tvar chordWidth = dim.width;\n\t\tvar chordHeight = dim.height / spacing.STEP;\n\t\tswitch (pos) {\n\t\t\tcase \"left\":\n\t\t\t\troomTaken += chordWidth + 7;\n\t\t\t\tx = -roomTaken;        // TODO-PER: This is just a guess from trial and error\n\t\t\t\ty = elem.averagepitch;\n\t\t\t\tabselem.addExtra(new RelativeElement(chord, x, chordWidth + 4, y, {\n\t\t\t\t\ttype: \"text\",\n\t\t\t\t\theight: chordHeight,\n\t\t\t\t\tdim: attr,\n\t\t\t\t\tposition: \"left\"\n\t\t\t\t}));\n\t\t\t\tbreak;\n\t\t\tcase \"right\":\n\t\t\t\troomTakenRight += 4;\n\t\t\t\tx = roomTakenRight;// TODO-PER: This is just a guess from trial and error\n\t\t\t\ty = elem.averagepitch;\n\t\t\t\tabselem.addRight(new RelativeElement(chord, x, chordWidth + 4, y, {\n\t\t\t\t\ttype: \"text\",\n\t\t\t\t\theight: chordHeight,\n\t\t\t\t\tdim: attr,\n\t\t\t\t\tposition: \"right\"\n\t\t\t\t}));\n\t\t\t\tbreak;\n\t\t\tcase \"below\":\n\t\t\t\t// setting the y-coordinate to undefined for now: it will be overwritten later on, after we figure out what the highest element on the line is.\n\t\t\t\tabselem.addRight(new RelativeElement(chord, 0, 0, undefined, {\n\t\t\t\t\ttype: \"text\",\n\t\t\t\t\tposition: \"below\",\n\t\t\t\t\theight: chordHeight,\n\t\t\t\t\tdim: attr,\n\t\t\t\t\trealWidth: chordWidth\n\t\t\t\t}));\n\t\t\t\tbreak;\n\t\t\tcase \"above\":\n\t\t\t\t// setting the y-coordinate to undefined for now: it will be overwritten later on, after we figure out what the highest element on the line is.\n\t\t\t\tabselem.addRight(new RelativeElement(chord, 0, 0, undefined, {\n\t\t\t\t\ttype: \"text\",\n\t\t\t\t\tposition: \"above\",\n\t\t\t\t\theight: chordHeight,\n\t\t\t\t\tdim: attr,\n\t\t\t\t\trealWidth: chordWidth\n\t\t\t\t}));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (rel_position) {\n\t\t\t\t\tvar relPositionY = rel_position.y + 3 * spacing.STEP; // TODO-PER: this is a fudge factor to make it line up with abcm2ps\n\t\t\t\t\tabselem.addRight(new RelativeElement(chord, x + rel_position.x, 0, elem.minpitch + relPositionY / spacing.STEP, {\n\t\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\t\ttype: \"text\",\n\t\t\t\t\t\theight: chordHeight,\n\t\t\t\t\t\tdim: attr\n\t\t\t\t\t}));\n\t\t\t\t} else {\n\t\t\t\t\t// setting the y-coordinate to undefined for now: it will be overwritten later on, after we figure out what the highest element on the line is.\n\t\t\t\t\tvar pos2 = 'above';\n\t\t\t\t\tif (elem.positioning && elem.positioning.chordPosition)\n\t\t\t\t\t\tpos2 = elem.positioning.chordPosition;\n\n\t\t\t\t\tif (pos2 !== 'hidden') {\n\t\t\t\t\t\tabselem.addCentered(new RelativeElement(chord, noteheadWidth / 2, chordWidth, undefined, {\n\t\t\t\t\t\t\ttype: \"chord\",\n\t\t\t\t\t\t\tposition: pos2,\n\t\t\t\t\t\t\theight: chordHeight,\n\t\t\t\t\t\t\tdim: attr,\n\t\t\t\t\t\t\trealWidth: chordWidth\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t}\n\treturn { roomTaken: roomTaken, roomTakenRight: roomTakenRight };\n}\nmodule.exports = addChord;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/add-chord.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/add-text-if.js":
/*!**************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/add-text-if.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("function addTextIf(rows, params, getTextSize) {\n\tif (!params.text)\n\t\treturn;\n\tif (!params.marginLeft) params.marginLeft = 0;\n\tif (!params.klass) params.klass = '';\n\tif (!params.anchor) params.anchor = 'start';\n\tif (!params.info) params.info = { startChar: -2, endChar: -2 }\n\n\tif (params.marginTop)\n\t\trows.push({ move: params.marginTop });\n\tvar attr = { left: params.marginLeft, text: params.text, font: params.font, anchor: params.anchor, startChar: params.info.startChar, endChar: params.info.endChar, 'dominant-baseline': params['dominant-baseline'] };\n\tif (params.absElemType)\n\t\tattr.absElemType = params.absElemType;\n\tif (!params.inGroup && params.klass)\n\t\tattr.klass = params.klass;\n\tif (params.name)\n\t\tattr.name = params.name;\n\n\trows.push(attr);\n\t// If there are blank lines they won't be counted by getTextSize, so just get the height of one line and multiply\n\tvar size = getTextSize.calc(\"A\", params.font, params.klass);\n\tvar numLines = params.text.split(\"\\n\").length;\n\tif (params.text[params.text.length - 1] === '\\n')\n\t\tnumLines--; // If there is a new line at the end of the string, then an extra line will be counted.\n\tif (!params.noMove) {\n\t\tvar h = (size.height * 1.1) * numLines;\n\t\trows.push({ move: Math.round(h) });\n\t\tif (params.marginBottom)\n\t\t\trows.push({ move: params.marginBottom });\n\t}\n}\n\nmodule.exports = addTextIf;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2FkZC10ZXh0LWlmLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQzs7QUFFbkM7QUFDQSxjQUFjLHdCQUF3QjtBQUN0QyxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLGNBQWMscUJBQXFCO0FBQ25DO0FBQ0EsZUFBZSwyQkFBMkI7QUFDMUM7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9jcmVhdGlvbi9hZGQtdGV4dC1pZi5qcz8xMjEzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFkZFRleHRJZihyb3dzLCBwYXJhbXMsIGdldFRleHRTaXplKSB7XG5cdGlmICghcGFyYW1zLnRleHQpXG5cdFx0cmV0dXJuO1xuXHRpZiAoIXBhcmFtcy5tYXJnaW5MZWZ0KSBwYXJhbXMubWFyZ2luTGVmdCA9IDA7XG5cdGlmICghcGFyYW1zLmtsYXNzKSBwYXJhbXMua2xhc3MgPSAnJztcblx0aWYgKCFwYXJhbXMuYW5jaG9yKSBwYXJhbXMuYW5jaG9yID0gJ3N0YXJ0Jztcblx0aWYgKCFwYXJhbXMuaW5mbykgcGFyYW1zLmluZm8gPSB7IHN0YXJ0Q2hhcjogLTIsIGVuZENoYXI6IC0yIH1cblxuXHRpZiAocGFyYW1zLm1hcmdpblRvcClcblx0XHRyb3dzLnB1c2goeyBtb3ZlOiBwYXJhbXMubWFyZ2luVG9wIH0pO1xuXHR2YXIgYXR0ciA9IHsgbGVmdDogcGFyYW1zLm1hcmdpbkxlZnQsIHRleHQ6IHBhcmFtcy50ZXh0LCBmb250OiBwYXJhbXMuZm9udCwgYW5jaG9yOiBwYXJhbXMuYW5jaG9yLCBzdGFydENoYXI6IHBhcmFtcy5pbmZvLnN0YXJ0Q2hhciwgZW5kQ2hhcjogcGFyYW1zLmluZm8uZW5kQ2hhciwgJ2RvbWluYW50LWJhc2VsaW5lJzogcGFyYW1zWydkb21pbmFudC1iYXNlbGluZSddIH07XG5cdGlmIChwYXJhbXMuYWJzRWxlbVR5cGUpXG5cdFx0YXR0ci5hYnNFbGVtVHlwZSA9IHBhcmFtcy5hYnNFbGVtVHlwZTtcblx0aWYgKCFwYXJhbXMuaW5Hcm91cCAmJiBwYXJhbXMua2xhc3MpXG5cdFx0YXR0ci5rbGFzcyA9IHBhcmFtcy5rbGFzcztcblx0aWYgKHBhcmFtcy5uYW1lKVxuXHRcdGF0dHIubmFtZSA9IHBhcmFtcy5uYW1lO1xuXG5cdHJvd3MucHVzaChhdHRyKTtcblx0Ly8gSWYgdGhlcmUgYXJlIGJsYW5rIGxpbmVzIHRoZXkgd29uJ3QgYmUgY291bnRlZCBieSBnZXRUZXh0U2l6ZSwgc28ganVzdCBnZXQgdGhlIGhlaWdodCBvZiBvbmUgbGluZSBhbmQgbXVsdGlwbHlcblx0dmFyIHNpemUgPSBnZXRUZXh0U2l6ZS5jYWxjKFwiQVwiLCBwYXJhbXMuZm9udCwgcGFyYW1zLmtsYXNzKTtcblx0dmFyIG51bUxpbmVzID0gcGFyYW1zLnRleHQuc3BsaXQoXCJcXG5cIikubGVuZ3RoO1xuXHRpZiAocGFyYW1zLnRleHRbcGFyYW1zLnRleHQubGVuZ3RoIC0gMV0gPT09ICdcXG4nKVxuXHRcdG51bUxpbmVzLS07IC8vIElmIHRoZXJlIGlzIGEgbmV3IGxpbmUgYXQgdGhlIGVuZCBvZiB0aGUgc3RyaW5nLCB0aGVuIGFuIGV4dHJhIGxpbmUgd2lsbCBiZSBjb3VudGVkLlxuXHRpZiAoIXBhcmFtcy5ub01vdmUpIHtcblx0XHR2YXIgaCA9IChzaXplLmhlaWdodCAqIDEuMSkgKiBudW1MaW5lcztcblx0XHRyb3dzLnB1c2goeyBtb3ZlOiBNYXRoLnJvdW5kKGgpIH0pO1xuXHRcdGlmIChwYXJhbXMubWFyZ2luQm90dG9tKVxuXHRcdFx0cm93cy5wdXNoKHsgbW92ZTogcGFyYW1zLm1hcmdpbkJvdHRvbSB9KTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFkZFRleHRJZjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/add-text-if.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/calc-height.js":
/*!**************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/calc-height.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("var calcHeight = function (staffGroup) {\n\t// the height is calculated here in a parallel way to the drawing below in hopes that both of these functions will be modified together.\n\t// TODO-PER: also add the space between staves. (That's systemStaffSeparation, which is the minimum distance between the staff LINES.)\n\tvar height = 0;\n\tfor (var i = 0; i < staffGroup.voices.length; i++) {\n\t\tvar staff = staffGroup.voices[i].staff;\n\t\tif (!staffGroup.voices[i].duplicate) {\n\t\t\theight += staff.top;\n\t\t\t//if (staff.bottom < 0)\n\t\t\theight += -staff.bottom;\n\t\t}\n\t}\n\treturn height;\n};\n\nmodule.exports = calcHeight;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2NhbGMtaGVpZ2h0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDhCQUE4QjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvY3JlYXRpb24vY2FsYy1oZWlnaHQuanM/ZTEzMSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY2FsY0hlaWdodCA9IGZ1bmN0aW9uIChzdGFmZkdyb3VwKSB7XG5cdC8vIHRoZSBoZWlnaHQgaXMgY2FsY3VsYXRlZCBoZXJlIGluIGEgcGFyYWxsZWwgd2F5IHRvIHRoZSBkcmF3aW5nIGJlbG93IGluIGhvcGVzIHRoYXQgYm90aCBvZiB0aGVzZSBmdW5jdGlvbnMgd2lsbCBiZSBtb2RpZmllZCB0b2dldGhlci5cblx0Ly8gVE9ETy1QRVI6IGFsc28gYWRkIHRoZSBzcGFjZSBiZXR3ZWVuIHN0YXZlcy4gKFRoYXQncyBzeXN0ZW1TdGFmZlNlcGFyYXRpb24sIHdoaWNoIGlzIHRoZSBtaW5pbXVtIGRpc3RhbmNlIGJldHdlZW4gdGhlIHN0YWZmIExJTkVTLilcblx0dmFyIGhlaWdodCA9IDA7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgc3RhZmZHcm91cC52b2ljZXMubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgc3RhZmYgPSBzdGFmZkdyb3VwLnZvaWNlc1tpXS5zdGFmZjtcblx0XHRpZiAoIXN0YWZmR3JvdXAudm9pY2VzW2ldLmR1cGxpY2F0ZSkge1xuXHRcdFx0aGVpZ2h0ICs9IHN0YWZmLnRvcDtcblx0XHRcdC8vaWYgKHN0YWZmLmJvdHRvbSA8IDApXG5cdFx0XHRoZWlnaHQgKz0gLXN0YWZmLmJvdHRvbTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIGhlaWdodDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gY2FsY0hlaWdodDtcblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/calc-height.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/create-clef.js":
/*!**************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/create-clef.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_create_clef.js\n\nvar AbsoluteElement = __webpack_require__(/*! ./elements/absolute-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/absolute-element.js\");\nvar glyphs = __webpack_require__(/*! ./glyphs */ \"(ssr)/./node_modules/abcjs/src/write/creation/glyphs.js\");\nvar RelativeElement = __webpack_require__(/*! ./elements/relative-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/relative-element.js\");\n\nvar createClef = function (elem, tuneNumber) {\n\tvar clef;\n\tvar octave = 0;\n\telem.el_type = \"clef\";\n\tvar abselem = new AbsoluteElement(elem, 0, 10, 'staff-extra clef', tuneNumber);\n\tabselem.isClef = true;\n\tswitch (elem.type) {\n\t\tcase \"treble\": clef = \"clefs.G\"; break;\n\t\tcase \"tenor\": clef = \"clefs.C\"; break;\n\t\tcase \"alto\": clef = \"clefs.C\"; break;\n\t\tcase \"bass\": clef = \"clefs.F\"; break;\n\t\tcase 'treble+8': clef = \"clefs.G\"; octave = 1; break;\n\t\tcase 'tenor+8': clef = \"clefs.C\"; octave = 1; break;\n\t\tcase 'bass+8': clef = \"clefs.F\"; octave = 1; break;\n\t\tcase 'alto+8': clef = \"clefs.C\"; octave = 1; break;\n\t\tcase 'treble-8': clef = \"clefs.G\"; octave = -1; break;\n\t\tcase 'tenor-8': clef = \"clefs.C\"; octave = -1; break;\n\t\tcase 'bass-8': clef = \"clefs.F\"; octave = -1; break;\n\t\tcase 'alto-8': clef = \"clefs.C\"; octave = -1; break;\n\t\tcase 'none': return null;\n\t\tcase 'perc': clef = \"clefs.perc\"; break;\n\t\tdefault: abselem.addFixed(new RelativeElement(\"clef=\" + elem.type, 0, 0, undefined, { type: \"debug\" }));\n\t}\n\t// if (elem.verticalPos) {\n\t// pitch = elem.verticalPos;\n\t// }\n\tvar dx = 5;\n\tif (clef) {\n\t\tvar height = glyphs.symbolHeightInPitches(clef);\n\t\tvar ofs = clefOffsets(clef);\n\t\tabselem.addRight(new RelativeElement(clef, dx, glyphs.getSymbolWidth(clef), elem.clefPos, { top: height + elem.clefPos + ofs, bottom: elem.clefPos + ofs }));\n\n\t\tif (octave !== 0) {\n\t\t\tvar scale = 2 / 3;\n\t\t\tvar adjustspacing = (glyphs.getSymbolWidth(clef) - glyphs.getSymbolWidth(\"8\") * scale) / 2;\n\t\t\tvar pitch = (octave > 0) ? abselem.top + 3 : abselem.bottom - 1;\n\t\t\tvar top = (octave > 0) ? abselem.top + 3 : abselem.bottom - 3;\n\t\t\tvar bottom = top - 2;\n\t\t\tif (elem.type === \"bass-8\") {\n\t\t\t\t// The placement for bass octave is a little different. It should hug the clef.\n\t\t\t\tpitch = 3;\n\t\t\t\tadjustspacing = 0;\n\t\t\t}\n\t\t\tabselem.addRight(new RelativeElement(\"8\", dx + adjustspacing, glyphs.getSymbolWidth(\"8\") * scale, pitch, {\n\t\t\t\tscalex: scale,\n\t\t\t\tscaley: scale,\n\t\t\t\ttop: top,\n\t\t\t\tbottom: bottom\n\t\t\t}));\n\t\t\t//abselem.top += 2;\n\t\t}\n\t}\n\treturn abselem;\n};\n\nfunction clefOffsets(clef) {\n\tswitch (clef) {\n\t\tcase \"clefs.G\": return -5;\n\t\tcase \"clefs.C\": return -4;\n\t\tcase \"clefs.F\": return -4;\n\t\tcase \"clefs.perc\": return -2;\n\t\tdefault: return 0;\n\t}\n}\n\nmodule.exports = createClef;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2NyZWF0ZS1jbGVmLmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUVBLHNCQUFzQixtQkFBTyxDQUFDLCtHQUE2QjtBQUMzRCxhQUFhLG1CQUFPLENBQUMseUVBQVU7QUFDL0Isc0JBQXNCLG1CQUFPLENBQUMsK0dBQTZCOztBQUUzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQyxrQ0FBa0M7QUFDbEMsaUNBQWlDO0FBQ2pDLGlDQUFpQztBQUNqQyxxQ0FBcUMsWUFBWTtBQUNqRCxvQ0FBb0MsWUFBWTtBQUNoRCxtQ0FBbUMsWUFBWTtBQUMvQyxtQ0FBbUMsWUFBWTtBQUMvQyxxQ0FBcUMsYUFBYTtBQUNsRCxvQ0FBb0MsYUFBYTtBQUNqRCxtQ0FBbUMsYUFBYTtBQUNoRCxtQ0FBbUMsYUFBYTtBQUNoRDtBQUNBLG9DQUFvQztBQUNwQyx3RkFBd0YsZUFBZTtBQUN2RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEZBQThGLDhEQUE4RDs7QUFFNUo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvY3JlYXRpb24vY3JlYXRlLWNsZWYuanM/YmUzYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAgICBhYmNfY3JlYXRlX2NsZWYuanNcblxudmFyIEFic29sdXRlRWxlbWVudCA9IHJlcXVpcmUoJy4vZWxlbWVudHMvYWJzb2x1dGUtZWxlbWVudCcpO1xudmFyIGdseXBocyA9IHJlcXVpcmUoJy4vZ2x5cGhzJyk7XG52YXIgUmVsYXRpdmVFbGVtZW50ID0gcmVxdWlyZSgnLi9lbGVtZW50cy9yZWxhdGl2ZS1lbGVtZW50Jyk7XG5cbnZhciBjcmVhdGVDbGVmID0gZnVuY3Rpb24gKGVsZW0sIHR1bmVOdW1iZXIpIHtcblx0dmFyIGNsZWY7XG5cdHZhciBvY3RhdmUgPSAwO1xuXHRlbGVtLmVsX3R5cGUgPSBcImNsZWZcIjtcblx0dmFyIGFic2VsZW0gPSBuZXcgQWJzb2x1dGVFbGVtZW50KGVsZW0sIDAsIDEwLCAnc3RhZmYtZXh0cmEgY2xlZicsIHR1bmVOdW1iZXIpO1xuXHRhYnNlbGVtLmlzQ2xlZiA9IHRydWU7XG5cdHN3aXRjaCAoZWxlbS50eXBlKSB7XG5cdFx0Y2FzZSBcInRyZWJsZVwiOiBjbGVmID0gXCJjbGVmcy5HXCI7IGJyZWFrO1xuXHRcdGNhc2UgXCJ0ZW5vclwiOiBjbGVmID0gXCJjbGVmcy5DXCI7IGJyZWFrO1xuXHRcdGNhc2UgXCJhbHRvXCI6IGNsZWYgPSBcImNsZWZzLkNcIjsgYnJlYWs7XG5cdFx0Y2FzZSBcImJhc3NcIjogY2xlZiA9IFwiY2xlZnMuRlwiOyBicmVhaztcblx0XHRjYXNlICd0cmVibGUrOCc6IGNsZWYgPSBcImNsZWZzLkdcIjsgb2N0YXZlID0gMTsgYnJlYWs7XG5cdFx0Y2FzZSAndGVub3IrOCc6IGNsZWYgPSBcImNsZWZzLkNcIjsgb2N0YXZlID0gMTsgYnJlYWs7XG5cdFx0Y2FzZSAnYmFzcys4JzogY2xlZiA9IFwiY2xlZnMuRlwiOyBvY3RhdmUgPSAxOyBicmVhaztcblx0XHRjYXNlICdhbHRvKzgnOiBjbGVmID0gXCJjbGVmcy5DXCI7IG9jdGF2ZSA9IDE7IGJyZWFrO1xuXHRcdGNhc2UgJ3RyZWJsZS04JzogY2xlZiA9IFwiY2xlZnMuR1wiOyBvY3RhdmUgPSAtMTsgYnJlYWs7XG5cdFx0Y2FzZSAndGVub3ItOCc6IGNsZWYgPSBcImNsZWZzLkNcIjsgb2N0YXZlID0gLTE7IGJyZWFrO1xuXHRcdGNhc2UgJ2Jhc3MtOCc6IGNsZWYgPSBcImNsZWZzLkZcIjsgb2N0YXZlID0gLTE7IGJyZWFrO1xuXHRcdGNhc2UgJ2FsdG8tOCc6IGNsZWYgPSBcImNsZWZzLkNcIjsgb2N0YXZlID0gLTE7IGJyZWFrO1xuXHRcdGNhc2UgJ25vbmUnOiByZXR1cm4gbnVsbDtcblx0XHRjYXNlICdwZXJjJzogY2xlZiA9IFwiY2xlZnMucGVyY1wiOyBicmVhaztcblx0XHRkZWZhdWx0OiBhYnNlbGVtLmFkZEZpeGVkKG5ldyBSZWxhdGl2ZUVsZW1lbnQoXCJjbGVmPVwiICsgZWxlbS50eXBlLCAwLCAwLCB1bmRlZmluZWQsIHsgdHlwZTogXCJkZWJ1Z1wiIH0pKTtcblx0fVxuXHQvLyBpZiAoZWxlbS52ZXJ0aWNhbFBvcykge1xuXHQvLyBwaXRjaCA9IGVsZW0udmVydGljYWxQb3M7XG5cdC8vIH1cblx0dmFyIGR4ID0gNTtcblx0aWYgKGNsZWYpIHtcblx0XHR2YXIgaGVpZ2h0ID0gZ2x5cGhzLnN5bWJvbEhlaWdodEluUGl0Y2hlcyhjbGVmKTtcblx0XHR2YXIgb2ZzID0gY2xlZk9mZnNldHMoY2xlZik7XG5cdFx0YWJzZWxlbS5hZGRSaWdodChuZXcgUmVsYXRpdmVFbGVtZW50KGNsZWYsIGR4LCBnbHlwaHMuZ2V0U3ltYm9sV2lkdGgoY2xlZiksIGVsZW0uY2xlZlBvcywgeyB0b3A6IGhlaWdodCArIGVsZW0uY2xlZlBvcyArIG9mcywgYm90dG9tOiBlbGVtLmNsZWZQb3MgKyBvZnMgfSkpO1xuXG5cdFx0aWYgKG9jdGF2ZSAhPT0gMCkge1xuXHRcdFx0dmFyIHNjYWxlID0gMiAvIDM7XG5cdFx0XHR2YXIgYWRqdXN0c3BhY2luZyA9IChnbHlwaHMuZ2V0U3ltYm9sV2lkdGgoY2xlZikgLSBnbHlwaHMuZ2V0U3ltYm9sV2lkdGgoXCI4XCIpICogc2NhbGUpIC8gMjtcblx0XHRcdHZhciBwaXRjaCA9IChvY3RhdmUgPiAwKSA/IGFic2VsZW0udG9wICsgMyA6IGFic2VsZW0uYm90dG9tIC0gMTtcblx0XHRcdHZhciB0b3AgPSAob2N0YXZlID4gMCkgPyBhYnNlbGVtLnRvcCArIDMgOiBhYnNlbGVtLmJvdHRvbSAtIDM7XG5cdFx0XHR2YXIgYm90dG9tID0gdG9wIC0gMjtcblx0XHRcdGlmIChlbGVtLnR5cGUgPT09IFwiYmFzcy04XCIpIHtcblx0XHRcdFx0Ly8gVGhlIHBsYWNlbWVudCBmb3IgYmFzcyBvY3RhdmUgaXMgYSBsaXR0bGUgZGlmZmVyZW50LiBJdCBzaG91bGQgaHVnIHRoZSBjbGVmLlxuXHRcdFx0XHRwaXRjaCA9IDM7XG5cdFx0XHRcdGFkanVzdHNwYWNpbmcgPSAwO1xuXHRcdFx0fVxuXHRcdFx0YWJzZWxlbS5hZGRSaWdodChuZXcgUmVsYXRpdmVFbGVtZW50KFwiOFwiLCBkeCArIGFkanVzdHNwYWNpbmcsIGdseXBocy5nZXRTeW1ib2xXaWR0aChcIjhcIikgKiBzY2FsZSwgcGl0Y2gsIHtcblx0XHRcdFx0c2NhbGV4OiBzY2FsZSxcblx0XHRcdFx0c2NhbGV5OiBzY2FsZSxcblx0XHRcdFx0dG9wOiB0b3AsXG5cdFx0XHRcdGJvdHRvbTogYm90dG9tXG5cdFx0XHR9KSk7XG5cdFx0XHQvL2Fic2VsZW0udG9wICs9IDI7XG5cdFx0fVxuXHR9XG5cdHJldHVybiBhYnNlbGVtO1xufTtcblxuZnVuY3Rpb24gY2xlZk9mZnNldHMoY2xlZikge1xuXHRzd2l0Y2ggKGNsZWYpIHtcblx0XHRjYXNlIFwiY2xlZnMuR1wiOiByZXR1cm4gLTU7XG5cdFx0Y2FzZSBcImNsZWZzLkNcIjogcmV0dXJuIC00O1xuXHRcdGNhc2UgXCJjbGVmcy5GXCI6IHJldHVybiAtNDtcblx0XHRjYXNlIFwiY2xlZnMucGVyY1wiOiByZXR1cm4gLTI7XG5cdFx0ZGVmYXVsdDogcmV0dXJuIDA7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVDbGVmO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/create-clef.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/create-key-signature.js":
/*!***********************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/create-key-signature.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_create_key_signature.js\n\nvar AbsoluteElement = __webpack_require__(/*! ./elements/absolute-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/absolute-element.js\");\nvar glyphs = __webpack_require__(/*! ./glyphs */ \"(ssr)/./node_modules/abcjs/src/write/creation/glyphs.js\");\nvar RelativeElement = __webpack_require__(/*! ./elements/relative-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/relative-element.js\");\n\nvar createKeySignature = function (elem, tuneNumber) {\n\telem.el_type = \"keySignature\";\n\tif (!elem.accidentals || elem.accidentals.length === 0)\n\t\treturn null;\n\tvar abselem = new AbsoluteElement(elem, 0, 10, 'staff-extra key-signature', tuneNumber);\n\tabselem.isKeySig = true;\n\tvar dx = 0;\n\telem.accidentals.forEach(function (acc) {\n\t\tvar symbol;\n\t\tvar fudge = 0;\n\t\tswitch (acc.acc) {\n\t\t\tcase \"sharp\": symbol = \"accidentals.sharp\"; fudge = -3; break;\n\t\t\tcase \"natural\": symbol = \"accidentals.nat\"; break;\n\t\t\tcase \"flat\": symbol = \"accidentals.flat\"; fudge = -1.2; break;\n\t\t\tcase \"quartersharp\": symbol = \"accidentals.halfsharp\"; fudge = -2.5; break;\n\t\t\tcase \"quarterflat\": symbol = \"accidentals.halfflat\"; fudge = -1.2; break;\n\t\t\tdefault: symbol = \"accidentals.flat\";\n\t\t}\n\t\tabselem.addRight(new RelativeElement(symbol, dx, glyphs.getSymbolWidth(symbol), acc.verticalPos, { thickness: glyphs.symbolHeightInPitches(symbol), top: acc.verticalPos + glyphs.symbolHeightInPitches(symbol) + fudge, bottom: acc.verticalPos + fudge }));\n\t\tdx += glyphs.getSymbolWidth(symbol) + 2;\n\t}, this);\n\treturn abselem;\n};\n\nmodule.exports = createKeySignature;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2NyZWF0ZS1rZXktc2lnbmF0dXJlLmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUVBLHNCQUFzQixtQkFBTyxDQUFDLCtHQUE2QjtBQUMzRCxhQUFhLG1CQUFPLENBQUMseUVBQVU7QUFDL0Isc0JBQXNCLG1CQUFPLENBQUMsK0dBQTZCOztBQUUzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLFlBQVk7QUFDM0QsK0NBQStDO0FBQy9DLDZDQUE2QyxjQUFjO0FBQzNELDBEQUEwRCxjQUFjO0FBQ3hFLHdEQUF3RCxjQUFjO0FBQ3RFO0FBQ0E7QUFDQSxxR0FBcUcsdUpBQXVKO0FBQzVQO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvY3JlYXRpb24vY3JlYXRlLWtleS1zaWduYXR1cmUuanM/ZWQ2YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAgICBhYmNfY3JlYXRlX2tleV9zaWduYXR1cmUuanNcblxudmFyIEFic29sdXRlRWxlbWVudCA9IHJlcXVpcmUoJy4vZWxlbWVudHMvYWJzb2x1dGUtZWxlbWVudCcpO1xudmFyIGdseXBocyA9IHJlcXVpcmUoJy4vZ2x5cGhzJyk7XG52YXIgUmVsYXRpdmVFbGVtZW50ID0gcmVxdWlyZSgnLi9lbGVtZW50cy9yZWxhdGl2ZS1lbGVtZW50Jyk7XG5cbnZhciBjcmVhdGVLZXlTaWduYXR1cmUgPSBmdW5jdGlvbiAoZWxlbSwgdHVuZU51bWJlcikge1xuXHRlbGVtLmVsX3R5cGUgPSBcImtleVNpZ25hdHVyZVwiO1xuXHRpZiAoIWVsZW0uYWNjaWRlbnRhbHMgfHwgZWxlbS5hY2NpZGVudGFscy5sZW5ndGggPT09IDApXG5cdFx0cmV0dXJuIG51bGw7XG5cdHZhciBhYnNlbGVtID0gbmV3IEFic29sdXRlRWxlbWVudChlbGVtLCAwLCAxMCwgJ3N0YWZmLWV4dHJhIGtleS1zaWduYXR1cmUnLCB0dW5lTnVtYmVyKTtcblx0YWJzZWxlbS5pc0tleVNpZyA9IHRydWU7XG5cdHZhciBkeCA9IDA7XG5cdGVsZW0uYWNjaWRlbnRhbHMuZm9yRWFjaChmdW5jdGlvbiAoYWNjKSB7XG5cdFx0dmFyIHN5bWJvbDtcblx0XHR2YXIgZnVkZ2UgPSAwO1xuXHRcdHN3aXRjaCAoYWNjLmFjYykge1xuXHRcdFx0Y2FzZSBcInNoYXJwXCI6IHN5bWJvbCA9IFwiYWNjaWRlbnRhbHMuc2hhcnBcIjsgZnVkZ2UgPSAtMzsgYnJlYWs7XG5cdFx0XHRjYXNlIFwibmF0dXJhbFwiOiBzeW1ib2wgPSBcImFjY2lkZW50YWxzLm5hdFwiOyBicmVhaztcblx0XHRcdGNhc2UgXCJmbGF0XCI6IHN5bWJvbCA9IFwiYWNjaWRlbnRhbHMuZmxhdFwiOyBmdWRnZSA9IC0xLjI7IGJyZWFrO1xuXHRcdFx0Y2FzZSBcInF1YXJ0ZXJzaGFycFwiOiBzeW1ib2wgPSBcImFjY2lkZW50YWxzLmhhbGZzaGFycFwiOyBmdWRnZSA9IC0yLjU7IGJyZWFrO1xuXHRcdFx0Y2FzZSBcInF1YXJ0ZXJmbGF0XCI6IHN5bWJvbCA9IFwiYWNjaWRlbnRhbHMuaGFsZmZsYXRcIjsgZnVkZ2UgPSAtMS4yOyBicmVhaztcblx0XHRcdGRlZmF1bHQ6IHN5bWJvbCA9IFwiYWNjaWRlbnRhbHMuZmxhdFwiO1xuXHRcdH1cblx0XHRhYnNlbGVtLmFkZFJpZ2h0KG5ldyBSZWxhdGl2ZUVsZW1lbnQoc3ltYm9sLCBkeCwgZ2x5cGhzLmdldFN5bWJvbFdpZHRoKHN5bWJvbCksIGFjYy52ZXJ0aWNhbFBvcywgeyB0aGlja25lc3M6IGdseXBocy5zeW1ib2xIZWlnaHRJblBpdGNoZXMoc3ltYm9sKSwgdG9wOiBhY2MudmVydGljYWxQb3MgKyBnbHlwaHMuc3ltYm9sSGVpZ2h0SW5QaXRjaGVzKHN5bWJvbCkgKyBmdWRnZSwgYm90dG9tOiBhY2MudmVydGljYWxQb3MgKyBmdWRnZSB9KSk7XG5cdFx0ZHggKz0gZ2x5cGhzLmdldFN5bWJvbFdpZHRoKHN5bWJvbCkgKyAyO1xuXHR9LCB0aGlzKTtcblx0cmV0dXJuIGFic2VsZW07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZUtleVNpZ25hdHVyZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/create-key-signature.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/create-note-head.js":
/*!*******************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/create-note-head.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var glyphs = __webpack_require__(/*! ./glyphs */ \"(ssr)/./node_modules/abcjs/src/write/creation/glyphs.js\");\nvar RelativeElement = __webpack_require__(/*! ./elements/relative-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/relative-element.js\");\n\nvar createNoteHead = function (abselem, c, pitchelem, options) {\n\tif (!options) options = {};\n\tvar dir = (options.dir !== undefined) ? options.dir : null;\n\tvar headx = (options.headx !== undefined) ? options.headx : 0;\n\tvar extrax = (options.extrax !== undefined) ? options.extrax : 0;\n\tvar flag = (options.flag !== undefined) ? options.flag : null;\n\tvar dot = (options.dot !== undefined) ? options.dot : 0;\n\tvar dotshiftx = (options.dotshiftx !== undefined) ? options.dotshiftx : 0;\n\tvar scale = (options.scale !== undefined) ? options.scale : 1;\n\tvar accidentalSlot = (options.accidentalSlot !== undefined) ? options.accidentalSlot : [];\n\tvar shouldExtendStem = (options.shouldExtendStem !== undefined) ? options.shouldExtendStem : false;\n\tvar printAccidentals = (options.printAccidentals !== undefined) ? options.printAccidentals : true;\n\n\t// TODO scale the dot as well\n\tvar pitch = pitchelem.verticalPos;\n\tvar notehead;\n\tvar accidentalshiftx = 0;\n\tvar newDotShiftX = 0;\n\tvar extraLeft = 0;\n\tif (c === undefined)\n\t\tabselem.addFixed(new RelativeElement(\"pitch is undefined\", 0, 0, 0, { type: \"debug\" }));\n\telse if (c === \"\") {\n\t\tnotehead = new RelativeElement(null, 0, 0, pitch);\n\t} else {\n\t\tvar shiftheadx = headx;\n\t\tif (pitchelem.printer_shift) {\n\t\t\tvar adjust = (pitchelem.printer_shift === \"same\") ? 1 : 0;\n\t\t\tshiftheadx = (dir === \"down\") ? -glyphs.getSymbolWidth(c) * scale + adjust : glyphs.getSymbolWidth(c) * scale - adjust;\n\t\t}\n\t\tvar opts = { scalex: scale, scaley: scale, thickness: glyphs.symbolHeightInPitches(c) * scale, name: pitchelem.name };\n\t\tnotehead = new RelativeElement(c, shiftheadx, glyphs.getSymbolWidth(c) * scale, pitch, opts);\n\t\tnotehead.stemDir = dir;\n\t\tif (flag) {\n\t\t\tvar pos = pitch + ((dir === \"down\") ? -7 : 7) * scale;\n\t\t\t// if this is a regular note, (not grace or tempo indicator) then the stem will have been stretched to the middle line if it is far from the center.\n\t\t\tif (shouldExtendStem) {\n\t\t\t\tif (dir === \"down\" && pos > 6)\n\t\t\t\t\tpos = 6;\n\t\t\t\tif (dir === \"up\" && pos < 6)\n\t\t\t\t\tpos = 6;\n\t\t\t}\n\t\t\t//if (scale===1 && (dir===\"down\")?(pos>6):(pos<6)) pos=6;\n\t\t\tvar xdelta = (dir === \"down\") ? headx : headx + notehead.w - 0.6;\n\t\t\tabselem.addRight(new RelativeElement(flag, xdelta, glyphs.getSymbolWidth(flag) * scale, pos, { scalex: scale, scaley: scale }));\n\t\t}\n\t\tnewDotShiftX = notehead.w + dotshiftx - 2 + 5 * dot;\n\t\tfor (; dot > 0; dot--) {\n\t\t\tvar dotadjusty = (1 - Math.abs(pitch) % 2); //PER: take abs value of the pitch. And the shift still happens on ledger lines.\n\t\t\tabselem.addRight(new RelativeElement(\"dots.dot\", notehead.w + dotshiftx - 2 + 5 * dot, glyphs.getSymbolWidth(\"dots.dot\"), pitch + dotadjusty));\n\t\t}\n\t}\n\tif (notehead)\n\t\tnotehead.highestVert = pitchelem.highestVert;\n\n\tif (printAccidentals && pitchelem.accidental) {\n\t\tvar symb;\n\t\tswitch (pitchelem.accidental) {\n\t\t\tcase \"quartersharp\":\n\t\t\t\tsymb = \"accidentals.halfsharp\";\n\t\t\t\tbreak;\n\t\t\tcase \"dblsharp\":\n\t\t\t\tsymb = \"accidentals.dblsharp\";\n\t\t\t\tbreak;\n\t\t\tcase \"sharp\":\n\t\t\t\tsymb = \"accidentals.sharp\";\n\t\t\t\tbreak;\n\t\t\tcase \"quarterflat\":\n\t\t\t\tsymb = \"accidentals.halfflat\";\n\t\t\t\tbreak;\n\t\t\tcase \"flat\":\n\t\t\t\tsymb = \"accidentals.flat\";\n\t\t\t\tbreak;\n\t\t\tcase \"dblflat\":\n\t\t\t\tsymb = \"accidentals.dblflat\";\n\t\t\t\tbreak;\n\t\t\tcase \"natural\":\n\t\t\t\tsymb = \"accidentals.nat\";\n\t\t}\n\t\t// if a note is at least a sixth away, it can share a slot with another accidental\n\t\tvar accSlotFound = false;\n\t\tvar accPlace = extrax;\n\t\tfor (var j = 0; j < accidentalSlot.length; j++) {\n\t\t\tif (pitch - accidentalSlot[j][0] >= 6) {\n\t\t\t\taccidentalSlot[j][0] = pitch;\n\t\t\t\taccPlace = accidentalSlot[j][1];\n\t\t\t\taccSlotFound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (accSlotFound === false) {\n\t\t\taccPlace -= (glyphs.getSymbolWidth(symb) * scale + 2);\n\t\t\taccidentalSlot.push([pitch, accPlace]);\n\t\t\taccidentalshiftx = (glyphs.getSymbolWidth(symb) * scale + 2);\n\t\t}\n\t\tvar h = glyphs.symbolHeightInPitches(symb);\n\t\tabselem.addExtra(new RelativeElement(symb, accPlace, glyphs.getSymbolWidth(symb), pitch, { scalex: scale, scaley: scale, top: pitch + h / 2, bottom: pitch - h / 2 }));\n\t\textraLeft = glyphs.getSymbolWidth(symb) / 2; // TODO-PER: We need a little extra width if there is an accidental, but I'm not sure why it isn't the full width of the accidental.\n\t}\n\n\treturn { notehead: notehead, accidentalshiftx: accidentalshiftx, dotshiftx: newDotShiftX, extraLeft: extraLeft };\n\n};\n\nmodule.exports = createNoteHead;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2NyZWF0ZS1ub3RlLWhlYWQuanMiLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxtQkFBTyxDQUFDLHlFQUFVO0FBQy9CLHNCQUFzQixtQkFBTyxDQUFDLCtHQUE2Qjs7QUFFM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFLGVBQWU7QUFDdkY7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0dBQWtHLDhCQUE4QjtBQUNoSTtBQUNBO0FBQ0EsU0FBUyxTQUFTO0FBQ2xCLCtDQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiwyQkFBMkI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RkFBNkYseUVBQXlFO0FBQ3RLLCtDQUErQztBQUMvQzs7QUFFQSxVQUFVOztBQUVWOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2NyZWF0ZS1ub3RlLWhlYWQuanM/ZjgwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2x5cGhzID0gcmVxdWlyZSgnLi9nbHlwaHMnKTtcbnZhciBSZWxhdGl2ZUVsZW1lbnQgPSByZXF1aXJlKCcuL2VsZW1lbnRzL3JlbGF0aXZlLWVsZW1lbnQnKTtcblxudmFyIGNyZWF0ZU5vdGVIZWFkID0gZnVuY3Rpb24gKGFic2VsZW0sIGMsIHBpdGNoZWxlbSwgb3B0aW9ucykge1xuXHRpZiAoIW9wdGlvbnMpIG9wdGlvbnMgPSB7fTtcblx0dmFyIGRpciA9IChvcHRpb25zLmRpciAhPT0gdW5kZWZpbmVkKSA/IG9wdGlvbnMuZGlyIDogbnVsbDtcblx0dmFyIGhlYWR4ID0gKG9wdGlvbnMuaGVhZHggIT09IHVuZGVmaW5lZCkgPyBvcHRpb25zLmhlYWR4IDogMDtcblx0dmFyIGV4dHJheCA9IChvcHRpb25zLmV4dHJheCAhPT0gdW5kZWZpbmVkKSA/IG9wdGlvbnMuZXh0cmF4IDogMDtcblx0dmFyIGZsYWcgPSAob3B0aW9ucy5mbGFnICE9PSB1bmRlZmluZWQpID8gb3B0aW9ucy5mbGFnIDogbnVsbDtcblx0dmFyIGRvdCA9IChvcHRpb25zLmRvdCAhPT0gdW5kZWZpbmVkKSA/IG9wdGlvbnMuZG90IDogMDtcblx0dmFyIGRvdHNoaWZ0eCA9IChvcHRpb25zLmRvdHNoaWZ0eCAhPT0gdW5kZWZpbmVkKSA/IG9wdGlvbnMuZG90c2hpZnR4IDogMDtcblx0dmFyIHNjYWxlID0gKG9wdGlvbnMuc2NhbGUgIT09IHVuZGVmaW5lZCkgPyBvcHRpb25zLnNjYWxlIDogMTtcblx0dmFyIGFjY2lkZW50YWxTbG90ID0gKG9wdGlvbnMuYWNjaWRlbnRhbFNsb3QgIT09IHVuZGVmaW5lZCkgPyBvcHRpb25zLmFjY2lkZW50YWxTbG90IDogW107XG5cdHZhciBzaG91bGRFeHRlbmRTdGVtID0gKG9wdGlvbnMuc2hvdWxkRXh0ZW5kU3RlbSAhPT0gdW5kZWZpbmVkKSA/IG9wdGlvbnMuc2hvdWxkRXh0ZW5kU3RlbSA6IGZhbHNlO1xuXHR2YXIgcHJpbnRBY2NpZGVudGFscyA9IChvcHRpb25zLnByaW50QWNjaWRlbnRhbHMgIT09IHVuZGVmaW5lZCkgPyBvcHRpb25zLnByaW50QWNjaWRlbnRhbHMgOiB0cnVlO1xuXG5cdC8vIFRPRE8gc2NhbGUgdGhlIGRvdCBhcyB3ZWxsXG5cdHZhciBwaXRjaCA9IHBpdGNoZWxlbS52ZXJ0aWNhbFBvcztcblx0dmFyIG5vdGVoZWFkO1xuXHR2YXIgYWNjaWRlbnRhbHNoaWZ0eCA9IDA7XG5cdHZhciBuZXdEb3RTaGlmdFggPSAwO1xuXHR2YXIgZXh0cmFMZWZ0ID0gMDtcblx0aWYgKGMgPT09IHVuZGVmaW5lZClcblx0XHRhYnNlbGVtLmFkZEZpeGVkKG5ldyBSZWxhdGl2ZUVsZW1lbnQoXCJwaXRjaCBpcyB1bmRlZmluZWRcIiwgMCwgMCwgMCwgeyB0eXBlOiBcImRlYnVnXCIgfSkpO1xuXHRlbHNlIGlmIChjID09PSBcIlwiKSB7XG5cdFx0bm90ZWhlYWQgPSBuZXcgUmVsYXRpdmVFbGVtZW50KG51bGwsIDAsIDAsIHBpdGNoKTtcblx0fSBlbHNlIHtcblx0XHR2YXIgc2hpZnRoZWFkeCA9IGhlYWR4O1xuXHRcdGlmIChwaXRjaGVsZW0ucHJpbnRlcl9zaGlmdCkge1xuXHRcdFx0dmFyIGFkanVzdCA9IChwaXRjaGVsZW0ucHJpbnRlcl9zaGlmdCA9PT0gXCJzYW1lXCIpID8gMSA6IDA7XG5cdFx0XHRzaGlmdGhlYWR4ID0gKGRpciA9PT0gXCJkb3duXCIpID8gLWdseXBocy5nZXRTeW1ib2xXaWR0aChjKSAqIHNjYWxlICsgYWRqdXN0IDogZ2x5cGhzLmdldFN5bWJvbFdpZHRoKGMpICogc2NhbGUgLSBhZGp1c3Q7XG5cdFx0fVxuXHRcdHZhciBvcHRzID0geyBzY2FsZXg6IHNjYWxlLCBzY2FsZXk6IHNjYWxlLCB0aGlja25lc3M6IGdseXBocy5zeW1ib2xIZWlnaHRJblBpdGNoZXMoYykgKiBzY2FsZSwgbmFtZTogcGl0Y2hlbGVtLm5hbWUgfTtcblx0XHRub3RlaGVhZCA9IG5ldyBSZWxhdGl2ZUVsZW1lbnQoYywgc2hpZnRoZWFkeCwgZ2x5cGhzLmdldFN5bWJvbFdpZHRoKGMpICogc2NhbGUsIHBpdGNoLCBvcHRzKTtcblx0XHRub3RlaGVhZC5zdGVtRGlyID0gZGlyO1xuXHRcdGlmIChmbGFnKSB7XG5cdFx0XHR2YXIgcG9zID0gcGl0Y2ggKyAoKGRpciA9PT0gXCJkb3duXCIpID8gLTcgOiA3KSAqIHNjYWxlO1xuXHRcdFx0Ly8gaWYgdGhpcyBpcyBhIHJlZ3VsYXIgbm90ZSwgKG5vdCBncmFjZSBvciB0ZW1wbyBpbmRpY2F0b3IpIHRoZW4gdGhlIHN0ZW0gd2lsbCBoYXZlIGJlZW4gc3RyZXRjaGVkIHRvIHRoZSBtaWRkbGUgbGluZSBpZiBpdCBpcyBmYXIgZnJvbSB0aGUgY2VudGVyLlxuXHRcdFx0aWYgKHNob3VsZEV4dGVuZFN0ZW0pIHtcblx0XHRcdFx0aWYgKGRpciA9PT0gXCJkb3duXCIgJiYgcG9zID4gNilcblx0XHRcdFx0XHRwb3MgPSA2O1xuXHRcdFx0XHRpZiAoZGlyID09PSBcInVwXCIgJiYgcG9zIDwgNilcblx0XHRcdFx0XHRwb3MgPSA2O1xuXHRcdFx0fVxuXHRcdFx0Ly9pZiAoc2NhbGU9PT0xICYmIChkaXI9PT1cImRvd25cIik/KHBvcz42KToocG9zPDYpKSBwb3M9Njtcblx0XHRcdHZhciB4ZGVsdGEgPSAoZGlyID09PSBcImRvd25cIikgPyBoZWFkeCA6IGhlYWR4ICsgbm90ZWhlYWQudyAtIDAuNjtcblx0XHRcdGFic2VsZW0uYWRkUmlnaHQobmV3IFJlbGF0aXZlRWxlbWVudChmbGFnLCB4ZGVsdGEsIGdseXBocy5nZXRTeW1ib2xXaWR0aChmbGFnKSAqIHNjYWxlLCBwb3MsIHsgc2NhbGV4OiBzY2FsZSwgc2NhbGV5OiBzY2FsZSB9KSk7XG5cdFx0fVxuXHRcdG5ld0RvdFNoaWZ0WCA9IG5vdGVoZWFkLncgKyBkb3RzaGlmdHggLSAyICsgNSAqIGRvdDtcblx0XHRmb3IgKDsgZG90ID4gMDsgZG90LS0pIHtcblx0XHRcdHZhciBkb3RhZGp1c3R5ID0gKDEgLSBNYXRoLmFicyhwaXRjaCkgJSAyKTsgLy9QRVI6IHRha2UgYWJzIHZhbHVlIG9mIHRoZSBwaXRjaC4gQW5kIHRoZSBzaGlmdCBzdGlsbCBoYXBwZW5zIG9uIGxlZGdlciBsaW5lcy5cblx0XHRcdGFic2VsZW0uYWRkUmlnaHQobmV3IFJlbGF0aXZlRWxlbWVudChcImRvdHMuZG90XCIsIG5vdGVoZWFkLncgKyBkb3RzaGlmdHggLSAyICsgNSAqIGRvdCwgZ2x5cGhzLmdldFN5bWJvbFdpZHRoKFwiZG90cy5kb3RcIiksIHBpdGNoICsgZG90YWRqdXN0eSkpO1xuXHRcdH1cblx0fVxuXHRpZiAobm90ZWhlYWQpXG5cdFx0bm90ZWhlYWQuaGlnaGVzdFZlcnQgPSBwaXRjaGVsZW0uaGlnaGVzdFZlcnQ7XG5cblx0aWYgKHByaW50QWNjaWRlbnRhbHMgJiYgcGl0Y2hlbGVtLmFjY2lkZW50YWwpIHtcblx0XHR2YXIgc3ltYjtcblx0XHRzd2l0Y2ggKHBpdGNoZWxlbS5hY2NpZGVudGFsKSB7XG5cdFx0XHRjYXNlIFwicXVhcnRlcnNoYXJwXCI6XG5cdFx0XHRcdHN5bWIgPSBcImFjY2lkZW50YWxzLmhhbGZzaGFycFwiO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgXCJkYmxzaGFycFwiOlxuXHRcdFx0XHRzeW1iID0gXCJhY2NpZGVudGFscy5kYmxzaGFycFwiO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgXCJzaGFycFwiOlxuXHRcdFx0XHRzeW1iID0gXCJhY2NpZGVudGFscy5zaGFycFwiO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgXCJxdWFydGVyZmxhdFwiOlxuXHRcdFx0XHRzeW1iID0gXCJhY2NpZGVudGFscy5oYWxmZmxhdFwiO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgXCJmbGF0XCI6XG5cdFx0XHRcdHN5bWIgPSBcImFjY2lkZW50YWxzLmZsYXRcIjtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIFwiZGJsZmxhdFwiOlxuXHRcdFx0XHRzeW1iID0gXCJhY2NpZGVudGFscy5kYmxmbGF0XCI7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBcIm5hdHVyYWxcIjpcblx0XHRcdFx0c3ltYiA9IFwiYWNjaWRlbnRhbHMubmF0XCI7XG5cdFx0fVxuXHRcdC8vIGlmIGEgbm90ZSBpcyBhdCBsZWFzdCBhIHNpeHRoIGF3YXksIGl0IGNhbiBzaGFyZSBhIHNsb3Qgd2l0aCBhbm90aGVyIGFjY2lkZW50YWxcblx0XHR2YXIgYWNjU2xvdEZvdW5kID0gZmFsc2U7XG5cdFx0dmFyIGFjY1BsYWNlID0gZXh0cmF4O1xuXHRcdGZvciAodmFyIGogPSAwOyBqIDwgYWNjaWRlbnRhbFNsb3QubGVuZ3RoOyBqKyspIHtcblx0XHRcdGlmIChwaXRjaCAtIGFjY2lkZW50YWxTbG90W2pdWzBdID49IDYpIHtcblx0XHRcdFx0YWNjaWRlbnRhbFNsb3Rbal1bMF0gPSBwaXRjaDtcblx0XHRcdFx0YWNjUGxhY2UgPSBhY2NpZGVudGFsU2xvdFtqXVsxXTtcblx0XHRcdFx0YWNjU2xvdEZvdW5kID0gdHJ1ZTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGlmIChhY2NTbG90Rm91bmQgPT09IGZhbHNlKSB7XG5cdFx0XHRhY2NQbGFjZSAtPSAoZ2x5cGhzLmdldFN5bWJvbFdpZHRoKHN5bWIpICogc2NhbGUgKyAyKTtcblx0XHRcdGFjY2lkZW50YWxTbG90LnB1c2goW3BpdGNoLCBhY2NQbGFjZV0pO1xuXHRcdFx0YWNjaWRlbnRhbHNoaWZ0eCA9IChnbHlwaHMuZ2V0U3ltYm9sV2lkdGgoc3ltYikgKiBzY2FsZSArIDIpO1xuXHRcdH1cblx0XHR2YXIgaCA9IGdseXBocy5zeW1ib2xIZWlnaHRJblBpdGNoZXMoc3ltYik7XG5cdFx0YWJzZWxlbS5hZGRFeHRyYShuZXcgUmVsYXRpdmVFbGVtZW50KHN5bWIsIGFjY1BsYWNlLCBnbHlwaHMuZ2V0U3ltYm9sV2lkdGgoc3ltYiksIHBpdGNoLCB7IHNjYWxleDogc2NhbGUsIHNjYWxleTogc2NhbGUsIHRvcDogcGl0Y2ggKyBoIC8gMiwgYm90dG9tOiBwaXRjaCAtIGggLyAyIH0pKTtcblx0XHRleHRyYUxlZnQgPSBnbHlwaHMuZ2V0U3ltYm9sV2lkdGgoc3ltYikgLyAyOyAvLyBUT0RPLVBFUjogV2UgbmVlZCBhIGxpdHRsZSBleHRyYSB3aWR0aCBpZiB0aGVyZSBpcyBhbiBhY2NpZGVudGFsLCBidXQgSSdtIG5vdCBzdXJlIHdoeSBpdCBpc24ndCB0aGUgZnVsbCB3aWR0aCBvZiB0aGUgYWNjaWRlbnRhbC5cblx0fVxuXG5cdHJldHVybiB7IG5vdGVoZWFkOiBub3RlaGVhZCwgYWNjaWRlbnRhbHNoaWZ0eDogYWNjaWRlbnRhbHNoaWZ0eCwgZG90c2hpZnR4OiBuZXdEb3RTaGlmdFgsIGV4dHJhTGVmdDogZXh0cmFMZWZ0IH07XG5cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gY3JlYXRlTm90ZUhlYWQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/create-note-head.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/create-time-signature.js":
/*!************************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/create-time-signature.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_create_time_signature.js\n\nvar AbsoluteElement = __webpack_require__(/*! ./elements/absolute-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/absolute-element.js\");\nvar glyphs = __webpack_require__(/*! ./glyphs */ \"(ssr)/./node_modules/abcjs/src/write/creation/glyphs.js\");\nvar RelativeElement = __webpack_require__(/*! ./elements/relative-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/relative-element.js\");\n\nvar createTimeSignature = function (elem, tuneNumber) {\n\telem.el_type = \"timeSignature\";\n\tvar abselem = new AbsoluteElement(elem, 0, 10, 'staff-extra time-signature', tuneNumber);\n\tif (elem.type === \"specified\") {\n\t\tvar x = 0;\n\t\tfor (var i = 0; i < elem.value.length; i++) {\n\t\t\tif (i !== 0) {\n\t\t\t\tabselem.addRight(new RelativeElement('+', x + 1, glyphs.getSymbolWidth(\"+\"), 6, { thickness: glyphs.symbolHeightInPitches(\"+\") }));\n\t\t\t\tx += glyphs.getSymbolWidth(\"+\") + 2;\n\t\t\t}\n\t\t\tif (elem.value[i].den) {\n\t\t\t\tvar numWidth = 0;\n\t\t\t\tfor (var i2 = 0; i2 < elem.value[i].num.length; i2++)\n\t\t\t\t\tnumWidth += glyphs.getSymbolWidth(elem.value[i].num[i2]);\n\t\t\t\tvar denWidth = 0;\n\t\t\t\tfor (i2 = 0; i2 < elem.value[i].num.length; i2++)\n\t\t\t\t\tdenWidth += glyphs.getSymbolWidth(elem.value[i].den[i2]);\n\t\t\t\tvar maxWidth = Math.max(numWidth, denWidth);\n\t\t\t\tabselem.addRight(new RelativeElement(elem.value[i].num, x + (maxWidth - numWidth) / 2, numWidth, 8, { thickness: glyphs.symbolHeightInPitches(elem.value[i].num[0]) }));\n\t\t\t\tabselem.addRight(new RelativeElement(elem.value[i].den, x + (maxWidth - denWidth) / 2, denWidth, 4, { thickness: glyphs.symbolHeightInPitches(elem.value[i].den[0]) }));\n\t\t\t\tx += maxWidth\n\t\t\t} else {\n\t\t\t\tvar thisWidth = 0;\n\t\t\t\tfor (var i3 = 0; i3 < elem.value[i].num.length; i3++)\n\t\t\t\t\tthisWidth += glyphs.getSymbolWidth(elem.value[i].num[i3]);\n\t\t\t\tabselem.addRight(new RelativeElement(elem.value[i].num, x, thisWidth, 6, { thickness: glyphs.symbolHeightInPitches(elem.value[i].num[0]) }));\n\t\t\t\tx += thisWidth;\n\t\t\t}\n\t\t}\n\t} else if (elem.type === \"common_time\") {\n\t\tabselem.addRight(new RelativeElement(\"timesig.common\", 0, glyphs.getSymbolWidth(\"timesig.common\"), 6, { thickness: glyphs.symbolHeightInPitches(\"timesig.common\") }));\n\n\t} else if (elem.type === \"cut_time\") {\n\t\tabselem.addRight(new RelativeElement(\"timesig.cut\", 0, glyphs.getSymbolWidth(\"timesig.cut\"), 6, { thickness: glyphs.symbolHeightInPitches(\"timesig.cut\") }));\n\t} else if (elem.type === \"tempus_imperfectum\") {\n\t\tabselem.addRight(new RelativeElement(\"timesig.imperfectum\", 0, glyphs.getSymbolWidth(\"timesig.imperfectum\"), 6, { thickness: glyphs.symbolHeightInPitches(\"timesig.imperfectum\") }));\n\t} else if (elem.type === \"tempus_imperfectum_prolatio\") {\n\t\tabselem.addRight(new RelativeElement(\"timesig.imperfectum2\", 0, glyphs.getSymbolWidth(\"timesig.imperfectum2\"), 6, { thickness: glyphs.symbolHeightInPitches(\"timesig.imperfectum2\") }));\n\t} else if (elem.type === \"tempus_perfectum\") {\n\t\tabselem.addRight(new RelativeElement(\"timesig.perfectum\", 0, glyphs.getSymbolWidth(\"timesig.perfectum\"), 6, { thickness: glyphs.symbolHeightInPitches(\"timesig.perfectum\") }));\n\t} else if (elem.type === \"tempus_perfectum_prolatio\") {\n\t\tabselem.addRight(new RelativeElement(\"timesig.perfectum2\", 0, glyphs.getSymbolWidth(\"timesig.perfectum2\"), 6, { thickness: glyphs.symbolHeightInPitches(\"timesig.perfectum2\") }));\n\t} else {\n\t\tconsole.log(\"time signature:\", elem);\n\t}\n\treturn abselem;\n};\n\nmodule.exports = createTimeSignature;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2NyZWF0ZS10aW1lLXNpZ25hdHVyZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxzQkFBc0IsbUJBQU8sQ0FBQywrR0FBNkI7QUFDM0QsYUFBYSxtQkFBTyxDQUFDLHlFQUFVO0FBQy9CLHNCQUFzQixtQkFBTyxDQUFDLCtHQUE2Qjs7QUFFM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1QkFBdUI7QUFDekM7QUFDQSxzRkFBc0YsOENBQThDO0FBQ3BJO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLCtCQUErQjtBQUNwRDtBQUNBO0FBQ0EsaUJBQWlCLCtCQUErQjtBQUNoRDtBQUNBO0FBQ0EsMEdBQTBHLCtEQUErRDtBQUN6SywwR0FBMEcsK0RBQStEO0FBQ3pLO0FBQ0EsS0FBSztBQUNMO0FBQ0EscUJBQXFCLCtCQUErQjtBQUNwRDtBQUNBLCtFQUErRSwrREFBK0Q7QUFDOUk7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILDBHQUEwRywyREFBMkQ7O0FBRXJLLEdBQUc7QUFDSCxvR0FBb0csd0RBQXdEO0FBQzVKLEdBQUc7QUFDSCxvSEFBb0gsZ0VBQWdFO0FBQ3BMLEdBQUc7QUFDSCxzSEFBc0gsaUVBQWlFO0FBQ3ZMLEdBQUc7QUFDSCxnSEFBZ0gsOERBQThEO0FBQzlLLEdBQUc7QUFDSCxrSEFBa0gsK0RBQStEO0FBQ2pMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9jcmVhdGlvbi9jcmVhdGUtdGltZS1zaWduYXR1cmUuanM/Y2ZiNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAgICBhYmNfY3JlYXRlX3RpbWVfc2lnbmF0dXJlLmpzXG5cbnZhciBBYnNvbHV0ZUVsZW1lbnQgPSByZXF1aXJlKCcuL2VsZW1lbnRzL2Fic29sdXRlLWVsZW1lbnQnKTtcbnZhciBnbHlwaHMgPSByZXF1aXJlKCcuL2dseXBocycpO1xudmFyIFJlbGF0aXZlRWxlbWVudCA9IHJlcXVpcmUoJy4vZWxlbWVudHMvcmVsYXRpdmUtZWxlbWVudCcpO1xuXG52YXIgY3JlYXRlVGltZVNpZ25hdHVyZSA9IGZ1bmN0aW9uIChlbGVtLCB0dW5lTnVtYmVyKSB7XG5cdGVsZW0uZWxfdHlwZSA9IFwidGltZVNpZ25hdHVyZVwiO1xuXHR2YXIgYWJzZWxlbSA9IG5ldyBBYnNvbHV0ZUVsZW1lbnQoZWxlbSwgMCwgMTAsICdzdGFmZi1leHRyYSB0aW1lLXNpZ25hdHVyZScsIHR1bmVOdW1iZXIpO1xuXHRpZiAoZWxlbS50eXBlID09PSBcInNwZWNpZmllZFwiKSB7XG5cdFx0dmFyIHggPSAwO1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgZWxlbS52YWx1ZS5sZW5ndGg7IGkrKykge1xuXHRcdFx0aWYgKGkgIT09IDApIHtcblx0XHRcdFx0YWJzZWxlbS5hZGRSaWdodChuZXcgUmVsYXRpdmVFbGVtZW50KCcrJywgeCArIDEsIGdseXBocy5nZXRTeW1ib2xXaWR0aChcIitcIiksIDYsIHsgdGhpY2tuZXNzOiBnbHlwaHMuc3ltYm9sSGVpZ2h0SW5QaXRjaGVzKFwiK1wiKSB9KSk7XG5cdFx0XHRcdHggKz0gZ2x5cGhzLmdldFN5bWJvbFdpZHRoKFwiK1wiKSArIDI7XG5cdFx0XHR9XG5cdFx0XHRpZiAoZWxlbS52YWx1ZVtpXS5kZW4pIHtcblx0XHRcdFx0dmFyIG51bVdpZHRoID0gMDtcblx0XHRcdFx0Zm9yICh2YXIgaTIgPSAwOyBpMiA8IGVsZW0udmFsdWVbaV0ubnVtLmxlbmd0aDsgaTIrKylcblx0XHRcdFx0XHRudW1XaWR0aCArPSBnbHlwaHMuZ2V0U3ltYm9sV2lkdGgoZWxlbS52YWx1ZVtpXS5udW1baTJdKTtcblx0XHRcdFx0dmFyIGRlbldpZHRoID0gMDtcblx0XHRcdFx0Zm9yIChpMiA9IDA7IGkyIDwgZWxlbS52YWx1ZVtpXS5udW0ubGVuZ3RoOyBpMisrKVxuXHRcdFx0XHRcdGRlbldpZHRoICs9IGdseXBocy5nZXRTeW1ib2xXaWR0aChlbGVtLnZhbHVlW2ldLmRlbltpMl0pO1xuXHRcdFx0XHR2YXIgbWF4V2lkdGggPSBNYXRoLm1heChudW1XaWR0aCwgZGVuV2lkdGgpO1xuXHRcdFx0XHRhYnNlbGVtLmFkZFJpZ2h0KG5ldyBSZWxhdGl2ZUVsZW1lbnQoZWxlbS52YWx1ZVtpXS5udW0sIHggKyAobWF4V2lkdGggLSBudW1XaWR0aCkgLyAyLCBudW1XaWR0aCwgOCwgeyB0aGlja25lc3M6IGdseXBocy5zeW1ib2xIZWlnaHRJblBpdGNoZXMoZWxlbS52YWx1ZVtpXS5udW1bMF0pIH0pKTtcblx0XHRcdFx0YWJzZWxlbS5hZGRSaWdodChuZXcgUmVsYXRpdmVFbGVtZW50KGVsZW0udmFsdWVbaV0uZGVuLCB4ICsgKG1heFdpZHRoIC0gZGVuV2lkdGgpIC8gMiwgZGVuV2lkdGgsIDQsIHsgdGhpY2tuZXNzOiBnbHlwaHMuc3ltYm9sSGVpZ2h0SW5QaXRjaGVzKGVsZW0udmFsdWVbaV0uZGVuWzBdKSB9KSk7XG5cdFx0XHRcdHggKz0gbWF4V2lkdGhcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHZhciB0aGlzV2lkdGggPSAwO1xuXHRcdFx0XHRmb3IgKHZhciBpMyA9IDA7IGkzIDwgZWxlbS52YWx1ZVtpXS5udW0ubGVuZ3RoOyBpMysrKVxuXHRcdFx0XHRcdHRoaXNXaWR0aCArPSBnbHlwaHMuZ2V0U3ltYm9sV2lkdGgoZWxlbS52YWx1ZVtpXS5udW1baTNdKTtcblx0XHRcdFx0YWJzZWxlbS5hZGRSaWdodChuZXcgUmVsYXRpdmVFbGVtZW50KGVsZW0udmFsdWVbaV0ubnVtLCB4LCB0aGlzV2lkdGgsIDYsIHsgdGhpY2tuZXNzOiBnbHlwaHMuc3ltYm9sSGVpZ2h0SW5QaXRjaGVzKGVsZW0udmFsdWVbaV0ubnVtWzBdKSB9KSk7XG5cdFx0XHRcdHggKz0gdGhpc1dpZHRoO1xuXHRcdFx0fVxuXHRcdH1cblx0fSBlbHNlIGlmIChlbGVtLnR5cGUgPT09IFwiY29tbW9uX3RpbWVcIikge1xuXHRcdGFic2VsZW0uYWRkUmlnaHQobmV3IFJlbGF0aXZlRWxlbWVudChcInRpbWVzaWcuY29tbW9uXCIsIDAsIGdseXBocy5nZXRTeW1ib2xXaWR0aChcInRpbWVzaWcuY29tbW9uXCIpLCA2LCB7IHRoaWNrbmVzczogZ2x5cGhzLnN5bWJvbEhlaWdodEluUGl0Y2hlcyhcInRpbWVzaWcuY29tbW9uXCIpIH0pKTtcblxuXHR9IGVsc2UgaWYgKGVsZW0udHlwZSA9PT0gXCJjdXRfdGltZVwiKSB7XG5cdFx0YWJzZWxlbS5hZGRSaWdodChuZXcgUmVsYXRpdmVFbGVtZW50KFwidGltZXNpZy5jdXRcIiwgMCwgZ2x5cGhzLmdldFN5bWJvbFdpZHRoKFwidGltZXNpZy5jdXRcIiksIDYsIHsgdGhpY2tuZXNzOiBnbHlwaHMuc3ltYm9sSGVpZ2h0SW5QaXRjaGVzKFwidGltZXNpZy5jdXRcIikgfSkpO1xuXHR9IGVsc2UgaWYgKGVsZW0udHlwZSA9PT0gXCJ0ZW1wdXNfaW1wZXJmZWN0dW1cIikge1xuXHRcdGFic2VsZW0uYWRkUmlnaHQobmV3IFJlbGF0aXZlRWxlbWVudChcInRpbWVzaWcuaW1wZXJmZWN0dW1cIiwgMCwgZ2x5cGhzLmdldFN5bWJvbFdpZHRoKFwidGltZXNpZy5pbXBlcmZlY3R1bVwiKSwgNiwgeyB0aGlja25lc3M6IGdseXBocy5zeW1ib2xIZWlnaHRJblBpdGNoZXMoXCJ0aW1lc2lnLmltcGVyZmVjdHVtXCIpIH0pKTtcblx0fSBlbHNlIGlmIChlbGVtLnR5cGUgPT09IFwidGVtcHVzX2ltcGVyZmVjdHVtX3Byb2xhdGlvXCIpIHtcblx0XHRhYnNlbGVtLmFkZFJpZ2h0KG5ldyBSZWxhdGl2ZUVsZW1lbnQoXCJ0aW1lc2lnLmltcGVyZmVjdHVtMlwiLCAwLCBnbHlwaHMuZ2V0U3ltYm9sV2lkdGgoXCJ0aW1lc2lnLmltcGVyZmVjdHVtMlwiKSwgNiwgeyB0aGlja25lc3M6IGdseXBocy5zeW1ib2xIZWlnaHRJblBpdGNoZXMoXCJ0aW1lc2lnLmltcGVyZmVjdHVtMlwiKSB9KSk7XG5cdH0gZWxzZSBpZiAoZWxlbS50eXBlID09PSBcInRlbXB1c19wZXJmZWN0dW1cIikge1xuXHRcdGFic2VsZW0uYWRkUmlnaHQobmV3IFJlbGF0aXZlRWxlbWVudChcInRpbWVzaWcucGVyZmVjdHVtXCIsIDAsIGdseXBocy5nZXRTeW1ib2xXaWR0aChcInRpbWVzaWcucGVyZmVjdHVtXCIpLCA2LCB7IHRoaWNrbmVzczogZ2x5cGhzLnN5bWJvbEhlaWdodEluUGl0Y2hlcyhcInRpbWVzaWcucGVyZmVjdHVtXCIpIH0pKTtcblx0fSBlbHNlIGlmIChlbGVtLnR5cGUgPT09IFwidGVtcHVzX3BlcmZlY3R1bV9wcm9sYXRpb1wiKSB7XG5cdFx0YWJzZWxlbS5hZGRSaWdodChuZXcgUmVsYXRpdmVFbGVtZW50KFwidGltZXNpZy5wZXJmZWN0dW0yXCIsIDAsIGdseXBocy5nZXRTeW1ib2xXaWR0aChcInRpbWVzaWcucGVyZmVjdHVtMlwiKSwgNiwgeyB0aGlja25lc3M6IGdseXBocy5zeW1ib2xIZWlnaHRJblBpdGNoZXMoXCJ0aW1lc2lnLnBlcmZlY3R1bTJcIikgfSkpO1xuXHR9IGVsc2Uge1xuXHRcdGNvbnNvbGUubG9nKFwidGltZSBzaWduYXR1cmU6XCIsIGVsZW0pO1xuXHR9XG5cdHJldHVybiBhYnNlbGVtO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVUaW1lU2lnbmF0dXJlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/create-time-signature.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/decoration.js":
/*!*************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/decoration.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// abc_decoration.js: Creates a data structure suitable for printing a line of abc\n\nvar DynamicDecoration = __webpack_require__(/*! ./elements/dynamic-decoration */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/dynamic-decoration.js\");\nvar CrescendoElem = __webpack_require__(/*! ./elements/crescendo-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/crescendo-element.js\");\nvar GlissandoElem = __webpack_require__(/*! ./elements/glissando-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/glissando-element.js\");\nvar glyphs = __webpack_require__(/*! ./glyphs */ \"(ssr)/./node_modules/abcjs/src/write/creation/glyphs.js\");\nvar RelativeElement = __webpack_require__(/*! ./elements/relative-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/relative-element.js\");\nvar TieElem = __webpack_require__(/*! ./elements/tie-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/tie-element.js\");\n\nvar Decoration = function Decoration() {\n\tthis.startDiminuendoX = undefined;\n\tthis.startCrescendoX = undefined;\n\tthis.minTop = 12;\t// TODO-PER: this is assuming a 5-line staff. Pass that info in.\n\tthis.minBottom = 0;\n};\n\nvar closeDecoration = function (voice, decoration, pitch, width, abselem, roomtaken, dir, minPitch, accentAbove) {\n\tvar yPos;\n\tfor (var i = 0; i < decoration.length; i++) {\n\t\tif (decoration[i] === \"staccato\" || decoration[i] === \"tenuto\" || (decoration[i] === \"accent\" && !accentAbove)) {\n\t\t\tvar symbol = \"scripts.\" + decoration[i];\n\t\t\tif (decoration[i] === \"accent\") symbol = \"scripts.sforzato\";\n\t\t\tif (yPos === undefined)\n\t\t\t\tyPos = (dir === \"down\") ? pitch + 2 : minPitch - 2;\n\t\t\telse\n\t\t\t\tyPos = (dir === \"down\") ? yPos + 2 : yPos - 2;\n\t\t\tif (decoration[i] === \"accent\") {\n\t\t\t\t// Always place the accent three pitches away, no matter whether that is a line or space.\n\t\t\t\tif (dir === \"up\") yPos--;\n\t\t\t\telse yPos++;\n\t\t\t} else {\n\t\t\t\t// don't place on a stave line. The stave lines are 2,4,6,8,10\n\t\t\t\tswitch (yPos) {\n\t\t\t\t\tcase 2:\n\t\t\t\t\tcase 4:\n\t\t\t\t\tcase 6:\n\t\t\t\t\tcase 8:\n\t\t\t\t\tcase 10:\n\t\t\t\t\t\tif (dir === \"up\") yPos--;\n\t\t\t\t\t\telse yPos++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pitch > 9) yPos++; // take up some room of those that are above\n\t\t\tvar deltaX = width / 2;\n\t\t\tif (glyphs.getSymbolAlign(symbol) !== \"center\") {\n\t\t\t\tdeltaX -= (glyphs.getSymbolWidth(symbol) / 2);\n\t\t\t}\n\t\t\tabselem.addFixedX(new RelativeElement(symbol, deltaX, glyphs.getSymbolWidth(symbol), yPos));\n\t\t}\n\t\tif (decoration[i] === \"slide\" && abselem.heads[0]) {\n\t\t\tvar yPos2 = abselem.heads[0].pitch;\n\t\t\tyPos2 -= 2; // TODO-PER: not sure what this fudge factor is.\n\t\t\tvar blank1 = new RelativeElement(\"\", -roomtaken - 15, 0, yPos2 - 1);\n\t\t\tvar blank2 = new RelativeElement(\"\", -roomtaken - 5, 0, yPos2 + 1);\n\t\t\tabselem.addFixedX(blank1);\n\t\t\tabselem.addFixedX(blank2);\n\t\t\tvoice.addOther(new TieElem({ anchor1: blank1, anchor2: blank2, fixedY: true }));\n\t\t}\n\t}\n\tif (yPos === undefined)\n\t\tyPos = pitch;\n\n\treturn { above: yPos, below: abselem.bottom };\n};\n\nvar volumeDecoration = function (voice, decoration, abselem, positioning) {\n\tfor (var i = 0; i < decoration.length; i++) {\n\t\tswitch (decoration[i]) {\n\t\t\tcase \"p\":\n\t\t\tcase \"mp\":\n\t\t\tcase \"pp\":\n\t\t\tcase \"ppp\":\n\t\t\tcase \"pppp\":\n\t\t\tcase \"f\":\n\t\t\tcase \"ff\":\n\t\t\tcase \"fff\":\n\t\t\tcase \"ffff\":\n\t\t\tcase \"sfz\":\n\t\t\tcase \"mf\":\n\t\t\t\tvar elem = new DynamicDecoration(abselem, decoration[i], positioning);\n\t\t\t\tvoice.addOther(elem);\n\t\t}\n\t}\n};\n\nvar compoundDecoration = function (decoration, pitch, width, abselem, dir) {\n\tfunction highestPitch() {\n\t\tif (abselem.heads.length === 0)\n\t\t\treturn 10;\t// TODO-PER: I don't know if this can happen, but we'll return the top of the staff if so.\n\t\tvar pitch = abselem.heads[0].pitch;\n\t\tfor (var i = 1; i < abselem.heads.length; i++)\n\t\t\tpitch = Math.max(pitch, abselem.heads[i].pitch);\n\t\treturn pitch;\n\t}\n\tfunction lowestPitch() {\n\t\tif (abselem.heads.length === 0)\n\t\t\treturn 2;\t// TODO-PER: I don't know if this can happen, but we'll return the bottom of the staff if so.\n\t\tvar pitch = abselem.heads[0].pitch;\n\t\tfor (var i = 1; i < abselem.heads.length; i++)\n\t\t\tpitch = Math.min(pitch, abselem.heads[i].pitch);\n\t\treturn pitch;\n\t}\n\tfunction compoundDecoration(symbol, count) {\n\t\tvar placement = (dir === 'down') ? lowestPitch() + 1 : highestPitch() + 9;\n\t\tif (dir !== 'down' && count === 1)\n\t\t\tplacement--;\n\t\tvar deltaX = width / 2;\n\t\tdeltaX += (dir === 'down') ? -5 : 3;\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tplacement -= 1;\n\t\t\tabselem.addFixedX(new RelativeElement(symbol, deltaX, glyphs.getSymbolWidth(symbol), placement));\n\t\t}\n\t}\n\n\tfor (var i = 0; i < decoration.length; i++) {\n\t\tswitch (decoration[i]) {\n\t\t\tcase \"/\": compoundDecoration(\"flags.ugrace\", 1); break;\n\t\t\tcase \"//\": compoundDecoration(\"flags.ugrace\", 2); break;\n\t\t\tcase \"///\": compoundDecoration(\"flags.ugrace\", 3); break;\n\t\t\tcase \"////\": compoundDecoration(\"flags.ugrace\", 4); break;\n\t\t}\n\t}\n};\n\nvar stackedDecoration = function (decoration, width, abselem, yPos, positioning, minTop, minBottom, accentAbove) {\n\tfunction incrementPlacement(placement, height) {\n\t\tif (placement === 'above')\n\t\t\tyPos.above += height;\n\t\telse\n\t\t\tyPos.below -= height;\n\t}\n\tfunction getPlacement(placement) {\n\t\tvar y;\n\t\tif (placement === 'above') {\n\t\t\ty = yPos.above;\n\t\t\tif (y < minTop)\n\t\t\t\ty = minTop;\n\t\t} else {\n\t\t\ty = yPos.below;\n\t\t\tif (y > minBottom)\n\t\t\t\ty = minBottom;\n\t\t}\n\t\treturn y;\n\t}\n\tfunction textDecoration(text, placement, anchor) {\n\t\tvar y = getPlacement(placement);\n\t\tvar textFudge = 2;\n\t\tvar textHeight = 5;\n\t\t// TODO-PER: Get the height of the current font and use that for the thickness.\n\t\tabselem.addFixedX(new RelativeElement(text, width / 2, 0, y + textFudge, { type: \"decoration\", klass: 'ornament', thickness: 3, anchor: anchor }));\n\n\t\tincrementPlacement(placement, textHeight);\n\t}\n\tfunction symbolDecoration(symbol, placement) {\n\t\tvar deltaX = width / 2;\n\t\tif (glyphs.getSymbolAlign(symbol) !== \"center\") {\n\t\t\tdeltaX -= (glyphs.getSymbolWidth(symbol) / 2);\n\t\t}\n\t\tvar height = glyphs.symbolHeightInPitches(symbol) + 1; // adding a little padding so nothing touches.\n\t\tvar y = getPlacement(placement);\n\t\ty = (placement === 'above') ? y + height / 2 : y - height / 2;// Center the element vertically.\n\t\tabselem.addFixedX(new RelativeElement(symbol, deltaX, glyphs.getSymbolWidth(symbol), y, { klass: 'ornament', thickness: glyphs.symbolHeightInPitches(symbol), position: placement }));\n\n\t\tincrementPlacement(placement, height);\n\t}\n\n\tvar symbolList = {\n\t\t\"+\": \"scripts.stopped\",\n\t\t\"open\": \"scripts.open\",\n\t\t\"snap\": \"scripts.snap\",\n\t\t\"wedge\": \"scripts.wedge\",\n\t\t\"thumb\": \"scripts.thumb\",\n\t\t\"shortphrase\": \"scripts.shortphrase\",\n\t\t\"mediumphrase\": \"scripts.mediumphrase\",\n\t\t\"longphrase\": \"scripts.longphrase\",\n\t\t\"trill\": \"scripts.trill\",\n\t\t\"trillh\": \"scripts.trill\",\n\t\t\"roll\": \"scripts.roll\",\n\t\t\"irishroll\": \"scripts.roll\",\n\t\t\"marcato\": \"scripts.umarcato\",\n\t\t\"dmarcato\": \"scripts.dmarcato\",\n\t\t\"umarcato\": \"scripts.umarcato\",\n\t\t\"turn\": \"scripts.turn\",\n\t\t\"uppermordent\": \"scripts.prall\",\n\t\t\"pralltriller\": \"scripts.prall\",\n\t\t\"mordent\": \"scripts.mordent\",\n\t\t\"lowermordent\": \"scripts.mordent\",\n\t\t\"downbow\": \"scripts.downbow\",\n\t\t\"upbow\": \"scripts.upbow\",\n\t\t\"fermata\": \"scripts.ufermata\",\n\t\t\"invertedfermata\": \"scripts.dfermata\",\n\t\t\"breath\": \",\",\n\t\t\"coda\": \"scripts.coda\",\n\t\t\"segno\": \"scripts.segno\"\n\t};\n\n\tvar hasOne = false;\n\tfor (var i = 0; i < decoration.length; i++) {\n\t\tswitch (decoration[i]) {\n\t\t\tcase \"0\":\n\t\t\tcase \"1\":\n\t\t\tcase \"2\":\n\t\t\tcase \"3\":\n\t\t\tcase \"4\":\n\t\t\tcase \"5\":\n\t\t\tcase \"D.C.\":\n\t\t\tcase \"D.S.\":\n\t\t\t\ttextDecoration(decoration[i], positioning, 'middle');\n\t\t\t\thasOne = true;\n\t\t\t\tbreak;\n\t\t\tcase \"D.C.alcoda\":\n\t\t\t\ttextDecoration(\"D.C. al coda\", positioning, 'end');\n\t\t\t\thasOne = true;\n\t\t\t\tbreak;\n\t\t\tcase \"D.C.alfine\":\n\t\t\t\ttextDecoration(\"D.C. al fine\", positioning, 'end');\n\t\t\t\thasOne = true;\n\t\t\t\tbreak;\n\t\t\tcase \"D.S.alcoda\":\n\t\t\t\ttextDecoration(\"D.S. al coda\", positioning, 'end');\n\t\t\t\thasOne = true;\n\t\t\t\tbreak;\n\t\t\tcase \"D.S.alfine\":\n\t\t\t\ttextDecoration(\"D.S. al fine\", positioning, 'end');\n\t\t\t\thasOne = true;\n\t\t\t\tbreak;\n\t\t\tcase \"fine\":\n\t\t\t\ttextDecoration(\"FINE\", positioning, 'middle');\n\t\t\t\thasOne = true;\n\t\t\t\tbreak;\n\t\t\tcase \"+\":\n\t\t\tcase \"open\":\n\t\t\tcase \"snap\":\n\t\t\tcase \"wedge\":\n\t\t\tcase \"thumb\":\n\t\t\tcase \"shortphrase\":\n\t\t\tcase \"mediumphrase\":\n\t\t\tcase \"longphrase\":\n\t\t\tcase \"trill\":\n\t\t\tcase \"trillh\":\n\t\t\tcase \"roll\":\n\t\t\tcase \"irishroll\":\n\t\t\tcase \"marcato\":\n\t\t\tcase \"dmarcato\":\n\t\t\tcase \"turn\":\n\t\t\tcase \"uppermordent\":\n\t\t\tcase \"pralltriller\":\n\t\t\tcase \"mordent\":\n\t\t\tcase \"lowermordent\":\n\t\t\tcase \"downbow\":\n\t\t\tcase \"upbow\":\n\t\t\tcase \"fermata\":\n\t\t\tcase \"breath\":\n\t\t\tcase \"umarcato\":\n\t\t\tcase \"coda\":\n\t\t\tcase \"segno\":\n\t\t\t\tsymbolDecoration(symbolList[decoration[i]], positioning);\n\t\t\t\thasOne = true;\n\t\t\t\tbreak;\n\t\t\tcase \"invertedfermata\":\n\t\t\t\tsymbolDecoration(symbolList[decoration[i]], 'below');\n\t\t\t\thasOne = true;\n\t\t\t\tbreak;\n\t\t\tcase \"mark\":\n\t\t\t\tabselem.klass = \"mark\";\n\t\t\t\tbreak;\n\t\t\tcase \"accent\":\n\t\t\t\tif (accentAbove) {\n\t\t\t\t\tsymbolDecoration(\"scripts.sforzato\", positioning);\n\t\t\t\t\thasOne = true;\n\t\t\t\t}\n\t\t\t\tbreak;\t\n\t\t}\n\t}\n\treturn hasOne;\n};\n\nfunction leftDecoration(decoration, abselem, roomtaken) {\n\tfor (var i = 0; i < decoration.length; i++) {\n\t\tswitch (decoration[i]) {\n\t\t\tcase \"arpeggio\":\n\t\t\t\t// The arpeggio symbol is the height of a note (that is, two Y units). This stacks as many as we need to go from the\n\t\t\t\t// top note to the bottom note. The arpeggio should also be a little taller than the stacked notes, so there is an extra\n\t\t\t\t// one drawn and it is offset by half of a note height (that is, one Y unit).\n\t\t\t\tfor (var j = abselem.abcelem.minpitch - 1; j <= abselem.abcelem.maxpitch; j += 2) {\n\t\t\t\t\tabselem.addExtra(\n\t\t\t\t\t\tnew RelativeElement(\n\t\t\t\t\t\t\t\"scripts.arpeggio\",\n\t\t\t\t\t\t\t-glyphs.getSymbolWidth(\"scripts.arpeggio\") * 2 - roomtaken,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tj + 2,\n\t\t\t\t\t\t\t{ klass: 'ornament', thickness: glyphs.symbolHeightInPitches(\"scripts.arpeggio\") }\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nDecoration.prototype.dynamicDecoration = function (voice, decoration, abselem, positioning) {\n\tvar diminuendo;\n\tvar crescendo;\n\tvar glissando;\n\tfor (var i = 0; i < decoration.length; i++) {\n\t\tswitch (decoration[i]) {\n\t\t\tcase \"diminuendo(\":\n\t\t\t\tthis.startDiminuendoX = abselem;\n\t\t\t\tdiminuendo = undefined;\n\t\t\t\tbreak;\n\t\t\tcase \"diminuendo)\":\n\t\t\t\tdiminuendo = { start: this.startDiminuendoX, stop: abselem };\n\t\t\t\tthis.startDiminuendoX = undefined;\n\t\t\t\tbreak;\n\t\t\tcase \"crescendo(\":\n\t\t\t\tthis.startCrescendoX = abselem;\n\t\t\t\tcrescendo = undefined;\n\t\t\t\tbreak;\n\t\t\tcase \"crescendo)\":\n\t\t\t\tcrescendo = { start: this.startCrescendoX, stop: abselem };\n\t\t\t\tthis.startCrescendoX = undefined;\n\t\t\t\tbreak;\n\t\t\tcase '~(':\n\t\t\tcase \"glissando(\":\n\t\t\t\tthis.startGlissandoX = abselem;\n\t\t\t\tglissando = undefined;\n\t\t\t\tbreak;\n\t\t\tcase '~)':\n\t\t\tcase \"glissando)\":\n\t\t\t\tglissando = { start: this.startGlissandoX, stop: abselem };\n\t\t\t\tthis.startGlissandoX = undefined;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tif (diminuendo) {\n\t\tvoice.addOther(new CrescendoElem(diminuendo.start, diminuendo.stop, \">\", positioning));\n\t}\n\tif (crescendo) {\n\t\tvoice.addOther(new CrescendoElem(crescendo.start, crescendo.stop, \"<\", positioning));\n\t}\n\tif (glissando) {\n\t\tvoice.addOther(new GlissandoElem(glissando.start, glissando.stop));\n\t}\n};\n\nDecoration.prototype.createDecoration = function (voice, decoration, pitch, width, abselem, roomtaken, dir, minPitch, positioning, hasVocals, accentAbove) {\n\tif (!positioning)\n\t\tpositioning = { ornamentPosition: 'above', volumePosition: hasVocals ? 'above' : 'below', dynamicPosition: hasVocals ? 'above' : 'below' };\n\t// These decorations don't affect the placement of other decorations\n\tvolumeDecoration(voice, decoration, abselem, positioning.volumePosition);\n\tthis.dynamicDecoration(voice, decoration, abselem, positioning.dynamicPosition);\n\tcompoundDecoration(decoration, pitch, width, abselem, dir);\n\n\t// treat staccato, accent, and tenuto first (may need to shift other markers)\n\tvar yPos = closeDecoration(voice, decoration, pitch, width, abselem, roomtaken, dir, minPitch, accentAbove);\n\t// yPos is an object containing 'above' and 'below'. That is the placement of the next symbol on either side.\n\n\tyPos.above = Math.max(yPos.above, this.minTop);\n\tyPos.below = Math.min(yPos.below, minPitch);\n\tvar hasOne = stackedDecoration(decoration, width, abselem, yPos, positioning.ornamentPosition, this.minTop, minPitch, accentAbove);\n\t//if (hasOne) {\n\t\t//\t\t\tabselem.top = Math.max(yPos.above + 3, abselem.top); // TODO-PER: Not sure why we need this fudge factor.\n\t//}\n\tleftDecoration(decoration, abselem, roomtaken);\n};\n\nmodule.exports = Decoration;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/decoration.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/elements/absolute-element.js":
/*!****************************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/elements/absolute-element.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_absolute_element.js: Definition of the AbsoluteElement class.\n\nvar highlight = __webpack_require__(/*! ../../interactive/highlight */ \"(ssr)/./node_modules/abcjs/src/write/interactive/highlight.js\");\nvar unhighlight = __webpack_require__(/*! ../../interactive/unhighlight */ \"(ssr)/./node_modules/abcjs/src/write/interactive/unhighlight.js\");\n\n// Everything that is placed in the SVG is first created as an absolute element. This is one unit of graphic information.\n// That is, it embodies a concept: a clef, a time signature, a bar line,etc. or most complexly:\n// a note with its accidental, grace note, chord symbol, trill, stem, eighth flags, etc.\n// In the largest sense, these are placed on the page at a particular place that is determined during the layout phase.\n// This object doesn't contain any of the drawing information, though. That information is contained in an array of\n// RelativeElements as the \"children\" of this class.\n// During the layout phase, the width of all the children is calculated and the X coordinate of the absolute element is set.\n//\n// So, after the AbsoluteElement is placed, then its children can be placed relative to that. There are different types of\n// relative elements that are placed with different rules:\n// 1) Fixed - these elements don't move relative to the absolute element's coordinates. These are things like the notehead,\n// any ledger lines, accidentals, etc.\n// 2) Slotted - these elements can move vertically and don't get Y coordinates until after the absolute element is placed.\n// These are things like the chord symbol, many decorations, the lyrics, etc.\n//\n// Relative elements are also classified by how they are related. This could be:\n// 1) Increases the absolute element's width to the left. This doesn't change the center point of\n// the absolute element, so adding a sharp to the note won't move it to the right. However, if the elements\n// are close together then this enforces a minimum distance.\n// 2) Has no effect on the width. Annotations and the tempo act like this. No matter how long they are the width doesn't change.\n// 3) Increases the absolute element's width to the right. This doesn't change the center point,\n// but it will increase the minimum distance.\n// 4) Sets the width on both sides. This is the note heads. They are centered on both sides of the absolute element's X coordinate.\n\n// duration - actual musical duration - different from notehead duration in triplets. refer to abcelem to get the notehead duration\n// minspacing - spacing which must be taken on top of the width defined by the duration\n// type is a meta-type for the element. It is not necessary for drawing, but it is useful to make semantic sense of the element. For instance, it can be used in the element's class name.\nvar AbsoluteElement = function AbsoluteElement(abcelem, duration, minspacing, type, tuneNumber, options) {\n\t//\tconsole.log(\"Absolute:\",abcelem, duration, minspacing, type, tuneNumber, options);\n\tif (!options)\n\t\toptions = {};\n\tthis.tuneNumber = tuneNumber;\n\tthis.abcelem = abcelem;\n\tthis.duration = duration;\n\tthis.durationClass = options.durationClassOveride ? options.durationClassOveride : this.duration;\n\tthis.minspacing = minspacing || 0;\n\tthis.x = 0;\n\tthis.children = [];\n\tthis.heads = [];\n\tthis.extra = [];\n\tthis.extraw = 0;\n\tthis.w = 0;\n\tthis.right = [];\n\tthis.invisible = false;\n\tthis.bottom = undefined;\n\tthis.top = undefined;\n\tthis.type = type;\n\n\t// The following are the dimensions of the fixed part of the element.\n\t// That is, the chord text will be a different height depending on lot of factors, but the 8th flag will always be in the same place.\n\tthis.fixed = { w: 0, t: undefined, b: undefined }; // there is no x-coord here, because that is set later.\n\n\t// these are the heights of all of the vertical elements that can't be placed until the end of the line.\n\t// the vertical order of elements that are above is: tempo, part, volume/dynamic, ending/chord, lyric\n\t// the vertical order of elements that are below is: lyric, chord, volume/dynamic\n\tthis.specialY = {\n\t\ttempoHeightAbove: 0,\n\t\tpartHeightAbove: 0,\n\t\tvolumeHeightAbove: 0,\n\t\tdynamicHeightAbove: 0,\n\t\tendingHeightAbove: 0,\n\t\tchordHeightAbove: 0,\n\t\tlyricHeightAbove: 0,\n\n\t\tlyricHeightBelow: 0,\n\t\tchordHeightBelow: 0,\n\t\tvolumeHeightBelow: 0,\n\t\tdynamicHeightBelow: 0\n\t};\n};\n\nAbsoluteElement.prototype.getFixedCoords = function () {\n\treturn { x: this.x, w: this.fixed.w, t: this.fixed.t, b: this.fixed.b };\n};\n\nAbsoluteElement.prototype.addExtra = function (extra) {\n\t// used for accidentals, multi-measure rest text,\n\t// left-side decorations, gracenote heads,\n\t// left annotations, gracenote stems.\n\t// if (!(extra.c && extra.c.indexOf(\"accidentals\") >= 0) &&\n\t// \t!(extra.c && extra.c.indexOf(\"arpeggio\") >= 0) &&\n\t// \textra.type !== \"multimeasure-text\" &&\n\t// \t!(extra.c === \"noteheads.quarter\" && (extra.scalex === 0.6 || extra.scalex === 0.36)) &&\n\t// \t!(extra.type === \"stem\" && extra.linewidth === -0.6) &&\n\t// \textra.position !== \"left\"\n\t// )\n\t// \tconsole.log(\"extra\", extra);\n\n\tthis.fixed.w = Math.max(this.fixed.w, extra.dx + extra.w);\n\tif (this.fixed.t === undefined) this.fixed.t = extra.top; else this.fixed.t = Math.max(this.fixed.t, extra.top);\n\tif (this.fixed.b === undefined) this.fixed.b = extra.bottom; else this.fixed.b = Math.min(this.fixed.b, extra.bottom);\n\tif (extra.dx < this.extraw) this.extraw = extra.dx;\n\tthis.extra[this.extra.length] = extra;\n\tthis._addChild(extra);\n};\n\nAbsoluteElement.prototype.addHead = function (head) {\n\tif (head.dx < this.extraw) this.extraw = head.dx;\n\tthis.heads[this.heads.length] = head;\n\tthis.addRight(head);\n};\n\nAbsoluteElement.prototype.addRight = function (right) {\n\t// // used for clefs, note heads, bar lines, stems, key-signature accidentals, non-beamed flags, dots\n\t// if (!(right.c && right.c.indexOf(\"clefs\") >= 0) &&\n\t// \t!(right.c && right.c.indexOf(\"noteheads\") >= 0) &&\n\t// \t!(right.c && right.c.indexOf(\"flags\") >= 0) &&\n\t// \t!(right.c && right.c.indexOf(\"rests\") >= 0) &&\n\t// \t!(right.c && right.c.indexOf(\"dots.dot\") >= 0) &&\n\t// \tright.type !== \"stem\" &&\n\t// \tright.type !== \"bar\" &&\n\t// \tright.type !== \"none\" && // used when an invisible anchor is needed.\n\t// \t!(this.type.indexOf(\"clef\") >= -1 && right.c === \"8\") &&\n\t// \tthis.type.indexOf(\"key-signature\") === -1 &&\n\t// \tthis.type.indexOf(\"time-signature\") === -1 &&\n\t// \t!(this.abcelem && this.abcelem.rest && this.abcelem.rest.type === \"spacer\") &&\n\t// \t!(this.abcelem && this.abcelem.rest && this.abcelem.rest.type === \"invisible\") &&\n\t// \t!(right.type === \"text\" && right.position === \"relative\") &&\n\t// \t!(right.type === \"text\" && right.position === \"right\") &&\n\t// \t!(right.type === \"text\" && right.position === \"above\") &&\n\t// \t!(right.type === \"text\" && right.position === \"below\")\n\t// )\n\t// \tconsole.log(\"right\", right);\n\t// These are the elements that are the fixed part.\n\tthis.fixed.w = Math.max(this.fixed.w, right.dx + right.w);\n\tif (right.top !== undefined) {\n\t\tif (this.fixed.t === undefined) this.fixed.t = right.top; else this.fixed.t = Math.max(this.fixed.t, right.top);\n\t}\n\tif (right.bottom !== undefined) {\n\t\tif (this.fixed.b === undefined) this.fixed.b = right.bottom; else this.fixed.b = Math.min(this.fixed.b, right.bottom);\n\t}\n\t// if (isNaN(this.fixed.t) || isNaN(this.fixed.b))\n\t// \tdebugger;\n\tif (right.dx + right.w > this.w) this.w = right.dx + right.w;\n\tthis.right[this.right.length] = right;\n\tthis._addChild(right);\n};\n\nAbsoluteElement.prototype.addFixed = function (elem) {\n\t// used for elements that can't move relative to other elements after they have been placed.\n\t// used for ledger lines, bar numbers, debug msgs, clef, key sigs, time sigs\n\tthis._addChild(elem);\n};\n\nAbsoluteElement.prototype.addFixedX = function (elem) {\n\t// used for elements that can't move horizontally relative to other elements after they have been placed.\n\t// used for parts, tempo, decorations\n\tthis._addChild(elem);\n};\n\nAbsoluteElement.prototype.addCentered = function (elem) {\n\t// // used for chord labels, lyrics\n\t// if (!(elem.type === \"chord\" && elem.position === \"above\") &&\n\t// \t!(elem.type === \"chord\" && elem.position === \"below\") &&\n\t// \telem.type !== 'lyric'\n\t// )\n\t// \tconsole.log(\"centered\", elem);\n\tvar half = elem.w / 2;\n\tif (-half < this.extraw) this.extraw = -half;\n\tthis.extra[this.extra.length] = elem;\n\tif (elem.dx + half > this.w) this.w = elem.dx + half;\n\tthis.right[this.right.length] = elem;\n\tthis._addChild(elem);\n};\n\nAbsoluteElement.prototype.setLimit = function (member, child) {\n\tif (!child[member]) return;\n\tif (!this.specialY[member])\n\t\tthis.specialY[member] = child[member];\n\telse\n\t\tthis.specialY[member] = Math.max(this.specialY[member], child[member]);\n};\n\nAbsoluteElement.prototype._addChild = function (child) {\n  //  console.log(\"Relative:\",child);\n  \n  // MAE 30 Sep 2024 - To avoid extra space for chords if there is only a bar number on the clef\n  var okToPushTop = true;\n  if ((this.abcelem.el_type == \"clef\") && (child.type == \"barNumber\")){\n    okToPushTop = false;\n  }\n\n  child.parent = this;\n  this.children[this.children.length] = child;\n\n  if (okToPushTop){\n    this.pushTop(child.top);\n  }\n  \n  this.pushBottom(child.bottom);\n  this.setLimit('tempoHeightAbove', child);\n  this.setLimit('partHeightAbove', child);\n  this.setLimit('volumeHeightAbove', child);\n  this.setLimit('dynamicHeightAbove', child);\n  this.setLimit('endingHeightAbove', child);\n  this.setLimit('chordHeightAbove', child);\n  this.setLimit('lyricHeightAbove', child);\n  this.setLimit('lyricHeightBelow', child);\n  this.setLimit('chordHeightBelow', child);\n  this.setLimit('volumeHeightBelow', child);\n  this.setLimit('dynamicHeightBelow', child);\n};\n\nAbsoluteElement.prototype.pushTop = function (top) {\n\tif (top !== undefined) {\n\t\tif (this.top === undefined)\n\t\t\tthis.top = top;\n\t\telse\n\t\t\tthis.top = Math.max(top, this.top);\n\t}\n};\n\nAbsoluteElement.prototype.pushBottom = function (bottom) {\n\tif (bottom !== undefined) {\n\t\tif (this.bottom === undefined)\n\t\t\tthis.bottom = bottom;\n\t\telse\n\t\t\tthis.bottom = Math.min(bottom, this.bottom);\n\t}\n};\n\nAbsoluteElement.prototype.setX = function (x) {\n\tthis.x = x;\n\tfor (var i = 0; i < this.children.length; i++)\n\t\tthis.children[i].setX(x);\n};\n\nAbsoluteElement.prototype.center = function (before, after) {\n\t// Used to center whole rests\n\tvar midpoint = (after.x - before.x) / 2 + before.x;\n\tthis.x = midpoint - this.w / 2;\n\tfor (var k = 0; k < this.children.length; k++)\n\t\tthis.children[k].setX(this.x);\n};\n\nAbsoluteElement.prototype.setHint = function () {\n\tthis.hint = true;\n};\n\nAbsoluteElement.prototype.highlight = function (klass, color) {\n\thighlight.bind(this)(klass, color);\n};\n\nAbsoluteElement.prototype.unhighlight = function (klass, color) {\n\tunhighlight.bind(this)(klass, color);\n};\n\nmodule.exports = AbsoluteElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/elements/absolute-element.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/elements/beam-element.js":
/*!************************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/elements/beam-element.js ***!
  \************************************************************************/
/***/ ((module) => {

eval("//    abc_beam_element.js: Definition of the BeamElem class.\n\n// Most elements on the page are related to a particular absolute element -- notes, rests, bars, etc. Beams, however, span multiple elements.\n// This means that beams can't be laid out until the absolute elements are placed. There is the further complication that the stems for beamed\n// notes can't be laid out until the beams are because we don't know how long they will be until we know the slope of the beam and the horizontal\n// spacing of the absolute elements.\n//\n// So, when a beam is detected, a BeamElem is created, then all notes belonging to that beam are added to it. These notes are not given stems at that time.\n// Then, after the horizontal layout is complete, all of the BeamElem are iterated to set the beam position, then all of the notes that are beamed are given\n// stems. After that, we are ready for the drawing step.\n\n// There are three phases: the setup phase, when new elements are being discovered, the layout phase, when everything is calculated, and the drawing phase,\n// when the object is not changed, but is used to put the elements on the page.\n\n//\n// Setup phase\n//\nvar BeamElem = function BeamElem(stemHeight, type, flat, firstElement) {\n\t// type is \"grace\", \"up\", \"down\", or undefined. flat is used to force flat beams, as it commonly found in the grace notes of bagpipe music.\n\tthis.type = \"BeamElem\";\n\tthis.isflat = !!flat;\n\tthis.isgrace = !!(type && type === \"grace\");\n\tthis.forceup = !!(this.isgrace || (type && type === \"up\"));\n\tthis.forcedown = !!(type && type === \"down\");\n\tthis.elems = []; // all the AbsoluteElements that this beam touches. It may include embedded rests.\n\tthis.total = 0;\n\tthis.average = 6; // use middle line as start for average.\n\tthis.allrests = true;\n\tthis.stemHeight = stemHeight;\n\tthis.beams = []; // During the layout phase, this will become a list of the beams that need to be drawn.\n\tif (firstElement && firstElement.duration) {\n\t\tthis.duration = firstElement.duration;\n\t\tif (firstElement.startTriplet) {\n\t\t\tthis.duration *= firstElement.tripletMultiplier;\n\t\t}\n\t\tthis.duration = Math.round(this.duration * 1000) / 1000;\n\t} else\n\t\tthis.duration = 0;\n};\n\nBeamElem.prototype.setHint = function () {\n\tthis.hint = true;\n};\n\nBeamElem.prototype.runningDirection = function (abcelem) {\n\tvar pitch = abcelem.averagepitch;\n\tif (pitch === undefined) return; // don't include elements like spacers in beams\n\tthis.total = Math.round(this.total + pitch);\n\tif (!this.count)\n\t\tthis.count = 0;\n\tthis.count++\n};\n\nBeamElem.prototype.add = function (abselem) {\n\tvar pitch = abselem.abcelem.averagepitch;\n\tif (pitch === undefined) return; // don't include elements like spacers in beams\n\tif (!abselem.abcelem.rest)\n\t\tthis.allrests = false;\n\tabselem.beam = this;\n\tthis.elems.push(abselem);\n\tthis.total = Math.round(this.total + pitch);\n\tif (this.min === undefined || abselem.abcelem.minpitch < this.min) {\n\t\tthis.min = abselem.abcelem.minpitch;\n\t}\n\tif (this.max === undefined || abselem.abcelem.maxpitch > this.max) {\n\t\tthis.max = abselem.abcelem.maxpitch;\n\t}\n};\n\nBeamElem.prototype.addBeam = function (beam) {\n\tthis.beams.push(beam);\n};\n\nBeamElem.prototype.setStemDirection = function () {\n\t// Have to figure this out before the notes are placed because placing the notes also places the decorations.\n\tthis.average = calcAverage(this.total, this.count);\n\tif (this.forceup) {\n\t\tthis.stemsUp = true;\n\t} else if (this.forcedown) {\n\t\tthis.stemsUp = false;\n\t} else {\n\t\tvar middleLine = 6;\t// hardcoded 6 is B\n\t\tthis.stemsUp = this.average < middleLine; // true is up, false is down;\n\t}\n\tdelete this.count;\n\tthis.total = 0;\n};\n\nBeamElem.prototype.calcDir = function () {\n\tthis.average = calcAverage(this.total, this.elems.length);\n\tif (this.forceup) {\n\t\tthis.stemsUp = true;\n\t} else if (this.forcedown) {\n\t\tthis.stemsUp = false;\n\t} else {\n\t\tvar middleLine = 6;\t// hardcoded 6 is B\n\t\tthis.stemsUp = this.average < middleLine; // true is up, false is down;\n\t}\n\tvar dir = this.stemsUp ? 'up' : 'down';\n\tfor (var i = 0; i < this.elems.length; i++) {\n\t\tfor (var j = 0; j < this.elems[i].heads.length; j++) {\n\t\t\tthis.elems[i].heads[j].stemDir = dir;\n\t\t}\n\t}\n};\n\nfunction calcAverage(total, numElements) {\n\tif (!numElements)\n\t\treturn 0;\n\treturn total / numElements;\n}\n\nmodule.exports = BeamElem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL2JlYW0tZWxlbWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNILHNCQUFzQjtBQUN0Qiw0Q0FBNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0gsc0JBQXNCO0FBQ3RCLDRDQUE0QztBQUM1QztBQUNBO0FBQ0EsaUJBQWlCLHVCQUF1QjtBQUN4QyxrQkFBa0IsZ0NBQWdDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvY3JlYXRpb24vZWxlbWVudHMvYmVhbS1lbGVtZW50LmpzPzBkYzciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gICAgYWJjX2JlYW1fZWxlbWVudC5qczogRGVmaW5pdGlvbiBvZiB0aGUgQmVhbUVsZW0gY2xhc3MuXG5cbi8vIE1vc3QgZWxlbWVudHMgb24gdGhlIHBhZ2UgYXJlIHJlbGF0ZWQgdG8gYSBwYXJ0aWN1bGFyIGFic29sdXRlIGVsZW1lbnQgLS0gbm90ZXMsIHJlc3RzLCBiYXJzLCBldGMuIEJlYW1zLCBob3dldmVyLCBzcGFuIG11bHRpcGxlIGVsZW1lbnRzLlxuLy8gVGhpcyBtZWFucyB0aGF0IGJlYW1zIGNhbid0IGJlIGxhaWQgb3V0IHVudGlsIHRoZSBhYnNvbHV0ZSBlbGVtZW50cyBhcmUgcGxhY2VkLiBUaGVyZSBpcyB0aGUgZnVydGhlciBjb21wbGljYXRpb24gdGhhdCB0aGUgc3RlbXMgZm9yIGJlYW1lZFxuLy8gbm90ZXMgY2FuJ3QgYmUgbGFpZCBvdXQgdW50aWwgdGhlIGJlYW1zIGFyZSBiZWNhdXNlIHdlIGRvbid0IGtub3cgaG93IGxvbmcgdGhleSB3aWxsIGJlIHVudGlsIHdlIGtub3cgdGhlIHNsb3BlIG9mIHRoZSBiZWFtIGFuZCB0aGUgaG9yaXpvbnRhbFxuLy8gc3BhY2luZyBvZiB0aGUgYWJzb2x1dGUgZWxlbWVudHMuXG4vL1xuLy8gU28sIHdoZW4gYSBiZWFtIGlzIGRldGVjdGVkLCBhIEJlYW1FbGVtIGlzIGNyZWF0ZWQsIHRoZW4gYWxsIG5vdGVzIGJlbG9uZ2luZyB0byB0aGF0IGJlYW0gYXJlIGFkZGVkIHRvIGl0LiBUaGVzZSBub3RlcyBhcmUgbm90IGdpdmVuIHN0ZW1zIGF0IHRoYXQgdGltZS5cbi8vIFRoZW4sIGFmdGVyIHRoZSBob3Jpem9udGFsIGxheW91dCBpcyBjb21wbGV0ZSwgYWxsIG9mIHRoZSBCZWFtRWxlbSBhcmUgaXRlcmF0ZWQgdG8gc2V0IHRoZSBiZWFtIHBvc2l0aW9uLCB0aGVuIGFsbCBvZiB0aGUgbm90ZXMgdGhhdCBhcmUgYmVhbWVkIGFyZSBnaXZlblxuLy8gc3RlbXMuIEFmdGVyIHRoYXQsIHdlIGFyZSByZWFkeSBmb3IgdGhlIGRyYXdpbmcgc3RlcC5cblxuLy8gVGhlcmUgYXJlIHRocmVlIHBoYXNlczogdGhlIHNldHVwIHBoYXNlLCB3aGVuIG5ldyBlbGVtZW50cyBhcmUgYmVpbmcgZGlzY292ZXJlZCwgdGhlIGxheW91dCBwaGFzZSwgd2hlbiBldmVyeXRoaW5nIGlzIGNhbGN1bGF0ZWQsIGFuZCB0aGUgZHJhd2luZyBwaGFzZSxcbi8vIHdoZW4gdGhlIG9iamVjdCBpcyBub3QgY2hhbmdlZCwgYnV0IGlzIHVzZWQgdG8gcHV0IHRoZSBlbGVtZW50cyBvbiB0aGUgcGFnZS5cblxuLy9cbi8vIFNldHVwIHBoYXNlXG4vL1xudmFyIEJlYW1FbGVtID0gZnVuY3Rpb24gQmVhbUVsZW0oc3RlbUhlaWdodCwgdHlwZSwgZmxhdCwgZmlyc3RFbGVtZW50KSB7XG5cdC8vIHR5cGUgaXMgXCJncmFjZVwiLCBcInVwXCIsIFwiZG93blwiLCBvciB1bmRlZmluZWQuIGZsYXQgaXMgdXNlZCB0byBmb3JjZSBmbGF0IGJlYW1zLCBhcyBpdCBjb21tb25seSBmb3VuZCBpbiB0aGUgZ3JhY2Ugbm90ZXMgb2YgYmFncGlwZSBtdXNpYy5cblx0dGhpcy50eXBlID0gXCJCZWFtRWxlbVwiO1xuXHR0aGlzLmlzZmxhdCA9ICEhZmxhdDtcblx0dGhpcy5pc2dyYWNlID0gISEodHlwZSAmJiB0eXBlID09PSBcImdyYWNlXCIpO1xuXHR0aGlzLmZvcmNldXAgPSAhISh0aGlzLmlzZ3JhY2UgfHwgKHR5cGUgJiYgdHlwZSA9PT0gXCJ1cFwiKSk7XG5cdHRoaXMuZm9yY2Vkb3duID0gISEodHlwZSAmJiB0eXBlID09PSBcImRvd25cIik7XG5cdHRoaXMuZWxlbXMgPSBbXTsgLy8gYWxsIHRoZSBBYnNvbHV0ZUVsZW1lbnRzIHRoYXQgdGhpcyBiZWFtIHRvdWNoZXMuIEl0IG1heSBpbmNsdWRlIGVtYmVkZGVkIHJlc3RzLlxuXHR0aGlzLnRvdGFsID0gMDtcblx0dGhpcy5hdmVyYWdlID0gNjsgLy8gdXNlIG1pZGRsZSBsaW5lIGFzIHN0YXJ0IGZvciBhdmVyYWdlLlxuXHR0aGlzLmFsbHJlc3RzID0gdHJ1ZTtcblx0dGhpcy5zdGVtSGVpZ2h0ID0gc3RlbUhlaWdodDtcblx0dGhpcy5iZWFtcyA9IFtdOyAvLyBEdXJpbmcgdGhlIGxheW91dCBwaGFzZSwgdGhpcyB3aWxsIGJlY29tZSBhIGxpc3Qgb2YgdGhlIGJlYW1zIHRoYXQgbmVlZCB0byBiZSBkcmF3bi5cblx0aWYgKGZpcnN0RWxlbWVudCAmJiBmaXJzdEVsZW1lbnQuZHVyYXRpb24pIHtcblx0XHR0aGlzLmR1cmF0aW9uID0gZmlyc3RFbGVtZW50LmR1cmF0aW9uO1xuXHRcdGlmIChmaXJzdEVsZW1lbnQuc3RhcnRUcmlwbGV0KSB7XG5cdFx0XHR0aGlzLmR1cmF0aW9uICo9IGZpcnN0RWxlbWVudC50cmlwbGV0TXVsdGlwbGllcjtcblx0XHR9XG5cdFx0dGhpcy5kdXJhdGlvbiA9IE1hdGgucm91bmQodGhpcy5kdXJhdGlvbiAqIDEwMDApIC8gMTAwMDtcblx0fSBlbHNlXG5cdFx0dGhpcy5kdXJhdGlvbiA9IDA7XG59O1xuXG5CZWFtRWxlbS5wcm90b3R5cGUuc2V0SGludCA9IGZ1bmN0aW9uICgpIHtcblx0dGhpcy5oaW50ID0gdHJ1ZTtcbn07XG5cbkJlYW1FbGVtLnByb3RvdHlwZS5ydW5uaW5nRGlyZWN0aW9uID0gZnVuY3Rpb24gKGFiY2VsZW0pIHtcblx0dmFyIHBpdGNoID0gYWJjZWxlbS5hdmVyYWdlcGl0Y2g7XG5cdGlmIChwaXRjaCA9PT0gdW5kZWZpbmVkKSByZXR1cm47IC8vIGRvbid0IGluY2x1ZGUgZWxlbWVudHMgbGlrZSBzcGFjZXJzIGluIGJlYW1zXG5cdHRoaXMudG90YWwgPSBNYXRoLnJvdW5kKHRoaXMudG90YWwgKyBwaXRjaCk7XG5cdGlmICghdGhpcy5jb3VudClcblx0XHR0aGlzLmNvdW50ID0gMDtcblx0dGhpcy5jb3VudCsrXG59O1xuXG5CZWFtRWxlbS5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24gKGFic2VsZW0pIHtcblx0dmFyIHBpdGNoID0gYWJzZWxlbS5hYmNlbGVtLmF2ZXJhZ2VwaXRjaDtcblx0aWYgKHBpdGNoID09PSB1bmRlZmluZWQpIHJldHVybjsgLy8gZG9uJ3QgaW5jbHVkZSBlbGVtZW50cyBsaWtlIHNwYWNlcnMgaW4gYmVhbXNcblx0aWYgKCFhYnNlbGVtLmFiY2VsZW0ucmVzdClcblx0XHR0aGlzLmFsbHJlc3RzID0gZmFsc2U7XG5cdGFic2VsZW0uYmVhbSA9IHRoaXM7XG5cdHRoaXMuZWxlbXMucHVzaChhYnNlbGVtKTtcblx0dGhpcy50b3RhbCA9IE1hdGgucm91bmQodGhpcy50b3RhbCArIHBpdGNoKTtcblx0aWYgKHRoaXMubWluID09PSB1bmRlZmluZWQgfHwgYWJzZWxlbS5hYmNlbGVtLm1pbnBpdGNoIDwgdGhpcy5taW4pIHtcblx0XHR0aGlzLm1pbiA9IGFic2VsZW0uYWJjZWxlbS5taW5waXRjaDtcblx0fVxuXHRpZiAodGhpcy5tYXggPT09IHVuZGVmaW5lZCB8fCBhYnNlbGVtLmFiY2VsZW0ubWF4cGl0Y2ggPiB0aGlzLm1heCkge1xuXHRcdHRoaXMubWF4ID0gYWJzZWxlbS5hYmNlbGVtLm1heHBpdGNoO1xuXHR9XG59O1xuXG5CZWFtRWxlbS5wcm90b3R5cGUuYWRkQmVhbSA9IGZ1bmN0aW9uIChiZWFtKSB7XG5cdHRoaXMuYmVhbXMucHVzaChiZWFtKTtcbn07XG5cbkJlYW1FbGVtLnByb3RvdHlwZS5zZXRTdGVtRGlyZWN0aW9uID0gZnVuY3Rpb24gKCkge1xuXHQvLyBIYXZlIHRvIGZpZ3VyZSB0aGlzIG91dCBiZWZvcmUgdGhlIG5vdGVzIGFyZSBwbGFjZWQgYmVjYXVzZSBwbGFjaW5nIHRoZSBub3RlcyBhbHNvIHBsYWNlcyB0aGUgZGVjb3JhdGlvbnMuXG5cdHRoaXMuYXZlcmFnZSA9IGNhbGNBdmVyYWdlKHRoaXMudG90YWwsIHRoaXMuY291bnQpO1xuXHRpZiAodGhpcy5mb3JjZXVwKSB7XG5cdFx0dGhpcy5zdGVtc1VwID0gdHJ1ZTtcblx0fSBlbHNlIGlmICh0aGlzLmZvcmNlZG93bikge1xuXHRcdHRoaXMuc3RlbXNVcCA9IGZhbHNlO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBtaWRkbGVMaW5lID0gNjtcdC8vIGhhcmRjb2RlZCA2IGlzIEJcblx0XHR0aGlzLnN0ZW1zVXAgPSB0aGlzLmF2ZXJhZ2UgPCBtaWRkbGVMaW5lOyAvLyB0cnVlIGlzIHVwLCBmYWxzZSBpcyBkb3duO1xuXHR9XG5cdGRlbGV0ZSB0aGlzLmNvdW50O1xuXHR0aGlzLnRvdGFsID0gMDtcbn07XG5cbkJlYW1FbGVtLnByb3RvdHlwZS5jYWxjRGlyID0gZnVuY3Rpb24gKCkge1xuXHR0aGlzLmF2ZXJhZ2UgPSBjYWxjQXZlcmFnZSh0aGlzLnRvdGFsLCB0aGlzLmVsZW1zLmxlbmd0aCk7XG5cdGlmICh0aGlzLmZvcmNldXApIHtcblx0XHR0aGlzLnN0ZW1zVXAgPSB0cnVlO1xuXHR9IGVsc2UgaWYgKHRoaXMuZm9yY2Vkb3duKSB7XG5cdFx0dGhpcy5zdGVtc1VwID0gZmFsc2U7XG5cdH0gZWxzZSB7XG5cdFx0dmFyIG1pZGRsZUxpbmUgPSA2O1x0Ly8gaGFyZGNvZGVkIDYgaXMgQlxuXHRcdHRoaXMuc3RlbXNVcCA9IHRoaXMuYXZlcmFnZSA8IG1pZGRsZUxpbmU7IC8vIHRydWUgaXMgdXAsIGZhbHNlIGlzIGRvd247XG5cdH1cblx0dmFyIGRpciA9IHRoaXMuc3RlbXNVcCA/ICd1cCcgOiAnZG93bic7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5lbGVtcy5sZW5ndGg7IGkrKykge1xuXHRcdGZvciAodmFyIGogPSAwOyBqIDwgdGhpcy5lbGVtc1tpXS5oZWFkcy5sZW5ndGg7IGorKykge1xuXHRcdFx0dGhpcy5lbGVtc1tpXS5oZWFkc1tqXS5zdGVtRGlyID0gZGlyO1xuXHRcdH1cblx0fVxufTtcblxuZnVuY3Rpb24gY2FsY0F2ZXJhZ2UodG90YWwsIG51bUVsZW1lbnRzKSB7XG5cdGlmICghbnVtRWxlbWVudHMpXG5cdFx0cmV0dXJuIDA7XG5cdHJldHVybiB0b3RhbCAvIG51bUVsZW1lbnRzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEJlYW1FbGVtO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/elements/beam-element.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/elements/bottom-text.js":
/*!***********************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/elements/bottom-text.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const addTextIf = __webpack_require__(/*! ../add-text-if */ \"(ssr)/./node_modules/abcjs/src/write/creation/add-text-if.js\");\nconst richText = __webpack_require__(/*! ./rich-text */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/rich-text.js\");\n\nfunction BottomText(metaText, width, isPrint, paddingLeft, spacing, shouldAddClasses, getTextSize) {\n\tthis.rows = [];\n\tif (metaText.unalignedWords && metaText.unalignedWords.length > 0)\n\t\tthis.unalignedWords(metaText.unalignedWords, paddingLeft, spacing, shouldAddClasses, getTextSize);\n\tthis.extraText(metaText, paddingLeft, spacing, shouldAddClasses, getTextSize);\n\tif (metaText.footer && isPrint)\n\t\tthis.footer(metaText.footer, width, paddingLeft, getTextSize);\n}\n\nBottomText.prototype.unalignedWords = function (unalignedWords, marginLeft, spacing, shouldAddClasses, getTextSize) {\n\tvar klass = shouldAddClasses ? 'abcjs-unaligned-words' : ''\n\tvar defFont = 'wordsfont';\n\tvar space = getTextSize.calc(\"i\", defFont, klass);\n\t\n\tthis.rows.push({ move: spacing.words });\n\t\n\taddMultiLine(this.rows, '', unalignedWords, marginLeft, defFont, \"unalignedWords\", \"unalignedWords\", klass, \"unalignedWords\", spacing, shouldAddClasses, getTextSize)\n\tthis.rows.push({ move: space.height });\n}\n\nfunction addSingleLine(rows, preface, text, marginLeft, klass, shouldAddClasses, getTextSize) {\n\tif (text) {\n\t\tif (preface) {\n\t\t\tif (typeof text === 'string')\n\t\t\t\ttext = preface + text\n\t\t\telse\n\t\t\t\ttext = [{text: preface}].concat(text)\n\t\t}\n\t\tklass = shouldAddClasses ? 'abcjs-extra-text '+klass : ''\n\t\trichText(rows, text, 'historyfont', klass, \"description\", marginLeft, {absElemType: \"extraText\", anchor: 'start'}, getTextSize)\n\t}\n\n}\n\nfunction addMultiLine(rows, preface, content, marginLeft, defFont, absElemType, groupName, klass, name, spacing, shouldAddClasses, getTextSize) {\n\tif (content) {\n\t\tklass = shouldAddClasses ? 'abcjs-extra-text '+klass : ''\n\t\tvar size = getTextSize.calc(\"A\", defFont, klass);\n\t\tif (typeof content === 'string') {\n\t\t\tif (preface)\n\t\t\t\tcontent = preface + \"\\n\" + content\n\t\t\taddTextIf(rows, { marginLeft: marginLeft, text: content, font: defFont, absElemType: \"extraText\", name: name, 'dominant-baseline': 'middle', klass: klass }, getTextSize);\n\t\t\t//rows.push({move: size.height*3/4})\n\t\t} else {\n\t\t\trows.push({ startGroup: groupName, klass: klass, name: name });\n\t\t\trows.push({move: spacing.info})\n\t\t\tif (preface) {\n\t\t\t\taddTextIf(rows, { marginLeft: marginLeft, text: preface, font: defFont, absElemType: \"extraText\", name: name, 'dominant-baseline': 'middle' }, getTextSize);\n\t\t\t\trows.push({move: size.height*3/4})\n\t\t\t}\n\n\t\t\tfor (var j = 0; j < content.length; j++) {\n\t\t\t\trichText(rows, content[j], defFont, '', name, marginLeft, {anchor: 'start'}, getTextSize)\n\t\t\t\t// TODO-PER: Hack! the string and rich lines should have used up the same amount of space without this.\n\t\t\t\tif (j < content.length-1 && typeof content[j] === 'string' && typeof content[j+1] !== 'string')\n\t\t\t\t\trows.push({move: size.height*3/4})\n\t\t\t}\n\t\t\trows.push({ endGroup: groupName, absElemType: absElemType, startChar: -1, endChar: -1, name: name });\n\t\t\trows.push({move: size.height})\n\t\t}\n\t}\n}\nBottomText.prototype.extraText = function (metaText, marginLeft, spacing, shouldAddClasses, getTextSize) {\n\taddSingleLine(this.rows, \"Book: \", metaText.book, marginLeft, 'abcjs-book', shouldAddClasses, getTextSize)\n\taddSingleLine(this.rows, \"Source: \", metaText.source, marginLeft, 'abcjs-source', shouldAddClasses, getTextSize)\n\taddSingleLine(this.rows, \"Discography: \", metaText.discography, marginLeft, 'abcjs-discography', shouldAddClasses, getTextSize)\n\n\taddMultiLine(this.rows, 'Notes:', metaText.notes, marginLeft, 'historyfont', \"extraText\", \"notes\", 'abcjs-notes', \"description\", spacing, shouldAddClasses, getTextSize)\n\n\taddSingleLine(this.rows, \"Transcription: \", metaText.transcription, marginLeft, 'abcjs-transcription', shouldAddClasses, getTextSize)\n\n\taddMultiLine(this.rows, \"History:\", metaText.history, marginLeft, 'historyfont', \"extraText\", \"history\", 'abcjs-history', \"description\", spacing, shouldAddClasses, getTextSize)\n\n\taddSingleLine(this.rows, \"Copyright: \", metaText['abc-copyright'], marginLeft, 'abcjs-copyright', shouldAddClasses, getTextSize)\n\taddSingleLine(this.rows, \"Creator: \", metaText['abc-creator'], marginLeft, 'abcjs-creator', shouldAddClasses, getTextSize)\n\taddSingleLine(this.rows, \"Edited By: \", metaText['abc-edited-by'], marginLeft, 'abcjs-edited-by', shouldAddClasses, getTextSize)\n\n}\n\nBottomText.prototype.footer = function (footer, width, paddingLeft, getTextSize) {\n\tvar klass = 'header meta-bottom';\n\tvar font = \"footerfont\";\n\tthis.rows.push({ startGroup: \"footer\", klass: klass });\n\t// Note: whether there is a footer or not doesn't change any other positioning, so this doesn't change the Y-coordinate.\n\taddTextIf(this.rows, { marginLeft: paddingLeft, text: footer.left, font: font, klass: klass, name: \"footer\" }, getTextSize);\n\taddTextIf(this.rows, { marginLeft: paddingLeft + width / 2, text: footer.center, font: font, klass: klass, anchor: 'middle', name: \"footer\" }, getTextSize);\n\taddTextIf(this.rows, { marginLeft: paddingLeft + width, text: footer.right, font: font, klass: klass, anchor: 'end', name: \"footer\" }, getTextSize);\n}\n\nmodule.exports = BottomText;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL2JvdHRvbS10ZXh0LmpzIiwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQixtQkFBTyxDQUFDLG9GQUFnQjtBQUMxQyxpQkFBaUIsbUJBQU8sQ0FBQyx3RkFBYTs7QUFFdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHFCQUFxQjtBQUN2QztBQUNBO0FBQ0Esa0JBQWtCLG9CQUFvQjtBQUN0Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBLHlFQUF5RSwwQ0FBMEM7QUFDbkg7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIseUlBQXlJO0FBQzlKLGdCQUFnQixzQkFBc0I7QUFDdEMsSUFBSTtBQUNKLGVBQWUsaURBQWlEO0FBQ2hFLGNBQWMsbUJBQW1CO0FBQ2pDO0FBQ0Esc0JBQXNCLDJIQUEySDtBQUNqSixlQUFlLHNCQUFzQjtBQUNyQzs7QUFFQSxtQkFBbUIsb0JBQW9CO0FBQ3ZDLCtEQUErRCxnQkFBZ0I7QUFDL0U7QUFDQTtBQUNBLGdCQUFnQixzQkFBc0I7QUFDdEM7QUFDQSxlQUFlLHVGQUF1RjtBQUN0RyxjQUFjLGtCQUFrQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG9DQUFvQztBQUN0RDtBQUNBLHdCQUF3QixzRkFBc0Y7QUFDOUcsd0JBQXdCLHNIQUFzSDtBQUM5SSx3QkFBd0IsOEdBQThHO0FBQ3RJOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL2JvdHRvbS10ZXh0LmpzPzA3NzMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYWRkVGV4dElmID0gcmVxdWlyZShcIi4uL2FkZC10ZXh0LWlmXCIpO1xuY29uc3QgcmljaFRleHQgPSByZXF1aXJlKFwiLi9yaWNoLXRleHRcIik7XG5cbmZ1bmN0aW9uIEJvdHRvbVRleHQobWV0YVRleHQsIHdpZHRoLCBpc1ByaW50LCBwYWRkaW5nTGVmdCwgc3BhY2luZywgc2hvdWxkQWRkQ2xhc3NlcywgZ2V0VGV4dFNpemUpIHtcblx0dGhpcy5yb3dzID0gW107XG5cdGlmIChtZXRhVGV4dC51bmFsaWduZWRXb3JkcyAmJiBtZXRhVGV4dC51bmFsaWduZWRXb3Jkcy5sZW5ndGggPiAwKVxuXHRcdHRoaXMudW5hbGlnbmVkV29yZHMobWV0YVRleHQudW5hbGlnbmVkV29yZHMsIHBhZGRpbmdMZWZ0LCBzcGFjaW5nLCBzaG91bGRBZGRDbGFzc2VzLCBnZXRUZXh0U2l6ZSk7XG5cdHRoaXMuZXh0cmFUZXh0KG1ldGFUZXh0LCBwYWRkaW5nTGVmdCwgc3BhY2luZywgc2hvdWxkQWRkQ2xhc3NlcywgZ2V0VGV4dFNpemUpO1xuXHRpZiAobWV0YVRleHQuZm9vdGVyICYmIGlzUHJpbnQpXG5cdFx0dGhpcy5mb290ZXIobWV0YVRleHQuZm9vdGVyLCB3aWR0aCwgcGFkZGluZ0xlZnQsIGdldFRleHRTaXplKTtcbn1cblxuQm90dG9tVGV4dC5wcm90b3R5cGUudW5hbGlnbmVkV29yZHMgPSBmdW5jdGlvbiAodW5hbGlnbmVkV29yZHMsIG1hcmdpbkxlZnQsIHNwYWNpbmcsIHNob3VsZEFkZENsYXNzZXMsIGdldFRleHRTaXplKSB7XG5cdHZhciBrbGFzcyA9IHNob3VsZEFkZENsYXNzZXMgPyAnYWJjanMtdW5hbGlnbmVkLXdvcmRzJyA6ICcnXG5cdHZhciBkZWZGb250ID0gJ3dvcmRzZm9udCc7XG5cdHZhciBzcGFjZSA9IGdldFRleHRTaXplLmNhbGMoXCJpXCIsIGRlZkZvbnQsIGtsYXNzKTtcblx0XG5cdHRoaXMucm93cy5wdXNoKHsgbW92ZTogc3BhY2luZy53b3JkcyB9KTtcblx0XG5cdGFkZE11bHRpTGluZSh0aGlzLnJvd3MsICcnLCB1bmFsaWduZWRXb3JkcywgbWFyZ2luTGVmdCwgZGVmRm9udCwgXCJ1bmFsaWduZWRXb3Jkc1wiLCBcInVuYWxpZ25lZFdvcmRzXCIsIGtsYXNzLCBcInVuYWxpZ25lZFdvcmRzXCIsIHNwYWNpbmcsIHNob3VsZEFkZENsYXNzZXMsIGdldFRleHRTaXplKVxuXHR0aGlzLnJvd3MucHVzaCh7IG1vdmU6IHNwYWNlLmhlaWdodCB9KTtcbn1cblxuZnVuY3Rpb24gYWRkU2luZ2xlTGluZShyb3dzLCBwcmVmYWNlLCB0ZXh0LCBtYXJnaW5MZWZ0LCBrbGFzcywgc2hvdWxkQWRkQ2xhc3NlcywgZ2V0VGV4dFNpemUpIHtcblx0aWYgKHRleHQpIHtcblx0XHRpZiAocHJlZmFjZSkge1xuXHRcdFx0aWYgKHR5cGVvZiB0ZXh0ID09PSAnc3RyaW5nJylcblx0XHRcdFx0dGV4dCA9IHByZWZhY2UgKyB0ZXh0XG5cdFx0XHRlbHNlXG5cdFx0XHRcdHRleHQgPSBbe3RleHQ6IHByZWZhY2V9XS5jb25jYXQodGV4dClcblx0XHR9XG5cdFx0a2xhc3MgPSBzaG91bGRBZGRDbGFzc2VzID8gJ2FiY2pzLWV4dHJhLXRleHQgJytrbGFzcyA6ICcnXG5cdFx0cmljaFRleHQocm93cywgdGV4dCwgJ2hpc3Rvcnlmb250Jywga2xhc3MsIFwiZGVzY3JpcHRpb25cIiwgbWFyZ2luTGVmdCwge2Fic0VsZW1UeXBlOiBcImV4dHJhVGV4dFwiLCBhbmNob3I6ICdzdGFydCd9LCBnZXRUZXh0U2l6ZSlcblx0fVxuXG59XG5cbmZ1bmN0aW9uIGFkZE11bHRpTGluZShyb3dzLCBwcmVmYWNlLCBjb250ZW50LCBtYXJnaW5MZWZ0LCBkZWZGb250LCBhYnNFbGVtVHlwZSwgZ3JvdXBOYW1lLCBrbGFzcywgbmFtZSwgc3BhY2luZywgc2hvdWxkQWRkQ2xhc3NlcywgZ2V0VGV4dFNpemUpIHtcblx0aWYgKGNvbnRlbnQpIHtcblx0XHRrbGFzcyA9IHNob3VsZEFkZENsYXNzZXMgPyAnYWJjanMtZXh0cmEtdGV4dCAnK2tsYXNzIDogJydcblx0XHR2YXIgc2l6ZSA9IGdldFRleHRTaXplLmNhbGMoXCJBXCIsIGRlZkZvbnQsIGtsYXNzKTtcblx0XHRpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG5cdFx0XHRpZiAocHJlZmFjZSlcblx0XHRcdFx0Y29udGVudCA9IHByZWZhY2UgKyBcIlxcblwiICsgY29udGVudFxuXHRcdFx0YWRkVGV4dElmKHJvd3MsIHsgbWFyZ2luTGVmdDogbWFyZ2luTGVmdCwgdGV4dDogY29udGVudCwgZm9udDogZGVmRm9udCwgYWJzRWxlbVR5cGU6IFwiZXh0cmFUZXh0XCIsIG5hbWU6IG5hbWUsICdkb21pbmFudC1iYXNlbGluZSc6ICdtaWRkbGUnLCBrbGFzczoga2xhc3MgfSwgZ2V0VGV4dFNpemUpO1xuXHRcdFx0Ly9yb3dzLnB1c2goe21vdmU6IHNpemUuaGVpZ2h0KjMvNH0pXG5cdFx0fSBlbHNlIHtcblx0XHRcdHJvd3MucHVzaCh7IHN0YXJ0R3JvdXA6IGdyb3VwTmFtZSwga2xhc3M6IGtsYXNzLCBuYW1lOiBuYW1lIH0pO1xuXHRcdFx0cm93cy5wdXNoKHttb3ZlOiBzcGFjaW5nLmluZm99KVxuXHRcdFx0aWYgKHByZWZhY2UpIHtcblx0XHRcdFx0YWRkVGV4dElmKHJvd3MsIHsgbWFyZ2luTGVmdDogbWFyZ2luTGVmdCwgdGV4dDogcHJlZmFjZSwgZm9udDogZGVmRm9udCwgYWJzRWxlbVR5cGU6IFwiZXh0cmFUZXh0XCIsIG5hbWU6IG5hbWUsICdkb21pbmFudC1iYXNlbGluZSc6ICdtaWRkbGUnIH0sIGdldFRleHRTaXplKTtcblx0XHRcdFx0cm93cy5wdXNoKHttb3ZlOiBzaXplLmhlaWdodCozLzR9KVxuXHRcdFx0fVxuXG5cdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGNvbnRlbnQubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0cmljaFRleHQocm93cywgY29udGVudFtqXSwgZGVmRm9udCwgJycsIG5hbWUsIG1hcmdpbkxlZnQsIHthbmNob3I6ICdzdGFydCd9LCBnZXRUZXh0U2l6ZSlcblx0XHRcdFx0Ly8gVE9ETy1QRVI6IEhhY2shIHRoZSBzdHJpbmcgYW5kIHJpY2ggbGluZXMgc2hvdWxkIGhhdmUgdXNlZCB1cCB0aGUgc2FtZSBhbW91bnQgb2Ygc3BhY2Ugd2l0aG91dCB0aGlzLlxuXHRcdFx0XHRpZiAoaiA8IGNvbnRlbnQubGVuZ3RoLTEgJiYgdHlwZW9mIGNvbnRlbnRbal0gPT09ICdzdHJpbmcnICYmIHR5cGVvZiBjb250ZW50W2orMV0gIT09ICdzdHJpbmcnKVxuXHRcdFx0XHRcdHJvd3MucHVzaCh7bW92ZTogc2l6ZS5oZWlnaHQqMy80fSlcblx0XHRcdH1cblx0XHRcdHJvd3MucHVzaCh7IGVuZEdyb3VwOiBncm91cE5hbWUsIGFic0VsZW1UeXBlOiBhYnNFbGVtVHlwZSwgc3RhcnRDaGFyOiAtMSwgZW5kQ2hhcjogLTEsIG5hbWU6IG5hbWUgfSk7XG5cdFx0XHRyb3dzLnB1c2goe21vdmU6IHNpemUuaGVpZ2h0fSlcblx0XHR9XG5cdH1cbn1cbkJvdHRvbVRleHQucHJvdG90eXBlLmV4dHJhVGV4dCA9IGZ1bmN0aW9uIChtZXRhVGV4dCwgbWFyZ2luTGVmdCwgc3BhY2luZywgc2hvdWxkQWRkQ2xhc3NlcywgZ2V0VGV4dFNpemUpIHtcblx0YWRkU2luZ2xlTGluZSh0aGlzLnJvd3MsIFwiQm9vazogXCIsIG1ldGFUZXh0LmJvb2ssIG1hcmdpbkxlZnQsICdhYmNqcy1ib29rJywgc2hvdWxkQWRkQ2xhc3NlcywgZ2V0VGV4dFNpemUpXG5cdGFkZFNpbmdsZUxpbmUodGhpcy5yb3dzLCBcIlNvdXJjZTogXCIsIG1ldGFUZXh0LnNvdXJjZSwgbWFyZ2luTGVmdCwgJ2FiY2pzLXNvdXJjZScsIHNob3VsZEFkZENsYXNzZXMsIGdldFRleHRTaXplKVxuXHRhZGRTaW5nbGVMaW5lKHRoaXMucm93cywgXCJEaXNjb2dyYXBoeTogXCIsIG1ldGFUZXh0LmRpc2NvZ3JhcGh5LCBtYXJnaW5MZWZ0LCAnYWJjanMtZGlzY29ncmFwaHknLCBzaG91bGRBZGRDbGFzc2VzLCBnZXRUZXh0U2l6ZSlcblxuXHRhZGRNdWx0aUxpbmUodGhpcy5yb3dzLCAnTm90ZXM6JywgbWV0YVRleHQubm90ZXMsIG1hcmdpbkxlZnQsICdoaXN0b3J5Zm9udCcsIFwiZXh0cmFUZXh0XCIsIFwibm90ZXNcIiwgJ2FiY2pzLW5vdGVzJywgXCJkZXNjcmlwdGlvblwiLCBzcGFjaW5nLCBzaG91bGRBZGRDbGFzc2VzLCBnZXRUZXh0U2l6ZSlcblxuXHRhZGRTaW5nbGVMaW5lKHRoaXMucm93cywgXCJUcmFuc2NyaXB0aW9uOiBcIiwgbWV0YVRleHQudHJhbnNjcmlwdGlvbiwgbWFyZ2luTGVmdCwgJ2FiY2pzLXRyYW5zY3JpcHRpb24nLCBzaG91bGRBZGRDbGFzc2VzLCBnZXRUZXh0U2l6ZSlcblxuXHRhZGRNdWx0aUxpbmUodGhpcy5yb3dzLCBcIkhpc3Rvcnk6XCIsIG1ldGFUZXh0Lmhpc3RvcnksIG1hcmdpbkxlZnQsICdoaXN0b3J5Zm9udCcsIFwiZXh0cmFUZXh0XCIsIFwiaGlzdG9yeVwiLCAnYWJjanMtaGlzdG9yeScsIFwiZGVzY3JpcHRpb25cIiwgc3BhY2luZywgc2hvdWxkQWRkQ2xhc3NlcywgZ2V0VGV4dFNpemUpXG5cblx0YWRkU2luZ2xlTGluZSh0aGlzLnJvd3MsIFwiQ29weXJpZ2h0OiBcIiwgbWV0YVRleHRbJ2FiYy1jb3B5cmlnaHQnXSwgbWFyZ2luTGVmdCwgJ2FiY2pzLWNvcHlyaWdodCcsIHNob3VsZEFkZENsYXNzZXMsIGdldFRleHRTaXplKVxuXHRhZGRTaW5nbGVMaW5lKHRoaXMucm93cywgXCJDcmVhdG9yOiBcIiwgbWV0YVRleHRbJ2FiYy1jcmVhdG9yJ10sIG1hcmdpbkxlZnQsICdhYmNqcy1jcmVhdG9yJywgc2hvdWxkQWRkQ2xhc3NlcywgZ2V0VGV4dFNpemUpXG5cdGFkZFNpbmdsZUxpbmUodGhpcy5yb3dzLCBcIkVkaXRlZCBCeTogXCIsIG1ldGFUZXh0WydhYmMtZWRpdGVkLWJ5J10sIG1hcmdpbkxlZnQsICdhYmNqcy1lZGl0ZWQtYnknLCBzaG91bGRBZGRDbGFzc2VzLCBnZXRUZXh0U2l6ZSlcblxufVxuXG5Cb3R0b21UZXh0LnByb3RvdHlwZS5mb290ZXIgPSBmdW5jdGlvbiAoZm9vdGVyLCB3aWR0aCwgcGFkZGluZ0xlZnQsIGdldFRleHRTaXplKSB7XG5cdHZhciBrbGFzcyA9ICdoZWFkZXIgbWV0YS1ib3R0b20nO1xuXHR2YXIgZm9udCA9IFwiZm9vdGVyZm9udFwiO1xuXHR0aGlzLnJvd3MucHVzaCh7IHN0YXJ0R3JvdXA6IFwiZm9vdGVyXCIsIGtsYXNzOiBrbGFzcyB9KTtcblx0Ly8gTm90ZTogd2hldGhlciB0aGVyZSBpcyBhIGZvb3RlciBvciBub3QgZG9lc24ndCBjaGFuZ2UgYW55IG90aGVyIHBvc2l0aW9uaW5nLCBzbyB0aGlzIGRvZXNuJ3QgY2hhbmdlIHRoZSBZLWNvb3JkaW5hdGUuXG5cdGFkZFRleHRJZih0aGlzLnJvd3MsIHsgbWFyZ2luTGVmdDogcGFkZGluZ0xlZnQsIHRleHQ6IGZvb3Rlci5sZWZ0LCBmb250OiBmb250LCBrbGFzczoga2xhc3MsIG5hbWU6IFwiZm9vdGVyXCIgfSwgZ2V0VGV4dFNpemUpO1xuXHRhZGRUZXh0SWYodGhpcy5yb3dzLCB7IG1hcmdpbkxlZnQ6IHBhZGRpbmdMZWZ0ICsgd2lkdGggLyAyLCB0ZXh0OiBmb290ZXIuY2VudGVyLCBmb250OiBmb250LCBrbGFzczoga2xhc3MsIGFuY2hvcjogJ21pZGRsZScsIG5hbWU6IFwiZm9vdGVyXCIgfSwgZ2V0VGV4dFNpemUpO1xuXHRhZGRUZXh0SWYodGhpcy5yb3dzLCB7IG1hcmdpbkxlZnQ6IHBhZGRpbmdMZWZ0ICsgd2lkdGgsIHRleHQ6IGZvb3Rlci5yaWdodCwgZm9udDogZm9udCwga2xhc3M6IGtsYXNzLCBhbmNob3I6ICdlbmQnLCBuYW1lOiBcImZvb3RlclwiIH0sIGdldFRleHRTaXplKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBCb3R0b21UZXh0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/elements/bottom-text.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/elements/brace-element.js":
/*!*************************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/elements/brace-element.js ***!
  \*************************************************************************/
/***/ ((module) => {

eval("//    abc_brace_element.js: Definition of the BraceElement class.\n\nvar BraceElem = function BraceElem(voice, type) {\n\tthis.startVoice = voice;\n\tthis.type = type;\n};\n\nBraceElem.prototype.setBottomStaff = function (voice) {\n\tthis.endVoice = voice;\n\t// If only the start brace has a name then the name belongs to the brace instead of the staff.\n\tif (this.startVoice.header && !this.endVoice.header) {\n\t\tthis.header = this.startVoice.header;\n\t\tdelete this.startVoice.header;\n\t}\n};\n\nBraceElem.prototype.continuing = function (voice) {\n\t// If the final staff isn't present, then use the last one we saw.\n\tthis.lastContinuedVoice = voice;\n};\n\nBraceElem.prototype.getWidth = function () {\n\treturn 10; // TODO-PER: right now the drawing function doesn't vary the width at all. If it does in the future then this will change.\n};\n\nBraceElem.prototype.isStartVoice = function (voice) {\n\tif (this.startVoice && this.startVoice.staff && this.startVoice.staff.voices.length > 0 && this.startVoice.staff.voices[0] === voice)\n\t\treturn true;\n\treturn false;\n};\n\nmodule.exports = BraceElem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL2JyYWNlLWVsZW1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFlBQVk7QUFDWjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL2JyYWNlLWVsZW1lbnQuanM/MDJkMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAgICBhYmNfYnJhY2VfZWxlbWVudC5qczogRGVmaW5pdGlvbiBvZiB0aGUgQnJhY2VFbGVtZW50IGNsYXNzLlxuXG52YXIgQnJhY2VFbGVtID0gZnVuY3Rpb24gQnJhY2VFbGVtKHZvaWNlLCB0eXBlKSB7XG5cdHRoaXMuc3RhcnRWb2ljZSA9IHZvaWNlO1xuXHR0aGlzLnR5cGUgPSB0eXBlO1xufTtcblxuQnJhY2VFbGVtLnByb3RvdHlwZS5zZXRCb3R0b21TdGFmZiA9IGZ1bmN0aW9uICh2b2ljZSkge1xuXHR0aGlzLmVuZFZvaWNlID0gdm9pY2U7XG5cdC8vIElmIG9ubHkgdGhlIHN0YXJ0IGJyYWNlIGhhcyBhIG5hbWUgdGhlbiB0aGUgbmFtZSBiZWxvbmdzIHRvIHRoZSBicmFjZSBpbnN0ZWFkIG9mIHRoZSBzdGFmZi5cblx0aWYgKHRoaXMuc3RhcnRWb2ljZS5oZWFkZXIgJiYgIXRoaXMuZW5kVm9pY2UuaGVhZGVyKSB7XG5cdFx0dGhpcy5oZWFkZXIgPSB0aGlzLnN0YXJ0Vm9pY2UuaGVhZGVyO1xuXHRcdGRlbGV0ZSB0aGlzLnN0YXJ0Vm9pY2UuaGVhZGVyO1xuXHR9XG59O1xuXG5CcmFjZUVsZW0ucHJvdG90eXBlLmNvbnRpbnVpbmcgPSBmdW5jdGlvbiAodm9pY2UpIHtcblx0Ly8gSWYgdGhlIGZpbmFsIHN0YWZmIGlzbid0IHByZXNlbnQsIHRoZW4gdXNlIHRoZSBsYXN0IG9uZSB3ZSBzYXcuXG5cdHRoaXMubGFzdENvbnRpbnVlZFZvaWNlID0gdm9pY2U7XG59O1xuXG5CcmFjZUVsZW0ucHJvdG90eXBlLmdldFdpZHRoID0gZnVuY3Rpb24gKCkge1xuXHRyZXR1cm4gMTA7IC8vIFRPRE8tUEVSOiByaWdodCBub3cgdGhlIGRyYXdpbmcgZnVuY3Rpb24gZG9lc24ndCB2YXJ5IHRoZSB3aWR0aCBhdCBhbGwuIElmIGl0IGRvZXMgaW4gdGhlIGZ1dHVyZSB0aGVuIHRoaXMgd2lsbCBjaGFuZ2UuXG59O1xuXG5CcmFjZUVsZW0ucHJvdG90eXBlLmlzU3RhcnRWb2ljZSA9IGZ1bmN0aW9uICh2b2ljZSkge1xuXHRpZiAodGhpcy5zdGFydFZvaWNlICYmIHRoaXMuc3RhcnRWb2ljZS5zdGFmZiAmJiB0aGlzLnN0YXJ0Vm9pY2Uuc3RhZmYudm9pY2VzLmxlbmd0aCA+IDAgJiYgdGhpcy5zdGFydFZvaWNlLnN0YWZmLnZvaWNlc1swXSA9PT0gdm9pY2UpXG5cdFx0cmV0dXJuIHRydWU7XG5cdHJldHVybiBmYWxzZTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQnJhY2VFbGVtO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/elements/brace-element.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/elements/crescendo-element.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/elements/crescendo-element.js ***!
  \*****************************************************************************/
/***/ ((module) => {

eval("//    abc_crescendo_element.js: Definition of the CrescendoElem class.\n\nvar CrescendoElem = function CrescendoElem(anchor1, anchor2, dir, positioning) {\n\tthis.type = \"CrescendoElem\";\n\tthis.anchor1 = anchor1; // must have a .x and a .parent property or be null (means starts at the \"beginning\" of the line - after keysig)\n\tthis.anchor2 = anchor2; // must have a .x property or be null (means ends at the end of the line)\n\tthis.dir = dir; // either \"<\" or \">\"\n\tif (positioning === 'above')\n\t\tthis.dynamicHeightAbove = 6;\n\telse\n\t\tthis.dynamicHeightBelow = 6;\n\tthis.pitch = undefined; // This will be set later\n};\n\nmodule.exports = CrescendoElem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL2NyZXNjZW5kby1lbGVtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIseUJBQXlCO0FBQ3pCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6Qjs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9jcmVhdGlvbi9lbGVtZW50cy9jcmVzY2VuZG8tZWxlbWVudC5qcz9mODUyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vICAgIGFiY19jcmVzY2VuZG9fZWxlbWVudC5qczogRGVmaW5pdGlvbiBvZiB0aGUgQ3Jlc2NlbmRvRWxlbSBjbGFzcy5cblxudmFyIENyZXNjZW5kb0VsZW0gPSBmdW5jdGlvbiBDcmVzY2VuZG9FbGVtKGFuY2hvcjEsIGFuY2hvcjIsIGRpciwgcG9zaXRpb25pbmcpIHtcblx0dGhpcy50eXBlID0gXCJDcmVzY2VuZG9FbGVtXCI7XG5cdHRoaXMuYW5jaG9yMSA9IGFuY2hvcjE7IC8vIG11c3QgaGF2ZSBhIC54IGFuZCBhIC5wYXJlbnQgcHJvcGVydHkgb3IgYmUgbnVsbCAobWVhbnMgc3RhcnRzIGF0IHRoZSBcImJlZ2lubmluZ1wiIG9mIHRoZSBsaW5lIC0gYWZ0ZXIga2V5c2lnKVxuXHR0aGlzLmFuY2hvcjIgPSBhbmNob3IyOyAvLyBtdXN0IGhhdmUgYSAueCBwcm9wZXJ0eSBvciBiZSBudWxsIChtZWFucyBlbmRzIGF0IHRoZSBlbmQgb2YgdGhlIGxpbmUpXG5cdHRoaXMuZGlyID0gZGlyOyAvLyBlaXRoZXIgXCI8XCIgb3IgXCI+XCJcblx0aWYgKHBvc2l0aW9uaW5nID09PSAnYWJvdmUnKVxuXHRcdHRoaXMuZHluYW1pY0hlaWdodEFib3ZlID0gNjtcblx0ZWxzZVxuXHRcdHRoaXMuZHluYW1pY0hlaWdodEJlbG93ID0gNjtcblx0dGhpcy5waXRjaCA9IHVuZGVmaW5lZDsgLy8gVGhpcyB3aWxsIGJlIHNldCBsYXRlclxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBDcmVzY2VuZG9FbGVtO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/elements/crescendo-element.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/elements/dynamic-decoration.js":
/*!******************************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/elements/dynamic-decoration.js ***!
  \******************************************************************************/
/***/ ((module) => {

eval("//    abc_dynamic_decoration.js: Definition of the DynamicDecoration class.\n\nvar DynamicDecoration = function DynamicDecoration(anchor, dec, position) {\n\tthis.type = \"DynamicDecoration\";\n\tthis.anchor = anchor;\n\tthis.dec = dec;\n\tif (position === 'below')\n\t\tthis.volumeHeightBelow = 6;\n\telse\n\t\tthis.volumeHeightAbove = 6;\n\tthis.pitch = undefined; // This will be set later\n};\n\nmodule.exports = DynamicDecoration;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL2R5bmFtaWMtZGVjb3JhdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL2R5bmFtaWMtZGVjb3JhdGlvbi5qcz8wOTM2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vICAgIGFiY19keW5hbWljX2RlY29yYXRpb24uanM6IERlZmluaXRpb24gb2YgdGhlIER5bmFtaWNEZWNvcmF0aW9uIGNsYXNzLlxuXG52YXIgRHluYW1pY0RlY29yYXRpb24gPSBmdW5jdGlvbiBEeW5hbWljRGVjb3JhdGlvbihhbmNob3IsIGRlYywgcG9zaXRpb24pIHtcblx0dGhpcy50eXBlID0gXCJEeW5hbWljRGVjb3JhdGlvblwiO1xuXHR0aGlzLmFuY2hvciA9IGFuY2hvcjtcblx0dGhpcy5kZWMgPSBkZWM7XG5cdGlmIChwb3NpdGlvbiA9PT0gJ2JlbG93Jylcblx0XHR0aGlzLnZvbHVtZUhlaWdodEJlbG93ID0gNjtcblx0ZWxzZVxuXHRcdHRoaXMudm9sdW1lSGVpZ2h0QWJvdmUgPSA2O1xuXHR0aGlzLnBpdGNoID0gdW5kZWZpbmVkOyAvLyBUaGlzIHdpbGwgYmUgc2V0IGxhdGVyXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IER5bmFtaWNEZWNvcmF0aW9uO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/elements/dynamic-decoration.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/elements/ending-element.js":
/*!**************************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/elements/ending-element.js ***!
  \**************************************************************************/
/***/ ((module) => {

eval("//    abc_ending_element.js: Definition of the EndingElement class.\n\nvar EndingElem = function EndingElem(text, anchor1, anchor2) {\n\tthis.type = \"EndingElem\";\n\tthis.text = text; // text to be displayed top left\n\tthis.anchor1 = anchor1; // must have a .x property or be null (means starts at the \"beginning\" of the line - after keysig)\n\tthis.anchor2 = anchor2; // must have a .x property or be null (means ends at the end of the line)\n\tthis.endingHeightAbove = 5;\n\tthis.pitch = undefined; // This will be set later\n};\n\nmodule.exports = EndingElem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL2VuZGluZy1lbGVtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIseUJBQXlCO0FBQ3pCLHlCQUF5QjtBQUN6QjtBQUNBLHlCQUF5QjtBQUN6Qjs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9jcmVhdGlvbi9lbGVtZW50cy9lbmRpbmctZWxlbWVudC5qcz9mOGJiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vICAgIGFiY19lbmRpbmdfZWxlbWVudC5qczogRGVmaW5pdGlvbiBvZiB0aGUgRW5kaW5nRWxlbWVudCBjbGFzcy5cblxudmFyIEVuZGluZ0VsZW0gPSBmdW5jdGlvbiBFbmRpbmdFbGVtKHRleHQsIGFuY2hvcjEsIGFuY2hvcjIpIHtcblx0dGhpcy50eXBlID0gXCJFbmRpbmdFbGVtXCI7XG5cdHRoaXMudGV4dCA9IHRleHQ7IC8vIHRleHQgdG8gYmUgZGlzcGxheWVkIHRvcCBsZWZ0XG5cdHRoaXMuYW5jaG9yMSA9IGFuY2hvcjE7IC8vIG11c3QgaGF2ZSBhIC54IHByb3BlcnR5IG9yIGJlIG51bGwgKG1lYW5zIHN0YXJ0cyBhdCB0aGUgXCJiZWdpbm5pbmdcIiBvZiB0aGUgbGluZSAtIGFmdGVyIGtleXNpZylcblx0dGhpcy5hbmNob3IyID0gYW5jaG9yMjsgLy8gbXVzdCBoYXZlIGEgLnggcHJvcGVydHkgb3IgYmUgbnVsbCAobWVhbnMgZW5kcyBhdCB0aGUgZW5kIG9mIHRoZSBsaW5lKVxuXHR0aGlzLmVuZGluZ0hlaWdodEFib3ZlID0gNTtcblx0dGhpcy5waXRjaCA9IHVuZGVmaW5lZDsgLy8gVGhpcyB3aWxsIGJlIHNldCBsYXRlclxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBFbmRpbmdFbGVtO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/elements/ending-element.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/elements/free-text.js":
/*!*********************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/elements/free-text.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("function FreeText(info, vskip, getFontAndAttr, paddingLeft, width, getTextSize) {\n\tvar text = info.text;\n\tthis.rows = [];\n\tvar size;\n\tif (vskip)\n\t\tthis.rows.push({ move: vskip });\n\tvar hash = getFontAndAttr.calc('textfont', 'defined-text');\n\tif (text === \"\") {\t// we do want to print out blank lines if they have been specified.\n\t\tthis.rows.push({ move: hash.attr['font-size'] * 2 }); // move the distance of the line, plus the distance of the margin, which is also one line.\n\t} else if (typeof text === 'string') {\n\t\tthis.rows.push({ move: hash.attr['font-size'] / 2 }); // TODO-PER: move down some - the y location should be the top of the text, but we output text specifying the center line.\n\t\tthis.rows.push({ left: paddingLeft, text: text, font: 'textfont', klass: 'defined-text', anchor: \"start\", startChar: info.startChar, endChar: info.endChar, absElemType: \"freeText\", name: \"free-text\" });\n\t    // MAE 9 May 2025 - Force blank text lines in a text block to have height\n\t    function replaceStandaloneNewlinesForTextBlocks(input) {\n\t      return input.replace(/^[ \\t]*\\n/gm, 'X\\n');;\n\t    }\n\t    var textForSize = replaceStandaloneNewlinesForTextBlocks(text);\n\t    size = getTextSize.calc(textForSize, 'textfont', 'defined-text'); // was text\n\t\tthis.rows.push({ move: size.height });\n\t} else if (text) {\n\t\tvar maxHeight = 0;\n\t\tvar leftSide = paddingLeft;\n\t\tvar currentFont = 'textfont';\n\t\tfor (var i = 0; i < text.length; i++) {\n\t\t\tif (text[i].font) {\n\t\t\t\tcurrentFont = text[i].font;\n\t\t\t} else\n\t\t\t\tcurrentFont = 'textfont';\n\t\t\tthis.rows.push({ left: leftSide, text: text[i].text, font: currentFont, klass: 'defined-text', anchor: 'start', startChar: info.startChar, endChar: info.endChar, absElemType: \"freeText\", name: \"free-text\" });\n\t\t\tsize = getTextSize.calc(text[i].text, getFontAndAttr.calc(currentFont, 'defined-text').font, 'defined-text');\n\t\t\tleftSide += size.width + size.height / 2; // add a little padding to the right side. The height of the font is probably a close enough approximation.\n\t\t\tmaxHeight = Math.max(maxHeight, size.height)\n\t\t}\n\t\tthis.rows.push({ move: maxHeight });\n\t} else {\n\t\t// The structure is wrong here: it requires an array to do centering, but it shouldn't have.\n\t\tif (info.length === 1) {\n\t\t\tvar x = width / 2;\n\t\t\tthis.rows.push({ left: x, text: info[0].text, font: 'textfont', klass: 'defined-text', anchor: 'middle', startChar: info.startChar, endChar: info.endChar, absElemType: \"freeText\", name: \"free-text\" });\n\t\t\tsize = getTextSize.calc(info[0].text, 'textfont', 'defined-text');\n\t\t\tthis.rows.push({ move: size.height });\n\t\t}\n\t}\n}\n\nmodule.exports = FreeText;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL2ZyZWUtdGV4dC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGFBQWE7QUFDaEM7QUFDQSxvQkFBb0I7QUFDcEIsbUJBQW1CLGtDQUFrQyxHQUFHO0FBQ3hELEdBQUc7QUFDSCxtQkFBbUIsa0NBQWtDLEdBQUc7QUFDeEQsbUJBQW1CLHVMQUF1TDtBQUMxTTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUVBQXVFO0FBQ3ZFLG1CQUFtQixtQkFBbUI7QUFDdEMsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLG9CQUFvQiw2TEFBNkw7QUFDak47QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBLG1CQUFtQixpQkFBaUI7QUFDcEMsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixzTEFBc0w7QUFDMU07QUFDQSxvQkFBb0IsbUJBQW1CO0FBQ3ZDO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9jcmVhdGlvbi9lbGVtZW50cy9mcmVlLXRleHQuanM/NGFmYyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBGcmVlVGV4dChpbmZvLCB2c2tpcCwgZ2V0Rm9udEFuZEF0dHIsIHBhZGRpbmdMZWZ0LCB3aWR0aCwgZ2V0VGV4dFNpemUpIHtcblx0dmFyIHRleHQgPSBpbmZvLnRleHQ7XG5cdHRoaXMucm93cyA9IFtdO1xuXHR2YXIgc2l6ZTtcblx0aWYgKHZza2lwKVxuXHRcdHRoaXMucm93cy5wdXNoKHsgbW92ZTogdnNraXAgfSk7XG5cdHZhciBoYXNoID0gZ2V0Rm9udEFuZEF0dHIuY2FsYygndGV4dGZvbnQnLCAnZGVmaW5lZC10ZXh0Jyk7XG5cdGlmICh0ZXh0ID09PSBcIlwiKSB7XHQvLyB3ZSBkbyB3YW50IHRvIHByaW50IG91dCBibGFuayBsaW5lcyBpZiB0aGV5IGhhdmUgYmVlbiBzcGVjaWZpZWQuXG5cdFx0dGhpcy5yb3dzLnB1c2goeyBtb3ZlOiBoYXNoLmF0dHJbJ2ZvbnQtc2l6ZSddICogMiB9KTsgLy8gbW92ZSB0aGUgZGlzdGFuY2Ugb2YgdGhlIGxpbmUsIHBsdXMgdGhlIGRpc3RhbmNlIG9mIHRoZSBtYXJnaW4sIHdoaWNoIGlzIGFsc28gb25lIGxpbmUuXG5cdH0gZWxzZSBpZiAodHlwZW9mIHRleHQgPT09ICdzdHJpbmcnKSB7XG5cdFx0dGhpcy5yb3dzLnB1c2goeyBtb3ZlOiBoYXNoLmF0dHJbJ2ZvbnQtc2l6ZSddIC8gMiB9KTsgLy8gVE9ETy1QRVI6IG1vdmUgZG93biBzb21lIC0gdGhlIHkgbG9jYXRpb24gc2hvdWxkIGJlIHRoZSB0b3Agb2YgdGhlIHRleHQsIGJ1dCB3ZSBvdXRwdXQgdGV4dCBzcGVjaWZ5aW5nIHRoZSBjZW50ZXIgbGluZS5cblx0XHR0aGlzLnJvd3MucHVzaCh7IGxlZnQ6IHBhZGRpbmdMZWZ0LCB0ZXh0OiB0ZXh0LCBmb250OiAndGV4dGZvbnQnLCBrbGFzczogJ2RlZmluZWQtdGV4dCcsIGFuY2hvcjogXCJzdGFydFwiLCBzdGFydENoYXI6IGluZm8uc3RhcnRDaGFyLCBlbmRDaGFyOiBpbmZvLmVuZENoYXIsIGFic0VsZW1UeXBlOiBcImZyZWVUZXh0XCIsIG5hbWU6IFwiZnJlZS10ZXh0XCIgfSk7XG5cdCAgICAvLyBNQUUgOSBNYXkgMjAyNSAtIEZvcmNlIGJsYW5rIHRleHQgbGluZXMgaW4gYSB0ZXh0IGJsb2NrIHRvIGhhdmUgaGVpZ2h0XG5cdCAgICBmdW5jdGlvbiByZXBsYWNlU3RhbmRhbG9uZU5ld2xpbmVzRm9yVGV4dEJsb2NrcyhpbnB1dCkge1xuXHQgICAgICByZXR1cm4gaW5wdXQucmVwbGFjZSgvXlsgXFx0XSpcXG4vZ20sICdYXFxuJyk7O1xuXHQgICAgfVxuXHQgICAgdmFyIHRleHRGb3JTaXplID0gcmVwbGFjZVN0YW5kYWxvbmVOZXdsaW5lc0ZvclRleHRCbG9ja3ModGV4dCk7XG5cdCAgICBzaXplID0gZ2V0VGV4dFNpemUuY2FsYyh0ZXh0Rm9yU2l6ZSwgJ3RleHRmb250JywgJ2RlZmluZWQtdGV4dCcpOyAvLyB3YXMgdGV4dFxuXHRcdHRoaXMucm93cy5wdXNoKHsgbW92ZTogc2l6ZS5oZWlnaHQgfSk7XG5cdH0gZWxzZSBpZiAodGV4dCkge1xuXHRcdHZhciBtYXhIZWlnaHQgPSAwO1xuXHRcdHZhciBsZWZ0U2lkZSA9IHBhZGRpbmdMZWZ0O1xuXHRcdHZhciBjdXJyZW50Rm9udCA9ICd0ZXh0Zm9udCc7XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCB0ZXh0Lmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRpZiAodGV4dFtpXS5mb250KSB7XG5cdFx0XHRcdGN1cnJlbnRGb250ID0gdGV4dFtpXS5mb250O1xuXHRcdFx0fSBlbHNlXG5cdFx0XHRcdGN1cnJlbnRGb250ID0gJ3RleHRmb250Jztcblx0XHRcdHRoaXMucm93cy5wdXNoKHsgbGVmdDogbGVmdFNpZGUsIHRleHQ6IHRleHRbaV0udGV4dCwgZm9udDogY3VycmVudEZvbnQsIGtsYXNzOiAnZGVmaW5lZC10ZXh0JywgYW5jaG9yOiAnc3RhcnQnLCBzdGFydENoYXI6IGluZm8uc3RhcnRDaGFyLCBlbmRDaGFyOiBpbmZvLmVuZENoYXIsIGFic0VsZW1UeXBlOiBcImZyZWVUZXh0XCIsIG5hbWU6IFwiZnJlZS10ZXh0XCIgfSk7XG5cdFx0XHRzaXplID0gZ2V0VGV4dFNpemUuY2FsYyh0ZXh0W2ldLnRleHQsIGdldEZvbnRBbmRBdHRyLmNhbGMoY3VycmVudEZvbnQsICdkZWZpbmVkLXRleHQnKS5mb250LCAnZGVmaW5lZC10ZXh0Jyk7XG5cdFx0XHRsZWZ0U2lkZSArPSBzaXplLndpZHRoICsgc2l6ZS5oZWlnaHQgLyAyOyAvLyBhZGQgYSBsaXR0bGUgcGFkZGluZyB0byB0aGUgcmlnaHQgc2lkZS4gVGhlIGhlaWdodCBvZiB0aGUgZm9udCBpcyBwcm9iYWJseSBhIGNsb3NlIGVub3VnaCBhcHByb3hpbWF0aW9uLlxuXHRcdFx0bWF4SGVpZ2h0ID0gTWF0aC5tYXgobWF4SGVpZ2h0LCBzaXplLmhlaWdodClcblx0XHR9XG5cdFx0dGhpcy5yb3dzLnB1c2goeyBtb3ZlOiBtYXhIZWlnaHQgfSk7XG5cdH0gZWxzZSB7XG5cdFx0Ly8gVGhlIHN0cnVjdHVyZSBpcyB3cm9uZyBoZXJlOiBpdCByZXF1aXJlcyBhbiBhcnJheSB0byBkbyBjZW50ZXJpbmcsIGJ1dCBpdCBzaG91bGRuJ3QgaGF2ZS5cblx0XHRpZiAoaW5mby5sZW5ndGggPT09IDEpIHtcblx0XHRcdHZhciB4ID0gd2lkdGggLyAyO1xuXHRcdFx0dGhpcy5yb3dzLnB1c2goeyBsZWZ0OiB4LCB0ZXh0OiBpbmZvWzBdLnRleHQsIGZvbnQ6ICd0ZXh0Zm9udCcsIGtsYXNzOiAnZGVmaW5lZC10ZXh0JywgYW5jaG9yOiAnbWlkZGxlJywgc3RhcnRDaGFyOiBpbmZvLnN0YXJ0Q2hhciwgZW5kQ2hhcjogaW5mby5lbmRDaGFyLCBhYnNFbGVtVHlwZTogXCJmcmVlVGV4dFwiLCBuYW1lOiBcImZyZWUtdGV4dFwiIH0pO1xuXHRcdFx0c2l6ZSA9IGdldFRleHRTaXplLmNhbGMoaW5mb1swXS50ZXh0LCAndGV4dGZvbnQnLCAnZGVmaW5lZC10ZXh0Jyk7XG5cdFx0XHR0aGlzLnJvd3MucHVzaCh7IG1vdmU6IHNpemUuaGVpZ2h0IH0pO1xuXHRcdH1cblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEZyZWVUZXh0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/elements/free-text.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/elements/glissando-element.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/elements/glissando-element.js ***!
  \*****************************************************************************/
/***/ ((module) => {

eval("var GlissandoElem = function GlissandoElem(anchor1, anchor2) {\n\tthis.type = \"GlissandoElem\";\n\tthis.anchor1 = anchor1; // must have a .x and a .parent property or be null (means starts at the \"beginning\" of the line - after keysig)\n\tthis.anchor2 = anchor2; // must have a .x property or be null (means ends at the end of the line)\n};\n\nmodule.exports = GlissandoElem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL2dsaXNzYW5kby1lbGVtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIseUJBQXlCO0FBQ3pCOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL2dsaXNzYW5kby1lbGVtZW50LmpzP2U4YjMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEdsaXNzYW5kb0VsZW0gPSBmdW5jdGlvbiBHbGlzc2FuZG9FbGVtKGFuY2hvcjEsIGFuY2hvcjIpIHtcblx0dGhpcy50eXBlID0gXCJHbGlzc2FuZG9FbGVtXCI7XG5cdHRoaXMuYW5jaG9yMSA9IGFuY2hvcjE7IC8vIG11c3QgaGF2ZSBhIC54IGFuZCBhIC5wYXJlbnQgcHJvcGVydHkgb3IgYmUgbnVsbCAobWVhbnMgc3RhcnRzIGF0IHRoZSBcImJlZ2lubmluZ1wiIG9mIHRoZSBsaW5lIC0gYWZ0ZXIga2V5c2lnKVxuXHR0aGlzLmFuY2hvcjIgPSBhbmNob3IyOyAvLyBtdXN0IGhhdmUgYSAueCBwcm9wZXJ0eSBvciBiZSBudWxsIChtZWFucyBlbmRzIGF0IHRoZSBlbmQgb2YgdGhlIGxpbmUpXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEdsaXNzYW5kb0VsZW07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/elements/glissando-element.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/elements/relative-element.js":
/*!****************************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/elements/relative-element.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("//    abc_relative_element.js: Definition of the RelativeElement class.\n\nvar RelativeElement = function RelativeElement(c, dx, w, pitch, opt) {\n\topt = opt || {};\n\tthis.x = 0;\n\tthis.c = c;      // character or path or string\n\tthis.dx = dx;    // relative x position\n\tthis.w = w;      // minimum width taken up by this element (can include gratuitous space)\n\tthis.pitch = pitch; // relative y position by pitch\n\tthis.scalex = opt.scalex || 1; // should the character/path be scaled?\n\tthis.scaley = opt.scaley || 1; // should the character/path be scaled?\n\tthis.type = opt.type || \"symbol\"; // cheap types.\n\tthis.pitch2 = opt.pitch2;\n\tthis.linewidth = opt.linewidth;\n\tthis.klass = opt.klass;\n\tthis.anchor = opt.anchor ? opt.anchor : 'middle'\n\tthis.top = pitch;\n\tif (this.pitch2 !== undefined && this.pitch2 > this.top) this.top = this.pitch2;\n\tthis.bottom = pitch;\n\tif (this.pitch2 !== undefined && this.pitch2 < this.bottom) this.bottom = this.pitch2;\n\tif (opt.thickness) {\n\t\tthis.top += opt.thickness / 2;\n\t\tthis.bottom -= opt.thickness / 2;\n\t}\n\tif (opt.stemHeight) {\n\t\tif (opt.stemHeight > 0)\n\t\t\tthis.top += opt.stemHeight;\n\t\telse\n\t\t\tthis.bottom += opt.stemHeight;\n\t}\n\tif (opt.dim)\n\t\tthis.dim = opt.dim;\n\tif (opt.position)\n\t\tthis.position = opt.position;\n\tthis.height = opt.height ? opt.height : 4; // The +1 is to give a little bit of padding.\n\tif (opt.top)\n\t\tthis.top = opt.top;\n\tif (opt.bottom)\n\t\tthis.bottom = opt.bottom;\n\tif (opt.name)\n\t\tthis.name = opt.name;\n\telse if (this.c)\n\t\tthis.name = this.c;\n\telse\n\t\tthis.name = this.type;\n\tif (opt.realWidth)\n\t\tthis.realWidth = opt.realWidth;\n\telse\n\t\tthis.realWidth = this.w;\n\tthis.centerVertically = false;\n\tswitch (this.type) {\n\t\tcase \"debug\":\n\t\t\tthis.chordHeightAbove = this.height;\n\t\t\tbreak;\n\t\tcase \"lyric\":\n\t\t\tif (opt.position && opt.position === 'below')\n\t\t\t\tthis.lyricHeightBelow = this.height;\n\t\t\telse\n\t\t\t\tthis.lyricHeightAbove = this.height;\n\t\t\tbreak;\n\t\tcase \"chord\":\n\t\t\tif (opt.position && opt.position === 'below')\n\t\t\t\tthis.chordHeightBelow = this.height;\n\t\t\telse\n\t\t\t\tthis.chordHeightAbove = this.height;\n\t\t\tbreak;\n\t\tcase \"text\":\n\t\t\tif (this.pitch === undefined) {\n\t\t\t\tif (opt.position && opt.position === 'below')\n\t\t\t\t\tthis.chordHeightBelow = this.height;\n\t\t\t\telse\n\t\t\t\t\tthis.chordHeightAbove = this.height;\n\t\t\t} else\n\t\t\t\tthis.centerVertically = true;\n\t\t\tbreak;\n\t\tcase \"part\": this.partHeightAbove = this.height; break;\n\t}\n};\n\nRelativeElement.prototype.getChordDim = function () {\n\tif (this.type === \"debug\")\n\t\treturn null;\n\tif (!this.chordHeightAbove && !this.chordHeightBelow)\n\t\treturn null;\n\t// Chords are centered, annotations are left justified.\n\t// NOTE: the font reports extra space to the left and right anyway, so there is a built in margin.\n\t// We add a little margin so that items can't touch - we use half the font size as the margin, so that is 1/4 on each side.\n\t// if there is only one character that we're printing, use half of that margin.\n\t// var margin = this.dim.font.size/4;\n\t// if (this.c.length === 1)\n\t// \tmargin = margin / 2;\n\tvar margin = 0;\n\n\tvar offset = this.type === \"chord\" ? this.realWidth / 2 : 0;\n\tvar left = this.x - offset - margin;\n\tvar right = left + this.realWidth + margin;\n\treturn { left: left, right: right };\n};\n\nRelativeElement.prototype.invertLane = function (total) {\n\tif (this.lane === undefined)\n\t\tthis.lane = 0;\n\tthis.lane = total - this.lane - 1;\n};\n\nRelativeElement.prototype.putChordInLane = function (i) {\n\tthis.lane = i;\n\t// Add some extra space to account for the character's descenders.\n\tif (this.chordHeightAbove)\n\t\tthis.chordHeightAbove = (this.height * 1.25) * this.lane;\n\telse\n\t\tthis.chordHeightBelow = (this.height * 1.25) * this.lane;\n};\n\nRelativeElement.prototype.getLane = function () {\n\tif (this.lane === undefined)\n\t\treturn 0;\n\treturn this.lane;\n};\n\nRelativeElement.prototype.setX = function (x) {\n\tthis.x = x + this.dx;\n};\n\nmodule.exports = RelativeElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL3JlbGF0aXZlLWVsZW1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCLGtCQUFrQjtBQUNsQixrQkFBa0I7QUFDbEIscUJBQXFCO0FBQ3JCLGdDQUFnQztBQUNoQyxnQ0FBZ0M7QUFDaEMsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxtREFBbUQ7QUFDbkQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL3JlbGF0aXZlLWVsZW1lbnQuanM/MjcxYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAgICBhYmNfcmVsYXRpdmVfZWxlbWVudC5qczogRGVmaW5pdGlvbiBvZiB0aGUgUmVsYXRpdmVFbGVtZW50IGNsYXNzLlxuXG52YXIgUmVsYXRpdmVFbGVtZW50ID0gZnVuY3Rpb24gUmVsYXRpdmVFbGVtZW50KGMsIGR4LCB3LCBwaXRjaCwgb3B0KSB7XG5cdG9wdCA9IG9wdCB8fCB7fTtcblx0dGhpcy54ID0gMDtcblx0dGhpcy5jID0gYzsgICAgICAvLyBjaGFyYWN0ZXIgb3IgcGF0aCBvciBzdHJpbmdcblx0dGhpcy5keCA9IGR4OyAgICAvLyByZWxhdGl2ZSB4IHBvc2l0aW9uXG5cdHRoaXMudyA9IHc7ICAgICAgLy8gbWluaW11bSB3aWR0aCB0YWtlbiB1cCBieSB0aGlzIGVsZW1lbnQgKGNhbiBpbmNsdWRlIGdyYXR1aXRvdXMgc3BhY2UpXG5cdHRoaXMucGl0Y2ggPSBwaXRjaDsgLy8gcmVsYXRpdmUgeSBwb3NpdGlvbiBieSBwaXRjaFxuXHR0aGlzLnNjYWxleCA9IG9wdC5zY2FsZXggfHwgMTsgLy8gc2hvdWxkIHRoZSBjaGFyYWN0ZXIvcGF0aCBiZSBzY2FsZWQ/XG5cdHRoaXMuc2NhbGV5ID0gb3B0LnNjYWxleSB8fCAxOyAvLyBzaG91bGQgdGhlIGNoYXJhY3Rlci9wYXRoIGJlIHNjYWxlZD9cblx0dGhpcy50eXBlID0gb3B0LnR5cGUgfHwgXCJzeW1ib2xcIjsgLy8gY2hlYXAgdHlwZXMuXG5cdHRoaXMucGl0Y2gyID0gb3B0LnBpdGNoMjtcblx0dGhpcy5saW5ld2lkdGggPSBvcHQubGluZXdpZHRoO1xuXHR0aGlzLmtsYXNzID0gb3B0LmtsYXNzO1xuXHR0aGlzLmFuY2hvciA9IG9wdC5hbmNob3IgPyBvcHQuYW5jaG9yIDogJ21pZGRsZSdcblx0dGhpcy50b3AgPSBwaXRjaDtcblx0aWYgKHRoaXMucGl0Y2gyICE9PSB1bmRlZmluZWQgJiYgdGhpcy5waXRjaDIgPiB0aGlzLnRvcCkgdGhpcy50b3AgPSB0aGlzLnBpdGNoMjtcblx0dGhpcy5ib3R0b20gPSBwaXRjaDtcblx0aWYgKHRoaXMucGl0Y2gyICE9PSB1bmRlZmluZWQgJiYgdGhpcy5waXRjaDIgPCB0aGlzLmJvdHRvbSkgdGhpcy5ib3R0b20gPSB0aGlzLnBpdGNoMjtcblx0aWYgKG9wdC50aGlja25lc3MpIHtcblx0XHR0aGlzLnRvcCArPSBvcHQudGhpY2tuZXNzIC8gMjtcblx0XHR0aGlzLmJvdHRvbSAtPSBvcHQudGhpY2tuZXNzIC8gMjtcblx0fVxuXHRpZiAob3B0LnN0ZW1IZWlnaHQpIHtcblx0XHRpZiAob3B0LnN0ZW1IZWlnaHQgPiAwKVxuXHRcdFx0dGhpcy50b3AgKz0gb3B0LnN0ZW1IZWlnaHQ7XG5cdFx0ZWxzZVxuXHRcdFx0dGhpcy5ib3R0b20gKz0gb3B0LnN0ZW1IZWlnaHQ7XG5cdH1cblx0aWYgKG9wdC5kaW0pXG5cdFx0dGhpcy5kaW0gPSBvcHQuZGltO1xuXHRpZiAob3B0LnBvc2l0aW9uKVxuXHRcdHRoaXMucG9zaXRpb24gPSBvcHQucG9zaXRpb247XG5cdHRoaXMuaGVpZ2h0ID0gb3B0LmhlaWdodCA/IG9wdC5oZWlnaHQgOiA0OyAvLyBUaGUgKzEgaXMgdG8gZ2l2ZSBhIGxpdHRsZSBiaXQgb2YgcGFkZGluZy5cblx0aWYgKG9wdC50b3ApXG5cdFx0dGhpcy50b3AgPSBvcHQudG9wO1xuXHRpZiAob3B0LmJvdHRvbSlcblx0XHR0aGlzLmJvdHRvbSA9IG9wdC5ib3R0b207XG5cdGlmIChvcHQubmFtZSlcblx0XHR0aGlzLm5hbWUgPSBvcHQubmFtZTtcblx0ZWxzZSBpZiAodGhpcy5jKVxuXHRcdHRoaXMubmFtZSA9IHRoaXMuYztcblx0ZWxzZVxuXHRcdHRoaXMubmFtZSA9IHRoaXMudHlwZTtcblx0aWYgKG9wdC5yZWFsV2lkdGgpXG5cdFx0dGhpcy5yZWFsV2lkdGggPSBvcHQucmVhbFdpZHRoO1xuXHRlbHNlXG5cdFx0dGhpcy5yZWFsV2lkdGggPSB0aGlzLnc7XG5cdHRoaXMuY2VudGVyVmVydGljYWxseSA9IGZhbHNlO1xuXHRzd2l0Y2ggKHRoaXMudHlwZSkge1xuXHRcdGNhc2UgXCJkZWJ1Z1wiOlxuXHRcdFx0dGhpcy5jaG9yZEhlaWdodEFib3ZlID0gdGhpcy5oZWlnaHQ7XG5cdFx0XHRicmVhaztcblx0XHRjYXNlIFwibHlyaWNcIjpcblx0XHRcdGlmIChvcHQucG9zaXRpb24gJiYgb3B0LnBvc2l0aW9uID09PSAnYmVsb3cnKVxuXHRcdFx0XHR0aGlzLmx5cmljSGVpZ2h0QmVsb3cgPSB0aGlzLmhlaWdodDtcblx0XHRcdGVsc2Vcblx0XHRcdFx0dGhpcy5seXJpY0hlaWdodEFib3ZlID0gdGhpcy5oZWlnaHQ7XG5cdFx0XHRicmVhaztcblx0XHRjYXNlIFwiY2hvcmRcIjpcblx0XHRcdGlmIChvcHQucG9zaXRpb24gJiYgb3B0LnBvc2l0aW9uID09PSAnYmVsb3cnKVxuXHRcdFx0XHR0aGlzLmNob3JkSGVpZ2h0QmVsb3cgPSB0aGlzLmhlaWdodDtcblx0XHRcdGVsc2Vcblx0XHRcdFx0dGhpcy5jaG9yZEhlaWdodEFib3ZlID0gdGhpcy5oZWlnaHQ7XG5cdFx0XHRicmVhaztcblx0XHRjYXNlIFwidGV4dFwiOlxuXHRcdFx0aWYgKHRoaXMucGl0Y2ggPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRpZiAob3B0LnBvc2l0aW9uICYmIG9wdC5wb3NpdGlvbiA9PT0gJ2JlbG93Jylcblx0XHRcdFx0XHR0aGlzLmNob3JkSGVpZ2h0QmVsb3cgPSB0aGlzLmhlaWdodDtcblx0XHRcdFx0ZWxzZVxuXHRcdFx0XHRcdHRoaXMuY2hvcmRIZWlnaHRBYm92ZSA9IHRoaXMuaGVpZ2h0O1xuXHRcdFx0fSBlbHNlXG5cdFx0XHRcdHRoaXMuY2VudGVyVmVydGljYWxseSA9IHRydWU7XG5cdFx0XHRicmVhaztcblx0XHRjYXNlIFwicGFydFwiOiB0aGlzLnBhcnRIZWlnaHRBYm92ZSA9IHRoaXMuaGVpZ2h0OyBicmVhaztcblx0fVxufTtcblxuUmVsYXRpdmVFbGVtZW50LnByb3RvdHlwZS5nZXRDaG9yZERpbSA9IGZ1bmN0aW9uICgpIHtcblx0aWYgKHRoaXMudHlwZSA9PT0gXCJkZWJ1Z1wiKVxuXHRcdHJldHVybiBudWxsO1xuXHRpZiAoIXRoaXMuY2hvcmRIZWlnaHRBYm92ZSAmJiAhdGhpcy5jaG9yZEhlaWdodEJlbG93KVxuXHRcdHJldHVybiBudWxsO1xuXHQvLyBDaG9yZHMgYXJlIGNlbnRlcmVkLCBhbm5vdGF0aW9ucyBhcmUgbGVmdCBqdXN0aWZpZWQuXG5cdC8vIE5PVEU6IHRoZSBmb250IHJlcG9ydHMgZXh0cmEgc3BhY2UgdG8gdGhlIGxlZnQgYW5kIHJpZ2h0IGFueXdheSwgc28gdGhlcmUgaXMgYSBidWlsdCBpbiBtYXJnaW4uXG5cdC8vIFdlIGFkZCBhIGxpdHRsZSBtYXJnaW4gc28gdGhhdCBpdGVtcyBjYW4ndCB0b3VjaCAtIHdlIHVzZSBoYWxmIHRoZSBmb250IHNpemUgYXMgdGhlIG1hcmdpbiwgc28gdGhhdCBpcyAxLzQgb24gZWFjaCBzaWRlLlxuXHQvLyBpZiB0aGVyZSBpcyBvbmx5IG9uZSBjaGFyYWN0ZXIgdGhhdCB3ZSdyZSBwcmludGluZywgdXNlIGhhbGYgb2YgdGhhdCBtYXJnaW4uXG5cdC8vIHZhciBtYXJnaW4gPSB0aGlzLmRpbS5mb250LnNpemUvNDtcblx0Ly8gaWYgKHRoaXMuYy5sZW5ndGggPT09IDEpXG5cdC8vIFx0bWFyZ2luID0gbWFyZ2luIC8gMjtcblx0dmFyIG1hcmdpbiA9IDA7XG5cblx0dmFyIG9mZnNldCA9IHRoaXMudHlwZSA9PT0gXCJjaG9yZFwiID8gdGhpcy5yZWFsV2lkdGggLyAyIDogMDtcblx0dmFyIGxlZnQgPSB0aGlzLnggLSBvZmZzZXQgLSBtYXJnaW47XG5cdHZhciByaWdodCA9IGxlZnQgKyB0aGlzLnJlYWxXaWR0aCArIG1hcmdpbjtcblx0cmV0dXJuIHsgbGVmdDogbGVmdCwgcmlnaHQ6IHJpZ2h0IH07XG59O1xuXG5SZWxhdGl2ZUVsZW1lbnQucHJvdG90eXBlLmludmVydExhbmUgPSBmdW5jdGlvbiAodG90YWwpIHtcblx0aWYgKHRoaXMubGFuZSA9PT0gdW5kZWZpbmVkKVxuXHRcdHRoaXMubGFuZSA9IDA7XG5cdHRoaXMubGFuZSA9IHRvdGFsIC0gdGhpcy5sYW5lIC0gMTtcbn07XG5cblJlbGF0aXZlRWxlbWVudC5wcm90b3R5cGUucHV0Q2hvcmRJbkxhbmUgPSBmdW5jdGlvbiAoaSkge1xuXHR0aGlzLmxhbmUgPSBpO1xuXHQvLyBBZGQgc29tZSBleHRyYSBzcGFjZSB0byBhY2NvdW50IGZvciB0aGUgY2hhcmFjdGVyJ3MgZGVzY2VuZGVycy5cblx0aWYgKHRoaXMuY2hvcmRIZWlnaHRBYm92ZSlcblx0XHR0aGlzLmNob3JkSGVpZ2h0QWJvdmUgPSAodGhpcy5oZWlnaHQgKiAxLjI1KSAqIHRoaXMubGFuZTtcblx0ZWxzZVxuXHRcdHRoaXMuY2hvcmRIZWlnaHRCZWxvdyA9ICh0aGlzLmhlaWdodCAqIDEuMjUpICogdGhpcy5sYW5lO1xufTtcblxuUmVsYXRpdmVFbGVtZW50LnByb3RvdHlwZS5nZXRMYW5lID0gZnVuY3Rpb24gKCkge1xuXHRpZiAodGhpcy5sYW5lID09PSB1bmRlZmluZWQpXG5cdFx0cmV0dXJuIDA7XG5cdHJldHVybiB0aGlzLmxhbmU7XG59O1xuXG5SZWxhdGl2ZUVsZW1lbnQucHJvdG90eXBlLnNldFggPSBmdW5jdGlvbiAoeCkge1xuXHR0aGlzLnggPSB4ICsgdGhpcy5keDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gUmVsYXRpdmVFbGVtZW50O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/elements/relative-element.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/elements/rich-text.js":
/*!*********************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/elements/rich-text.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const addTextIf = __webpack_require__(/*! ../add-text-if */ \"(ssr)/./node_modules/abcjs/src/write/creation/add-text-if.js\");\n\nfunction richText(rows, str, defFont, klass, name, paddingLeft, attr, getTextSize) {\n\tvar space = getTextSize.calc(\"i\", defFont, klass);\n\tif (str === '') {\n\t\trows.push({ move: space.height });\n\t} else {\n\t\tif (typeof str === 'string') {\n\t\t\taddTextIf(rows, { marginLeft: paddingLeft, text: str, font: defFont, klass: klass, marginTop: attr.marginTop, anchor: attr.anchor, absElemType: attr.absElemType, info: attr.info, name: name }, getTextSize);\n\t\t\treturn\n\t\t}\n\t\tif (attr.marginTop)\n\t\t\trows.push({move: attr.marginTop})\n\n\t\tvar largestY = 0;\n\t\tvar gap = 0;\n\t\tvar row = {\n\t\t\tleft: paddingLeft,\n\t\t\tanchor: attr.anchor,\n\t\t\tphrases: []\n\t\t}\n\t\tif (klass)\n\t\t\trow.klass = klass\n\t\trows.push(row)\n\t\tfor (var k = 0; k < str.length; k++) {\n\t\t\tvar thisWord = str[k];\n\t\t\tvar font = (thisWord.font) ? thisWord.font : getTextSize.attr(defFont, klass).font;\n\t\t\tvar phrase = {\n\t\t\t\tcontent: thisWord.text,\n\t\t\t}\n\t\t\tif (font)\n\t\t\t\tphrase.attrs = {\n\t\t\t\t\t\"font-family\": getTextSize.getFamily(font.face),\n\t\t\t\t\t\"font-size\": font.size,\n\t\t\t\t\t\"font-weight\": font.weight,\n\t\t\t\t\t\"font-style\": font.style,\n\t\t\t\t\t\"font-decoration\": font.decoration,\n\t\t\t}\n\t\t\t//if (thisWord.text) {\n\t\t\t\trow.phrases.push(phrase);\n\t\t\t\tvar size = getTextSize.calc(thisWord.text, font, klass);\n\t\t\t\tlargestY = Math.max(largestY, size.height);\n\t\t\t\tif (thisWord.text[thisWord.text.length - 1] === ' ') {\n\t\t\t\t\tgap = space.width\n\t\t\t\t}\n\t\t}\n\t\trows.push({ move: largestY });\n\t}\n}\n\nmodule.exports = richText;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL3JpY2gtdGV4dC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0IsbUJBQU8sQ0FBQyxvRkFBZ0I7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBLGNBQWMsb0JBQW9CO0FBQ2xDLEdBQUc7QUFDSDtBQUNBLHFCQUFxQiw2S0FBNks7QUFDbE07QUFDQTtBQUNBO0FBQ0EsY0FBYyxxQkFBcUI7O0FBRW5DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGdCQUFnQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGdCQUFnQjtBQUM5QjtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL3JpY2gtdGV4dC5qcz83YzFkIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFkZFRleHRJZiA9IHJlcXVpcmUoXCIuLi9hZGQtdGV4dC1pZlwiKTtcblxuZnVuY3Rpb24gcmljaFRleHQocm93cywgc3RyLCBkZWZGb250LCBrbGFzcywgbmFtZSwgcGFkZGluZ0xlZnQsIGF0dHIsIGdldFRleHRTaXplKSB7XG5cdHZhciBzcGFjZSA9IGdldFRleHRTaXplLmNhbGMoXCJpXCIsIGRlZkZvbnQsIGtsYXNzKTtcblx0aWYgKHN0ciA9PT0gJycpIHtcblx0XHRyb3dzLnB1c2goeyBtb3ZlOiBzcGFjZS5oZWlnaHQgfSk7XG5cdH0gZWxzZSB7XG5cdFx0aWYgKHR5cGVvZiBzdHIgPT09ICdzdHJpbmcnKSB7XG5cdFx0XHRhZGRUZXh0SWYocm93cywgeyBtYXJnaW5MZWZ0OiBwYWRkaW5nTGVmdCwgdGV4dDogc3RyLCBmb250OiBkZWZGb250LCBrbGFzczoga2xhc3MsIG1hcmdpblRvcDogYXR0ci5tYXJnaW5Ub3AsIGFuY2hvcjogYXR0ci5hbmNob3IsIGFic0VsZW1UeXBlOiBhdHRyLmFic0VsZW1UeXBlLCBpbmZvOiBhdHRyLmluZm8sIG5hbWU6IG5hbWUgfSwgZ2V0VGV4dFNpemUpO1xuXHRcdFx0cmV0dXJuXG5cdFx0fVxuXHRcdGlmIChhdHRyLm1hcmdpblRvcClcblx0XHRcdHJvd3MucHVzaCh7bW92ZTogYXR0ci5tYXJnaW5Ub3B9KVxuXG5cdFx0dmFyIGxhcmdlc3RZID0gMDtcblx0XHR2YXIgZ2FwID0gMDtcblx0XHR2YXIgcm93ID0ge1xuXHRcdFx0bGVmdDogcGFkZGluZ0xlZnQsXG5cdFx0XHRhbmNob3I6IGF0dHIuYW5jaG9yLFxuXHRcdFx0cGhyYXNlczogW11cblx0XHR9XG5cdFx0aWYgKGtsYXNzKVxuXHRcdFx0cm93LmtsYXNzID0ga2xhc3Ncblx0XHRyb3dzLnB1c2gocm93KVxuXHRcdGZvciAodmFyIGsgPSAwOyBrIDwgc3RyLmxlbmd0aDsgaysrKSB7XG5cdFx0XHR2YXIgdGhpc1dvcmQgPSBzdHJba107XG5cdFx0XHR2YXIgZm9udCA9ICh0aGlzV29yZC5mb250KSA/IHRoaXNXb3JkLmZvbnQgOiBnZXRUZXh0U2l6ZS5hdHRyKGRlZkZvbnQsIGtsYXNzKS5mb250O1xuXHRcdFx0dmFyIHBocmFzZSA9IHtcblx0XHRcdFx0Y29udGVudDogdGhpc1dvcmQudGV4dCxcblx0XHRcdH1cblx0XHRcdGlmIChmb250KVxuXHRcdFx0XHRwaHJhc2UuYXR0cnMgPSB7XG5cdFx0XHRcdFx0XCJmb250LWZhbWlseVwiOiBnZXRUZXh0U2l6ZS5nZXRGYW1pbHkoZm9udC5mYWNlKSxcblx0XHRcdFx0XHRcImZvbnQtc2l6ZVwiOiBmb250LnNpemUsXG5cdFx0XHRcdFx0XCJmb250LXdlaWdodFwiOiBmb250LndlaWdodCxcblx0XHRcdFx0XHRcImZvbnQtc3R5bGVcIjogZm9udC5zdHlsZSxcblx0XHRcdFx0XHRcImZvbnQtZGVjb3JhdGlvblwiOiBmb250LmRlY29yYXRpb24sXG5cdFx0XHR9XG5cdFx0XHQvL2lmICh0aGlzV29yZC50ZXh0KSB7XG5cdFx0XHRcdHJvdy5waHJhc2VzLnB1c2gocGhyYXNlKTtcblx0XHRcdFx0dmFyIHNpemUgPSBnZXRUZXh0U2l6ZS5jYWxjKHRoaXNXb3JkLnRleHQsIGZvbnQsIGtsYXNzKTtcblx0XHRcdFx0bGFyZ2VzdFkgPSBNYXRoLm1heChsYXJnZXN0WSwgc2l6ZS5oZWlnaHQpO1xuXHRcdFx0XHRpZiAodGhpc1dvcmQudGV4dFt0aGlzV29yZC50ZXh0Lmxlbmd0aCAtIDFdID09PSAnICcpIHtcblx0XHRcdFx0XHRnYXAgPSBzcGFjZS53aWR0aFxuXHRcdFx0XHR9XG5cdFx0fVxuXHRcdHJvd3MucHVzaCh7IG1vdmU6IGxhcmdlc3RZIH0pO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcmljaFRleHQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/elements/rich-text.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/elements/separator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/elements/separator.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("function Separator(spaceAbove, lineLength, spaceBelow) {\n\tthis.rows = [];\n\tif (spaceAbove)\n\t\tthis.rows.push({ move: spaceAbove });\n\tthis.rows.push({ separator: lineLength, absElemType: \"separator\" });\n\tif (spaceBelow)\n\t\tthis.rows.push({ move: spaceBelow });\n}\n\nmodule.exports = Separator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL3NlcGFyYXRvci5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0JBQWtCO0FBQ3JDLGtCQUFrQixpREFBaUQ7QUFDbkU7QUFDQSxtQkFBbUIsa0JBQWtCO0FBQ3JDOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL3NlcGFyYXRvci5qcz9kNzk0Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIFNlcGFyYXRvcihzcGFjZUFib3ZlLCBsaW5lTGVuZ3RoLCBzcGFjZUJlbG93KSB7XG5cdHRoaXMucm93cyA9IFtdO1xuXHRpZiAoc3BhY2VBYm92ZSlcblx0XHR0aGlzLnJvd3MucHVzaCh7IG1vdmU6IHNwYWNlQWJvdmUgfSk7XG5cdHRoaXMucm93cy5wdXNoKHsgc2VwYXJhdG9yOiBsaW5lTGVuZ3RoLCBhYnNFbGVtVHlwZTogXCJzZXBhcmF0b3JcIiB9KTtcblx0aWYgKHNwYWNlQmVsb3cpXG5cdFx0dGhpcy5yb3dzLnB1c2goeyBtb3ZlOiBzcGFjZUJlbG93IH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFNlcGFyYXRvcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/elements/separator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/elements/staff-group-element.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/elements/staff-group-element.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_staff_group_element.js: Definition of the StaffGroupElement class.\n\n// StaffGroupElement contains all the elements that go together to make one line of music.\n// That might be multiple staves that are tied together, and it might be multiple voices on one staff.\n//\n// Methods:\n// constructor: some basic initialization\n// addVoice(): Called once for each voice. May add a new staff if needed.\n// finished(): Called only internally by layout()\n// layout(): This does all the layout. It sets the following: spacingunits, startx, minspace, w, and the x-coordinate of each element in each voice.\n// draw(): Calls the underlying methods on the voice objects to do the drawing. Sets y and height.\n//\n// Members:\n// staffs: an array of all the staves in this group. Each staff contains the following elements:\n//    { top, bottom, highest, lowest, y }\n// voices: array of VoiceElement objects. This is mostly passed in, but the VoiceElement objects are modified here.\n//\n// spacingunits: number of relative x-units in the line. Used by the calling function to pass back in as the \"spacing\" input parameter.\n// TODO-PER: This should actually be passed back as a return value.\n// minspace: smallest space between two notes. Used by the calling function to pass back in as the \"spacing\" input parameter.\n// TODO-PER: This should actually be passed back as a return value.\n// startx: The left edge, taking the margin and the optional voice name. Used by the draw() method.\n// w: The width of the line. Used by calling function to pass back in as the \"spacing\" input parameter, and the draw() method.\n// TODO-PER: This should actually be passed back as a return value.  (TODO-PER: in pixels or spacing units?)\n// y: The top of the staff group, in pixels. This is set in the draw method.\n// TODO-PER: Where is that used? It looks like it might not be needed.\n// height: Set in the draw() method to the height actually used. Used by the calling function to know where to start the next staff group.\n// TODO-PER: This should actually be set in the layout method and passed back as a return value.\nvar calcHeight = __webpack_require__(/*! ../calc-height */ \"(ssr)/./node_modules/abcjs/src/write/creation/calc-height.js\");\n\nvar StaffGroupElement = function (getTextSize) {\n\tthis.getTextSize = getTextSize;\n\tthis.voices = [];\n\tthis.staffs = [];\n\tthis.brace = undefined; //tony\n\tthis.bracket = undefined;\n};\n\nStaffGroupElement.prototype.setLimit = function (member, voice) {\n\tif (!voice.specialY[member]) return;\n\tif (!voice.staff.specialY[member])\n\t\tvoice.staff.specialY[member] = voice.specialY[member];\n\telse\n\t\tvoice.staff.specialY[member] = Math.max(voice.staff.specialY[member], voice.specialY[member]);\n};\n\nStaffGroupElement.prototype.addVoice = function (voice, staffnumber, stafflines) {\n\tvar voiceNum = this.voices.length;\n\tthis.voices[voiceNum] = voice;\n\tif (this.staffs[staffnumber])\n\t\tthis.staffs[staffnumber].voices.push(voiceNum);\n\telse {\n\t\t// TODO-PER: how does the min/max change when stafflines is not 5?\n\t\tthis.staffs[this.staffs.length] = {\n\t\t\ttop: 10,\n\t\t\tbottom: 2,\n\t\t\tlines: stafflines,\n\t\t\tvoices: [voiceNum],\n\t\t\tspecialY: {\n\t\t\t\ttempoHeightAbove: 0,\n\t\t\t\tpartHeightAbove: 0,\n\t\t\t\tvolumeHeightAbove: 0,\n\t\t\t\tdynamicHeightAbove: 0,\n\t\t\t\tendingHeightAbove: 0,\n\t\t\t\tchordHeightAbove: 0,\n\t\t\t\tlyricHeightAbove: 0,\n\n\t\t\t\tlyricHeightBelow: 0,\n\t\t\t\tchordHeightBelow: 0,\n\t\t\t\tvolumeHeightBelow: 0,\n\t\t\t\tdynamicHeightBelow: 0\n\t\t\t}\n\t\t};\n\t}\n\tvoice.staff = this.staffs[staffnumber];\n};\n\nStaffGroupElement.prototype.setHeight = function () {\n\tthis.height = calcHeight(this);\n};\n\nStaffGroupElement.prototype.setWidth = function (width) {\n\tthis.w = width;\n\tfor (var i = 0; i < this.voices.length; i++) {\n\t\tthis.voices[i].setWidth(width);\n\t}\n};\n\nStaffGroupElement.prototype.setStaffLimits = function (voice) {\n\tvoice.staff.top = Math.max(voice.staff.top, voice.top);\n\tvoice.staff.bottom = Math.min(voice.staff.bottom, voice.bottom);\n\tthis.setLimit('tempoHeightAbove', voice);\n\tthis.setLimit('partHeightAbove', voice);\n\tthis.setLimit('volumeHeightAbove', voice);\n\tthis.setLimit('dynamicHeightAbove', voice);\n\tthis.setLimit('endingHeightAbove', voice);\n\tthis.setLimit('chordHeightAbove', voice);\n\tthis.setLimit('lyricHeightAbove', voice);\n\tthis.setLimit('lyricHeightBelow', voice);\n\tthis.setLimit('chordHeightBelow', voice);\n\tthis.setLimit('volumeHeightBelow', voice);\n\tthis.setLimit('dynamicHeightBelow', voice);\n};\n\nmodule.exports = StaffGroupElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL3N0YWZmLWdyb3VwLWVsZW1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLG1CQUFPLENBQUMsb0ZBQWdCOztBQUV6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCLHdCQUF3QjtBQUN6QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL3N0YWZmLWdyb3VwLWVsZW1lbnQuanM/NzA3NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAgICBhYmNfc3RhZmZfZ3JvdXBfZWxlbWVudC5qczogRGVmaW5pdGlvbiBvZiB0aGUgU3RhZmZHcm91cEVsZW1lbnQgY2xhc3MuXG5cbi8vIFN0YWZmR3JvdXBFbGVtZW50IGNvbnRhaW5zIGFsbCB0aGUgZWxlbWVudHMgdGhhdCBnbyB0b2dldGhlciB0byBtYWtlIG9uZSBsaW5lIG9mIG11c2ljLlxuLy8gVGhhdCBtaWdodCBiZSBtdWx0aXBsZSBzdGF2ZXMgdGhhdCBhcmUgdGllZCB0b2dldGhlciwgYW5kIGl0IG1pZ2h0IGJlIG11bHRpcGxlIHZvaWNlcyBvbiBvbmUgc3RhZmYuXG4vL1xuLy8gTWV0aG9kczpcbi8vIGNvbnN0cnVjdG9yOiBzb21lIGJhc2ljIGluaXRpYWxpemF0aW9uXG4vLyBhZGRWb2ljZSgpOiBDYWxsZWQgb25jZSBmb3IgZWFjaCB2b2ljZS4gTWF5IGFkZCBhIG5ldyBzdGFmZiBpZiBuZWVkZWQuXG4vLyBmaW5pc2hlZCgpOiBDYWxsZWQgb25seSBpbnRlcm5hbGx5IGJ5IGxheW91dCgpXG4vLyBsYXlvdXQoKTogVGhpcyBkb2VzIGFsbCB0aGUgbGF5b3V0LiBJdCBzZXRzIHRoZSBmb2xsb3dpbmc6IHNwYWNpbmd1bml0cywgc3RhcnR4LCBtaW5zcGFjZSwgdywgYW5kIHRoZSB4LWNvb3JkaW5hdGUgb2YgZWFjaCBlbGVtZW50IGluIGVhY2ggdm9pY2UuXG4vLyBkcmF3KCk6IENhbGxzIHRoZSB1bmRlcmx5aW5nIG1ldGhvZHMgb24gdGhlIHZvaWNlIG9iamVjdHMgdG8gZG8gdGhlIGRyYXdpbmcuIFNldHMgeSBhbmQgaGVpZ2h0LlxuLy9cbi8vIE1lbWJlcnM6XG4vLyBzdGFmZnM6IGFuIGFycmF5IG9mIGFsbCB0aGUgc3RhdmVzIGluIHRoaXMgZ3JvdXAuIEVhY2ggc3RhZmYgY29udGFpbnMgdGhlIGZvbGxvd2luZyBlbGVtZW50czpcbi8vICAgIHsgdG9wLCBib3R0b20sIGhpZ2hlc3QsIGxvd2VzdCwgeSB9XG4vLyB2b2ljZXM6IGFycmF5IG9mIFZvaWNlRWxlbWVudCBvYmplY3RzLiBUaGlzIGlzIG1vc3RseSBwYXNzZWQgaW4sIGJ1dCB0aGUgVm9pY2VFbGVtZW50IG9iamVjdHMgYXJlIG1vZGlmaWVkIGhlcmUuXG4vL1xuLy8gc3BhY2luZ3VuaXRzOiBudW1iZXIgb2YgcmVsYXRpdmUgeC11bml0cyBpbiB0aGUgbGluZS4gVXNlZCBieSB0aGUgY2FsbGluZyBmdW5jdGlvbiB0byBwYXNzIGJhY2sgaW4gYXMgdGhlIFwic3BhY2luZ1wiIGlucHV0IHBhcmFtZXRlci5cbi8vIFRPRE8tUEVSOiBUaGlzIHNob3VsZCBhY3R1YWxseSBiZSBwYXNzZWQgYmFjayBhcyBhIHJldHVybiB2YWx1ZS5cbi8vIG1pbnNwYWNlOiBzbWFsbGVzdCBzcGFjZSBiZXR3ZWVuIHR3byBub3Rlcy4gVXNlZCBieSB0aGUgY2FsbGluZyBmdW5jdGlvbiB0byBwYXNzIGJhY2sgaW4gYXMgdGhlIFwic3BhY2luZ1wiIGlucHV0IHBhcmFtZXRlci5cbi8vIFRPRE8tUEVSOiBUaGlzIHNob3VsZCBhY3R1YWxseSBiZSBwYXNzZWQgYmFjayBhcyBhIHJldHVybiB2YWx1ZS5cbi8vIHN0YXJ0eDogVGhlIGxlZnQgZWRnZSwgdGFraW5nIHRoZSBtYXJnaW4gYW5kIHRoZSBvcHRpb25hbCB2b2ljZSBuYW1lLiBVc2VkIGJ5IHRoZSBkcmF3KCkgbWV0aG9kLlxuLy8gdzogVGhlIHdpZHRoIG9mIHRoZSBsaW5lLiBVc2VkIGJ5IGNhbGxpbmcgZnVuY3Rpb24gdG8gcGFzcyBiYWNrIGluIGFzIHRoZSBcInNwYWNpbmdcIiBpbnB1dCBwYXJhbWV0ZXIsIGFuZCB0aGUgZHJhdygpIG1ldGhvZC5cbi8vIFRPRE8tUEVSOiBUaGlzIHNob3VsZCBhY3R1YWxseSBiZSBwYXNzZWQgYmFjayBhcyBhIHJldHVybiB2YWx1ZS4gIChUT0RPLVBFUjogaW4gcGl4ZWxzIG9yIHNwYWNpbmcgdW5pdHM/KVxuLy8geTogVGhlIHRvcCBvZiB0aGUgc3RhZmYgZ3JvdXAsIGluIHBpeGVscy4gVGhpcyBpcyBzZXQgaW4gdGhlIGRyYXcgbWV0aG9kLlxuLy8gVE9ETy1QRVI6IFdoZXJlIGlzIHRoYXQgdXNlZD8gSXQgbG9va3MgbGlrZSBpdCBtaWdodCBub3QgYmUgbmVlZGVkLlxuLy8gaGVpZ2h0OiBTZXQgaW4gdGhlIGRyYXcoKSBtZXRob2QgdG8gdGhlIGhlaWdodCBhY3R1YWxseSB1c2VkLiBVc2VkIGJ5IHRoZSBjYWxsaW5nIGZ1bmN0aW9uIHRvIGtub3cgd2hlcmUgdG8gc3RhcnQgdGhlIG5leHQgc3RhZmYgZ3JvdXAuXG4vLyBUT0RPLVBFUjogVGhpcyBzaG91bGQgYWN0dWFsbHkgYmUgc2V0IGluIHRoZSBsYXlvdXQgbWV0aG9kIGFuZCBwYXNzZWQgYmFjayBhcyBhIHJldHVybiB2YWx1ZS5cbnZhciBjYWxjSGVpZ2h0ID0gcmVxdWlyZSgnLi4vY2FsYy1oZWlnaHQnKTtcblxudmFyIFN0YWZmR3JvdXBFbGVtZW50ID0gZnVuY3Rpb24gKGdldFRleHRTaXplKSB7XG5cdHRoaXMuZ2V0VGV4dFNpemUgPSBnZXRUZXh0U2l6ZTtcblx0dGhpcy52b2ljZXMgPSBbXTtcblx0dGhpcy5zdGFmZnMgPSBbXTtcblx0dGhpcy5icmFjZSA9IHVuZGVmaW5lZDsgLy90b255XG5cdHRoaXMuYnJhY2tldCA9IHVuZGVmaW5lZDtcbn07XG5cblN0YWZmR3JvdXBFbGVtZW50LnByb3RvdHlwZS5zZXRMaW1pdCA9IGZ1bmN0aW9uIChtZW1iZXIsIHZvaWNlKSB7XG5cdGlmICghdm9pY2Uuc3BlY2lhbFlbbWVtYmVyXSkgcmV0dXJuO1xuXHRpZiAoIXZvaWNlLnN0YWZmLnNwZWNpYWxZW21lbWJlcl0pXG5cdFx0dm9pY2Uuc3RhZmYuc3BlY2lhbFlbbWVtYmVyXSA9IHZvaWNlLnNwZWNpYWxZW21lbWJlcl07XG5cdGVsc2Vcblx0XHR2b2ljZS5zdGFmZi5zcGVjaWFsWVttZW1iZXJdID0gTWF0aC5tYXgodm9pY2Uuc3RhZmYuc3BlY2lhbFlbbWVtYmVyXSwgdm9pY2Uuc3BlY2lhbFlbbWVtYmVyXSk7XG59O1xuXG5TdGFmZkdyb3VwRWxlbWVudC5wcm90b3R5cGUuYWRkVm9pY2UgPSBmdW5jdGlvbiAodm9pY2UsIHN0YWZmbnVtYmVyLCBzdGFmZmxpbmVzKSB7XG5cdHZhciB2b2ljZU51bSA9IHRoaXMudm9pY2VzLmxlbmd0aDtcblx0dGhpcy52b2ljZXNbdm9pY2VOdW1dID0gdm9pY2U7XG5cdGlmICh0aGlzLnN0YWZmc1tzdGFmZm51bWJlcl0pXG5cdFx0dGhpcy5zdGFmZnNbc3RhZmZudW1iZXJdLnZvaWNlcy5wdXNoKHZvaWNlTnVtKTtcblx0ZWxzZSB7XG5cdFx0Ly8gVE9ETy1QRVI6IGhvdyBkb2VzIHRoZSBtaW4vbWF4IGNoYW5nZSB3aGVuIHN0YWZmbGluZXMgaXMgbm90IDU/XG5cdFx0dGhpcy5zdGFmZnNbdGhpcy5zdGFmZnMubGVuZ3RoXSA9IHtcblx0XHRcdHRvcDogMTAsXG5cdFx0XHRib3R0b206IDIsXG5cdFx0XHRsaW5lczogc3RhZmZsaW5lcyxcblx0XHRcdHZvaWNlczogW3ZvaWNlTnVtXSxcblx0XHRcdHNwZWNpYWxZOiB7XG5cdFx0XHRcdHRlbXBvSGVpZ2h0QWJvdmU6IDAsXG5cdFx0XHRcdHBhcnRIZWlnaHRBYm92ZTogMCxcblx0XHRcdFx0dm9sdW1lSGVpZ2h0QWJvdmU6IDAsXG5cdFx0XHRcdGR5bmFtaWNIZWlnaHRBYm92ZTogMCxcblx0XHRcdFx0ZW5kaW5nSGVpZ2h0QWJvdmU6IDAsXG5cdFx0XHRcdGNob3JkSGVpZ2h0QWJvdmU6IDAsXG5cdFx0XHRcdGx5cmljSGVpZ2h0QWJvdmU6IDAsXG5cblx0XHRcdFx0bHlyaWNIZWlnaHRCZWxvdzogMCxcblx0XHRcdFx0Y2hvcmRIZWlnaHRCZWxvdzogMCxcblx0XHRcdFx0dm9sdW1lSGVpZ2h0QmVsb3c6IDAsXG5cdFx0XHRcdGR5bmFtaWNIZWlnaHRCZWxvdzogMFxuXHRcdFx0fVxuXHRcdH07XG5cdH1cblx0dm9pY2Uuc3RhZmYgPSB0aGlzLnN0YWZmc1tzdGFmZm51bWJlcl07XG59O1xuXG5TdGFmZkdyb3VwRWxlbWVudC5wcm90b3R5cGUuc2V0SGVpZ2h0ID0gZnVuY3Rpb24gKCkge1xuXHR0aGlzLmhlaWdodCA9IGNhbGNIZWlnaHQodGhpcyk7XG59O1xuXG5TdGFmZkdyb3VwRWxlbWVudC5wcm90b3R5cGUuc2V0V2lkdGggPSBmdW5jdGlvbiAod2lkdGgpIHtcblx0dGhpcy53ID0gd2lkdGg7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy52b2ljZXMubGVuZ3RoOyBpKyspIHtcblx0XHR0aGlzLnZvaWNlc1tpXS5zZXRXaWR0aCh3aWR0aCk7XG5cdH1cbn07XG5cblN0YWZmR3JvdXBFbGVtZW50LnByb3RvdHlwZS5zZXRTdGFmZkxpbWl0cyA9IGZ1bmN0aW9uICh2b2ljZSkge1xuXHR2b2ljZS5zdGFmZi50b3AgPSBNYXRoLm1heCh2b2ljZS5zdGFmZi50b3AsIHZvaWNlLnRvcCk7XG5cdHZvaWNlLnN0YWZmLmJvdHRvbSA9IE1hdGgubWluKHZvaWNlLnN0YWZmLmJvdHRvbSwgdm9pY2UuYm90dG9tKTtcblx0dGhpcy5zZXRMaW1pdCgndGVtcG9IZWlnaHRBYm92ZScsIHZvaWNlKTtcblx0dGhpcy5zZXRMaW1pdCgncGFydEhlaWdodEFib3ZlJywgdm9pY2UpO1xuXHR0aGlzLnNldExpbWl0KCd2b2x1bWVIZWlnaHRBYm92ZScsIHZvaWNlKTtcblx0dGhpcy5zZXRMaW1pdCgnZHluYW1pY0hlaWdodEFib3ZlJywgdm9pY2UpO1xuXHR0aGlzLnNldExpbWl0KCdlbmRpbmdIZWlnaHRBYm92ZScsIHZvaWNlKTtcblx0dGhpcy5zZXRMaW1pdCgnY2hvcmRIZWlnaHRBYm92ZScsIHZvaWNlKTtcblx0dGhpcy5zZXRMaW1pdCgnbHlyaWNIZWlnaHRBYm92ZScsIHZvaWNlKTtcblx0dGhpcy5zZXRMaW1pdCgnbHlyaWNIZWlnaHRCZWxvdycsIHZvaWNlKTtcblx0dGhpcy5zZXRMaW1pdCgnY2hvcmRIZWlnaHRCZWxvdycsIHZvaWNlKTtcblx0dGhpcy5zZXRMaW1pdCgndm9sdW1lSGVpZ2h0QmVsb3cnLCB2b2ljZSk7XG5cdHRoaXMuc2V0TGltaXQoJ2R5bmFtaWNIZWlnaHRCZWxvdycsIHZvaWNlKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gU3RhZmZHcm91cEVsZW1lbnQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/elements/staff-group-element.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/elements/subtitle.js":
/*!********************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/elements/subtitle.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("function Subtitle(spaceAbove, formatting, info, center, paddingLeft, getTextSize) {\n\tthis.rows = [];\n\tif (spaceAbove)\n\t\tthis.rows.push({ move: spaceAbove });\n\tvar tAnchor = formatting.titleleft ? 'start' : 'middle';\n\tvar tLeft = formatting.titleleft ? paddingLeft : center;\n\tthis.rows.push({ left: tLeft, text: info.text, font: 'subtitlefont', klass: 'text subtitle', anchor: tAnchor, startChar: info.startChar, endChar: info.endChar, absElemType: \"subtitle\", name: \"subtitle\" });\n\tvar size = getTextSize.calc(info.text, 'subtitlefont', 'text subtitle');\n\tthis.rows.push({ move: size.height });\n}\n\nmodule.exports = Subtitle;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL3N1YnRpdGxlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixrQkFBa0I7QUFDckM7QUFDQTtBQUNBLGtCQUFrQiwwTEFBMEw7QUFDNU07QUFDQSxrQkFBa0IsbUJBQW1CO0FBQ3JDOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL3N1YnRpdGxlLmpzPzhlNTciXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gU3VidGl0bGUoc3BhY2VBYm92ZSwgZm9ybWF0dGluZywgaW5mbywgY2VudGVyLCBwYWRkaW5nTGVmdCwgZ2V0VGV4dFNpemUpIHtcblx0dGhpcy5yb3dzID0gW107XG5cdGlmIChzcGFjZUFib3ZlKVxuXHRcdHRoaXMucm93cy5wdXNoKHsgbW92ZTogc3BhY2VBYm92ZSB9KTtcblx0dmFyIHRBbmNob3IgPSBmb3JtYXR0aW5nLnRpdGxlbGVmdCA/ICdzdGFydCcgOiAnbWlkZGxlJztcblx0dmFyIHRMZWZ0ID0gZm9ybWF0dGluZy50aXRsZWxlZnQgPyBwYWRkaW5nTGVmdCA6IGNlbnRlcjtcblx0dGhpcy5yb3dzLnB1c2goeyBsZWZ0OiB0TGVmdCwgdGV4dDogaW5mby50ZXh0LCBmb250OiAnc3VidGl0bGVmb250Jywga2xhc3M6ICd0ZXh0IHN1YnRpdGxlJywgYW5jaG9yOiB0QW5jaG9yLCBzdGFydENoYXI6IGluZm8uc3RhcnRDaGFyLCBlbmRDaGFyOiBpbmZvLmVuZENoYXIsIGFic0VsZW1UeXBlOiBcInN1YnRpdGxlXCIsIG5hbWU6IFwic3VidGl0bGVcIiB9KTtcblx0dmFyIHNpemUgPSBnZXRUZXh0U2l6ZS5jYWxjKGluZm8udGV4dCwgJ3N1YnRpdGxlZm9udCcsICd0ZXh0IHN1YnRpdGxlJyk7XG5cdHRoaXMucm93cy5wdXNoKHsgbW92ZTogc2l6ZS5oZWlnaHQgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gU3VidGl0bGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/elements/subtitle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/elements/tempo-element.js":
/*!*************************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/elements/tempo-element.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_tempo_element.js: Definition of the TempoElement class.\n\nvar AbsoluteElement = __webpack_require__(/*! ./absolute-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/absolute-element.js\");\nvar RelativeElement = __webpack_require__(/*! ./relative-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/relative-element.js\");\n\nvar TempoElement = function TempoElement(tempo, tuneNumber, createNoteHead) {\n\tthis.type = \"TempoElement\";\n\tthis.tempo = tempo;\n\tthis.tempo.type = \"tempo\"; /// TODO-PER: this should be set earlier, in the parser, probably.\n\tthis.tuneNumber = tuneNumber;\n\t// TODO: can these two properties be merged?\n\tthis.totalHeightInPitches = 6;\n\tthis.tempoHeightAbove = this.totalHeightInPitches;\n\tthis.pitch = undefined; // This will be set later\n\tif (this.tempo.duration && !this.tempo.suppressBpm) {\n\t\tthis.note = this.createNote(createNoteHead, tempo, tuneNumber);\n\t}\n};\n\nTempoElement.prototype.setX = function (x) {\n\tthis.x = x;\n};\n\nTempoElement.prototype.createNote = function (createNoteHead, tempo, tuneNumber) {\n\tvar temposcale = 0.75;\n\tvar duration = tempo.duration[0]; // TODO when multiple durations\n\tvar absElem = new AbsoluteElement(tempo, duration, 1, 'tempo', tuneNumber);\n\t// There aren't an infinite number of note values, but we are passed a float, so just in case something is off upstream,\n\t// merge all of the in between points.\n\tvar dot;\n\tvar flag;\n\tvar note;\n\tif (duration <= 1 / 32) { note = \"noteheads.quarter\"; flag = \"flags.u32nd\"; dot = 0; }\n\telse if (duration <= 1 / 16) { note = \"noteheads.quarter\"; flag = \"flags.u16th\"; dot = 0; }\n\telse if (duration <= 3 / 32) { note = \"noteheads.quarter\"; flag = \"flags.u16nd\"; dot = 1; }\n\telse if (duration <= 1 / 8) { note = \"noteheads.quarter\"; flag = \"flags.u8th\"; dot = 0; }\n\telse if (duration <= 3 / 16) { note = \"noteheads.quarter\"; flag = \"flags.u8th\"; dot = 1; }\n\telse if (duration <= 1 / 4) { note = \"noteheads.quarter\"; dot = 0; }\n\telse if (duration <= 3 / 8) { note = \"noteheads.quarter\"; dot = 1; }\n\telse if (duration <= 1 / 2) { note = \"noteheads.half\"; dot = 0; }\n\telse if (duration <= 3 / 4) { note = \"noteheads.half\"; dot = 1; }\n\telse if (duration <= 1) { note = \"noteheads.whole\"; dot = 0; }\n\telse if (duration <= 1.5) { note = \"noteheads.whole\"; dot = 1; }\n\telse if (duration <= 2) { note = \"noteheads.dbl\"; dot = 0; }\n\telse { note = \"noteheads.dbl\"; dot = 1; }\n\n\tvar ret = createNoteHead(absElem, note, { verticalPos: 0 }, // This is just temporary: we'll offset the vertical positioning when we get the actual vertical spot.\n\t\t{ dir: \"up\", flag: flag, dot: dot, scale: temposcale });\n\tvar tempoNote = ret.notehead;\n\tabsElem.addHead(tempoNote);\n\tvar stem;\n\tif (note !== \"noteheads.whole\" && note !== \"noteheads.dbl\") {\n\t\tvar p1 = 1 / 3 * temposcale;\n\t\tvar p2 = 5 * temposcale;\n\t\tvar dx = tempoNote.dx + tempoNote.w;\n\t\tvar width = -0.6;\n\t\tstem = new RelativeElement(null, dx, 0, p1, { \"type\": \"stem\", \"pitch2\": p2, linewidth: width });\n\t\tabsElem.addRight(stem);\n\t}\n\treturn absElem;\n};\n\nmodule.exports = TempoElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL3RlbXBvLWVsZW1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsc0JBQXNCLG1CQUFPLENBQUMsc0dBQW9CO0FBQ2xELHNCQUFzQixtQkFBTyxDQUFDLHNHQUFvQjs7QUFFbEQ7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiw0QkFBNEIsc0JBQXNCO0FBQzdFLGdDQUFnQyw0QkFBNEIsc0JBQXNCO0FBQ2xGLGdDQUFnQyw0QkFBNEIsc0JBQXNCO0FBQ2xGLCtCQUErQiw0QkFBNEIscUJBQXFCO0FBQ2hGLGdDQUFnQyw0QkFBNEIscUJBQXFCO0FBQ2pGLCtCQUErQiw0QkFBNEI7QUFDM0QsK0JBQStCLDRCQUE0QjtBQUMzRCwrQkFBK0IseUJBQXlCO0FBQ3hELCtCQUErQix5QkFBeUI7QUFDeEQsMkJBQTJCLDBCQUEwQjtBQUNyRCw2QkFBNkIsMEJBQTBCO0FBQ3ZELDJCQUEyQix3QkFBd0I7QUFDbkQsUUFBUSx3QkFBd0I7O0FBRWhDLDJDQUEyQyxnQkFBZ0I7QUFDM0QsSUFBSSxvREFBb0Q7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxnREFBZ0Q7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvY3JlYXRpb24vZWxlbWVudHMvdGVtcG8tZWxlbWVudC5qcz8yZDZjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vICAgIGFiY190ZW1wb19lbGVtZW50LmpzOiBEZWZpbml0aW9uIG9mIHRoZSBUZW1wb0VsZW1lbnQgY2xhc3MuXG5cbnZhciBBYnNvbHV0ZUVsZW1lbnQgPSByZXF1aXJlKCcuL2Fic29sdXRlLWVsZW1lbnQnKTtcbnZhciBSZWxhdGl2ZUVsZW1lbnQgPSByZXF1aXJlKCcuL3JlbGF0aXZlLWVsZW1lbnQnKTtcblxudmFyIFRlbXBvRWxlbWVudCA9IGZ1bmN0aW9uIFRlbXBvRWxlbWVudCh0ZW1wbywgdHVuZU51bWJlciwgY3JlYXRlTm90ZUhlYWQpIHtcblx0dGhpcy50eXBlID0gXCJUZW1wb0VsZW1lbnRcIjtcblx0dGhpcy50ZW1wbyA9IHRlbXBvO1xuXHR0aGlzLnRlbXBvLnR5cGUgPSBcInRlbXBvXCI7IC8vLyBUT0RPLVBFUjogdGhpcyBzaG91bGQgYmUgc2V0IGVhcmxpZXIsIGluIHRoZSBwYXJzZXIsIHByb2JhYmx5LlxuXHR0aGlzLnR1bmVOdW1iZXIgPSB0dW5lTnVtYmVyO1xuXHQvLyBUT0RPOiBjYW4gdGhlc2UgdHdvIHByb3BlcnRpZXMgYmUgbWVyZ2VkP1xuXHR0aGlzLnRvdGFsSGVpZ2h0SW5QaXRjaGVzID0gNjtcblx0dGhpcy50ZW1wb0hlaWdodEFib3ZlID0gdGhpcy50b3RhbEhlaWdodEluUGl0Y2hlcztcblx0dGhpcy5waXRjaCA9IHVuZGVmaW5lZDsgLy8gVGhpcyB3aWxsIGJlIHNldCBsYXRlclxuXHRpZiAodGhpcy50ZW1wby5kdXJhdGlvbiAmJiAhdGhpcy50ZW1wby5zdXBwcmVzc0JwbSkge1xuXHRcdHRoaXMubm90ZSA9IHRoaXMuY3JlYXRlTm90ZShjcmVhdGVOb3RlSGVhZCwgdGVtcG8sIHR1bmVOdW1iZXIpO1xuXHR9XG59O1xuXG5UZW1wb0VsZW1lbnQucHJvdG90eXBlLnNldFggPSBmdW5jdGlvbiAoeCkge1xuXHR0aGlzLnggPSB4O1xufTtcblxuVGVtcG9FbGVtZW50LnByb3RvdHlwZS5jcmVhdGVOb3RlID0gZnVuY3Rpb24gKGNyZWF0ZU5vdGVIZWFkLCB0ZW1wbywgdHVuZU51bWJlcikge1xuXHR2YXIgdGVtcG9zY2FsZSA9IDAuNzU7XG5cdHZhciBkdXJhdGlvbiA9IHRlbXBvLmR1cmF0aW9uWzBdOyAvLyBUT0RPIHdoZW4gbXVsdGlwbGUgZHVyYXRpb25zXG5cdHZhciBhYnNFbGVtID0gbmV3IEFic29sdXRlRWxlbWVudCh0ZW1wbywgZHVyYXRpb24sIDEsICd0ZW1wbycsIHR1bmVOdW1iZXIpO1xuXHQvLyBUaGVyZSBhcmVuJ3QgYW4gaW5maW5pdGUgbnVtYmVyIG9mIG5vdGUgdmFsdWVzLCBidXQgd2UgYXJlIHBhc3NlZCBhIGZsb2F0LCBzbyBqdXN0IGluIGNhc2Ugc29tZXRoaW5nIGlzIG9mZiB1cHN0cmVhbSxcblx0Ly8gbWVyZ2UgYWxsIG9mIHRoZSBpbiBiZXR3ZWVuIHBvaW50cy5cblx0dmFyIGRvdDtcblx0dmFyIGZsYWc7XG5cdHZhciBub3RlO1xuXHRpZiAoZHVyYXRpb24gPD0gMSAvIDMyKSB7IG5vdGUgPSBcIm5vdGVoZWFkcy5xdWFydGVyXCI7IGZsYWcgPSBcImZsYWdzLnUzMm5kXCI7IGRvdCA9IDA7IH1cblx0ZWxzZSBpZiAoZHVyYXRpb24gPD0gMSAvIDE2KSB7IG5vdGUgPSBcIm5vdGVoZWFkcy5xdWFydGVyXCI7IGZsYWcgPSBcImZsYWdzLnUxNnRoXCI7IGRvdCA9IDA7IH1cblx0ZWxzZSBpZiAoZHVyYXRpb24gPD0gMyAvIDMyKSB7IG5vdGUgPSBcIm5vdGVoZWFkcy5xdWFydGVyXCI7IGZsYWcgPSBcImZsYWdzLnUxNm5kXCI7IGRvdCA9IDE7IH1cblx0ZWxzZSBpZiAoZHVyYXRpb24gPD0gMSAvIDgpIHsgbm90ZSA9IFwibm90ZWhlYWRzLnF1YXJ0ZXJcIjsgZmxhZyA9IFwiZmxhZ3MudTh0aFwiOyBkb3QgPSAwOyB9XG5cdGVsc2UgaWYgKGR1cmF0aW9uIDw9IDMgLyAxNikgeyBub3RlID0gXCJub3RlaGVhZHMucXVhcnRlclwiOyBmbGFnID0gXCJmbGFncy51OHRoXCI7IGRvdCA9IDE7IH1cblx0ZWxzZSBpZiAoZHVyYXRpb24gPD0gMSAvIDQpIHsgbm90ZSA9IFwibm90ZWhlYWRzLnF1YXJ0ZXJcIjsgZG90ID0gMDsgfVxuXHRlbHNlIGlmIChkdXJhdGlvbiA8PSAzIC8gOCkgeyBub3RlID0gXCJub3RlaGVhZHMucXVhcnRlclwiOyBkb3QgPSAxOyB9XG5cdGVsc2UgaWYgKGR1cmF0aW9uIDw9IDEgLyAyKSB7IG5vdGUgPSBcIm5vdGVoZWFkcy5oYWxmXCI7IGRvdCA9IDA7IH1cblx0ZWxzZSBpZiAoZHVyYXRpb24gPD0gMyAvIDQpIHsgbm90ZSA9IFwibm90ZWhlYWRzLmhhbGZcIjsgZG90ID0gMTsgfVxuXHRlbHNlIGlmIChkdXJhdGlvbiA8PSAxKSB7IG5vdGUgPSBcIm5vdGVoZWFkcy53aG9sZVwiOyBkb3QgPSAwOyB9XG5cdGVsc2UgaWYgKGR1cmF0aW9uIDw9IDEuNSkgeyBub3RlID0gXCJub3RlaGVhZHMud2hvbGVcIjsgZG90ID0gMTsgfVxuXHRlbHNlIGlmIChkdXJhdGlvbiA8PSAyKSB7IG5vdGUgPSBcIm5vdGVoZWFkcy5kYmxcIjsgZG90ID0gMDsgfVxuXHRlbHNlIHsgbm90ZSA9IFwibm90ZWhlYWRzLmRibFwiOyBkb3QgPSAxOyB9XG5cblx0dmFyIHJldCA9IGNyZWF0ZU5vdGVIZWFkKGFic0VsZW0sIG5vdGUsIHsgdmVydGljYWxQb3M6IDAgfSwgLy8gVGhpcyBpcyBqdXN0IHRlbXBvcmFyeTogd2UnbGwgb2Zmc2V0IHRoZSB2ZXJ0aWNhbCBwb3NpdGlvbmluZyB3aGVuIHdlIGdldCB0aGUgYWN0dWFsIHZlcnRpY2FsIHNwb3QuXG5cdFx0eyBkaXI6IFwidXBcIiwgZmxhZzogZmxhZywgZG90OiBkb3QsIHNjYWxlOiB0ZW1wb3NjYWxlIH0pO1xuXHR2YXIgdGVtcG9Ob3RlID0gcmV0Lm5vdGVoZWFkO1xuXHRhYnNFbGVtLmFkZEhlYWQodGVtcG9Ob3RlKTtcblx0dmFyIHN0ZW07XG5cdGlmIChub3RlICE9PSBcIm5vdGVoZWFkcy53aG9sZVwiICYmIG5vdGUgIT09IFwibm90ZWhlYWRzLmRibFwiKSB7XG5cdFx0dmFyIHAxID0gMSAvIDMgKiB0ZW1wb3NjYWxlO1xuXHRcdHZhciBwMiA9IDUgKiB0ZW1wb3NjYWxlO1xuXHRcdHZhciBkeCA9IHRlbXBvTm90ZS5keCArIHRlbXBvTm90ZS53O1xuXHRcdHZhciB3aWR0aCA9IC0wLjY7XG5cdFx0c3RlbSA9IG5ldyBSZWxhdGl2ZUVsZW1lbnQobnVsbCwgZHgsIDAsIHAxLCB7IFwidHlwZVwiOiBcInN0ZW1cIiwgXCJwaXRjaDJcIjogcDIsIGxpbmV3aWR0aDogd2lkdGggfSk7XG5cdFx0YWJzRWxlbS5hZGRSaWdodChzdGVtKTtcblx0fVxuXHRyZXR1cm4gYWJzRWxlbTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gVGVtcG9FbGVtZW50O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/elements/tempo-element.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/elements/tie-element.js":
/*!***********************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/elements/tie-element.js ***!
  \***********************************************************************/
/***/ ((module) => {

eval("//    abc_tie_element.js: Definition of the TieElement class.\n\nvar TieElem = function TieElem(options) {\n\tthis.type = \"TieElem\";\n\t//\tconsole.log(\"constructor\", options.anchor1 ? options.anchor1.pitch : \"N/A\", options.anchor2 ? options.anchor2.pitch : \"N/A\", options.isTie, options.isGrace);\n\tthis.anchor1 = options.anchor1; // must have a .x and a .pitch, and a .parent property or be null (means starts at the \"beginning\" of the line - after keysig)\n\tthis.anchor2 = options.anchor2; // must have a .x and a .pitch property or be null (means ends at the end of the line)\n\tif (options.isGrace)\n\t\tthis.isGrace = true;\n\tif (options.fixedY)\n\t\tthis.fixedY = true;\n\tif (options.stemDir)\n\t\tthis.stemDir = options.stemDir;\n\tif (options.voiceNumber !== undefined)\n\t\tthis.voiceNumber = options.voiceNumber;\n\tif (options.style !== undefined)\n\t\tthis.dotted = true;\n\tthis.internalNotes = [];\n};\n\nTieElem.prototype.addInternalNote = function (note) {\n\tthis.internalNotes.push(note);\n};\n\nTieElem.prototype.setEndAnchor = function (anchor2) {\n\t//\tconsole.log(\"end\", this.anchor1 ? this.anchor1.pitch : \"N/A\", anchor2 ? anchor2.pitch : \"N/A\", this.isTie, this.isGrace);\n\tthis.anchor2 = anchor2; // must have a .x and a .pitch property or be null (means ends at the end of the line)\n\n\t// we don't really have enough info to know what the vertical extent is yet and we won't until drawing. This will just give it enough\n\t// room on either side (we don't even know if the slur will be above yet). We need to set this so that we can make sure the voice has\n\t// at least enough room that the line doesn't get cut off if the tie or slur is the lowest thing.\n\tif (this.anchor1) {\n\t\tthis.top = Math.max(this.anchor1.pitch, this.anchor2.pitch) + 4\n\t\tthis.bottom = Math.min(this.anchor1.pitch, this.anchor2.pitch) - 4\n\t} else {\n\t\tthis.top = this.anchor2.pitch + 4\n\t\tthis.bottom = this.anchor2.pitch - 4\n\t}\n};\n\n// If we encounter a repeat sign, then we don't want to extend either a tie or a slur past it, so these are called to be a limit.\nTieElem.prototype.setStartX = function (startLimitElem) {\n\tthis.startLimitX = startLimitElem;\n};\n\nTieElem.prototype.setEndX = function (endLimitElem) {\n\tthis.endLimitX = endLimitElem;\n};\n\nTieElem.prototype.setHint = function () {\n\tthis.hint = true;\n};\n\nTieElem.prototype.calcTieDirection = function () {\n\t// The rules:\n\t// 1) If it is in a grace note group, then the direction is always BELOW.\n\t// 2) If it is in a single voice, then the direction is always OPPOSITE of the stem (or where the stem would have been in the case of whole notes.)\n\t// 3) If the stem direction is forced (probably because there are two voices on the same line), then the direction is the SAME as the stem direction.\n\n\tif (this.isGrace)\n\t\tthis.above = false;\n\telse if (this.voiceNumber === 0)\n\t\tthis.above = true;\n\telse if (this.voiceNumber > 0)\n\t\tthis.above = false;\n\telse {\n\t\tvar referencePitch;\n\t\tif (this.anchor1)\n\t\t\treferencePitch = this.anchor1.pitch;\n\t\telse if (this.anchor2)\n\t\t\treferencePitch = this.anchor2.pitch;\n\t\telse\n\t\t\treferencePitch = 14; // TODO-PER: this can't really happen normally. This would imply that a tie crossed over three lines, something like \"C-\\nz\\nC\"\n\t\t// Put the arc in the opposite direction of the stem. That isn't always the pitch if one or both of the notes are beamed with something that affects its stem.\n\t\tif ((this.anchor1 && this.anchor1.stemDir === 'down') && (this.anchor2 && this.anchor2.stemDir === \"down\"))\n\t\t\tthis.above = true;\n\t\telse if ((this.anchor1 && this.anchor1.stemDir === 'up') && (this.anchor2 && this.anchor2.stemDir === \"up\"))\n\t\t\tthis.above = false;\n\t\telse if (this.anchor1 && this.anchor2)\n\t\t\tthis.above = referencePitch >= 6;\n\t\telse if (this.anchor1)\n\t\t\tthis.above = this.anchor1.stemDir === \"down\";\n\t\telse if (this.anchor2)\n\t\t\tthis.above = this.anchor2.stemDir === \"down\";\n\t\telse\n\t\t\tthis.above = referencePitch >= 6;\n\t}\n};\n\n// From \"standard music notation practice\" by Music Publishers’ Association:\n// 1) Slurs are placed under the note heads if all stems go up.\n// 2) Slurs are placed over the note heads if all stems go down.\n// 3) If there are both up stems and down stems, prefer placing the slur over.\n// 4) When the staff has opposite stemmed voices, all slurs should be on the stemmed side.\n\nTieElem.prototype.calcSlurDirection = function () {\n\tif (this.isGrace)\n\t\tthis.above = false;\n\telse if (this.voiceNumber === 0)\n\t\tthis.above = true;\n\telse if (this.voiceNumber > 0)\n\t\tthis.above = false;\n\telse {\n\t\tvar hasDownStem = false;\n\t\tif (this.anchor1 && this.anchor1.stemDir === \"down\")\n\t\t\thasDownStem = true;\n\t\tif (this.anchor2 && this.anchor2.stemDir === \"down\")\n\t\t\thasDownStem = true;\n\t\tfor (var i = 0; i < this.internalNotes.length; i++) {\n\t\t\tvar n = this.internalNotes[i];\n\t\t\tif (n.stemDir === \"down\")\n\t\t\t\thasDownStem = true;\n\t\t}\n\t\tthis.above = hasDownStem;\n\t}\n};\n\nTieElem.prototype.calcX = function (lineStartX, lineEndX) {\n\tif (this.anchor1) {\n\t\tthis.startX = this.anchor1.x; // The normal case where there is a starting element to attach to.\n\t\tif (this.anchor1.scalex < 1) // this is a grace note - don't offset the tie as much.\n\t\t\tthis.startX -= 3;\n\t} else if (this.startLimitX)\n\t\tthis.startX = this.startLimitX.x + this.startLimitX.w; // if there is no start element, but there is a repeat mark before the start of the line.\n\telse {\n\t\tif (this.anchor2)\n\t\t\tthis.startX = this.anchor2.x - 20; // There is no element and no repeat mark: make a small arc\n\t\telse\n\t\t\tthis.startX = lineStartX; // Don't have any guidance, so extend to beginning of line\n\t}\n\tif (!this.anchor1 && this.dotted)\n\t\tthis.startX -= 3; // The arc needs to be long enough to tell that it is dotted.\n\n\tif (this.anchor2)\n\t\tthis.endX = this.anchor2.x; // The normal case where there is a starting element to attach to.\n\telse if (this.endLimitX)\n\t\tthis.endX = this.endLimitX.x; // if there is no start element, but there is a repeat mark before the start of the line.\n\telse\n\t\tthis.endX = lineEndX; // There is no element and no repeat mark: extend to the beginning of the line.\n};\n\nTieElem.prototype.calcTieY = function () {\n\t// If the tie comes from another line, then one or both anchors will be missing.\n\tif (this.anchor1)\n\t\tthis.startY = this.anchor1.pitch;\n\telse if (this.anchor2)\n\t\tthis.startY = this.anchor2.pitch;\n\telse\n\t\tthis.startY = this.above ? 14 : 0;\n\n\tif (this.anchor2)\n\t\tthis.endY = this.anchor2.pitch;\n\telse if (this.anchor1)\n\t\tthis.endY = this.anchor1.pitch;\n\telse\n\t\tthis.endY = this.above ? 14 : 0;\n};\n\n// From \"standard music notation practice\" by Music Publishers’ Association:\n// 1) If the anchor note is down stem, the slur points to the note head.\n// 2) If the anchor note is up stem, and the slur is over, then point to middle of stem.\n\nTieElem.prototype.calcSlurY = function () {\n\tif (this.anchor1 && this.anchor2) {\n\t\tif (this.above && this.anchor1.stemDir === \"up\" && !this.fixedY) {\n\t\t\tthis.startY = (this.anchor1.highestVert + this.anchor1.pitch) / 2;\n\t\t\tthis.startX += this.anchor1.w / 2; // When going to the middle of the stem, bump the line to the right a little bit to make it look right.\n\t\t} else\n\t\t\tthis.startY = this.anchor1.pitch;\n\n\t\t// If the closing note has an up stem, and it is beamed, and it isn't the first note in the beam, then the beam will get in the way.\n\t\tvar beamInterferes = this.anchor2.parent.beam && this.anchor2.parent.beam.stemsUp && this.anchor2.parent.beam.elems[0] !== this.anchor2.parent;\n\t\tvar midPoint = (this.anchor2.highestVert + this.anchor2.pitch) / 2;\n\t\tif (this.above && this.anchor2.stemDir === \"up\" && !this.fixedY && !beamInterferes && (midPoint < this.startY)) {\n\t\t\tthis.endY = midPoint;\n\t\t\tthis.endX += Math.round(this.anchor2.w / 2); // When going to the middle of the stem, bump the line to the right a little bit to make it look right.\n\t\t} else\n\t\t\tthis.endY = this.above && beamInterferes ? this.anchor2.highestVert : this.anchor2.pitch;\n\n\t\tif (this.anchor1.scalex === 1) { // Need a way to tell if this is a grace note - if so then keep the slur as close as possible. TODO-PER-HACK: this should be more declaratively determined.\n\t\t\tvar hasBeam1 = !!this.anchor1.parent.beam\n\t\t\tvar hasBeam2 = !!this.anchor2.parent.beam\n\t\t\tif (hasBeam1) {\n\t\t\t\tvar isLastInBeam = this.anchor1.parent === this.anchor1.parent.beam.elems[this.anchor1.parent.beam.elems.length-1]\n\t\t\t\tif (!isLastInBeam) {\n\t\t\t\t\t\tif (this.above)\n\t\t\t\t\t\tthis.startY = this.anchor1.parent.fixed.t\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.startY = this.anchor1.parent.fixed.b\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasBeam2) {\n\t\t\t\tvar isFirstInBeam = this.anchor2.parent === this.anchor2.parent.beam.elems[0]\n\t\t\t\tif (!isFirstInBeam) {\n\t\t\t\t\tif (this.above)\n\t\t\t\t\t\tthis.endY = this.anchor2.parent.fixed.t\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.endY = this.anchor2.parent.fixed.b\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (this.anchor1) {\n\t\tthis.startY = this.endY = this.anchor1.pitch;\n\t} else if (this.anchor2) {\n\t\tthis.startY = this.endY = this.anchor2.pitch;\n\t} else {\n\t\t// This is the case where the slur covers the entire line.\n\t\t// TODO-PER: figure out where the real top and bottom of the line are.\n\t\tthis.startY = this.above ? 14 : 0;\n\t\tthis.endY = this.above ? 14 : 0;\n\t}\n};\n\nTieElem.prototype.avoidCollisionAbove = function () {\n\t// Double check that an interior note in the slur isn't so high that it interferes.\n\tif (this.above) {\n\t\tvar maxInnerHeight = -50;\n\t\tfor (var i = 0; i < this.internalNotes.length; i++) {\n\t\t\tif (this.internalNotes[i].highestVert > maxInnerHeight)\n\t\t\t\tmaxInnerHeight = this.internalNotes[i].highestVert;\n\t\t}\n\t\tif (maxInnerHeight > this.startY && maxInnerHeight > this.endY)\n\t\t\tthis.startY = this.endY = maxInnerHeight - 1;\n\t}\n};\n\nTieElem.prototype.getYBounds = function () {\n\tvar lineStartX = 10 // TODO-PER: I'm not sure where to get this number from but it probably doesn't matter much\n\tvar lineEndX = 1000 // TODO-PER: I'm not sure where to get this number from but it probably doesn't matter much\n\tif (this.isTie) {\n\t\tthis.calcTieDirection();\n\t\tthis.calcX(lineStartX, lineEndX);\n\t\tthis.calcTieY();\n\n\t} else {\n\t\tthis.calcSlurDirection();\n\t\tthis.calcX(lineStartX, lineEndX);\n\t\tthis.calcSlurY();\n\t}\n\tvar top;\n\tvar bottom;\n\t// TODO-PER: It's hard to tell how far the arc is, so I'm just using 3 as the max\n\tif (this.above) {\n\t\tbottom = Math.min(this.startY, this.endY)\n\t\ttop = bottom + 3\n\t} else {\n\t\ttop = Math.min(this.startY, this.endY)\n\t\tbottom = top - 3\n\t}\n\treturn [ top, bottom ]\n};\n\nmodule.exports = TieElem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/elements/tie-element.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/elements/top-text.js":
/*!********************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/elements/top-text.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const addTextIf = __webpack_require__(/*! ../add-text-if */ \"(ssr)/./node_modules/abcjs/src/write/creation/add-text-if.js\");\nconst richText = __webpack_require__(/*! ./rich-text */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/rich-text.js\");\n\nfunction TopText(metaText, metaTextInfo, formatting, lines, width, isPrint, paddingLeft, spacing, shouldAddClasses, getTextSize) {\n\tthis.rows = [];\n\n\tif (metaText.header && isPrint) {\n\t\t// Note: whether there is a header or not doesn't change any other positioning, so this doesn't change the Y-coordinate.\n\t\t// This text goes above the margin, so we'll temporarily move up.\n\t\tvar headerTextHeight = getTextSize.calc(\"X\", \"headerfont\", 'abcjs-header abcjs-meta-top').height;\n\t\taddTextIf(this.rows, { marginLeft: paddingLeft, text: metaText.header.left, font: 'headerfont', klass: 'header meta-top', marginTop: -headerTextHeight, info: metaTextInfo.header, name: \"header\" }, getTextSize);\n\t\taddTextIf(this.rows, { marginLeft: paddingLeft + width / 2, text: metaText.header.center, font: 'headerfont', klass: 'header meta-top', marginTop: -headerTextHeight, anchor: 'middle', info: metaTextInfo.header, name: \"header\" }, getTextSize);\n\t\taddTextIf(this.rows, { marginLeft: paddingLeft + width, text: metaText.header.right, font: 'headerfont', klass: 'header meta-top', marginTop: -headerTextHeight, anchor: 'end', info: metaTextInfo.header, name: \"header\" }, getTextSize);\n\n\t\t//\t\tTopText.prototype.addTextIf = function (marginLeft, text, font, klass, marginTop, marginBottom, anchor, getTextSize, absElemType, noMove) {\n\t}\n\tif (isPrint)\n\t\tthis.rows.push({ move: spacing.top });\n\tvar tAnchor = formatting.titleleft ? 'start' : 'middle';\n\tvar tLeft = formatting.titleleft ? paddingLeft : paddingLeft + width / 2;\n\tif (metaText.title) {\n\t\tvar klass = shouldAddClasses ? 'abcjs-title' : ''\n\t\trichText(this.rows, metaText.title, \"titlefont\", klass, 'title', tLeft, {marginTop: spacing.title, anchor: tAnchor, absElemType: \"title\", info: metaTextInfo.title},  getTextSize)\n\t}\n\tif (lines.length) {\n\t\tvar index = 0;\n\t\twhile (index < lines.length && lines[index].subtitle) {\n\t\t\tvar klass = shouldAddClasses ? 'abcjs-text abcjs-subtitle' : ''\n\t\t\trichText(this.rows, lines[index].subtitle.text, \"subtitlefont\", klass, 'subtitle', tLeft, {marginTop: spacing.subtitle, anchor: tAnchor, absElemType: \"subtitle\", info: lines[index].subtitle},  getTextSize)\n\t\t\tindex++;\n\t\t}\n\t}\n\n\tif (metaText.rhythm || metaText.origin || metaText.composer) {\n\t\tthis.rows.push({ move: spacing.composer });\n\t\tif (metaText.rhythm && metaText.rhythm.length > 0) {\n\t\t\tvar noMove = !!(metaText.composer || metaText.origin);\n\t\t\tvar klass = shouldAddClasses ? 'abcjs-rhythm' : ''\n\t\t\taddTextIf(this.rows, { marginLeft: paddingLeft, text: metaText.rhythm, font: 'infofont', klass: klass, absElemType: \"rhythm\", noMove: noMove, info: metaTextInfo.rhythm, name: \"rhythm\" }, getTextSize);\n\t\t}\n\t\tvar hasSimpleComposerLine = true\n\t\tif (metaText.composer && typeof metaText.composer !== 'string')\n\t\t\thasSimpleComposerLine = false\n\t\tif (metaText.origin && typeof metaText.origin !== 'string')\n\t\t\thasSimpleComposerLine = false\n\t\t\t\n\t\tvar composerLine = metaText.composer ? metaText.composer : '';\n\t\tif (metaText.origin) {\n\t\t\tif (typeof composerLine === 'string' && typeof metaText.origin === 'string')\n\t\t\t\tcomposerLine += ' (' + metaText.origin + ')';\n\t\t\telse if (typeof composerLine === 'string' && typeof metaText.origin !== 'string') {\n\t\t\t\tcomposerLine = [{text:composerLine}]\n\t\t\t\tcomposerLine.push({text:\" (\"})\n\t\t\t\tcomposerLine = composerLine.concat(metaText.origin)\n\t\t\t\tcomposerLine.push({text:\")\"})\n\t\t\t} else {\n\t\t\t\tcomposerLine.push({text:\" (\"})\n\t\t\t\tcomposerLine = composerLine.concat(metaText.origin)\n\t\t\t\tcomposerLine.push({text:\")\"})\n\t\t\t}\n\t\t}\n\t\tif (composerLine) {\n\t\t\tvar klass = shouldAddClasses ? 'abcjs-composer' : ''\n\t\t\trichText(this.rows, composerLine, 'composerfont', klass, \"composer\", paddingLeft+width, {anchor: \"end\", absElemType: \"composer\", info: metaTextInfo.composer, ingroup: true}, getTextSize)\n\t\t}\n\t}\n\n\tif (metaText.author && metaText.author.length > 0) {\n\t\tvar klass = shouldAddClasses ? 'abcjs-author' : ''\n\t\trichText(this.rows, metaText.author, 'composerfont', klass, \"author\", paddingLeft+width, {anchor: \"end\", absElemType: \"author\", info: metaTextInfo.author}, getTextSize)\n\t}\n\n\tif (metaText.partOrder && metaText.partOrder.length > 0) {\n\t\tvar klass = shouldAddClasses ? 'abcjs-part-order' : ''\n\t\trichText(this.rows, metaText.partOrder, 'partsfont', klass, \"part-order\", paddingLeft, {absElemType: \"partOrder\", info: metaTextInfo.partOrder, anchor: 'start'}, getTextSize)\n\n\t}\n}\n\nmodule.exports = TopText;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL3RvcC10ZXh0LmpzIiwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQixtQkFBTyxDQUFDLG9GQUFnQjtBQUMxQyxpQkFBaUIsbUJBQU8sQ0FBQyx3RkFBYTs7QUFFdEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qiw0S0FBNEs7QUFDck0seUJBQXlCLDRNQUE0TTtBQUNyTyx5QkFBeUIsb01BQW9NOztBQUU3TjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsbUJBQW1CO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkVBQTJFLDBGQUEwRjtBQUNySztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEZBQThGLG1HQUFtRztBQUNqTTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQkFBbUIsd0JBQXdCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixrS0FBa0s7QUFDNUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGtCQUFrQjtBQUN2Qyx1QkFBdUIsVUFBVTtBQUNqQztBQUNBLHVCQUF1QixTQUFTO0FBQ2hDLEtBQUs7QUFDTCx1QkFBdUIsVUFBVTtBQUNqQztBQUNBLHVCQUF1QixTQUFTO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEZBQTRGLG1GQUFtRjtBQUMvSztBQUNBOztBQUVBO0FBQ0E7QUFDQSw0RkFBNEYsZ0VBQWdFO0FBQzVKOztBQUVBO0FBQ0E7QUFDQSwwRkFBMEYsd0VBQXdFOztBQUVsSztBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL3RvcC10ZXh0LmpzP2E5MjYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYWRkVGV4dElmID0gcmVxdWlyZShcIi4uL2FkZC10ZXh0LWlmXCIpO1xuY29uc3QgcmljaFRleHQgPSByZXF1aXJlKFwiLi9yaWNoLXRleHRcIik7XG5cbmZ1bmN0aW9uIFRvcFRleHQobWV0YVRleHQsIG1ldGFUZXh0SW5mbywgZm9ybWF0dGluZywgbGluZXMsIHdpZHRoLCBpc1ByaW50LCBwYWRkaW5nTGVmdCwgc3BhY2luZywgc2hvdWxkQWRkQ2xhc3NlcywgZ2V0VGV4dFNpemUpIHtcblx0dGhpcy5yb3dzID0gW107XG5cblx0aWYgKG1ldGFUZXh0LmhlYWRlciAmJiBpc1ByaW50KSB7XG5cdFx0Ly8gTm90ZTogd2hldGhlciB0aGVyZSBpcyBhIGhlYWRlciBvciBub3QgZG9lc24ndCBjaGFuZ2UgYW55IG90aGVyIHBvc2l0aW9uaW5nLCBzbyB0aGlzIGRvZXNuJ3QgY2hhbmdlIHRoZSBZLWNvb3JkaW5hdGUuXG5cdFx0Ly8gVGhpcyB0ZXh0IGdvZXMgYWJvdmUgdGhlIG1hcmdpbiwgc28gd2UnbGwgdGVtcG9yYXJpbHkgbW92ZSB1cC5cblx0XHR2YXIgaGVhZGVyVGV4dEhlaWdodCA9IGdldFRleHRTaXplLmNhbGMoXCJYXCIsIFwiaGVhZGVyZm9udFwiLCAnYWJjanMtaGVhZGVyIGFiY2pzLW1ldGEtdG9wJykuaGVpZ2h0O1xuXHRcdGFkZFRleHRJZih0aGlzLnJvd3MsIHsgbWFyZ2luTGVmdDogcGFkZGluZ0xlZnQsIHRleHQ6IG1ldGFUZXh0LmhlYWRlci5sZWZ0LCBmb250OiAnaGVhZGVyZm9udCcsIGtsYXNzOiAnaGVhZGVyIG1ldGEtdG9wJywgbWFyZ2luVG9wOiAtaGVhZGVyVGV4dEhlaWdodCwgaW5mbzogbWV0YVRleHRJbmZvLmhlYWRlciwgbmFtZTogXCJoZWFkZXJcIiB9LCBnZXRUZXh0U2l6ZSk7XG5cdFx0YWRkVGV4dElmKHRoaXMucm93cywgeyBtYXJnaW5MZWZ0OiBwYWRkaW5nTGVmdCArIHdpZHRoIC8gMiwgdGV4dDogbWV0YVRleHQuaGVhZGVyLmNlbnRlciwgZm9udDogJ2hlYWRlcmZvbnQnLCBrbGFzczogJ2hlYWRlciBtZXRhLXRvcCcsIG1hcmdpblRvcDogLWhlYWRlclRleHRIZWlnaHQsIGFuY2hvcjogJ21pZGRsZScsIGluZm86IG1ldGFUZXh0SW5mby5oZWFkZXIsIG5hbWU6IFwiaGVhZGVyXCIgfSwgZ2V0VGV4dFNpemUpO1xuXHRcdGFkZFRleHRJZih0aGlzLnJvd3MsIHsgbWFyZ2luTGVmdDogcGFkZGluZ0xlZnQgKyB3aWR0aCwgdGV4dDogbWV0YVRleHQuaGVhZGVyLnJpZ2h0LCBmb250OiAnaGVhZGVyZm9udCcsIGtsYXNzOiAnaGVhZGVyIG1ldGEtdG9wJywgbWFyZ2luVG9wOiAtaGVhZGVyVGV4dEhlaWdodCwgYW5jaG9yOiAnZW5kJywgaW5mbzogbWV0YVRleHRJbmZvLmhlYWRlciwgbmFtZTogXCJoZWFkZXJcIiB9LCBnZXRUZXh0U2l6ZSk7XG5cblx0XHQvL1x0XHRUb3BUZXh0LnByb3RvdHlwZS5hZGRUZXh0SWYgPSBmdW5jdGlvbiAobWFyZ2luTGVmdCwgdGV4dCwgZm9udCwga2xhc3MsIG1hcmdpblRvcCwgbWFyZ2luQm90dG9tLCBhbmNob3IsIGdldFRleHRTaXplLCBhYnNFbGVtVHlwZSwgbm9Nb3ZlKSB7XG5cdH1cblx0aWYgKGlzUHJpbnQpXG5cdFx0dGhpcy5yb3dzLnB1c2goeyBtb3ZlOiBzcGFjaW5nLnRvcCB9KTtcblx0dmFyIHRBbmNob3IgPSBmb3JtYXR0aW5nLnRpdGxlbGVmdCA/ICdzdGFydCcgOiAnbWlkZGxlJztcblx0dmFyIHRMZWZ0ID0gZm9ybWF0dGluZy50aXRsZWxlZnQgPyBwYWRkaW5nTGVmdCA6IHBhZGRpbmdMZWZ0ICsgd2lkdGggLyAyO1xuXHRpZiAobWV0YVRleHQudGl0bGUpIHtcblx0XHR2YXIga2xhc3MgPSBzaG91bGRBZGRDbGFzc2VzID8gJ2FiY2pzLXRpdGxlJyA6ICcnXG5cdFx0cmljaFRleHQodGhpcy5yb3dzLCBtZXRhVGV4dC50aXRsZSwgXCJ0aXRsZWZvbnRcIiwga2xhc3MsICd0aXRsZScsIHRMZWZ0LCB7bWFyZ2luVG9wOiBzcGFjaW5nLnRpdGxlLCBhbmNob3I6IHRBbmNob3IsIGFic0VsZW1UeXBlOiBcInRpdGxlXCIsIGluZm86IG1ldGFUZXh0SW5mby50aXRsZX0sICBnZXRUZXh0U2l6ZSlcblx0fVxuXHRpZiAobGluZXMubGVuZ3RoKSB7XG5cdFx0dmFyIGluZGV4ID0gMDtcblx0XHR3aGlsZSAoaW5kZXggPCBsaW5lcy5sZW5ndGggJiYgbGluZXNbaW5kZXhdLnN1YnRpdGxlKSB7XG5cdFx0XHR2YXIga2xhc3MgPSBzaG91bGRBZGRDbGFzc2VzID8gJ2FiY2pzLXRleHQgYWJjanMtc3VidGl0bGUnIDogJydcblx0XHRcdHJpY2hUZXh0KHRoaXMucm93cywgbGluZXNbaW5kZXhdLnN1YnRpdGxlLnRleHQsIFwic3VidGl0bGVmb250XCIsIGtsYXNzLCAnc3VidGl0bGUnLCB0TGVmdCwge21hcmdpblRvcDogc3BhY2luZy5zdWJ0aXRsZSwgYW5jaG9yOiB0QW5jaG9yLCBhYnNFbGVtVHlwZTogXCJzdWJ0aXRsZVwiLCBpbmZvOiBsaW5lc1tpbmRleF0uc3VidGl0bGV9LCAgZ2V0VGV4dFNpemUpXG5cdFx0XHRpbmRleCsrO1xuXHRcdH1cblx0fVxuXG5cdGlmIChtZXRhVGV4dC5yaHl0aG0gfHwgbWV0YVRleHQub3JpZ2luIHx8IG1ldGFUZXh0LmNvbXBvc2VyKSB7XG5cdFx0dGhpcy5yb3dzLnB1c2goeyBtb3ZlOiBzcGFjaW5nLmNvbXBvc2VyIH0pO1xuXHRcdGlmIChtZXRhVGV4dC5yaHl0aG0gJiYgbWV0YVRleHQucmh5dGhtLmxlbmd0aCA+IDApIHtcblx0XHRcdHZhciBub01vdmUgPSAhIShtZXRhVGV4dC5jb21wb3NlciB8fCBtZXRhVGV4dC5vcmlnaW4pO1xuXHRcdFx0dmFyIGtsYXNzID0gc2hvdWxkQWRkQ2xhc3NlcyA/ICdhYmNqcy1yaHl0aG0nIDogJydcblx0XHRcdGFkZFRleHRJZih0aGlzLnJvd3MsIHsgbWFyZ2luTGVmdDogcGFkZGluZ0xlZnQsIHRleHQ6IG1ldGFUZXh0LnJoeXRobSwgZm9udDogJ2luZm9mb250Jywga2xhc3M6IGtsYXNzLCBhYnNFbGVtVHlwZTogXCJyaHl0aG1cIiwgbm9Nb3ZlOiBub01vdmUsIGluZm86IG1ldGFUZXh0SW5mby5yaHl0aG0sIG5hbWU6IFwicmh5dGhtXCIgfSwgZ2V0VGV4dFNpemUpO1xuXHRcdH1cblx0XHR2YXIgaGFzU2ltcGxlQ29tcG9zZXJMaW5lID0gdHJ1ZVxuXHRcdGlmIChtZXRhVGV4dC5jb21wb3NlciAmJiB0eXBlb2YgbWV0YVRleHQuY29tcG9zZXIgIT09ICdzdHJpbmcnKVxuXHRcdFx0aGFzU2ltcGxlQ29tcG9zZXJMaW5lID0gZmFsc2Vcblx0XHRpZiAobWV0YVRleHQub3JpZ2luICYmIHR5cGVvZiBtZXRhVGV4dC5vcmlnaW4gIT09ICdzdHJpbmcnKVxuXHRcdFx0aGFzU2ltcGxlQ29tcG9zZXJMaW5lID0gZmFsc2Vcblx0XHRcdFxuXHRcdHZhciBjb21wb3NlckxpbmUgPSBtZXRhVGV4dC5jb21wb3NlciA/IG1ldGFUZXh0LmNvbXBvc2VyIDogJyc7XG5cdFx0aWYgKG1ldGFUZXh0Lm9yaWdpbikge1xuXHRcdFx0aWYgKHR5cGVvZiBjb21wb3NlckxpbmUgPT09ICdzdHJpbmcnICYmIHR5cGVvZiBtZXRhVGV4dC5vcmlnaW4gPT09ICdzdHJpbmcnKVxuXHRcdFx0XHRjb21wb3NlckxpbmUgKz0gJyAoJyArIG1ldGFUZXh0Lm9yaWdpbiArICcpJztcblx0XHRcdGVsc2UgaWYgKHR5cGVvZiBjb21wb3NlckxpbmUgPT09ICdzdHJpbmcnICYmIHR5cGVvZiBtZXRhVGV4dC5vcmlnaW4gIT09ICdzdHJpbmcnKSB7XG5cdFx0XHRcdGNvbXBvc2VyTGluZSA9IFt7dGV4dDpjb21wb3NlckxpbmV9XVxuXHRcdFx0XHRjb21wb3NlckxpbmUucHVzaCh7dGV4dDpcIiAoXCJ9KVxuXHRcdFx0XHRjb21wb3NlckxpbmUgPSBjb21wb3NlckxpbmUuY29uY2F0KG1ldGFUZXh0Lm9yaWdpbilcblx0XHRcdFx0Y29tcG9zZXJMaW5lLnB1c2goe3RleHQ6XCIpXCJ9KVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Y29tcG9zZXJMaW5lLnB1c2goe3RleHQ6XCIgKFwifSlcblx0XHRcdFx0Y29tcG9zZXJMaW5lID0gY29tcG9zZXJMaW5lLmNvbmNhdChtZXRhVGV4dC5vcmlnaW4pXG5cdFx0XHRcdGNvbXBvc2VyTGluZS5wdXNoKHt0ZXh0OlwiKVwifSlcblx0XHRcdH1cblx0XHR9XG5cdFx0aWYgKGNvbXBvc2VyTGluZSkge1xuXHRcdFx0dmFyIGtsYXNzID0gc2hvdWxkQWRkQ2xhc3NlcyA/ICdhYmNqcy1jb21wb3NlcicgOiAnJ1xuXHRcdFx0cmljaFRleHQodGhpcy5yb3dzLCBjb21wb3NlckxpbmUsICdjb21wb3NlcmZvbnQnLCBrbGFzcywgXCJjb21wb3NlclwiLCBwYWRkaW5nTGVmdCt3aWR0aCwge2FuY2hvcjogXCJlbmRcIiwgYWJzRWxlbVR5cGU6IFwiY29tcG9zZXJcIiwgaW5mbzogbWV0YVRleHRJbmZvLmNvbXBvc2VyLCBpbmdyb3VwOiB0cnVlfSwgZ2V0VGV4dFNpemUpXG5cdFx0fVxuXHR9XG5cblx0aWYgKG1ldGFUZXh0LmF1dGhvciAmJiBtZXRhVGV4dC5hdXRob3IubGVuZ3RoID4gMCkge1xuXHRcdHZhciBrbGFzcyA9IHNob3VsZEFkZENsYXNzZXMgPyAnYWJjanMtYXV0aG9yJyA6ICcnXG5cdFx0cmljaFRleHQodGhpcy5yb3dzLCBtZXRhVGV4dC5hdXRob3IsICdjb21wb3NlcmZvbnQnLCBrbGFzcywgXCJhdXRob3JcIiwgcGFkZGluZ0xlZnQrd2lkdGgsIHthbmNob3I6IFwiZW5kXCIsIGFic0VsZW1UeXBlOiBcImF1dGhvclwiLCBpbmZvOiBtZXRhVGV4dEluZm8uYXV0aG9yfSwgZ2V0VGV4dFNpemUpXG5cdH1cblxuXHRpZiAobWV0YVRleHQucGFydE9yZGVyICYmIG1ldGFUZXh0LnBhcnRPcmRlci5sZW5ndGggPiAwKSB7XG5cdFx0dmFyIGtsYXNzID0gc2hvdWxkQWRkQ2xhc3NlcyA/ICdhYmNqcy1wYXJ0LW9yZGVyJyA6ICcnXG5cdFx0cmljaFRleHQodGhpcy5yb3dzLCBtZXRhVGV4dC5wYXJ0T3JkZXIsICdwYXJ0c2ZvbnQnLCBrbGFzcywgXCJwYXJ0LW9yZGVyXCIsIHBhZGRpbmdMZWZ0LCB7YWJzRWxlbVR5cGU6IFwicGFydE9yZGVyXCIsIGluZm86IG1ldGFUZXh0SW5mby5wYXJ0T3JkZXIsIGFuY2hvcjogJ3N0YXJ0J30sIGdldFRleHRTaXplKVxuXG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBUb3BUZXh0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/elements/top-text.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/elements/triplet-element.js":
/*!***************************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/elements/triplet-element.js ***!
  \***************************************************************************/
/***/ ((module) => {

eval("//    abc_triplet_element.js: Definition of the TripletElem class.\n\nvar TripletElem = function TripletElem(number, anchor1, options) {\n\tthis.type = \"TripletElem\";\n\tthis.anchor1 = anchor1; // must have a .x and a .parent property or be null (means starts at the \"beginning\" of the line - after key signature)\n\tthis.number = number;\n\tthis.durationClass = ('d' + (Math.round(anchor1.parent.durationClass * 1000) / 1000)).replace(/\\./, '-');\n\tthis.middleElems = []; // This is to calculate the highest interior pitch. It is used to make sure that the drawn bracket never crosses a really high middle note.\n\tthis.flatBeams = options.flatBeams;\n};\n\nTripletElem.prototype.isClosed = function () {\n\treturn !!this.anchor2;\n};\n\nTripletElem.prototype.middleNote = function (elem) {\n\tthis.middleElems.push(elem);\n};\n\nTripletElem.prototype.setCloseAnchor = function (anchor2) {\n\tthis.anchor2 = anchor2;\n\t// TODO-PER: This used to be just for beamed triplets but it looks like bracketed triplets need extra room, too. The only one that doesn't is stem down and beamed\n\t//if (this.anchor1.parent.beam)\n\tif (!this.anchor1.parent.beam || this.anchor1.stemDir === 'up')\n\t\tthis.endingHeightAbove = 4;\n};\n\nmodule.exports = TripletElem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL3RyaXBsZXQtZWxlbWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL3RyaXBsZXQtZWxlbWVudC5qcz83MmQ5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vICAgIGFiY190cmlwbGV0X2VsZW1lbnQuanM6IERlZmluaXRpb24gb2YgdGhlIFRyaXBsZXRFbGVtIGNsYXNzLlxuXG52YXIgVHJpcGxldEVsZW0gPSBmdW5jdGlvbiBUcmlwbGV0RWxlbShudW1iZXIsIGFuY2hvcjEsIG9wdGlvbnMpIHtcblx0dGhpcy50eXBlID0gXCJUcmlwbGV0RWxlbVwiO1xuXHR0aGlzLmFuY2hvcjEgPSBhbmNob3IxOyAvLyBtdXN0IGhhdmUgYSAueCBhbmQgYSAucGFyZW50IHByb3BlcnR5IG9yIGJlIG51bGwgKG1lYW5zIHN0YXJ0cyBhdCB0aGUgXCJiZWdpbm5pbmdcIiBvZiB0aGUgbGluZSAtIGFmdGVyIGtleSBzaWduYXR1cmUpXG5cdHRoaXMubnVtYmVyID0gbnVtYmVyO1xuXHR0aGlzLmR1cmF0aW9uQ2xhc3MgPSAoJ2QnICsgKE1hdGgucm91bmQoYW5jaG9yMS5wYXJlbnQuZHVyYXRpb25DbGFzcyAqIDEwMDApIC8gMTAwMCkpLnJlcGxhY2UoL1xcLi8sICctJyk7XG5cdHRoaXMubWlkZGxlRWxlbXMgPSBbXTsgLy8gVGhpcyBpcyB0byBjYWxjdWxhdGUgdGhlIGhpZ2hlc3QgaW50ZXJpb3IgcGl0Y2guIEl0IGlzIHVzZWQgdG8gbWFrZSBzdXJlIHRoYXQgdGhlIGRyYXduIGJyYWNrZXQgbmV2ZXIgY3Jvc3NlcyBhIHJlYWxseSBoaWdoIG1pZGRsZSBub3RlLlxuXHR0aGlzLmZsYXRCZWFtcyA9IG9wdGlvbnMuZmxhdEJlYW1zO1xufTtcblxuVHJpcGxldEVsZW0ucHJvdG90eXBlLmlzQ2xvc2VkID0gZnVuY3Rpb24gKCkge1xuXHRyZXR1cm4gISF0aGlzLmFuY2hvcjI7XG59O1xuXG5UcmlwbGV0RWxlbS5wcm90b3R5cGUubWlkZGxlTm90ZSA9IGZ1bmN0aW9uIChlbGVtKSB7XG5cdHRoaXMubWlkZGxlRWxlbXMucHVzaChlbGVtKTtcbn07XG5cblRyaXBsZXRFbGVtLnByb3RvdHlwZS5zZXRDbG9zZUFuY2hvciA9IGZ1bmN0aW9uIChhbmNob3IyKSB7XG5cdHRoaXMuYW5jaG9yMiA9IGFuY2hvcjI7XG5cdC8vIFRPRE8tUEVSOiBUaGlzIHVzZWQgdG8gYmUganVzdCBmb3IgYmVhbWVkIHRyaXBsZXRzIGJ1dCBpdCBsb29rcyBsaWtlIGJyYWNrZXRlZCB0cmlwbGV0cyBuZWVkIGV4dHJhIHJvb20sIHRvby4gVGhlIG9ubHkgb25lIHRoYXQgZG9lc24ndCBpcyBzdGVtIGRvd24gYW5kIGJlYW1lZFxuXHQvL2lmICh0aGlzLmFuY2hvcjEucGFyZW50LmJlYW0pXG5cdGlmICghdGhpcy5hbmNob3IxLnBhcmVudC5iZWFtIHx8IHRoaXMuYW5jaG9yMS5zdGVtRGlyID09PSAndXAnKVxuXHRcdHRoaXMuZW5kaW5nSGVpZ2h0QWJvdmUgPSA0O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBUcmlwbGV0RWxlbTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/elements/triplet-element.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/elements/voice-element.js":
/*!*************************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/elements/voice-element.js ***!
  \*************************************************************************/
/***/ ((module) => {

eval("//    abc_voice_element.js: Definition of the VoiceElement class.\n\nvar VoiceElement = function VoiceElement(voicenumber, voicetotal) {\n\tthis.children = [];\n\tthis.beams = [];\n\tthis.otherchildren = []; // ties, slurs, triplets\n\tthis.w = 0;\n\tthis.duplicate = false;\n\tthis.voicenumber = voicenumber; //number of the voice on a given stave (not staffgroup)\n\tthis.voicetotal = voicetotal;\n\tthis.bottom = 7;\n\tthis.top = 7;\n\tthis.specialY = {\n\t\ttempoHeightAbove: 0,\n\t\tpartHeightAbove: 0,\n\t\tvolumeHeightAbove: 0,\n\t\tdynamicHeightAbove: 0,\n\t\tendingHeightAbove: 0,\n\t\tchordHeightAbove: 0,\n\t\tlyricHeightAbove: 0,\n\n\t\tlyricHeightBelow: 0,\n\t\tchordHeightBelow: 0,\n\t\tvolumeHeightBelow: 0,\n\t\tdynamicHeightBelow: 0\n\t};\n};\n\nVoiceElement.prototype.addChild = function (absElem) {\n\t// This is always passed an AbsoluteElement\n\tif (absElem.type === 'bar') {\n\t\tvar firstItem = true;\n\t\tfor (var i = 0; firstItem && i < this.children.length; i++) {\n\t\t\tif (this.children[i].type.indexOf(\"staff-extra\") < 0 && this.children[i].type !== \"tempo\")\n\t\t\t\tfirstItem = false;\n\t\t}\n\t\tif (!firstItem) {\n\t\t\tthis.beams.push(\"bar\");\n\t\t\tthis.otherchildren.push(\"bar\");\n\t\t}\n\t}\n\tthis.children[this.children.length] = absElem;\n\tthis.setRange(absElem);\n};\n\nVoiceElement.prototype.setLimit = function (member, child) {\n\t// Sometimes we get an absolute element in here and sometimes we get some type of relative element.\n\t// If there is a \"specialY\" element, then assume it is an absolute element. If that doesn't exist, look for the\n\t// same members at the top level, because that's where they are in relative elements.\n\tvar specialY = child.specialY;\n\tif (!specialY) specialY = child;\n\tif (!specialY[member]) return;\n\tif (!this.specialY[member])\n\t\tthis.specialY[member] = specialY[member];\n\telse\n\t\tthis.specialY[member] = Math.max(this.specialY[member], specialY[member]);\n};\n\nVoiceElement.prototype.adjustRange = function (child) {\n\tif (child.bottom !== undefined)\n\t\tthis.bottom = Math.min(this.bottom, child.bottom);\n\tif (child.top !== undefined)\n\t\tthis.top = Math.max(this.top, child.top);\n};\n\nVoiceElement.prototype.setRange = function (child) {\n\tthis.adjustRange(child);\n\tthis.setLimit('tempoHeightAbove', child);\n\tthis.setLimit('partHeightAbove', child);\n\tthis.setLimit('volumeHeightAbove', child);\n\tthis.setLimit('dynamicHeightAbove', child);\n\tthis.setLimit('endingHeightAbove', child);\n\tthis.setLimit('chordHeightAbove', child);\n\tthis.setLimit('lyricHeightAbove', child);\n\tthis.setLimit('lyricHeightBelow', child);\n\tthis.setLimit('chordHeightBelow', child);\n\tthis.setLimit('volumeHeightBelow', child);\n\tthis.setLimit('dynamicHeightBelow', child);\n};\n\nVoiceElement.prototype.addOther = function (child) {\n\tthis.otherchildren.push(child);\n\tthis.setRange(child);\n};\n\nVoiceElement.prototype.addBeam = function (child) {\n\tthis.beams.push(child);\n};\n\nVoiceElement.prototype.setWidth = function (width) {\n\tthis.w = width;\n};\n\nmodule.exports = VoiceElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL2VsZW1lbnRzL3ZvaWNlLWVsZW1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsdUNBQXVDO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvY3JlYXRpb24vZWxlbWVudHMvdm9pY2UtZWxlbWVudC5qcz8zMjkwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vICAgIGFiY192b2ljZV9lbGVtZW50LmpzOiBEZWZpbml0aW9uIG9mIHRoZSBWb2ljZUVsZW1lbnQgY2xhc3MuXG5cbnZhciBWb2ljZUVsZW1lbnQgPSBmdW5jdGlvbiBWb2ljZUVsZW1lbnQodm9pY2VudW1iZXIsIHZvaWNldG90YWwpIHtcblx0dGhpcy5jaGlsZHJlbiA9IFtdO1xuXHR0aGlzLmJlYW1zID0gW107XG5cdHRoaXMub3RoZXJjaGlsZHJlbiA9IFtdOyAvLyB0aWVzLCBzbHVycywgdHJpcGxldHNcblx0dGhpcy53ID0gMDtcblx0dGhpcy5kdXBsaWNhdGUgPSBmYWxzZTtcblx0dGhpcy52b2ljZW51bWJlciA9IHZvaWNlbnVtYmVyOyAvL251bWJlciBvZiB0aGUgdm9pY2Ugb24gYSBnaXZlbiBzdGF2ZSAobm90IHN0YWZmZ3JvdXApXG5cdHRoaXMudm9pY2V0b3RhbCA9IHZvaWNldG90YWw7XG5cdHRoaXMuYm90dG9tID0gNztcblx0dGhpcy50b3AgPSA3O1xuXHR0aGlzLnNwZWNpYWxZID0ge1xuXHRcdHRlbXBvSGVpZ2h0QWJvdmU6IDAsXG5cdFx0cGFydEhlaWdodEFib3ZlOiAwLFxuXHRcdHZvbHVtZUhlaWdodEFib3ZlOiAwLFxuXHRcdGR5bmFtaWNIZWlnaHRBYm92ZTogMCxcblx0XHRlbmRpbmdIZWlnaHRBYm92ZTogMCxcblx0XHRjaG9yZEhlaWdodEFib3ZlOiAwLFxuXHRcdGx5cmljSGVpZ2h0QWJvdmU6IDAsXG5cblx0XHRseXJpY0hlaWdodEJlbG93OiAwLFxuXHRcdGNob3JkSGVpZ2h0QmVsb3c6IDAsXG5cdFx0dm9sdW1lSGVpZ2h0QmVsb3c6IDAsXG5cdFx0ZHluYW1pY0hlaWdodEJlbG93OiAwXG5cdH07XG59O1xuXG5Wb2ljZUVsZW1lbnQucHJvdG90eXBlLmFkZENoaWxkID0gZnVuY3Rpb24gKGFic0VsZW0pIHtcblx0Ly8gVGhpcyBpcyBhbHdheXMgcGFzc2VkIGFuIEFic29sdXRlRWxlbWVudFxuXHRpZiAoYWJzRWxlbS50eXBlID09PSAnYmFyJykge1xuXHRcdHZhciBmaXJzdEl0ZW0gPSB0cnVlO1xuXHRcdGZvciAodmFyIGkgPSAwOyBmaXJzdEl0ZW0gJiYgaSA8IHRoaXMuY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcblx0XHRcdGlmICh0aGlzLmNoaWxkcmVuW2ldLnR5cGUuaW5kZXhPZihcInN0YWZmLWV4dHJhXCIpIDwgMCAmJiB0aGlzLmNoaWxkcmVuW2ldLnR5cGUgIT09IFwidGVtcG9cIilcblx0XHRcdFx0Zmlyc3RJdGVtID0gZmFsc2U7XG5cdFx0fVxuXHRcdGlmICghZmlyc3RJdGVtKSB7XG5cdFx0XHR0aGlzLmJlYW1zLnB1c2goXCJiYXJcIik7XG5cdFx0XHR0aGlzLm90aGVyY2hpbGRyZW4ucHVzaChcImJhclwiKTtcblx0XHR9XG5cdH1cblx0dGhpcy5jaGlsZHJlblt0aGlzLmNoaWxkcmVuLmxlbmd0aF0gPSBhYnNFbGVtO1xuXHR0aGlzLnNldFJhbmdlKGFic0VsZW0pO1xufTtcblxuVm9pY2VFbGVtZW50LnByb3RvdHlwZS5zZXRMaW1pdCA9IGZ1bmN0aW9uIChtZW1iZXIsIGNoaWxkKSB7XG5cdC8vIFNvbWV0aW1lcyB3ZSBnZXQgYW4gYWJzb2x1dGUgZWxlbWVudCBpbiBoZXJlIGFuZCBzb21ldGltZXMgd2UgZ2V0IHNvbWUgdHlwZSBvZiByZWxhdGl2ZSBlbGVtZW50LlxuXHQvLyBJZiB0aGVyZSBpcyBhIFwic3BlY2lhbFlcIiBlbGVtZW50LCB0aGVuIGFzc3VtZSBpdCBpcyBhbiBhYnNvbHV0ZSBlbGVtZW50LiBJZiB0aGF0IGRvZXNuJ3QgZXhpc3QsIGxvb2sgZm9yIHRoZVxuXHQvLyBzYW1lIG1lbWJlcnMgYXQgdGhlIHRvcCBsZXZlbCwgYmVjYXVzZSB0aGF0J3Mgd2hlcmUgdGhleSBhcmUgaW4gcmVsYXRpdmUgZWxlbWVudHMuXG5cdHZhciBzcGVjaWFsWSA9IGNoaWxkLnNwZWNpYWxZO1xuXHRpZiAoIXNwZWNpYWxZKSBzcGVjaWFsWSA9IGNoaWxkO1xuXHRpZiAoIXNwZWNpYWxZW21lbWJlcl0pIHJldHVybjtcblx0aWYgKCF0aGlzLnNwZWNpYWxZW21lbWJlcl0pXG5cdFx0dGhpcy5zcGVjaWFsWVttZW1iZXJdID0gc3BlY2lhbFlbbWVtYmVyXTtcblx0ZWxzZVxuXHRcdHRoaXMuc3BlY2lhbFlbbWVtYmVyXSA9IE1hdGgubWF4KHRoaXMuc3BlY2lhbFlbbWVtYmVyXSwgc3BlY2lhbFlbbWVtYmVyXSk7XG59O1xuXG5Wb2ljZUVsZW1lbnQucHJvdG90eXBlLmFkanVzdFJhbmdlID0gZnVuY3Rpb24gKGNoaWxkKSB7XG5cdGlmIChjaGlsZC5ib3R0b20gIT09IHVuZGVmaW5lZClcblx0XHR0aGlzLmJvdHRvbSA9IE1hdGgubWluKHRoaXMuYm90dG9tLCBjaGlsZC5ib3R0b20pO1xuXHRpZiAoY2hpbGQudG9wICE9PSB1bmRlZmluZWQpXG5cdFx0dGhpcy50b3AgPSBNYXRoLm1heCh0aGlzLnRvcCwgY2hpbGQudG9wKTtcbn07XG5cblZvaWNlRWxlbWVudC5wcm90b3R5cGUuc2V0UmFuZ2UgPSBmdW5jdGlvbiAoY2hpbGQpIHtcblx0dGhpcy5hZGp1c3RSYW5nZShjaGlsZCk7XG5cdHRoaXMuc2V0TGltaXQoJ3RlbXBvSGVpZ2h0QWJvdmUnLCBjaGlsZCk7XG5cdHRoaXMuc2V0TGltaXQoJ3BhcnRIZWlnaHRBYm92ZScsIGNoaWxkKTtcblx0dGhpcy5zZXRMaW1pdCgndm9sdW1lSGVpZ2h0QWJvdmUnLCBjaGlsZCk7XG5cdHRoaXMuc2V0TGltaXQoJ2R5bmFtaWNIZWlnaHRBYm92ZScsIGNoaWxkKTtcblx0dGhpcy5zZXRMaW1pdCgnZW5kaW5nSGVpZ2h0QWJvdmUnLCBjaGlsZCk7XG5cdHRoaXMuc2V0TGltaXQoJ2Nob3JkSGVpZ2h0QWJvdmUnLCBjaGlsZCk7XG5cdHRoaXMuc2V0TGltaXQoJ2x5cmljSGVpZ2h0QWJvdmUnLCBjaGlsZCk7XG5cdHRoaXMuc2V0TGltaXQoJ2x5cmljSGVpZ2h0QmVsb3cnLCBjaGlsZCk7XG5cdHRoaXMuc2V0TGltaXQoJ2Nob3JkSGVpZ2h0QmVsb3cnLCBjaGlsZCk7XG5cdHRoaXMuc2V0TGltaXQoJ3ZvbHVtZUhlaWdodEJlbG93JywgY2hpbGQpO1xuXHR0aGlzLnNldExpbWl0KCdkeW5hbWljSGVpZ2h0QmVsb3cnLCBjaGlsZCk7XG59O1xuXG5Wb2ljZUVsZW1lbnQucHJvdG90eXBlLmFkZE90aGVyID0gZnVuY3Rpb24gKGNoaWxkKSB7XG5cdHRoaXMub3RoZXJjaGlsZHJlbi5wdXNoKGNoaWxkKTtcblx0dGhpcy5zZXRSYW5nZShjaGlsZCk7XG59O1xuXG5Wb2ljZUVsZW1lbnQucHJvdG90eXBlLmFkZEJlYW0gPSBmdW5jdGlvbiAoY2hpbGQpIHtcblx0dGhpcy5iZWFtcy5wdXNoKGNoaWxkKTtcbn07XG5cblZvaWNlRWxlbWVudC5wcm90b3R5cGUuc2V0V2lkdGggPSBmdW5jdGlvbiAod2lkdGgpIHtcblx0dGhpcy53ID0gd2lkdGg7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFZvaWNlRWxlbWVudDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/elements/voice-element.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/glyphs.js":
/*!*********************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/glyphs.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var spacing = __webpack_require__(/*! ../helpers/spacing */ \"(ssr)/./node_modules/abcjs/src/write/helpers/spacing.js\");\n\n/**\n * Glyphs and some methods to adjust for their x and y baseline\n */\nvar glyphs =\n{\n\t'0': { d: [['M', 4.83, -14.97], ['c', 0.33, -0.03, 1.11, 0.00, 1.47, 0.06], ['c', 1.68, 0.36, 2.97, 1.59, 3.78, 3.60], ['c', 1.20, 2.97, 0.81, 6.96, -0.90, 9.27], ['c', -0.78, 1.08, -1.71, 1.71, -2.91, 1.95], ['c', -0.45, 0.09, -1.32, 0.09, -1.77, 0.00], ['c', -0.81, -0.18, -1.47, -0.51, -2.07, -1.02], ['c', -2.34, -2.07, -3.15, -6.72, -1.74, -10.20], ['c', 0.87, -2.16, 2.28, -3.42, 4.14, -3.66], ['z'], ['m', 1.11, 0.87], ['c', -0.21, -0.06, -0.69, -0.09, -0.87, -0.06], ['c', -0.54, 0.12, -0.87, 0.42, -1.17, 0.99], ['c', -0.36, 0.66, -0.51, 1.56, -0.60, 3.00], ['c', -0.03, 0.75, -0.03, 4.59, 0.00, 5.31], ['c', 0.09, 1.50, 0.27, 2.40, 0.60, 3.06], ['c', 0.24, 0.48, 0.57, 0.78, 0.96, 0.90], ['c', 0.27, 0.09, 0.78, 0.09, 1.05, 0.00], ['c', 0.39, -0.12, 0.72, -0.42, 0.96, -0.90], ['c', 0.33, -0.66, 0.51, -1.56, 0.60, -3.06], ['c', 0.03, -0.72, 0.03, -4.56, 0.00, -5.31], ['c', -0.09, -1.47, -0.27, -2.37, -0.60, -3.03], ['c', -0.24, -0.48, -0.54, -0.78, -0.93, -0.90], ['z']], w: 10.78, h: 14.959 },\n\t'1': { d: [['M', 3.30, -15.06], ['c', 0.06, -0.06, 0.21, -0.03, 0.66, 0.15], ['c', 0.81, 0.39, 1.08, 0.39, 1.83, 0.03], ['c', 0.21, -0.09, 0.39, -0.15, 0.42, -0.15], ['c', 0.12, 0.00, 0.21, 0.09, 0.27, 0.21], ['c', 0.06, 0.12, 0.06, 0.33, 0.06, 5.94], ['c', 0.00, 3.93, 0.00, 5.85, 0.03, 6.03], ['c', 0.06, 0.36, 0.15, 0.69, 0.27, 0.96], ['c', 0.36, 0.75, 0.93, 1.17, 1.68, 1.26], ['c', 0.30, 0.03, 0.39, 0.09, 0.39, 0.30], ['c', 0.00, 0.15, -0.03, 0.18, -0.09, 0.24], ['c', -0.06, 0.06, -0.09, 0.06, -0.48, 0.06], ['c', -0.42, 0.00, -0.69, -0.03, -2.10, -0.24], ['c', -0.90, -0.15, -1.77, -0.15, -2.67, 0.00], ['c', -1.41, 0.21, -1.68, 0.24, -2.10, 0.24], ['c', -0.39, 0.00, -0.42, 0.00, -0.48, -0.06], ['c', -0.06, -0.06, -0.06, -0.09, -0.06, -0.24], ['c', 0.00, -0.21, 0.06, -0.27, 0.36, -0.30], ['c', 0.75, -0.09, 1.32, -0.51, 1.68, -1.26], ['c', 0.12, -0.27, 0.21, -0.60, 0.27, -0.96], ['c', 0.03, -0.18, 0.03, -1.59, 0.03, -4.29], ['c', 0.00, -3.87, 0.00, -4.05, -0.06, -4.14], ['c', -0.09, -0.15, -0.18, -0.24, -0.39, -0.24], ['c', -0.12, 0.00, -0.15, 0.03, -0.21, 0.06], ['c', -0.03, 0.06, -0.45, 0.99, -0.96, 2.13], ['c', -0.48, 1.14, -0.90, 2.10, -0.93, 2.16], ['c', -0.06, 0.15, -0.21, 0.24, -0.33, 0.24], ['c', -0.24, 0.00, -0.42, -0.18, -0.42, -0.39], ['c', 0.00, -0.06, 3.27, -7.62, 3.33, -7.74], ['z']], w: 8.94, h: 15.058 },\n\t'2': { d: [['M', 4.23, -14.97], ['c', 0.57, -0.06, 1.68, 0.00, 2.34, 0.18], ['c', 0.69, 0.18, 1.50, 0.54, 2.01, 0.90], ['c', 1.35, 0.96, 1.95, 2.25, 1.77, 3.81], ['c', -0.15, 1.35, -0.66, 2.34, -1.68, 3.15], ['c', -0.60, 0.48, -1.44, 0.93, -3.12, 1.65], ['c', -1.32, 0.57, -1.80, 0.81, -2.37, 1.14], ['c', -0.57, 0.33, -0.57, 0.33, -0.24, 0.27], ['c', 0.39, -0.09, 1.26, -0.09, 1.68, 0.00], ['c', 0.72, 0.15, 1.41, 0.45, 2.10, 0.90], ['c', 0.99, 0.63, 1.86, 0.87, 2.55, 0.75], ['c', 0.24, -0.06, 0.42, -0.15, 0.57, -0.30], ['c', 0.12, -0.09, 0.30, -0.42, 0.30, -0.51], ['c', 0.00, -0.09, 0.12, -0.21, 0.24, -0.24], ['c', 0.18, -0.03, 0.39, 0.12, 0.39, 0.30], ['c', 0.00, 0.12, -0.15, 0.57, -0.30, 0.87], ['c', -0.54, 1.02, -1.56, 1.74, -2.79, 2.01], ['c', -0.42, 0.09, -1.23, 0.09, -1.62, 0.03], ['c', -0.81, -0.18, -1.32, -0.45, -2.01, -1.11], ['c', -0.45, -0.45, -0.63, -0.57, -0.96, -0.69], ['c', -0.84, -0.27, -1.89, 0.12, -2.25, 0.90], ['c', -0.12, 0.21, -0.21, 0.54, -0.21, 0.72], ['c', 0.00, 0.12, -0.12, 0.21, -0.27, 0.24], ['c', -0.15, 0.00, -0.27, -0.03, -0.33, -0.15], ['c', -0.09, -0.21, 0.09, -1.08, 0.33, -1.71], ['c', 0.24, -0.66, 0.66, -1.26, 1.29, -1.89], ['c', 0.45, -0.45, 0.90, -0.81, 1.92, -1.56], ['c', 1.29, -0.93, 1.89, -1.44, 2.34, -1.98], ['c', 0.87, -1.05, 1.26, -2.19, 1.20, -3.63], ['c', -0.06, -1.29, -0.39, -2.31, -0.96, -2.91], ['c', -0.36, -0.33, -0.72, -0.51, -1.17, -0.54], ['c', -0.84, -0.03, -1.53, 0.42, -1.59, 1.05], ['c', -0.03, 0.33, 0.12, 0.60, 0.57, 1.14], ['c', 0.45, 0.54, 0.54, 0.87, 0.42, 1.41], ['c', -0.15, 0.63, -0.54, 1.11, -1.08, 1.38], ['c', -0.63, 0.33, -1.20, 0.33, -1.83, 0.00], ['c', -0.24, -0.12, -0.33, -0.18, -0.54, -0.39], ['c', -0.18, -0.18, -0.27, -0.30, -0.36, -0.51], ['c', -0.24, -0.45, -0.27, -0.84, -0.21, -1.38], ['c', 0.12, -0.75, 0.45, -1.41, 1.02, -1.98], ['c', 0.72, -0.72, 1.74, -1.17, 2.85, -1.32], ['z']], w: 10.764, h: 14.97 },\n\t'3': { d: [['M', 3.78, -14.97], ['c', 0.30, -0.03, 1.41, 0.00, 1.83, 0.06], ['c', 2.22, 0.30, 3.51, 1.32, 3.72, 2.91], ['c', 0.03, 0.33, 0.03, 1.26, -0.03, 1.65], ['c', -0.12, 0.84, -0.48, 1.47, -1.05, 1.77], ['c', -0.27, 0.15, -0.36, 0.24, -0.45, 0.39], ['c', -0.09, 0.21, -0.09, 0.36, 0.00, 0.57], ['c', 0.09, 0.15, 0.18, 0.24, 0.51, 0.39], ['c', 0.75, 0.42, 1.23, 1.14, 1.41, 2.13], ['c', 0.06, 0.42, 0.06, 1.35, 0.00, 1.71], ['c', -0.18, 0.81, -0.48, 1.38, -1.02, 1.95], ['c', -0.75, 0.72, -1.80, 1.20, -3.18, 1.38], ['c', -0.42, 0.06, -1.56, 0.06, -1.95, 0.00], ['c', -1.89, -0.33, -3.18, -1.29, -3.51, -2.64], ['c', -0.03, -0.12, -0.03, -0.33, -0.03, -0.60], ['c', 0.00, -0.36, 0.00, -0.42, 0.06, -0.63], ['c', 0.12, -0.30, 0.27, -0.51, 0.51, -0.75], ['c', 0.24, -0.24, 0.45, -0.39, 0.75, -0.51], ['c', 0.21, -0.06, 0.27, -0.06, 0.60, -0.06], ['c', 0.33, 0.00, 0.39, 0.00, 0.60, 0.06], ['c', 0.30, 0.12, 0.51, 0.27, 0.75, 0.51], ['c', 0.36, 0.33, 0.57, 0.75, 0.60, 1.20], ['c', 0.00, 0.21, 0.00, 0.27, -0.06, 0.42], ['c', -0.09, 0.18, -0.12, 0.24, -0.54, 0.54], ['c', -0.51, 0.36, -0.63, 0.54, -0.60, 0.87], ['c', 0.06, 0.54, 0.54, 0.90, 1.38, 0.99], ['c', 0.36, 0.06, 0.72, 0.03, 0.96, -0.06], ['c', 0.81, -0.27, 1.29, -1.23, 1.44, -2.79], ['c', 0.03, -0.45, 0.03, -1.95, -0.03, -2.37], ['c', -0.09, -0.75, -0.33, -1.23, -0.75, -1.44], ['c', -0.33, -0.18, -0.45, -0.18, -1.98, -0.18], ['c', -1.35, 0.00, -1.41, 0.00, -1.50, -0.06], ['c', -0.18, -0.12, -0.24, -0.39, -0.12, -0.60], ['c', 0.12, -0.15, 0.15, -0.15, 1.68, -0.15], ['c', 1.50, 0.00, 1.62, 0.00, 1.89, -0.15], ['c', 0.18, -0.09, 0.42, -0.36, 0.54, -0.57], ['c', 0.18, -0.42, 0.27, -0.90, 0.30, -1.95], ['c', 0.03, -1.20, -0.06, -1.80, -0.36, -2.37], ['c', -0.24, -0.48, -0.63, -0.81, -1.14, -0.96], ['c', -0.30, -0.06, -1.08, -0.06, -1.38, 0.03], ['c', -0.60, 0.15, -0.90, 0.42, -0.96, 0.84], ['c', -0.03, 0.30, 0.06, 0.45, 0.63, 0.84], ['c', 0.33, 0.24, 0.42, 0.39, 0.45, 0.63], ['c', 0.03, 0.72, -0.57, 1.50, -1.32, 1.65], ['c', -1.05, 0.27, -2.10, -0.57, -2.10, -1.65], ['c', 0.00, -0.45, 0.15, -0.96, 0.39, -1.38], ['c', 0.12, -0.21, 0.54, -0.63, 0.81, -0.81], ['c', 0.57, -0.42, 1.38, -0.69, 2.25, -0.81], ['z']], w: 9.735, h: 14.967 },\n\t'4': { d: [['M', 8.64, -14.94], ['c', 0.27, -0.09, 0.42, -0.12, 0.54, -0.03], ['c', 0.09, 0.06, 0.15, 0.21, 0.15, 0.30], ['c', -0.03, 0.06, -1.92, 2.31, -4.23, 5.04], ['c', -2.31, 2.73, -4.23, 4.98, -4.26, 5.01], ['c', -0.03, 0.06, 0.12, 0.06, 2.55, 0.06], ['l', 2.61, 0.00], ['l', 0.00, -2.37], ['c', 0.00, -2.19, 0.03, -2.37, 0.06, -2.46], ['c', 0.03, -0.06, 0.21, -0.18, 0.57, -0.42], ['c', 1.08, -0.72, 1.38, -1.08, 1.86, -2.16], ['c', 0.12, -0.30, 0.24, -0.54, 0.27, -0.57], ['c', 0.12, -0.12, 0.39, -0.06, 0.45, 0.12], ['c', 0.06, 0.09, 0.06, 0.57, 0.06, 3.96], ['l', 0.00, 3.90], ['l', 1.08, 0.00], ['c', 1.05, 0.00, 1.11, 0.00, 1.20, 0.06], ['c', 0.24, 0.15, 0.24, 0.54, 0.00, 0.69], ['c', -0.09, 0.06, -0.15, 0.06, -1.20, 0.06], ['l', -1.08, 0.00], ['l', 0.00, 0.33], ['c', 0.00, 0.57, 0.09, 1.11, 0.30, 1.53], ['c', 0.36, 0.75, 0.93, 1.17, 1.68, 1.26], ['c', 0.30, 0.03, 0.39, 0.09, 0.39, 0.30], ['c', 0.00, 0.15, -0.03, 0.18, -0.09, 0.24], ['c', -0.06, 0.06, -0.09, 0.06, -0.48, 0.06], ['c', -0.42, 0.00, -0.69, -0.03, -2.10, -0.24], ['c', -0.90, -0.15, -1.77, -0.15, -2.67, 0.00], ['c', -1.41, 0.21, -1.68, 0.24, -2.10, 0.24], ['c', -0.39, 0.00, -0.42, 0.00, -0.48, -0.06], ['c', -0.06, -0.06, -0.06, -0.09, -0.06, -0.24], ['c', 0.00, -0.21, 0.06, -0.27, 0.36, -0.30], ['c', 0.75, -0.09, 1.32, -0.51, 1.68, -1.26], ['c', 0.21, -0.42, 0.30, -0.96, 0.30, -1.53], ['l', 0.00, -0.33], ['l', -2.70, 0.00], ['c', -2.91, 0.00, -2.85, 0.00, -3.09, -0.15], ['c', -0.18, -0.12, -0.30, -0.39, -0.27, -0.54], ['c', 0.03, -0.06, 0.18, -0.24, 0.33, -0.45], ['c', 0.75, -0.90, 1.59, -2.07, 2.13, -3.03], ['c', 0.33, -0.54, 0.84, -1.62, 1.05, -2.16], ['c', 0.57, -1.41, 0.84, -2.64, 0.90, -4.05], ['c', 0.03, -0.63, 0.06, -0.72, 0.24, -0.81], ['l', 0.12, -0.06], ['l', 0.45, 0.12], ['c', 0.66, 0.18, 1.02, 0.24, 1.47, 0.27], ['c', 0.60, 0.03, 1.23, -0.09, 2.01, -0.33], ['z']], w: 11.795, h: 14.994 },\n\t'5': { d: [['M', 1.02, -14.94], ['c', 0.12, -0.09, 0.03, -0.09, 1.08, 0.06], ['c', 2.49, 0.36, 4.35, 0.36, 6.96, -0.06], ['c', 0.57, -0.09, 0.66, -0.06, 0.81, 0.06], ['c', 0.15, 0.18, 0.12, 0.24, -0.15, 0.51], ['c', -1.29, 1.26, -3.24, 2.04, -5.58, 2.31], ['c', -0.60, 0.09, -1.20, 0.12, -1.71, 0.12], ['c', -0.39, 0.00, -0.45, 0.00, -0.57, 0.06], ['c', -0.09, 0.06, -0.15, 0.12, -0.21, 0.21], ['l', -0.06, 0.12], ['l', 0.00, 1.65], ['l', 0.00, 1.65], ['l', 0.21, -0.21], ['c', 0.66, -0.57, 1.41, -0.96, 2.19, -1.14], ['c', 0.33, -0.06, 1.41, -0.06, 1.95, 0.00], ['c', 2.61, 0.36, 4.02, 1.74, 4.26, 4.14], ['c', 0.03, 0.45, 0.03, 1.08, -0.03, 1.44], ['c', -0.18, 1.02, -0.78, 2.01, -1.59, 2.70], ['c', -0.72, 0.57, -1.62, 1.02, -2.49, 1.20], ['c', -1.38, 0.27, -3.03, 0.06, -4.20, -0.54], ['c', -1.08, -0.54, -1.71, -1.32, -1.86, -2.28], ['c', -0.09, -0.69, 0.09, -1.29, 0.57, -1.74], ['c', 0.24, -0.24, 0.45, -0.39, 0.75, -0.51], ['c', 0.21, -0.06, 0.27, -0.06, 0.60, -0.06], ['c', 0.33, 0.00, 0.39, 0.00, 0.60, 0.06], ['c', 0.30, 0.12, 0.51, 0.27, 0.75, 0.51], ['c', 0.36, 0.33, 0.57, 0.75, 0.60, 1.20], ['c', 0.00, 0.21, 0.00, 0.27, -0.06, 0.42], ['c', -0.09, 0.18, -0.12, 0.24, -0.54, 0.54], ['c', -0.18, 0.12, -0.36, 0.30, -0.42, 0.33], ['c', -0.36, 0.42, -0.18, 0.99, 0.36, 1.26], ['c', 0.51, 0.27, 1.47, 0.36, 2.01, 0.27], ['c', 0.93, -0.21, 1.47, -1.17, 1.65, -2.91], ['c', 0.06, -0.45, 0.06, -1.89, 0.00, -2.31], ['c', -0.15, -1.20, -0.51, -2.10, -1.05, -2.55], ['c', -0.21, -0.18, -0.54, -0.36, -0.81, -0.39], ['c', -0.30, -0.06, -0.84, -0.03, -1.26, 0.06], ['c', -0.93, 0.18, -1.65, 0.60, -2.16, 1.20], ['c', -0.15, 0.21, -0.27, 0.30, -0.39, 0.30], ['c', -0.15, 0.00, -0.30, -0.09, -0.36, -0.18], ['c', -0.06, -0.09, -0.06, -0.15, -0.06, -3.66], ['c', 0.00, -3.39, 0.00, -3.57, 0.06, -3.66], ['c', 0.03, -0.06, 0.09, -0.15, 0.15, -0.18], ['z']], w: 10.212, h: 14.997 },\n\t'6': { d: [['M', 4.98, -14.97], ['c', 0.36, -0.03, 1.20, 0.00, 1.59, 0.06], ['c', 0.90, 0.15, 1.68, 0.51, 2.25, 1.05], ['c', 0.57, 0.51, 0.87, 1.23, 0.84, 1.98], ['c', -0.03, 0.51, -0.21, 0.90, -0.60, 1.26], ['c', -0.24, 0.24, -0.45, 0.39, -0.75, 0.51], ['c', -0.21, 0.06, -0.27, 0.06, -0.60, 0.06], ['c', -0.33, 0.00, -0.39, 0.00, -0.60, -0.06], ['c', -0.30, -0.12, -0.51, -0.27, -0.75, -0.51], ['c', -0.39, -0.36, -0.57, -0.78, -0.57, -1.26], ['c', 0.00, -0.27, 0.00, -0.30, 0.09, -0.42], ['c', 0.03, -0.09, 0.18, -0.21, 0.30, -0.30], ['c', 0.12, -0.09, 0.30, -0.21, 0.39, -0.27], ['c', 0.09, -0.06, 0.21, -0.18, 0.27, -0.24], ['c', 0.06, -0.12, 0.09, -0.15, 0.09, -0.33], ['c', 0.00, -0.18, -0.03, -0.24, -0.09, -0.36], ['c', -0.24, -0.39, -0.75, -0.60, -1.38, -0.57], ['c', -0.54, 0.03, -0.90, 0.18, -1.23, 0.48], ['c', -0.81, 0.72, -1.08, 2.16, -0.96, 5.37], ['l', 0.00, 0.63], ['l', 0.30, -0.12], ['c', 0.78, -0.27, 1.29, -0.33, 2.10, -0.27], ['c', 1.47, 0.12, 2.49, 0.54, 3.27, 1.29], ['c', 0.48, 0.51, 0.81, 1.11, 0.96, 1.89], ['c', 0.06, 0.27, 0.06, 0.42, 0.06, 0.93], ['c', 0.00, 0.54, 0.00, 0.69, -0.06, 0.96], ['c', -0.15, 0.78, -0.48, 1.38, -0.96, 1.89], ['c', -0.54, 0.51, -1.17, 0.87, -1.98, 1.08], ['c', -1.14, 0.30, -2.40, 0.33, -3.24, 0.03], ['c', -1.50, -0.48, -2.64, -1.89, -3.27, -4.02], ['c', -0.36, -1.23, -0.51, -2.82, -0.42, -4.08], ['c', 0.30, -3.66, 2.28, -6.30, 4.95, -6.66], ['z'], ['m', 0.66, 7.41], ['c', -0.27, -0.09, -0.81, -0.12, -1.08, -0.06], ['c', -0.72, 0.18, -1.08, 0.69, -1.23, 1.71], ['c', -0.06, 0.54, -0.06, 3.00, 0.00, 3.54], ['c', 0.18, 1.26, 0.72, 1.77, 1.80, 1.74], ['c', 0.39, -0.03, 0.63, -0.09, 0.90, -0.27], ['c', 0.66, -0.42, 0.90, -1.32, 0.90, -3.24], ['c', 0.00, -2.22, -0.36, -3.12, -1.29, -3.42], ['z']], w: 9.956, h: 14.982 },\n\t'7': { d: [['M', 0.21, -14.97], ['c', 0.21, -0.06, 0.45, 0.00, 0.54, 0.15], ['c', 0.06, 0.09, 0.06, 0.15, 0.06, 0.39], ['c', 0.00, 0.24, 0.00, 0.33, 0.06, 0.42], ['c', 0.06, 0.12, 0.21, 0.24, 0.27, 0.24], ['c', 0.03, 0.00, 0.12, -0.12, 0.24, -0.21], ['c', 0.96, -1.20, 2.58, -1.35, 3.99, -0.42], ['c', 0.15, 0.12, 0.42, 0.30, 0.54, 0.45], ['c', 0.48, 0.39, 0.81, 0.57, 1.29, 0.60], ['c', 0.69, 0.03, 1.50, -0.30, 2.13, -0.87], ['c', 0.09, -0.09, 0.27, -0.30, 0.39, -0.45], ['c', 0.12, -0.15, 0.24, -0.27, 0.30, -0.30], ['c', 0.18, -0.06, 0.39, 0.03, 0.51, 0.21], ['c', 0.06, 0.18, 0.06, 0.24, -0.27, 0.72], ['c', -0.18, 0.24, -0.54, 0.78, -0.78, 1.17], ['c', -2.37, 3.54, -3.54, 6.27, -3.87, 9.00], ['c', -0.03, 0.33, -0.03, 0.66, -0.03, 1.26], ['c', 0.00, 0.90, 0.00, 1.08, 0.15, 1.89], ['c', 0.06, 0.45, 0.06, 0.48, 0.03, 0.60], ['c', -0.06, 0.09, -0.21, 0.21, -0.30, 0.21], ['c', -0.03, 0.00, -0.27, -0.06, -0.54, -0.15], ['c', -0.84, -0.27, -1.11, -0.30, -1.65, -0.30], ['c', -0.57, 0.00, -0.84, 0.03, -1.56, 0.27], ['c', -0.60, 0.18, -0.69, 0.21, -0.81, 0.15], ['c', -0.12, -0.06, -0.21, -0.18, -0.21, -0.30], ['c', 0.00, -0.15, 0.60, -1.44, 1.20, -2.61], ['c', 1.14, -2.22, 2.73, -4.68, 5.10, -8.01], ['c', 0.21, -0.27, 0.36, -0.48, 0.33, -0.48], ['c', 0.00, 0.00, -0.12, 0.06, -0.27, 0.12], ['c', -0.54, 0.30, -0.99, 0.39, -1.56, 0.39], ['c', -0.75, 0.03, -1.20, -0.18, -1.83, -0.75], ['c', -0.99, -0.90, -1.83, -1.17, -2.31, -0.72], ['c', -0.18, 0.15, -0.36, 0.51, -0.45, 0.84], ['c', -0.06, 0.24, -0.06, 0.33, -0.09, 1.98], ['c', 0.00, 1.62, -0.03, 1.74, -0.06, 1.80], ['c', -0.15, 0.24, -0.54, 0.24, -0.69, 0.00], ['c', -0.06, -0.09, -0.06, -0.15, -0.06, -3.57], ['c', 0.00, -3.42, 0.00, -3.48, 0.06, -3.57], ['c', 0.03, -0.06, 0.09, -0.12, 0.15, -0.15], ['z']], w: 10.561, h: 15.093 },\n\t'8': { d: [['M', 4.98, -14.97], ['c', 0.33, -0.03, 1.02, -0.03, 1.32, 0.00], ['c', 1.32, 0.12, 2.49, 0.60, 3.21, 1.32], ['c', 0.39, 0.39, 0.66, 0.81, 0.78, 1.29], ['c', 0.09, 0.36, 0.09, 1.08, 0.00, 1.44], ['c', -0.21, 0.84, -0.66, 1.59, -1.59, 2.55], ['l', -0.30, 0.30], ['l', 0.27, 0.18], ['c', 1.47, 0.93, 2.31, 2.31, 2.25, 3.75], ['c', -0.03, 0.75, -0.24, 1.35, -0.63, 1.95], ['c', -0.45, 0.66, -1.02, 1.14, -1.83, 1.53], ['c', -1.80, 0.87, -4.20, 0.87, -6.00, 0.03], ['c', -1.62, -0.78, -2.52, -2.16, -2.46, -3.66], ['c', 0.06, -0.99, 0.54, -1.77, 1.80, -2.97], ['c', 0.54, -0.51, 0.54, -0.54, 0.48, -0.57], ['c', -0.39, -0.27, -0.96, -0.78, -1.20, -1.14], ['c', -0.75, -1.11, -0.87, -2.40, -0.30, -3.60], ['c', 0.69, -1.35, 2.25, -2.25, 4.20, -2.40], ['z'], ['m', 1.53, 0.69], ['c', -0.42, -0.09, -1.11, -0.12, -1.38, -0.06], ['c', -0.30, 0.06, -0.60, 0.18, -0.81, 0.30], ['c', -0.21, 0.12, -0.60, 0.51, -0.72, 0.72], ['c', -0.51, 0.87, -0.42, 1.89, 0.21, 2.52], ['c', 0.21, 0.21, 0.36, 0.30, 1.95, 1.23], ['c', 0.96, 0.54, 1.74, 0.99, 1.77, 1.02], ['c', 0.09, 0.00, 0.63, -0.60, 0.99, -1.11], ['c', 0.21, -0.36, 0.48, -0.87, 0.57, -1.23], ['c', 0.06, -0.24, 0.06, -0.36, 0.06, -0.72], ['c', 0.00, -0.45, -0.03, -0.66, -0.15, -0.99], ['c', -0.39, -0.81, -1.29, -1.44, -2.49, -1.68], ['z'], ['m', -1.44, 8.07], ['l', -1.89, -1.08], ['c', -0.03, 0.00, -0.18, 0.15, -0.39, 0.33], ['c', -1.20, 1.08, -1.65, 1.95, -1.59, 3.00], ['c', 0.09, 1.59, 1.35, 2.85, 3.21, 3.24], ['c', 0.33, 0.06, 0.45, 0.06, 0.93, 0.06], ['c', 0.63, 0.00, 0.81, -0.03, 1.29, -0.27], ['c', 0.90, -0.42, 1.47, -1.41, 1.41, -2.40], ['c', -0.06, -0.66, -0.39, -1.29, -0.90, -1.65], ['c', -0.12, -0.09, -1.05, -0.63, -2.07, -1.23], ['z']], w: 10.926, h: 14.989 },\n\t'9': { d: [['M', 4.23, -14.97], ['c', 0.42, -0.03, 1.29, 0.00, 1.62, 0.06], ['c', 0.51, 0.12, 0.93, 0.30, 1.38, 0.57], ['c', 1.53, 1.02, 2.52, 3.24, 2.73, 5.94], ['c', 0.18, 2.55, -0.48, 4.98, -1.83, 6.57], ['c', -1.05, 1.26, -2.40, 1.89, -3.93, 1.83], ['c', -1.23, -0.06, -2.31, -0.45, -3.03, -1.14], ['c', -0.57, -0.51, -0.87, -1.23, -0.84, -1.98], ['c', 0.03, -0.51, 0.21, -0.90, 0.60, -1.26], ['c', 0.24, -0.24, 0.45, -0.39, 0.75, -0.51], ['c', 0.21, -0.06, 0.27, -0.06, 0.60, -0.06], ['c', 0.33, 0.00, 0.39, 0.00, 0.60, 0.06], ['c', 0.30, 0.12, 0.51, 0.27, 0.75, 0.51], ['c', 0.39, 0.36, 0.57, 0.78, 0.57, 1.26], ['c', 0.00, 0.27, 0.00, 0.30, -0.09, 0.42], ['c', -0.03, 0.09, -0.18, 0.21, -0.30, 0.30], ['c', -0.12, 0.09, -0.30, 0.21, -0.39, 0.27], ['c', -0.09, 0.06, -0.21, 0.18, -0.27, 0.24], ['c', -0.06, 0.12, -0.06, 0.15, -0.06, 0.33], ['c', 0.00, 0.18, 0.00, 0.24, 0.06, 0.36], ['c', 0.24, 0.39, 0.75, 0.60, 1.38, 0.57], ['c', 0.54, -0.03, 0.90, -0.18, 1.23, -0.48], ['c', 0.81, -0.72, 1.08, -2.16, 0.96, -5.37], ['l', 0.00, -0.63], ['l', -0.30, 0.12], ['c', -0.78, 0.27, -1.29, 0.33, -2.10, 0.27], ['c', -1.47, -0.12, -2.49, -0.54, -3.27, -1.29], ['c', -0.48, -0.51, -0.81, -1.11, -0.96, -1.89], ['c', -0.06, -0.27, -0.06, -0.42, -0.06, -0.96], ['c', 0.00, -0.51, 0.00, -0.66, 0.06, -0.93], ['c', 0.15, -0.78, 0.48, -1.38, 0.96, -1.89], ['c', 0.15, -0.12, 0.33, -0.27, 0.42, -0.36], ['c', 0.69, -0.51, 1.62, -0.81, 2.76, -0.93], ['z'], ['m', 1.17, 0.66], ['c', -0.21, -0.06, -0.57, -0.06, -0.81, -0.03], ['c', -0.78, 0.12, -1.26, 0.69, -1.41, 1.74], ['c', -0.12, 0.63, -0.15, 1.95, -0.09, 2.79], ['c', 0.12, 1.71, 0.63, 2.40, 1.77, 2.46], ['c', 1.08, 0.03, 1.62, -0.48, 1.80, -1.74], ['c', 0.06, -0.54, 0.06, -3.00, 0.00, -3.54], ['c', -0.15, -1.05, -0.51, -1.53, -1.26, -1.68], ['z']], w: 9.959, h: 14.986 },\n\t'rests.multimeasure': { d: [['M', 0, -4], ['l', 0, 16], ['l', 1, 0], ['l', 0, -5], ['l', 40, 0], ['l', 0, 5], ['l', 1, 0], ['l', 0, -16], ['l', -1, 0], ['l', 0, 5], ['l', -40, 0], ['l', 0, -5], ['z']], w: 42, h: 18 },\n\t'rests.whole': { d: [['M', 0.06, 0.03], ['l', 0.09, -0.06], ['l', 5.46, 0.00], ['l', 5.49, 0.00], ['l', 0.09, 0.06], ['l', 0.06, 0.09], ['l', 0.00, 2.19], ['l', 0.00, 2.19], ['l', -0.06, 0.09], ['l', -0.09, 0.06], ['l', -5.49, 0.00], ['l', -5.46, 0.00], ['l', -0.09, -0.06], ['l', -0.06, -0.09], ['l', 0.00, -2.19], ['l', 0.00, -2.19], ['z']], w: 11.25, h: 4.68 },\n\t'rests.half': { d: [['M', 0.06, -4.62], ['l', 0.09, -0.06], ['l', 5.46, 0.00], ['l', 5.49, 0.00], ['l', 0.09, 0.06], ['l', 0.06, 0.09], ['l', 0.00, 2.19], ['l', 0.00, 2.19], ['l', -0.06, 0.09], ['l', -0.09, 0.06], ['l', -5.49, 0.00], ['l', -5.46, 0.00], ['l', -0.09, -0.06], ['l', -0.06, -0.09], ['l', 0.00, -2.19], ['l', 0.00, -2.19], ['z']], w: 11.25, h: 4.68 },\n\t'rests.quarter': { d: [['M', 1.89, -11.82], ['c', 0.12, -0.06, 0.24, -0.06, 0.36, -0.03], ['c', 0.09, 0.06, 4.74, 5.58, 4.86, 5.82], ['c', 0.21, 0.39, 0.15, 0.78, -0.15, 1.26], ['c', -0.24, 0.33, -0.72, 0.81, -1.62, 1.56], ['c', -0.45, 0.36, -0.87, 0.75, -0.96, 0.84], ['c', -0.93, 0.99, -1.14, 2.49, -0.60, 3.63], ['c', 0.18, 0.39, 0.27, 0.48, 1.32, 1.68], ['c', 1.92, 2.25, 1.83, 2.16, 1.83, 2.34], ['c', 0.00, 0.18, -0.18, 0.36, -0.36, 0.39], ['c', -0.15, 0.00, -0.27, -0.06, -0.48, -0.27], ['c', -0.75, -0.75, -2.46, -1.29, -3.39, -1.08], ['c', -0.45, 0.09, -0.69, 0.27, -0.90, 0.69], ['c', -0.12, 0.30, -0.21, 0.66, -0.24, 1.14], ['c', -0.03, 0.66, 0.09, 1.35, 0.30, 2.01], ['c', 0.15, 0.42, 0.24, 0.66, 0.45, 0.96], ['c', 0.18, 0.24, 0.18, 0.33, 0.03, 0.42], ['c', -0.12, 0.06, -0.18, 0.03, -0.45, -0.30], ['c', -1.08, -1.38, -2.07, -3.36, -2.40, -4.83], ['c', -0.27, -1.05, -0.15, -1.77, 0.27, -2.07], ['c', 0.21, -0.12, 0.42, -0.15, 0.87, -0.15], ['c', 0.87, 0.06, 2.10, 0.39, 3.30, 0.90], ['l', 0.39, 0.18], ['l', -1.65, -1.95], ['c', -2.52, -2.97, -2.61, -3.09, -2.70, -3.27], ['c', -0.09, -0.24, -0.12, -0.48, -0.03, -0.75], ['c', 0.15, -0.48, 0.57, -0.96, 1.83, -2.01], ['c', 0.45, -0.36, 0.84, -0.72, 0.93, -0.78], ['c', 0.69, -0.75, 1.02, -1.80, 0.90, -2.79], ['c', -0.06, -0.33, -0.21, -0.84, -0.39, -1.11], ['c', -0.09, -0.15, -0.45, -0.60, -0.81, -1.05], ['c', -0.36, -0.42, -0.69, -0.81, -0.72, -0.87], ['c', -0.09, -0.18, 0.00, -0.42, 0.21, -0.51], ['z']], w: 7.888, h: 21.435 },\n\t'rests.8th': { d: [['M', 1.68, -6.12], ['c', 0.66, -0.09, 1.23, 0.09, 1.68, 0.51], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.09, 0.33, 0.18, 0.66, 0.21, 0.72], ['c', 0.12, 0.27, 0.33, 0.45, 0.60, 0.48], ['c', 0.12, 0.00, 0.18, 0.00, 0.33, -0.09], ['c', 0.39, -0.18, 1.32, -1.29, 1.68, -1.98], ['c', 0.09, -0.21, 0.24, -0.30, 0.39, -0.30], ['c', 0.12, 0.00, 0.27, 0.09, 0.33, 0.18], ['c', 0.03, 0.06, -0.27, 1.11, -1.86, 6.42], ['c', -1.02, 3.48, -1.89, 6.39, -1.92, 6.42], ['c', 0.00, 0.03, -0.12, 0.12, -0.24, 0.15], ['c', -0.18, 0.09, -0.21, 0.09, -0.45, 0.09], ['c', -0.24, 0.00, -0.30, 0.00, -0.48, -0.06], ['c', -0.09, -0.06, -0.21, -0.12, -0.21, -0.15], ['c', -0.06, -0.03, 0.15, -0.57, 1.68, -4.92], ['c', 0.96, -2.67, 1.74, -4.89, 1.71, -4.89], ['l', -0.51, 0.15], ['c', -1.08, 0.36, -1.74, 0.48, -2.55, 0.48], ['c', -0.66, 0.00, -0.84, -0.03, -1.32, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.33, -0.45, 0.84, -0.81, 1.38, -0.90], ['z']], w: 7.534, h: 13.883 },\n\t'rests.16th': { d: [['M', 3.33, -6.12], ['c', 0.66, -0.09, 1.23, 0.09, 1.68, 0.51], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.09, 0.33, 0.18, 0.66, 0.21, 0.72], ['c', 0.15, 0.39, 0.57, 0.57, 0.87, 0.42], ['c', 0.39, -0.18, 1.20, -1.23, 1.62, -2.07], ['c', 0.06, -0.15, 0.24, -0.24, 0.36, -0.24], ['c', 0.12, 0.00, 0.27, 0.09, 0.33, 0.18], ['c', 0.03, 0.06, -0.45, 1.86, -2.67, 10.17], ['c', -1.50, 5.55, -2.73, 10.14, -2.76, 10.17], ['c', -0.03, 0.03, -0.12, 0.12, -0.24, 0.15], ['c', -0.18, 0.09, -0.21, 0.09, -0.45, 0.09], ['c', -0.24, 0.00, -0.30, 0.00, -0.48, -0.06], ['c', -0.09, -0.06, -0.21, -0.12, -0.21, -0.15], ['c', -0.06, -0.03, 0.12, -0.57, 1.44, -4.92], ['c', 0.81, -2.67, 1.47, -4.86, 1.47, -4.89], ['c', -0.03, 0.00, -0.27, 0.06, -0.54, 0.15], ['c', -1.08, 0.36, -1.77, 0.48, -2.58, 0.48], ['c', -0.66, 0.00, -0.84, -0.03, -1.32, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.72, -1.05, 2.22, -1.23, 3.06, -0.42], ['c', 0.30, 0.33, 0.42, 0.60, 0.60, 1.38], ['c', 0.09, 0.45, 0.21, 0.78, 0.33, 0.90], ['c', 0.09, 0.09, 0.27, 0.18, 0.45, 0.21], ['c', 0.12, 0.00, 0.18, 0.00, 0.33, -0.09], ['c', 0.33, -0.15, 1.02, -0.93, 1.41, -1.59], ['c', 0.12, -0.21, 0.18, -0.39, 0.39, -1.08], ['c', 0.66, -2.10, 1.17, -3.84, 1.17, -3.87], ['c', 0.00, 0.00, -0.21, 0.06, -0.42, 0.15], ['c', -0.51, 0.15, -1.20, 0.33, -1.68, 0.42], ['c', -0.33, 0.06, -0.51, 0.06, -0.96, 0.06], ['c', -0.66, 0.00, -0.84, -0.03, -1.32, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.33, -0.45, 0.84, -0.81, 1.38, -0.90], ['z']], w: 9.724, h: 21.383 },\n\t'rests.32nd': { d: [['M', 4.23, -13.62], ['c', 0.66, -0.09, 1.23, 0.09, 1.68, 0.51], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.09, 0.33, 0.18, 0.66, 0.21, 0.72], ['c', 0.12, 0.27, 0.33, 0.45, 0.60, 0.48], ['c', 0.12, 0.00, 0.18, 0.00, 0.27, -0.06], ['c', 0.33, -0.21, 0.99, -1.11, 1.44, -1.98], ['c', 0.09, -0.24, 0.21, -0.33, 0.39, -0.33], ['c', 0.12, 0.00, 0.27, 0.09, 0.33, 0.18], ['c', 0.03, 0.06, -0.57, 2.67, -3.21, 13.89], ['c', -1.80, 7.62, -3.30, 13.89, -3.30, 13.92], ['c', -0.03, 0.06, -0.12, 0.12, -0.24, 0.18], ['c', -0.21, 0.09, -0.24, 0.09, -0.48, 0.09], ['c', -0.24, 0.00, -0.30, 0.00, -0.48, -0.06], ['c', -0.09, -0.06, -0.21, -0.12, -0.21, -0.15], ['c', -0.06, -0.03, 0.09, -0.57, 1.23, -4.92], ['c', 0.69, -2.67, 1.26, -4.86, 1.29, -4.89], ['c', 0.00, -0.03, -0.12, -0.03, -0.48, 0.12], ['c', -1.17, 0.39, -2.22, 0.57, -3.00, 0.54], ['c', -0.42, -0.03, -0.75, -0.12, -1.11, -0.30], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.72, -1.05, 2.22, -1.23, 3.06, -0.42], ['c', 0.30, 0.33, 0.42, 0.60, 0.60, 1.38], ['c', 0.09, 0.45, 0.21, 0.78, 0.33, 0.90], ['c', 0.12, 0.09, 0.30, 0.18, 0.48, 0.21], ['c', 0.12, 0.00, 0.18, 0.00, 0.30, -0.09], ['c', 0.42, -0.21, 1.29, -1.29, 1.56, -1.89], ['c', 0.03, -0.12, 1.23, -4.59, 1.23, -4.65], ['c', 0.00, -0.03, -0.18, 0.03, -0.39, 0.12], ['c', -0.63, 0.18, -1.20, 0.36, -1.74, 0.45], ['c', -0.39, 0.06, -0.54, 0.06, -1.02, 0.06], ['c', -0.66, 0.00, -0.84, -0.03, -1.32, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.72, -1.05, 2.22, -1.23, 3.06, -0.42], ['c', 0.30, 0.33, 0.42, 0.60, 0.60, 1.38], ['c', 0.09, 0.45, 0.21, 0.78, 0.33, 0.90], ['c', 0.18, 0.18, 0.51, 0.27, 0.72, 0.15], ['c', 0.30, -0.12, 0.69, -0.57, 1.08, -1.17], ['c', 0.42, -0.60, 0.39, -0.51, 1.05, -3.03], ['c', 0.33, -1.26, 0.60, -2.31, 0.60, -2.34], ['c', 0.00, 0.00, -0.21, 0.03, -0.45, 0.12], ['c', -0.57, 0.18, -1.14, 0.33, -1.62, 0.42], ['c', -0.33, 0.06, -0.51, 0.06, -0.96, 0.06], ['c', -0.66, 0.00, -0.84, -0.03, -1.32, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.33, -0.45, 0.84, -0.81, 1.38, -0.90], ['z']], w: 11.373, h: 28.883 },\n\t'rests.64th': { d: [['M', 5.13, -13.62], ['c', 0.66, -0.09, 1.23, 0.09, 1.68, 0.51], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.15, 0.63, 0.21, 0.81, 0.33, 0.96], ['c', 0.18, 0.21, 0.54, 0.30, 0.75, 0.18], ['c', 0.24, -0.12, 0.63, -0.66, 1.08, -1.56], ['c', 0.33, -0.66, 0.39, -0.72, 0.60, -0.72], ['c', 0.12, 0.00, 0.27, 0.09, 0.33, 0.18], ['c', 0.03, 0.06, -0.69, 3.66, -3.54, 17.64], ['c', -1.95, 9.66, -3.57, 17.61, -3.57, 17.64], ['c', -0.03, 0.06, -0.12, 0.12, -0.24, 0.18], ['c', -0.21, 0.09, -0.24, 0.09, -0.48, 0.09], ['c', -0.24, 0.00, -0.30, 0.00, -0.48, -0.06], ['c', -0.09, -0.06, -0.21, -0.12, -0.21, -0.15], ['c', -0.06, -0.03, 0.06, -0.57, 1.05, -4.95], ['c', 0.60, -2.70, 1.08, -4.89, 1.08, -4.92], ['c', 0.00, 0.00, -0.24, 0.06, -0.51, 0.15], ['c', -0.66, 0.24, -1.20, 0.36, -1.77, 0.48], ['c', -0.42, 0.06, -0.57, 0.06, -1.05, 0.06], ['c', -0.69, 0.00, -0.87, -0.03, -1.35, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.72, -1.05, 2.22, -1.23, 3.06, -0.42], ['c', 0.30, 0.33, 0.42, 0.60, 0.60, 1.38], ['c', 0.09, 0.45, 0.21, 0.78, 0.33, 0.90], ['c', 0.09, 0.09, 0.27, 0.18, 0.45, 0.21], ['c', 0.21, 0.03, 0.39, -0.09, 0.72, -0.42], ['c', 0.45, -0.45, 1.02, -1.26, 1.17, -1.65], ['c', 0.03, -0.09, 0.27, -1.14, 0.54, -2.34], ['c', 0.27, -1.20, 0.48, -2.19, 0.51, -2.22], ['c', 0.00, -0.03, -0.09, -0.03, -0.48, 0.12], ['c', -1.17, 0.39, -2.22, 0.57, -3.00, 0.54], ['c', -0.42, -0.03, -0.75, -0.12, -1.11, -0.30], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.36, -0.54, 0.96, -0.87, 1.65, -0.93], ['c', 0.54, -0.03, 1.02, 0.15, 1.41, 0.54], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.09, 0.33, 0.18, 0.66, 0.21, 0.72], ['c', 0.15, 0.39, 0.57, 0.57, 0.90, 0.42], ['c', 0.36, -0.18, 1.20, -1.26, 1.47, -1.89], ['c', 0.03, -0.09, 0.30, -1.20, 0.57, -2.43], ['l', 0.51, -2.28], ['l', -0.54, 0.18], ['c', -1.11, 0.36, -1.80, 0.48, -2.61, 0.48], ['c', -0.66, 0.00, -0.84, -0.03, -1.32, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.36, -0.54, 0.96, -0.87, 1.65, -0.93], ['c', 0.54, -0.03, 1.02, 0.15, 1.41, 0.54], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.15, 0.63, 0.21, 0.81, 0.33, 0.96], ['c', 0.21, 0.21, 0.54, 0.30, 0.75, 0.18], ['c', 0.36, -0.18, 0.93, -0.93, 1.29, -1.68], ['c', 0.12, -0.24, 0.18, -0.48, 0.63, -2.55], ['l', 0.51, -2.31], ['c', 0.00, -0.03, -0.18, 0.03, -0.39, 0.12], ['c', -1.14, 0.36, -2.10, 0.54, -2.82, 0.51], ['c', -0.42, -0.03, -0.75, -0.12, -1.11, -0.30], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.33, -0.45, 0.84, -0.81, 1.38, -0.90], ['z']], w: 12.453, h: 36.383 },\n\t'rests.128th': { d: [['M', 6.03, -21.12], ['c', 0.66, -0.09, 1.23, 0.09, 1.68, 0.51], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.09, 0.33, 0.18, 0.66, 0.21, 0.72], ['c', 0.12, 0.27, 0.33, 0.45, 0.60, 0.48], ['c', 0.21, 0.00, 0.33, -0.06, 0.54, -0.36], ['c', 0.15, -0.21, 0.54, -0.93, 0.78, -1.47], ['c', 0.15, -0.33, 0.18, -0.39, 0.30, -0.48], ['c', 0.18, -0.09, 0.45, 0.00, 0.51, 0.15], ['c', 0.03, 0.09, -7.11, 42.75, -7.17, 42.84], ['c', -0.03, 0.03, -0.15, 0.09, -0.24, 0.15], ['c', -0.18, 0.06, -0.24, 0.06, -0.45, 0.06], ['c', -0.24, 0.00, -0.30, 0.00, -0.48, -0.06], ['c', -0.09, -0.06, -0.21, -0.12, -0.21, -0.15], ['c', -0.06, -0.03, 0.03, -0.57, 0.84, -4.98], ['c', 0.51, -2.70, 0.93, -4.92, 0.90, -4.92], ['c', 0.00, 0.00, -0.15, 0.06, -0.36, 0.12], ['c', -0.78, 0.27, -1.62, 0.48, -2.31, 0.57], ['c', -0.15, 0.03, -0.54, 0.03, -0.81, 0.03], ['c', -0.66, 0.00, -0.84, -0.03, -1.32, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.36, -0.54, 0.96, -0.87, 1.65, -0.93], ['c', 0.54, -0.03, 1.02, 0.15, 1.41, 0.54], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.09, 0.33, 0.18, 0.66, 0.21, 0.72], ['c', 0.12, 0.27, 0.33, 0.45, 0.63, 0.48], ['c', 0.12, 0.00, 0.18, 0.00, 0.30, -0.09], ['c', 0.42, -0.21, 1.14, -1.11, 1.50, -1.83], ['c', 0.12, -0.27, 0.12, -0.27, 0.54, -2.52], ['c', 0.24, -1.23, 0.42, -2.25, 0.39, -2.25], ['c', 0.00, 0.00, -0.24, 0.06, -0.51, 0.18], ['c', -1.26, 0.39, -2.25, 0.57, -3.06, 0.54], ['c', -0.42, -0.03, -0.75, -0.12, -1.11, -0.30], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.36, -0.54, 0.96, -0.87, 1.65, -0.93], ['c', 0.54, -0.03, 1.02, 0.15, 1.41, 0.54], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.15, 0.63, 0.21, 0.81, 0.33, 0.96], ['c', 0.18, 0.21, 0.51, 0.30, 0.75, 0.18], ['c', 0.36, -0.15, 1.05, -0.99, 1.41, -1.77], ['l', 0.15, -0.30], ['l', 0.42, -2.25], ['c', 0.21, -1.26, 0.42, -2.28, 0.39, -2.28], ['l', -0.51, 0.15], ['c', -1.11, 0.39, -1.89, 0.51, -2.70, 0.51], ['c', -0.66, 0.00, -0.84, -0.03, -1.32, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.36, -0.54, 0.96, -0.87, 1.65, -0.93], ['c', 0.54, -0.03, 1.02, 0.15, 1.41, 0.54], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.15, 0.63, 0.21, 0.81, 0.33, 0.96], ['c', 0.18, 0.18, 0.48, 0.27, 0.72, 0.21], ['c', 0.33, -0.12, 1.14, -1.26, 1.41, -1.95], ['c', 0.00, -0.09, 0.21, -1.11, 0.45, -2.34], ['c', 0.21, -1.20, 0.39, -2.22, 0.39, -2.28], ['c', 0.03, -0.03, 0.00, -0.03, -0.45, 0.12], ['c', -0.57, 0.18, -1.20, 0.33, -1.71, 0.42], ['c', -0.30, 0.06, -0.51, 0.06, -0.93, 0.06], ['c', -0.66, 0.00, -0.84, -0.03, -1.32, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.36, -0.54, 0.96, -0.87, 1.65, -0.93], ['c', 0.54, -0.03, 1.02, 0.15, 1.41, 0.54], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.09, 0.33, 0.18, 0.66, 0.21, 0.72], ['c', 0.12, 0.27, 0.33, 0.45, 0.60, 0.48], ['c', 0.18, 0.00, 0.36, -0.09, 0.57, -0.33], ['c', 0.33, -0.36, 0.78, -1.14, 0.93, -1.56], ['c', 0.03, -0.12, 0.24, -1.20, 0.45, -2.40], ['c', 0.24, -1.20, 0.42, -2.22, 0.42, -2.28], ['c', 0.03, -0.03, 0.00, -0.03, -0.39, 0.09], ['c', -1.05, 0.36, -1.80, 0.48, -2.58, 0.48], ['c', -0.63, 0.00, -0.84, -0.03, -1.29, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.33, -0.45, 0.84, -0.81, 1.38, -0.90], ['z']], w: 12.992, h: 43.883 },\n\t'accidentals.sharp': { d: [['M', 5.73, -11.19], ['c', 0.21, -0.12, 0.54, -0.03, 0.66, 0.24], ['c', 0.06, 0.12, 0.06, 0.21, 0.06, 2.31], ['c', 0.00, 1.23, 0.00, 2.22, 0.03, 2.22], ['c', 0.00, 0.00, 0.27, -0.12, 0.60, -0.24], ['c', 0.69, -0.27, 0.78, -0.30, 0.96, -0.15], ['c', 0.21, 0.15, 0.21, 0.18, 0.21, 1.38], ['c', 0.00, 1.02, 0.00, 1.11, -0.06, 1.20], ['c', -0.03, 0.06, -0.09, 0.12, -0.12, 0.15], ['c', -0.06, 0.03, -0.42, 0.21, -0.84, 0.36], ['l', -0.75, 0.33], ['l', -0.03, 2.43], ['c', 0.00, 1.32, 0.00, 2.43, 0.03, 2.43], ['c', 0.00, 0.00, 0.27, -0.12, 0.60, -0.24], ['c', 0.69, -0.27, 0.78, -0.30, 0.96, -0.15], ['c', 0.21, 0.15, 0.21, 0.18, 0.21, 1.38], ['c', 0.00, 1.02, 0.00, 1.11, -0.06, 1.20], ['c', -0.03, 0.06, -0.09, 0.12, -0.12, 0.15], ['c', -0.06, 0.03, -0.42, 0.21, -0.84, 0.36], ['l', -0.75, 0.33], ['l', -0.03, 2.52], ['c', 0.00, 2.28, -0.03, 2.55, -0.06, 2.64], ['c', -0.21, 0.36, -0.72, 0.36, -0.93, 0.00], ['c', -0.03, -0.09, -0.06, -0.33, -0.06, -2.43], ['l', 0.00, -2.31], ['l', -1.29, 0.51], ['l', -1.26, 0.51], ['l', 0.00, 2.43], ['c', 0.00, 2.58, 0.00, 2.52, -0.15, 2.67], ['c', -0.06, 0.09, -0.27, 0.18, -0.36, 0.18], ['c', -0.12, 0.00, -0.33, -0.09, -0.39, -0.18], ['c', -0.15, -0.15, -0.15, -0.09, -0.15, -2.43], ['c', 0.00, -1.23, 0.00, -2.22, -0.03, -2.22], ['c', 0.00, 0.00, -0.27, 0.12, -0.60, 0.24], ['c', -0.69, 0.27, -0.78, 0.30, -0.96, 0.15], ['c', -0.21, -0.15, -0.21, -0.18, -0.21, -1.38], ['c', 0.00, -1.02, 0.00, -1.11, 0.06, -1.20], ['c', 0.03, -0.06, 0.09, -0.12, 0.12, -0.15], ['c', 0.06, -0.03, 0.42, -0.21, 0.84, -0.36], ['l', 0.78, -0.33], ['l', 0.00, -2.43], ['c', 0.00, -1.32, 0.00, -2.43, -0.03, -2.43], ['c', 0.00, 0.00, -0.27, 0.12, -0.60, 0.24], ['c', -0.69, 0.27, -0.78, 0.30, -0.96, 0.15], ['c', -0.21, -0.15, -0.21, -0.18, -0.21, -1.38], ['c', 0.00, -1.02, 0.00, -1.11, 0.06, -1.20], ['c', 0.03, -0.06, 0.09, -0.12, 0.12, -0.15], ['c', 0.06, -0.03, 0.42, -0.21, 0.84, -0.36], ['l', 0.78, -0.33], ['l', 0.00, -2.52], ['c', 0.00, -2.28, 0.03, -2.55, 0.06, -2.64], ['c', 0.21, -0.36, 0.72, -0.36, 0.93, 0.00], ['c', 0.03, 0.09, 0.06, 0.33, 0.06, 2.43], ['l', 0.03, 2.31], ['l', 1.26, -0.51], ['l', 1.26, -0.51], ['l', 0.00, -2.43], ['c', 0.00, -2.28, 0.00, -2.43, 0.06, -2.55], ['c', 0.06, -0.12, 0.12, -0.18, 0.27, -0.24], ['z'], ['m', -0.33, 10.65], ['l', 0.00, -2.43], ['l', -1.29, 0.51], ['l', -1.26, 0.51], ['l', 0.00, 2.46], ['l', 0.00, 2.43], ['l', 0.09, -0.03], ['c', 0.06, -0.03, 0.63, -0.27, 1.29, -0.51], ['l', 1.17, -0.48], ['l', 0.00, -2.46], ['z']], w: 8.25, h: 22.462 },\n\t'accidentals.halfsharp': { d: [['M', 2.43, -10.05], ['c', 0.21, -0.12, 0.54, -0.03, 0.66, 0.24], ['c', 0.06, 0.12, 0.06, 0.21, 0.06, 2.01], ['c', 0.00, 1.05, 0.00, 1.89, 0.03, 1.89], ['l', 0.72, -0.48], ['c', 0.69, -0.48, 0.69, -0.51, 0.87, -0.51], ['c', 0.15, 0.00, 0.18, 0.03, 0.27, 0.09], ['c', 0.21, 0.15, 0.21, 0.18, 0.21, 1.41], ['c', 0.00, 1.11, -0.03, 1.14, -0.09, 1.23], ['c', -0.03, 0.03, -0.48, 0.39, -1.02, 0.75], ['l', -0.99, 0.66], ['l', 0.00, 2.37], ['c', 0.00, 1.32, 0.00, 2.37, 0.03, 2.37], ['l', 0.72, -0.48], ['c', 0.69, -0.48, 0.69, -0.51, 0.87, -0.51], ['c', 0.15, 0.00, 0.18, 0.03, 0.27, 0.09], ['c', 0.21, 0.15, 0.21, 0.18, 0.21, 1.41], ['c', 0.00, 1.11, -0.03, 1.14, -0.09, 1.23], ['c', -0.03, 0.03, -0.48, 0.39, -1.02, 0.75], ['l', -0.99, 0.66], ['l', 0.00, 2.25], ['c', 0.00, 1.95, 0.00, 2.28, -0.06, 2.37], ['c', -0.06, 0.12, -0.12, 0.21, -0.24, 0.27], ['c', -0.27, 0.12, -0.54, 0.03, -0.69, -0.24], ['c', -0.06, -0.12, -0.06, -0.21, -0.06, -2.01], ['c', 0.00, -1.05, 0.00, -1.89, -0.03, -1.89], ['l', -0.72, 0.48], ['c', -0.69, 0.48, -0.69, 0.48, -0.87, 0.48], ['c', -0.15, 0.00, -0.18, 0.00, -0.27, -0.06], ['c', -0.21, -0.15, -0.21, -0.18, -0.21, -1.41], ['c', 0.00, -1.11, 0.03, -1.14, 0.09, -1.23], ['c', 0.03, -0.03, 0.48, -0.39, 1.02, -0.75], ['l', 0.99, -0.66], ['l', 0.00, -2.37], ['c', 0.00, -1.32, 0.00, -2.37, -0.03, -2.37], ['l', -0.72, 0.48], ['c', -0.69, 0.48, -0.69, 0.48, -0.87, 0.48], ['c', -0.15, 0.00, -0.18, 0.00, -0.27, -0.06], ['c', -0.21, -0.15, -0.21, -0.18, -0.21, -1.41], ['c', 0.00, -1.11, 0.03, -1.14, 0.09, -1.23], ['c', 0.03, -0.03, 0.48, -0.39, 1.02, -0.75], ['l', 0.99, -0.66], ['l', 0.00, -2.25], ['c', 0.00, -2.13, 0.00, -2.28, 0.06, -2.40], ['c', 0.06, -0.12, 0.12, -0.18, 0.27, -0.24], ['z']], w: 5.25, h: 20.174 },\n\t'accidentals.nat': { d: [['M', 0.21, -11.40], ['c', 0.24, -0.06, 0.78, 0.00, 0.99, 0.15], ['c', 0.03, 0.03, 0.03, 0.48, 0.00, 2.61], ['c', -0.03, 1.44, -0.03, 2.61, -0.03, 2.61], ['c', 0.00, 0.03, 0.75, -0.09, 1.68, -0.24], ['c', 0.96, -0.18, 1.71, -0.27, 1.74, -0.27], ['c', 0.15, 0.03, 0.27, 0.15, 0.36, 0.30], ['l', 0.06, 0.12], ['l', 0.09, 8.67], ['c', 0.09, 6.96, 0.12, 8.67, 0.09, 8.67], ['c', -0.03, 0.03, -0.12, 0.06, -0.21, 0.09], ['c', -0.24, 0.09, -0.72, 0.09, -0.96, 0.00], ['c', -0.09, -0.03, -0.18, -0.06, -0.21, -0.09], ['c', -0.03, -0.03, -0.03, -0.48, 0.00, -2.61], ['c', 0.03, -1.44, 0.03, -2.61, 0.03, -2.61], ['c', 0.00, -0.03, -0.75, 0.09, -1.68, 0.24], ['c', -0.96, 0.18, -1.71, 0.27, -1.74, 0.27], ['c', -0.15, -0.03, -0.27, -0.15, -0.36, -0.30], ['l', -0.06, -0.15], ['l', -0.09, -7.53], ['c', -0.06, -4.14, -0.09, -8.04, -0.12, -8.67], ['l', 0.00, -1.11], ['l', 0.15, -0.06], ['c', 0.09, -0.03, 0.21, -0.06, 0.27, -0.09], ['z'], ['m', 3.75, 8.40], ['c', 0.00, -0.33, 0.00, -0.42, -0.03, -0.42], ['c', -0.12, 0.00, -2.79, 0.45, -2.79, 0.48], ['c', -0.03, 0.00, -0.09, 6.30, -0.09, 6.33], ['c', 0.03, 0.00, 2.79, -0.45, 2.82, -0.48], ['c', 0.00, 0.00, 0.09, -4.53, 0.09, -5.91], ['z']], w: 5.4, h: 22.8 },\n\t'accidentals.flat': { d: [['M', -0.36, -14.07], ['c', 0.33, -0.06, 0.87, 0.00, 1.08, 0.15], ['c', 0.06, 0.03, 0.06, 0.36, -0.03, 5.25], ['c', -0.06, 2.85, -0.09, 5.19, -0.09, 5.19], ['c', 0.00, 0.03, 0.12, -0.03, 0.24, -0.12], ['c', 0.63, -0.42, 1.41, -0.66, 2.19, -0.72], ['c', 0.81, -0.03, 1.47, 0.21, 2.04, 0.78], ['c', 0.57, 0.54, 0.87, 1.26, 0.93, 2.04], ['c', 0.03, 0.57, -0.09, 1.08, -0.36, 1.62], ['c', -0.42, 0.81, -1.02, 1.38, -2.82, 2.61], ['c', -1.14, 0.78, -1.44, 1.02, -1.80, 1.44], ['c', -0.18, 0.18, -0.39, 0.39, -0.45, 0.42], ['c', -0.27, 0.18, -0.57, 0.15, -0.81, -0.06], ['c', -0.06, -0.09, -0.12, -0.18, -0.15, -0.27], ['c', -0.03, -0.06, -0.09, -3.27, -0.18, -8.34], ['c', -0.09, -4.53, -0.15, -8.58, -0.18, -9.03], ['l', 0.00, -0.78], ['l', 0.12, -0.06], ['c', 0.06, -0.03, 0.18, -0.09, 0.27, -0.12], ['z'], ['m', 3.18, 11.01], ['c', -0.21, -0.12, -0.54, -0.15, -0.81, -0.06], ['c', -0.54, 0.15, -0.99, 0.63, -1.17, 1.26], ['c', -0.06, 0.30, -0.12, 2.88, -0.06, 3.87], ['c', 0.03, 0.42, 0.03, 0.81, 0.06, 0.90], ['l', 0.03, 0.12], ['l', 0.45, -0.39], ['c', 0.63, -0.54, 1.26, -1.17, 1.56, -1.59], ['c', 0.30, -0.42, 0.60, -0.99, 0.72, -1.41], ['c', 0.18, -0.69, 0.09, -1.47, -0.18, -2.07], ['c', -0.15, -0.30, -0.33, -0.51, -0.60, -0.63], ['z']], w: 6.75, h: 18.801 },\n\t'accidentals.halfflat': { d: [['M', 4.83, -14.07], ['c', 0.33, -0.06, 0.87, 0.00, 1.08, 0.15], ['c', 0.06, 0.03, 0.06, 0.60, -0.12, 9.06], ['c', -0.09, 5.55, -0.15, 9.06, -0.18, 9.12], ['c', -0.03, 0.09, -0.09, 0.18, -0.15, 0.27], ['c', -0.24, 0.21, -0.54, 0.24, -0.81, 0.06], ['c', -0.06, -0.03, -0.27, -0.24, -0.45, -0.42], ['c', -0.36, -0.42, -0.66, -0.66, -1.80, -1.44], ['c', -1.23, -0.84, -1.83, -1.32, -2.25, -1.77], ['c', -0.66, -0.78, -0.96, -1.56, -0.93, -2.46], ['c', 0.09, -1.41, 1.11, -2.58, 2.40, -2.79], ['c', 0.30, -0.06, 0.84, -0.03, 1.23, 0.06], ['c', 0.54, 0.12, 1.08, 0.33, 1.53, 0.63], ['c', 0.12, 0.09, 0.24, 0.15, 0.24, 0.12], ['c', 0.00, 0.00, -0.12, -8.37, -0.18, -9.75], ['l', 0.00, -0.66], ['l', 0.12, -0.06], ['c', 0.06, -0.03, 0.18, -0.09, 0.27, -0.12], ['z'], ['m', -1.65, 10.95], ['c', -0.60, -0.18, -1.08, 0.09, -1.38, 0.69], ['c', -0.27, 0.60, -0.36, 1.38, -0.18, 2.07], ['c', 0.12, 0.42, 0.42, 0.99, 0.72, 1.41], ['c', 0.30, 0.42, 0.93, 1.05, 1.56, 1.59], ['l', 0.48, 0.39], ['l', 0.00, -0.12], ['c', 0.03, -0.09, 0.03, -0.48, 0.06, -0.90], ['c', 0.03, -0.57, 0.03, -1.08, 0.00, -2.22], ['c', -0.03, -1.62, -0.03, -1.62, -0.24, -2.07], ['c', -0.21, -0.42, -0.60, -0.75, -1.02, -0.84], ['z']], w: 6.728, h: 18.801 },\n\t'accidentals.dblflat': { d: [['M', -0.36, -14.07], ['c', 0.33, -0.06, 0.87, 0.00, 1.08, 0.15], ['c', 0.06, 0.03, 0.06, 0.36, -0.03, 5.25], ['c', -0.06, 2.85, -0.09, 5.19, -0.09, 5.19], ['c', 0.00, 0.03, 0.12, -0.03, 0.24, -0.12], ['c', 0.63, -0.42, 1.41, -0.66, 2.19, -0.72], ['c', 0.81, -0.03, 1.47, 0.21, 2.04, 0.78], ['c', 0.57, 0.54, 0.87, 1.26, 0.93, 2.04], ['c', 0.03, 0.57, -0.09, 1.08, -0.36, 1.62], ['c', -0.42, 0.81, -1.02, 1.38, -2.82, 2.61], ['c', -1.14, 0.78, -1.44, 1.02, -1.80, 1.44], ['c', -0.18, 0.18, -0.39, 0.39, -0.45, 0.42], ['c', -0.27, 0.18, -0.57, 0.15, -0.81, -0.06], ['c', -0.06, -0.09, -0.12, -0.18, -0.15, -0.27], ['c', -0.03, -0.06, -0.09, -3.27, -0.18, -8.34], ['c', -0.09, -4.53, -0.15, -8.58, -0.18, -9.03], ['l', 0.00, -0.78], ['l', 0.12, -0.06], ['c', 0.06, -0.03, 0.18, -0.09, 0.27, -0.12], ['z'], ['m', 3.18, 11.01], ['c', -0.21, -0.12, -0.54, -0.15, -0.81, -0.06], ['c', -0.54, 0.15, -0.99, 0.63, -1.17, 1.26], ['c', -0.06, 0.30, -0.12, 2.88, -0.06, 3.87], ['c', 0.03, 0.42, 0.03, 0.81, 0.06, 0.90], ['l', 0.03, 0.12], ['l', 0.45, -0.39], ['c', 0.63, -0.54, 1.26, -1.17, 1.56, -1.59], ['c', 0.30, -0.42, 0.60, -0.99, 0.72, -1.41], ['c', 0.18, -0.69, 0.09, -1.47, -0.18, -2.07], ['c', -0.15, -0.30, -0.33, -0.51, -0.60, -0.63], ['z'], ['m', 3, -11], ['c', 0.33, -0.06, 0.87, 0.00, 1.08, 0.15], ['c', 0.06, 0.03, 0.06, 0.36, -0.03, 5.25], ['c', -0.06, 2.85, -0.09, 5.19, -0.09, 5.19], ['c', 0.00, 0.03, 0.12, -0.03, 0.24, -0.12], ['c', 0.63, -0.42, 1.41, -0.66, 2.19, -0.72], ['c', 0.81, -0.03, 1.47, 0.21, 2.04, 0.78], ['c', 0.57, 0.54, 0.87, 1.26, 0.93, 2.04], ['c', 0.03, 0.57, -0.09, 1.08, -0.36, 1.62], ['c', -0.42, 0.81, -1.02, 1.38, -2.82, 2.61], ['c', -1.14, 0.78, -1.44, 1.02, -1.80, 1.44], ['c', -0.18, 0.18, -0.39, 0.39, -0.45, 0.42], ['c', -0.27, 0.18, -0.57, 0.15, -0.81, -0.06], ['c', -0.06, -0.09, -0.12, -0.18, -0.15, -0.27], ['c', -0.03, -0.06, -0.09, -3.27, -0.18, -8.34], ['c', -0.09, -4.53, -0.15, -8.58, -0.18, -9.03], ['l', 0.00, -0.78], ['l', 0.12, -0.06], ['c', 0.06, -0.03, 0.18, -0.09, 0.27, -0.12], ['z'], ['m', 3.18, 11.01], ['c', -0.21, -0.12, -0.54, -0.15, -0.81, -0.06], ['c', -0.54, 0.15, -0.99, 0.63, -1.17, 1.26], ['c', -0.06, 0.30, -0.12, 2.88, -0.06, 3.87], ['c', 0.03, 0.42, 0.03, 0.81, 0.06, 0.90], ['l', 0.03, 0.12], ['l', 0.45, -0.39], ['c', 0.63, -0.54, 1.26, -1.17, 1.56, -1.59], ['c', 0.30, -0.42, 0.60, -0.99, 0.72, -1.41], ['c', 0.18, -0.69, 0.09, -1.47, -0.18, -2.07], ['c', -0.15, -0.30, -0.33, -0.51, -0.60, -0.63], ['z']], w: 12.1, h: 18.804 },\n\t'accidentals.dblsharp': { d: [['M', -0.18, -3.96], ['c', 0.06, -0.03, 0.12, -0.06, 0.15, -0.06], ['c', 0.09, 0.00, 2.76, 0.27, 2.79, 0.30], ['c', 0.12, 0.03, 0.15, 0.12, 0.15, 0.51], ['c', 0.06, 0.96, 0.24, 1.59, 0.57, 2.10], ['c', 0.06, 0.09, 0.15, 0.21, 0.18, 0.24], ['l', 0.09, 0.06], ['l', 0.09, -0.06], ['c', 0.03, -0.03, 0.12, -0.15, 0.18, -0.24], ['c', 0.33, -0.51, 0.51, -1.14, 0.57, -2.10], ['c', 0.00, -0.39, 0.03, -0.45, 0.12, -0.51], ['c', 0.03, 0.00, 0.66, -0.09, 1.44, -0.15], ['c', 1.47, -0.15, 1.50, -0.15, 1.56, -0.03], ['c', 0.03, 0.06, 0.00, 0.42, -0.09, 1.44], ['c', -0.09, 0.72, -0.15, 1.35, -0.15, 1.38], ['c', 0.00, 0.03, -0.03, 0.09, -0.06, 0.12], ['c', -0.06, 0.06, -0.12, 0.09, -0.51, 0.09], ['c', -1.08, 0.06, -1.80, 0.30, -2.28, 0.75], ['l', -0.12, 0.09], ['l', 0.09, 0.09], ['c', 0.12, 0.15, 0.39, 0.33, 0.63, 0.45], ['c', 0.42, 0.18, 0.96, 0.27, 1.68, 0.33], ['c', 0.39, 0.00, 0.45, 0.03, 0.51, 0.09], ['c', 0.03, 0.03, 0.06, 0.09, 0.06, 0.12], ['c', 0.00, 0.03, 0.06, 0.66, 0.15, 1.38], ['c', 0.09, 1.02, 0.12, 1.38, 0.09, 1.44], ['c', -0.06, 0.12, -0.09, 0.12, -1.56, -0.03], ['c', -0.78, -0.06, -1.41, -0.15, -1.44, -0.15], ['c', -0.09, -0.06, -0.12, -0.12, -0.12, -0.54], ['c', -0.06, -0.93, -0.24, -1.56, -0.57, -2.07], ['c', -0.06, -0.09, -0.15, -0.21, -0.18, -0.24], ['l', -0.09, -0.06], ['l', -0.09, 0.06], ['c', -0.03, 0.03, -0.12, 0.15, -0.18, 0.24], ['c', -0.33, 0.51, -0.51, 1.14, -0.57, 2.07], ['c', 0.00, 0.42, -0.03, 0.48, -0.12, 0.54], ['c', -0.03, 0.00, -0.66, 0.09, -1.44, 0.15], ['c', -1.47, 0.15, -1.50, 0.15, -1.56, 0.03], ['c', -0.03, -0.06, 0.00, -0.42, 0.09, -1.44], ['c', 0.09, -0.72, 0.15, -1.35, 0.15, -1.38], ['c', 0.00, -0.03, 0.03, -0.09, 0.06, -0.12], ['c', 0.06, -0.06, 0.12, -0.09, 0.51, -0.09], ['c', 0.72, -0.06, 1.26, -0.15, 1.68, -0.33], ['c', 0.24, -0.12, 0.51, -0.30, 0.63, -0.45], ['l', 0.09, -0.09], ['l', -0.12, -0.09], ['c', -0.48, -0.45, -1.20, -0.69, -2.28, -0.75], ['c', -0.39, 0.00, -0.45, -0.03, -0.51, -0.09], ['c', -0.03, -0.03, -0.06, -0.09, -0.06, -0.12], ['c', 0.00, -0.03, -0.06, -0.63, -0.12, -1.38], ['c', -0.09, -0.72, -0.15, -1.35, -0.15, -1.38], ['z']], w: 7.95, h: 7.977 },\n\t'dots.dot': { d: [['M', 1.32, -1.68], ['c', 0.09, -0.03, 0.27, -0.06, 0.39, -0.06], ['c', 0.96, 0.00, 1.74, 0.78, 1.74, 1.71], ['c', 0.00, 0.96, -0.78, 1.74, -1.71, 1.74], ['c', -0.96, 0.00, -1.74, -0.78, -1.74, -1.71], ['c', 0.00, -0.78, 0.54, -1.50, 1.32, -1.68], ['z']], w: 3.45, h: 3.45 },\n\t'noteheads.dbl': { d: [['M', -0.69, -4.02], ['c', 0.18, -0.09, 0.36, -0.09, 0.54, 0.00], ['c', 0.18, 0.09, 0.24, 0.15, 0.33, 0.30], ['c', 0.06, 0.15, 0.06, 0.18, 0.06, 1.41], ['l', 0.00, 1.23], ['l', 0.12, -0.18], ['c', 0.72, -1.26, 2.64, -2.31, 4.86, -2.64], ['c', 0.81, -0.15, 1.11, -0.15, 2.13, -0.15], ['c', 0.99, 0.00, 1.29, 0.00, 2.10, 0.15], ['c', 0.75, 0.12, 1.38, 0.27, 2.04, 0.54], ['c', 1.35, 0.51, 2.34, 1.26, 2.82, 2.10], ['l', 0.12, 0.18], ['l', 0.00, -1.23], ['c', 0.00, -1.20, 0.00, -1.26, 0.06, -1.38], ['c', 0.09, -0.18, 0.15, -0.24, 0.33, -0.33], ['c', 0.18, -0.09, 0.36, -0.09, 0.54, 0.00], ['c', 0.18, 0.09, 0.24, 0.15, 0.33, 0.30], ['l', 0.06, 0.15], ['l', 0.00, 3.54], ['l', 0.00, 3.54], ['l', -0.06, 0.15], ['c', -0.09, 0.18, -0.15, 0.24, -0.33, 0.33], ['c', -0.18, 0.09, -0.36, 0.09, -0.54, 0.00], ['c', -0.18, -0.09, -0.24, -0.15, -0.33, -0.33], ['c', -0.06, -0.12, -0.06, -0.18, -0.06, -1.38], ['l', 0.00, -1.23], ['l', -0.12, 0.18], ['c', -0.48, 0.84, -1.47, 1.59, -2.82, 2.10], ['c', -0.84, 0.33, -1.71, 0.54, -2.85, 0.66], ['c', -0.45, 0.06, -2.16, 0.06, -2.61, 0.00], ['c', -1.14, -0.12, -2.01, -0.33, -2.85, -0.66], ['c', -1.35, -0.51, -2.34, -1.26, -2.82, -2.10], ['l', -0.12, -0.18], ['l', 0.00, 1.23], ['c', 0.00, 1.23, 0.00, 1.26, -0.06, 1.38], ['c', -0.09, 0.18, -0.15, 0.24, -0.33, 0.33], ['c', -0.18, 0.09, -0.36, 0.09, -0.54, 0.00], ['c', -0.18, -0.09, -0.24, -0.15, -0.33, -0.33], ['l', -0.06, -0.15], ['l', 0.00, -3.54], ['c', 0.00, -3.48, 0.00, -3.54, 0.06, -3.66], ['c', 0.09, -0.18, 0.15, -0.24, 0.33, -0.33], ['z'], ['m', 7.71, 0.63], ['c', -0.36, -0.06, -0.90, -0.06, -1.14, 0.00], ['c', -0.30, 0.03, -0.66, 0.24, -0.87, 0.42], ['c', -0.60, 0.54, -0.90, 1.62, -0.75, 2.82], ['c', 0.12, 0.93, 0.51, 1.68, 1.11, 2.31], ['c', 0.75, 0.72, 1.83, 1.20, 2.85, 1.26], ['c', 1.05, 0.06, 1.83, -0.54, 2.10, -1.65], ['c', 0.21, -0.90, 0.12, -1.95, -0.24, -2.82], ['c', -0.36, -0.81, -1.08, -1.53, -1.95, -1.95], ['c', -0.30, -0.15, -0.78, -0.30, -1.11, -0.39], ['z']], w: 16.83, h: 8.145 },\n\t'noteheads.whole': { d: [['M', 6.51, -4.05], ['c', 0.51, -0.03, 2.01, 0.00, 2.52, 0.03], ['c', 1.41, 0.18, 2.64, 0.51, 3.72, 1.08], ['c', 1.20, 0.63, 1.95, 1.41, 2.19, 2.31], ['c', 0.09, 0.33, 0.09, 0.90, 0.00, 1.23], ['c', -0.24, 0.90, -0.99, 1.68, -2.19, 2.31], ['c', -1.08, 0.57, -2.28, 0.90, -3.75, 1.08], ['c', -0.66, 0.06, -2.31, 0.06, -2.97, 0.00], ['c', -1.47, -0.18, -2.67, -0.51, -3.75, -1.08], ['c', -1.20, -0.63, -1.95, -1.41, -2.19, -2.31], ['c', -0.09, -0.33, -0.09, -0.90, 0.00, -1.23], ['c', 0.24, -0.90, 0.99, -1.68, 2.19, -2.31], ['c', 1.20, -0.63, 2.61, -0.99, 4.23, -1.11], ['z'], ['m', 0.57, 0.66], ['c', -0.87, -0.15, -1.53, 0.00, -2.04, 0.51], ['c', -0.15, 0.15, -0.24, 0.27, -0.33, 0.48], ['c', -0.24, 0.51, -0.36, 1.08, -0.33, 1.77], ['c', 0.03, 0.69, 0.18, 1.26, 0.42, 1.77], ['c', 0.60, 1.17, 1.74, 1.98, 3.18, 2.22], ['c', 1.11, 0.21, 1.95, -0.15, 2.34, -0.99], ['c', 0.24, -0.51, 0.36, -1.08, 0.33, -1.80], ['c', -0.06, -1.11, -0.45, -2.04, -1.17, -2.76], ['c', -0.63, -0.63, -1.47, -1.05, -2.40, -1.20], ['z']], w: 14.985, h: 8.097 },\n\t'noteheads.half': { d: [['M', 7.44, -4.05], ['c', 0.06, -0.03, 0.27, -0.03, 0.48, -0.03], ['c', 1.05, 0.00, 1.71, 0.24, 2.10, 0.81], ['c', 0.42, 0.60, 0.45, 1.35, 0.18, 2.40], ['c', -0.42, 1.59, -1.14, 2.73, -2.16, 3.39], ['c', -1.41, 0.93, -3.18, 1.44, -5.40, 1.53], ['c', -1.17, 0.03, -1.89, -0.21, -2.28, -0.81], ['c', -0.42, -0.60, -0.45, -1.35, -0.18, -2.40], ['c', 0.42, -1.59, 1.14, -2.73, 2.16, -3.39], ['c', 0.63, -0.42, 1.23, -0.72, 1.98, -0.96], ['c', 0.90, -0.30, 1.65, -0.42, 3.12, -0.54], ['z'], ['m', 1.29, 0.87], ['c', -0.27, -0.09, -0.63, -0.12, -0.90, -0.03], ['c', -0.72, 0.24, -1.53, 0.69, -3.27, 1.80], ['c', -2.34, 1.50, -3.30, 2.25, -3.57, 2.79], ['c', -0.36, 0.72, -0.06, 1.50, 0.66, 1.77], ['c', 0.24, 0.12, 0.69, 0.09, 0.99, 0.00], ['c', 0.84, -0.30, 1.92, -0.93, 4.14, -2.37], ['c', 1.62, -1.08, 2.37, -1.71, 2.61, -2.19], ['c', 0.36, -0.72, 0.06, -1.50, -0.66, -1.77], ['z']], w: 10.37, h: 8.132 },\n\t'noteheads.quarter': { d: [['M', 6.09, -4.05], ['c', 0.36, -0.03, 1.20, 0.00, 1.53, 0.06], ['c', 1.17, 0.24, 1.89, 0.84, 2.16, 1.83], ['c', 0.06, 0.18, 0.06, 0.30, 0.06, 0.66], ['c', 0.00, 0.45, 0.00, 0.63, -0.15, 1.08], ['c', -0.66, 2.04, -3.06, 3.93, -5.52, 4.38], ['c', -0.54, 0.09, -1.44, 0.09, -1.83, 0.03], ['c', -1.23, -0.27, -1.98, -0.87, -2.25, -1.86], ['c', -0.06, -0.18, -0.06, -0.30, -0.06, -0.66], ['c', 0.00, -0.45, 0.00, -0.63, 0.15, -1.08], ['c', 0.24, -0.78, 0.75, -1.53, 1.44, -2.22], ['c', 1.20, -1.20, 2.85, -2.01, 4.47, -2.22], ['z']], w: 9.81, h: 8.094 },\n\t'noteheads.slash.nostem': { d: [['M', 9.30, -7.77], ['c', 0.06, -0.06, 0.18, -0.06, 1.71, -0.06], ['l', 1.65, 0.00], ['l', 0.09, 0.09], ['c', 0.06, 0.06, 0.06, 0.09, 0.06, 0.15], ['c', -0.03, 0.12, -9.21, 15.24, -9.30, 15.33], ['c', -0.06, 0.06, -0.18, 0.06, -1.71, 0.06], ['l', -1.65, 0.00], ['l', -0.09, -0.09], ['c', -0.06, -0.06, -0.06, -0.09, -0.06, -0.15], ['c', 0.03, -0.12, 9.21, -15.24, 9.30, -15.33], ['z']], w: 12.81, h: 15.63 },\n\t'noteheads.indeterminate': { d: [['M', 0.78, -4.05], ['c', 0.12, -0.03, 0.24, -0.03, 0.36, 0.03], ['c', 0.03, 0.03, 0.93, 0.72, 1.95, 1.56], ['l', 1.86, 1.50], ['l', 1.86, -1.50], ['c', 1.02, -0.84, 1.92, -1.53, 1.95, -1.56], ['c', 0.21, -0.12, 0.33, -0.09, 0.75, 0.24], ['c', 0.30, 0.27, 0.36, 0.36, 0.36, 0.54], ['c', 0.00, 0.03, -0.03, 0.12, -0.06, 0.18], ['c', -0.03, 0.06, -0.90, 0.75, -1.89, 1.56], ['l', -1.80, 1.47], ['c', 0.00, 0.03, 0.81, 0.69, 1.80, 1.50], ['c', 0.99, 0.81, 1.86, 1.50, 1.89, 1.56], ['c', 0.03, 0.06, 0.06, 0.15, 0.06, 0.18], ['c', 0.00, 0.18, -0.06, 0.27, -0.36, 0.54], ['c', -0.42, 0.33, -0.54, 0.36, -0.75, 0.24], ['c', -0.03, -0.03, -0.93, -0.72, -1.95, -1.56], ['l', -1.86, -1.50], ['l', -1.86, 1.50], ['c', -1.02, 0.84, -1.92, 1.53, -1.95, 1.56], ['c', -0.21, 0.12, -0.33, 0.09, -0.75, -0.24], ['c', -0.30, -0.27, -0.36, -0.36, -0.36, -0.54], ['c', 0.00, -0.03, 0.03, -0.12, 0.06, -0.18], ['c', 0.03, -0.06, 0.90, -0.75, 1.89, -1.56], ['l', 1.80, -1.47], ['c', 0.00, -0.03, -0.81, -0.69, -1.80, -1.50], ['c', -0.99, -0.81, -1.86, -1.50, -1.89, -1.56], ['c', -0.06, -0.12, -0.09, -0.21, -0.03, -0.36], ['c', 0.03, -0.09, 0.57, -0.57, 0.72, -0.63], ['z']], w: 9.843, h: 8.139 },\n\t'scripts.ufermata': { d: [['M', -0.75, -10.77], ['c', 0.12, 0.00, 0.45, -0.03, 0.69, -0.03], ['c', 2.91, -0.03, 5.55, 1.53, 7.41, 4.35], ['c', 1.17, 1.71, 1.95, 3.72, 2.43, 6.03], ['c', 0.12, 0.51, 0.12, 0.57, 0.03, 0.69], ['c', -0.12, 0.21, -0.48, 0.27, -0.69, 0.12], ['c', -0.12, -0.09, -0.18, -0.24, -0.27, -0.69], ['c', -0.78, -3.63, -3.42, -6.54, -6.78, -7.38], ['c', -0.78, -0.21, -1.20, -0.24, -2.07, -0.24], ['c', -0.63, 0.00, -0.84, 0.00, -1.20, 0.06], ['c', -1.83, 0.27, -3.42, 1.08, -4.80, 2.37], ['c', -1.41, 1.35, -2.40, 3.21, -2.85, 5.19], ['c', -0.09, 0.45, -0.15, 0.60, -0.27, 0.69], ['c', -0.21, 0.15, -0.57, 0.09, -0.69, -0.12], ['c', -0.09, -0.12, -0.09, -0.18, 0.03, -0.69], ['c', 0.33, -1.62, 0.78, -3.00, 1.47, -4.38], ['c', 1.77, -3.54, 4.44, -5.67, 7.56, -5.97], ['z'], ['m', 0.33, 7.47], ['c', 1.38, -0.30, 2.58, 0.90, 2.31, 2.25], ['c', -0.15, 0.72, -0.78, 1.35, -1.47, 1.50], ['c', -1.38, 0.27, -2.58, -0.93, -2.31, -2.31], ['c', 0.15, -0.69, 0.78, -1.29, 1.47, -1.44], ['z']], w: 19.748, h: 11.289 },\n\t'scripts.dfermata': { d: [['M', -9.63, -0.42], ['c', 0.15, -0.09, 0.36, -0.06, 0.51, 0.03], ['c', 0.12, 0.09, 0.18, 0.24, 0.27, 0.66], ['c', 0.78, 3.66, 3.42, 6.57, 6.78, 7.41], ['c', 0.78, 0.21, 1.20, 0.24, 2.07, 0.24], ['c', 0.63, 0.00, 0.84, 0.00, 1.20, -0.06], ['c', 1.83, -0.27, 3.42, -1.08, 4.80, -2.37], ['c', 1.41, -1.35, 2.40, -3.21, 2.85, -5.22], ['c', 0.09, -0.42, 0.15, -0.57, 0.27, -0.66], ['c', 0.21, -0.15, 0.57, -0.09, 0.69, 0.12], ['c', 0.09, 0.12, 0.09, 0.18, -0.03, 0.69], ['c', -0.33, 1.62, -0.78, 3.00, -1.47, 4.38], ['c', -1.92, 3.84, -4.89, 6.00, -8.31, 6.00], ['c', -3.42, 0.00, -6.39, -2.16, -8.31, -6.00], ['c', -0.48, -0.96, -0.84, -1.92, -1.14, -2.97], ['c', -0.18, -0.69, -0.42, -1.74, -0.42, -1.92], ['c', 0.00, -0.12, 0.09, -0.27, 0.24, -0.33], ['z'], ['m', 9.21, 0.00], ['c', 1.20, -0.27, 2.34, 0.63, 2.34, 1.86], ['c', 0.00, 0.90, -0.66, 1.68, -1.50, 1.89], ['c', -1.38, 0.27, -2.58, -0.93, -2.31, -2.31], ['c', 0.15, -0.69, 0.78, -1.29, 1.47, -1.44], ['z']], w: 19.744, h: 11.274 },\n\t'scripts.sforzato': { d: [['M', -6.45, -3.69], ['c', 0.06, -0.03, 0.15, -0.06, 0.18, -0.06], ['c', 0.06, 0.00, 2.85, 0.72, 6.24, 1.59], ['l', 6.33, 1.65], ['c', 0.33, 0.06, 0.45, 0.21, 0.45, 0.51], ['c', 0.00, 0.30, -0.12, 0.45, -0.45, 0.51], ['l', -6.33, 1.65], ['c', -3.39, 0.87, -6.18, 1.59, -6.21, 1.59], ['c', -0.21, 0.00, -0.48, -0.24, -0.51, -0.45], ['c', 0.00, -0.15, 0.06, -0.36, 0.18, -0.45], ['c', 0.09, -0.06, 0.87, -0.27, 3.84, -1.05], ['c', 2.04, -0.54, 3.84, -0.99, 4.02, -1.02], ['c', 0.15, -0.06, 1.14, -0.24, 2.22, -0.42], ['c', 1.05, -0.18, 1.92, -0.36, 1.92, -0.36], ['c', 0.00, 0.00, -0.87, -0.18, -1.92, -0.36], ['c', -1.08, -0.18, -2.07, -0.36, -2.22, -0.42], ['c', -0.18, -0.03, -1.98, -0.48, -4.02, -1.02], ['c', -2.97, -0.78, -3.75, -0.99, -3.84, -1.05], ['c', -0.12, -0.09, -0.18, -0.30, -0.18, -0.45], ['c', 0.03, -0.15, 0.15, -0.30, 0.30, -0.39], ['z']], w: 13.5, h: 7.5 },\n\t'scripts.staccato': { d: [['M', -0.36, -1.47], ['c', 0.93, -0.21, 1.86, 0.51, 1.86, 1.47], ['c', 0.00, 0.93, -0.87, 1.65, -1.80, 1.47], ['c', -0.54, -0.12, -1.02, -0.57, -1.14, -1.08], ['c', -0.21, -0.81, 0.27, -1.65, 1.08, -1.86], ['z']], w: 2.989, h: 3.004 },\n\t'scripts.tenuto': { d: [['M', -4.20, -0.48], ['l', 0.12, -0.06], ['l', 4.08, 0.00], ['l', 4.08, 0.00], ['l', 0.12, 0.06], ['c', 0.39, 0.21, 0.39, 0.75, 0.00, 0.96], ['l', -0.12, 0.06], ['l', -4.08, 0.00], ['l', -4.08, 0.00], ['l', -0.12, -0.06], ['c', -0.39, -0.21, -0.39, -0.75, 0.00, -0.96], ['z']], w: 8.985, h: 1.08 },\n\t'scripts.umarcato': { d: [['M', -0.15, -8.19], ['c', 0.15, -0.12, 0.36, -0.03, 0.45, 0.15], ['c', 0.21, 0.42, 3.45, 7.65, 3.45, 7.71], ['c', 0.00, 0.12, -0.12, 0.27, -0.21, 0.30], ['c', -0.03, 0.03, -0.51, 0.03, -1.14, 0.03], ['c', -1.05, 0.00, -1.08, 0.00, -1.17, -0.06], ['c', -0.09, -0.06, -0.24, -0.36, -1.17, -2.40], ['c', -0.57, -1.29, -1.05, -2.34, -1.08, -2.34], ['c', 0.00, -0.03, -0.51, 1.02, -1.08, 2.34], ['c', -0.93, 2.07, -1.08, 2.34, -1.14, 2.40], ['c', -0.06, 0.03, -0.15, 0.06, -0.18, 0.06], ['c', -0.15, 0.00, -0.33, -0.18, -0.33, -0.33], ['c', 0.00, -0.06, 3.24, -7.32, 3.45, -7.71], ['c', 0.03, -0.06, 0.09, -0.15, 0.15, -0.15], ['z']], w: 7.5, h: 8.245 },\n\t'scripts.dmarcato': { d: [['M', -3.57, 0.03], ['c', 0.03, 0.00, 0.57, -0.03, 1.17, -0.03], ['c', 1.05, 0.00, 1.08, 0.00, 1.17, 0.06], ['c', 0.09, 0.06, 0.24, 0.36, 1.17, 2.40], ['c', 0.57, 1.29, 1.05, 2.34, 1.08, 2.34], ['c', 0.00, 0.03, 0.51, -1.02, 1.08, -2.34], ['c', 0.93, -2.07, 1.08, -2.34, 1.14, -2.40], ['c', 0.06, -0.03, 0.15, -0.06, 0.18, -0.06], ['c', 0.15, 0.00, 0.33, 0.18, 0.33, 0.33], ['c', 0.00, 0.09, -3.45, 7.74, -3.54, 7.83], ['c', -0.12, 0.12, -0.30, 0.12, -0.42, 0.00], ['c', -0.09, -0.09, -3.54, -7.74, -3.54, -7.83], ['c', 0.00, -0.09, 0.12, -0.27, 0.18, -0.30], ['z']], w: 7.5, h: 8.25 },\n\t'scripts.stopped': { d: [['M', -0.27, -4.08], ['c', 0.18, -0.09, 0.36, -0.09, 0.54, 0.00], ['c', 0.18, 0.09, 0.24, 0.15, 0.33, 0.30], ['l', 0.06, 0.15], ['l', 0.00, 1.50], ['l', 0.00, 1.47], ['l', 1.47, 0.00], ['l', 1.50, 0.00], ['l', 0.15, 0.06], ['c', 0.15, 0.09, 0.21, 0.15, 0.30, 0.33], ['c', 0.09, 0.18, 0.09, 0.36, 0.00, 0.54], ['c', -0.09, 0.18, -0.15, 0.24, -0.33, 0.33], ['c', -0.12, 0.06, -0.18, 0.06, -1.62, 0.06], ['l', -1.47, 0.00], ['l', 0.00, 1.47], ['l', 0.00, 1.47], ['l', -0.06, 0.15], ['c', -0.09, 0.18, -0.15, 0.24, -0.33, 0.33], ['c', -0.18, 0.09, -0.36, 0.09, -0.54, 0.00], ['c', -0.18, -0.09, -0.24, -0.15, -0.33, -0.33], ['l', -0.06, -0.15], ['l', 0.00, -1.47], ['l', 0.00, -1.47], ['l', -1.47, 0.00], ['c', -1.44, 0.00, -1.50, 0.00, -1.62, -0.06], ['c', -0.18, -0.09, -0.24, -0.15, -0.33, -0.33], ['c', -0.09, -0.18, -0.09, -0.36, 0.00, -0.54], ['c', 0.09, -0.18, 0.15, -0.24, 0.33, -0.33], ['l', 0.15, -0.06], ['l', 1.47, 0.00], ['l', 1.47, 0.00], ['l', 0.00, -1.47], ['c', 0.00, -1.44, 0.00, -1.50, 0.06, -1.62], ['c', 0.09, -0.18, 0.15, -0.24, 0.33, -0.33], ['z']], w: 8.295, h: 8.295 },\n\t'scripts.upbow': { d: [['M', -4.65, -15.54], ['c', 0.12, -0.09, 0.36, -0.06, 0.48, 0.03], ['c', 0.03, 0.03, 0.09, 0.09, 0.12, 0.15], ['c', 0.03, 0.06, 0.66, 2.13, 1.41, 4.62], ['c', 1.35, 4.41, 1.38, 4.56, 2.01, 6.96], ['l', 0.63, 2.46], ['l', 0.63, -2.46], ['c', 0.63, -2.40, 0.66, -2.55, 2.01, -6.96], ['c', 0.75, -2.49, 1.38, -4.56, 1.41, -4.62], ['c', 0.06, -0.15, 0.18, -0.21, 0.36, -0.24], ['c', 0.15, 0.00, 0.30, 0.06, 0.39, 0.18], ['c', 0.15, 0.21, 0.24, -0.18, -2.10, 7.56], ['c', -1.20, 3.96, -2.22, 7.32, -2.25, 7.41], ['c', 0.00, 0.12, -0.06, 0.27, -0.09, 0.30], ['c', -0.12, 0.21, -0.60, 0.21, -0.72, 0.00], ['c', -0.03, -0.03, -0.09, -0.18, -0.09, -0.30], ['c', -0.03, -0.09, -1.05, -3.45, -2.25, -7.41], ['c', -2.34, -7.74, -2.25, -7.35, -2.10, -7.56], ['c', 0.03, -0.03, 0.09, -0.09, 0.15, -0.12], ['z']], w: 9.73, h: 15.608 },\n\t'scripts.downbow': { d: [['M', -5.55, -9.93], ['l', 0.09, -0.06], ['l', 5.46, 0.00], ['l', 5.46, 0.00], ['l', 0.09, 0.06], ['l', 0.06, 0.09], ['l', 0.00, 4.77], ['c', 0.00, 5.28, 0.00, 4.89, -0.18, 5.01], ['c', -0.18, 0.12, -0.42, 0.06, -0.54, -0.12], ['c', -0.06, -0.09, -0.06, -0.18, -0.06, -2.97], ['l', 0.00, -2.85], ['l', -4.83, 0.00], ['l', -4.83, 0.00], ['l', 0.00, 2.85], ['c', 0.00, 2.79, 0.00, 2.88, -0.06, 2.97], ['c', -0.15, 0.24, -0.51, 0.24, -0.66, 0.00], ['c', -0.06, -0.09, -0.06, -0.21, -0.06, -4.89], ['l', 0.00, -4.77], ['z']], w: 11.22, h: 9.992 },\n\t'scripts.turn': { d: [['M', -4.77, -3.90], ['c', 0.36, -0.06, 1.05, -0.06, 1.44, 0.03], ['c', 0.78, 0.15, 1.50, 0.51, 2.34, 1.14], ['c', 0.60, 0.45, 1.05, 0.87, 2.22, 2.01], ['c', 1.11, 1.08, 1.62, 1.50, 2.22, 1.86], ['c', 0.60, 0.36, 1.32, 0.57, 1.92, 0.57], ['c', 0.90, 0.00, 1.71, -0.57, 1.89, -1.35], ['c', 0.24, -0.93, -0.39, -1.89, -1.35, -2.10], ['l', -0.15, -0.06], ['l', -0.09, 0.15], ['c', -0.03, 0.09, -0.15, 0.24, -0.24, 0.33], ['c', -0.72, 0.72, -2.04, 0.54, -2.49, -0.36], ['c', -0.48, -0.93, 0.03, -1.86, 1.17, -2.19], ['c', 0.30, -0.09, 1.02, -0.09, 1.35, 0.00], ['c', 0.99, 0.27, 1.74, 0.87, 2.25, 1.83], ['c', 0.69, 1.41, 0.63, 3.00, -0.21, 4.26], ['c', -0.21, 0.30, -0.69, 0.81, -0.99, 1.02], ['c', -0.30, 0.21, -0.84, 0.45, -1.17, 0.54], ['c', -1.23, 0.36, -2.49, 0.15, -3.72, -0.60], ['c', -0.75, -0.48, -1.41, -1.02, -2.85, -2.46], ['c', -1.11, -1.08, -1.62, -1.50, -2.22, -1.86], ['c', -0.60, -0.36, -1.32, -0.57, -1.92, -0.57], ['c', -0.90, 0.00, -1.71, 0.57, -1.89, 1.35], ['c', -0.24, 0.93, 0.39, 1.89, 1.35, 2.10], ['l', 0.15, 0.06], ['l', 0.09, -0.15], ['c', 0.03, -0.09, 0.15, -0.24, 0.24, -0.33], ['c', 0.72, -0.72, 2.04, -0.54, 2.49, 0.36], ['c', 0.48, 0.93, -0.03, 1.86, -1.17, 2.19], ['c', -0.30, 0.09, -1.02, 0.09, -1.35, 0.00], ['c', -0.99, -0.27, -1.74, -0.87, -2.25, -1.83], ['c', -0.69, -1.41, -0.63, -3.00, 0.21, -4.26], ['c', 0.21, -0.30, 0.69, -0.81, 0.99, -1.02], ['c', 0.48, -0.33, 1.11, -0.57, 1.74, -0.66], ['z']], w: 16.366, h: 7.893 },\n\t'scripts.trill': { d: [['M', -0.51, -16.02], ['c', 0.12, -0.09, 0.21, -0.18, 0.21, -0.18], ['l', -0.81, 4.02], ['l', -0.81, 4.02], ['c', 0.03, 0.00, 0.51, -0.27, 1.08, -0.60], ['c', 0.60, -0.30, 1.14, -0.63, 1.26, -0.66], ['c', 1.14, -0.54, 2.31, -0.60, 3.09, -0.18], ['c', 0.27, 0.15, 0.54, 0.36, 0.60, 0.51], ['l', 0.06, 0.12], ['l', 0.21, -0.21], ['c', 0.90, -0.81, 2.22, -0.99, 3.12, -0.42], ['c', 0.60, 0.42, 0.90, 1.14, 0.78, 2.07], ['c', -0.15, 1.29, -1.05, 2.31, -1.95, 2.25], ['c', -0.48, -0.03, -0.78, -0.30, -0.96, -0.81], ['c', -0.09, -0.27, -0.09, -0.90, -0.03, -1.20], ['c', 0.21, -0.75, 0.81, -1.23, 1.59, -1.32], ['l', 0.24, -0.03], ['l', -0.09, -0.12], ['c', -0.51, -0.66, -1.62, -0.63, -2.31, 0.03], ['c', -0.39, 0.42, -0.30, 0.09, -1.23, 4.77], ['l', -0.81, 4.14], ['c', -0.03, 0.00, -0.12, -0.03, -0.21, -0.09], ['c', -0.33, -0.15, -0.54, -0.18, -0.99, -0.18], ['c', -0.42, 0.00, -0.66, 0.03, -1.05, 0.18], ['c', -0.12, 0.06, -0.21, 0.09, -0.21, 0.09], ['c', 0.00, -0.03, 0.36, -1.86, 0.81, -4.11], ['c', 0.90, -4.47, 0.87, -4.26, 0.69, -4.53], ['c', -0.21, -0.36, -0.66, -0.51, -1.17, -0.36], ['c', -0.15, 0.06, -2.22, 1.14, -2.58, 1.38], ['c', -0.12, 0.09, -0.12, 0.09, -0.21, 0.60], ['l', -0.09, 0.51], ['l', 0.21, 0.24], ['c', 0.63, 0.75, 1.02, 1.47, 1.20, 2.19], ['c', 0.06, 0.27, 0.06, 0.36, 0.06, 0.81], ['c', 0.00, 0.42, 0.00, 0.54, -0.06, 0.78], ['c', -0.15, 0.54, -0.33, 0.93, -0.63, 1.35], ['c', -0.18, 0.24, -0.57, 0.63, -0.81, 0.78], ['c', -0.24, 0.15, -0.63, 0.36, -0.84, 0.42], ['c', -0.27, 0.06, -0.66, 0.06, -0.87, 0.03], ['c', -0.81, -0.18, -1.32, -1.05, -1.38, -2.46], ['c', -0.03, -0.60, 0.03, -0.99, 0.33, -2.46], ['c', 0.21, -1.08, 0.24, -1.32, 0.21, -1.29], ['c', -1.20, 0.48, -2.40, 0.75, -3.21, 0.72], ['c', -0.69, -0.06, -1.17, -0.30, -1.41, -0.72], ['c', -0.39, -0.75, -0.12, -1.80, 0.66, -2.46], ['c', 0.24, -0.18, 0.69, -0.42, 1.02, -0.51], ['c', 0.69, -0.18, 1.53, -0.15, 2.31, 0.09], ['c', 0.30, 0.09, 0.75, 0.30, 0.99, 0.45], ['c', 0.12, 0.09, 0.15, 0.09, 0.15, 0.03], ['c', 0.03, -0.03, 0.33, -1.59, 0.72, -3.45], ['c', 0.36, -1.86, 0.66, -3.42, 0.69, -3.45], ['c', 0.00, -0.03, 0.03, -0.03, 0.21, 0.03], ['c', 0.21, 0.06, 0.27, 0.06, 0.48, 0.06], ['c', 0.42, -0.03, 0.78, -0.18, 1.26, -0.48], ['c', 0.15, -0.12, 0.36, -0.27, 0.48, -0.39], ['z'], ['m', -5.73, 7.68], ['c', -0.27, -0.03, -0.96, -0.06, -1.20, -0.03], ['c', -0.81, 0.12, -1.35, 0.57, -1.50, 1.20], ['c', -0.18, 0.66, 0.12, 1.14, 0.75, 1.29], ['c', 0.66, 0.12, 1.92, -0.12, 3.18, -0.66], ['l', 0.33, -0.15], ['l', 0.09, -0.39], ['c', 0.06, -0.21, 0.09, -0.42, 0.09, -0.45], ['c', 0.00, -0.03, -0.45, -0.30, -0.75, -0.45], ['c', -0.27, -0.15, -0.66, -0.27, -0.99, -0.36], ['z'], ['m', 4.29, 3.63], ['c', -0.24, -0.39, -0.51, -0.75, -0.51, -0.69], ['c', -0.06, 0.12, -0.39, 1.92, -0.45, 2.28], ['c', -0.09, 0.54, -0.12, 1.14, -0.06, 1.38], ['c', 0.06, 0.42, 0.21, 0.60, 0.51, 0.57], ['c', 0.39, -0.06, 0.75, -0.48, 0.93, -1.14], ['c', 0.09, -0.33, 0.09, -1.05, 0.00, -1.38], ['c', -0.09, -0.39, -0.24, -0.69, -0.42, -1.02], ['z']], w: 17.963, h: 16.49 },\n\t'scripts.segno': { d: [['M', -3.72, -11.22], ['c', 0.78, -0.09, 1.59, 0.03, 2.31, 0.42], ['c', 1.20, 0.60, 2.01, 1.71, 2.31, 3.09], ['c', 0.09, 0.42, 0.09, 1.20, 0.03, 1.50], ['c', -0.15, 0.45, -0.39, 0.81, -0.66, 0.93], ['c', -0.33, 0.18, -0.84, 0.21, -1.23, 0.15], ['c', -0.81, -0.18, -1.32, -0.93, -1.26, -1.89], ['c', 0.03, -0.36, 0.09, -0.57, 0.24, -0.90], ['c', 0.15, -0.33, 0.45, -0.60, 0.72, -0.75], ['c', 0.12, -0.06, 0.18, -0.09, 0.18, -0.12], ['c', 0.00, -0.03, -0.03, -0.15, -0.09, -0.24], ['c', -0.18, -0.45, -0.54, -0.87, -0.96, -1.08], ['c', -1.11, -0.57, -2.34, -0.18, -2.88, 0.90], ['c', -0.24, 0.51, -0.33, 1.11, -0.24, 1.83], ['c', 0.27, 1.92, 1.50, 3.54, 3.93, 5.13], ['c', 0.48, 0.33, 1.26, 0.78, 1.29, 0.78], ['c', 0.03, 0.00, 1.35, -2.19, 2.94, -4.89], ['l', 2.88, -4.89], ['l', 0.84, 0.00], ['l', 0.87, 0.00], ['l', -0.03, 0.06], ['c', -0.15, 0.21, -6.15, 10.41, -6.15, 10.44], ['c', 0.00, 0.00, 0.21, 0.15, 0.48, 0.27], ['c', 2.61, 1.47, 4.35, 3.03, 5.13, 4.65], ['c', 1.14, 2.34, 0.51, 5.07, -1.44, 6.39], ['c', -0.66, 0.42, -1.32, 0.63, -2.13, 0.69], ['c', -2.01, 0.09, -3.81, -1.41, -4.26, -3.54], ['c', -0.09, -0.42, -0.09, -1.20, -0.03, -1.50], ['c', 0.15, -0.45, 0.39, -0.81, 0.66, -0.93], ['c', 0.33, -0.18, 0.84, -0.21, 1.23, -0.15], ['c', 0.81, 0.18, 1.32, 0.93, 1.26, 1.89], ['c', -0.03, 0.36, -0.09, 0.57, -0.24, 0.90], ['c', -0.15, 0.33, -0.45, 0.60, -0.72, 0.75], ['c', -0.12, 0.06, -0.18, 0.09, -0.18, 0.12], ['c', 0.00, 0.03, 0.03, 0.15, 0.09, 0.24], ['c', 0.18, 0.45, 0.54, 0.87, 0.96, 1.08], ['c', 1.11, 0.57, 2.34, 0.18, 2.88, -0.90], ['c', 0.24, -0.51, 0.33, -1.11, 0.24, -1.83], ['c', -0.27, -1.92, -1.50, -3.54, -3.93, -5.13], ['c', -0.48, -0.33, -1.26, -0.78, -1.29, -0.78], ['c', -0.03, 0.00, -1.35, 2.19, -2.91, 4.89], ['l', -2.88, 4.89], ['l', -0.87, 0.00], ['l', -0.87, 0.00], ['l', 0.03, -0.06], ['c', 0.15, -0.21, 6.15, -10.41, 6.15, -10.44], ['c', 0.00, 0.00, -0.21, -0.15, -0.48, -0.30], ['c', -2.61, -1.44, -4.35, -3.00, -5.13, -4.62], ['c', -0.90, -1.89, -0.72, -4.02, 0.48, -5.52], ['c', 0.69, -0.84, 1.68, -1.41, 2.73, -1.53], ['z'], ['m', 8.76, 9.09], ['c', 0.03, -0.03, 0.15, -0.03, 0.27, -0.03], ['c', 0.33, 0.03, 0.57, 0.18, 0.72, 0.48], ['c', 0.09, 0.18, 0.09, 0.57, 0.00, 0.75], ['c', -0.09, 0.18, -0.21, 0.30, -0.36, 0.39], ['c', -0.15, 0.06, -0.21, 0.06, -0.39, 0.06], ['c', -0.21, 0.00, -0.27, 0.00, -0.39, -0.06], ['c', -0.30, -0.15, -0.48, -0.45, -0.48, -0.75], ['c', 0.00, -0.39, 0.24, -0.72, 0.63, -0.84], ['z'], ['m', -10.53, 2.61], ['c', 0.03, -0.03, 0.15, -0.03, 0.27, -0.03], ['c', 0.33, 0.03, 0.57, 0.18, 0.72, 0.48], ['c', 0.09, 0.18, 0.09, 0.57, 0.00, 0.75], ['c', -0.09, 0.18, -0.21, 0.30, -0.36, 0.39], ['c', -0.15, 0.06, -0.21, 0.06, -0.39, 0.06], ['c', -0.21, 0.00, -0.27, 0.00, -0.39, -0.06], ['c', -0.30, -0.15, -0.48, -0.45, -0.48, -0.75], ['c', 0.00, -0.39, 0.24, -0.72, 0.63, -0.84], ['z']], w: 15, h: 22.504 },\n\t'scripts.coda': { d: [['M', -0.21, -10.47], ['c', 0.18, -0.12, 0.42, -0.06, 0.54, 0.12], ['c', 0.06, 0.09, 0.06, 0.18, 0.06, 1.50], ['l', 0.00, 1.38], ['l', 0.18, 0.00], ['c', 0.39, 0.06, 0.96, 0.24, 1.38, 0.48], ['c', 1.68, 0.93, 2.82, 3.24, 3.03, 6.12], ['c', 0.03, 0.24, 0.03, 0.45, 0.03, 0.45], ['c', 0.00, 0.03, 0.60, 0.03, 1.35, 0.03], ['c', 1.50, 0.00, 1.47, 0.00, 1.59, 0.18], ['c', 0.09, 0.12, 0.09, 0.30, 0.00, 0.42], ['c', -0.12, 0.18, -0.09, 0.18, -1.59, 0.18], ['c', -0.75, 0.00, -1.35, 0.00, -1.35, 0.03], ['c', 0.00, 0.00, 0.00, 0.21, -0.03, 0.42], ['c', -0.24, 3.15, -1.53, 5.58, -3.45, 6.36], ['c', -0.27, 0.12, -0.72, 0.24, -0.96, 0.27], ['l', -0.18, 0.00], ['l', 0.00, 1.38], ['c', 0.00, 1.32, 0.00, 1.41, -0.06, 1.50], ['c', -0.15, 0.24, -0.51, 0.24, -0.66, 0.00], ['c', -0.06, -0.09, -0.06, -0.18, -0.06, -1.50], ['l', 0.00, -1.38], ['l', -0.18, 0.00], ['c', -0.39, -0.06, -0.96, -0.24, -1.38, -0.48], ['c', -1.68, -0.93, -2.82, -3.24, -3.03, -6.15], ['c', -0.03, -0.21, -0.03, -0.42, -0.03, -0.42], ['c', 0.00, -0.03, -0.60, -0.03, -1.35, -0.03], ['c', -1.50, 0.00, -1.47, 0.00, -1.59, -0.18], ['c', -0.09, -0.12, -0.09, -0.30, 0.00, -0.42], ['c', 0.12, -0.18, 0.09, -0.18, 1.59, -0.18], ['c', 0.75, 0.00, 1.35, 0.00, 1.35, -0.03], ['c', 0.00, 0.00, 0.00, -0.21, 0.03, -0.45], ['c', 0.24, -3.12, 1.53, -5.55, 3.45, -6.33], ['c', 0.27, -0.12, 0.72, -0.24, 0.96, -0.27], ['l', 0.18, 0.00], ['l', 0.00, -1.38], ['c', 0.00, -1.53, 0.00, -1.50, 0.18, -1.62], ['z'], ['m', -0.18, 6.93], ['c', 0.00, -2.97, 0.00, -3.15, -0.06, -3.15], ['c', -0.09, 0.00, -0.51, 0.15, -0.66, 0.21], ['c', -0.87, 0.51, -1.38, 1.62, -1.56, 3.51], ['c', -0.06, 0.54, -0.12, 1.59, -0.12, 2.16], ['l', 0.00, 0.42], ['l', 1.20, 0.00], ['l', 1.20, 0.00], ['l', 0.00, -3.15], ['z'], ['m', 1.17, -3.06], ['c', -0.09, -0.03, -0.21, -0.06, -0.27, -0.09], ['l', -0.12, 0.00], ['l', 0.00, 3.15], ['l', 0.00, 3.15], ['l', 1.20, 0.00], ['l', 1.20, 0.00], ['l', 0.00, -0.81], ['c', -0.06, -2.40, -0.33, -3.69, -0.93, -4.59], ['c', -0.27, -0.39, -0.66, -0.69, -1.08, -0.81], ['z'], ['m', -1.17, 10.14], ['l', 0.00, -3.15], ['l', -1.20, 0.00], ['l', -1.20, 0.00], ['l', 0.00, 0.81], ['c', 0.03, 0.96, 0.06, 1.47, 0.15, 2.13], ['c', 0.24, 2.04, 0.96, 3.12, 2.13, 3.36], ['l', 0.12, 0.00], ['l', 0.00, -3.15], ['z'], ['m', 3.18, -2.34], ['l', 0.00, -0.81], ['l', -1.20, 0.00], ['l', -1.20, 0.00], ['l', 0.00, 3.15], ['l', 0.00, 3.15], ['l', 0.12, 0.00], ['c', 1.17, -0.24, 1.89, -1.32, 2.13, -3.36], ['c', 0.09, -0.66, 0.12, -1.17, 0.15, -2.13], ['z']], w: 16.035, h: 21.062 },\n\t'scripts.comma': { d: [['M', 1.14, -4.62], ['c', 0.30, -0.12, 0.69, -0.03, 0.93, 0.15], ['c', 0.12, 0.12, 0.36, 0.45, 0.51, 0.78], ['c', 0.90, 1.77, 0.54, 4.05, -1.08, 6.75], ['c', -0.36, 0.63, -0.87, 1.38, -0.96, 1.44], ['c', -0.18, 0.12, -0.42, 0.06, -0.54, -0.12], ['c', -0.09, -0.18, -0.09, -0.30, 0.12, -0.60], ['c', 0.96, -1.44, 1.44, -2.97, 1.38, -4.35], ['c', -0.06, -0.93, -0.30, -1.68, -0.78, -2.46], ['c', -0.27, -0.39, -0.33, -0.63, -0.24, -0.96], ['c', 0.09, -0.27, 0.36, -0.54, 0.66, -0.63], ['z']], w: 3.042, h: 9.237 },\n\t'scripts.roll': { d: [['M', 1.95, -6.00], ['c', 0.21, -0.09, 0.36, -0.09, 0.57, 0.00], ['c', 0.39, 0.15, 0.63, 0.39, 1.47, 1.35], ['c', 0.66, 0.75, 0.78, 0.87, 1.08, 1.05], ['c', 0.75, 0.45, 1.65, 0.42, 2.40, -0.06], ['c', 0.12, -0.09, 0.27, -0.27, 0.54, -0.60], ['c', 0.42, -0.54, 0.51, -0.63, 0.69, -0.63], ['c', 0.09, 0.00, 0.30, 0.12, 0.36, 0.21], ['c', 0.09, 0.12, 0.12, 0.30, 0.03, 0.42], ['c', -0.06, 0.12, -3.15, 3.90, -3.30, 4.08], ['c', -0.06, 0.06, -0.18, 0.12, -0.27, 0.18], ['c', -0.27, 0.12, -0.60, 0.06, -0.99, -0.27], ['c', -0.27, -0.21, -0.42, -0.39, -1.08, -1.14], ['c', -0.63, -0.72, -0.81, -0.90, -1.17, -1.08], ['c', -0.36, -0.18, -0.57, -0.21, -0.99, -0.21], ['c', -0.39, 0.00, -0.63, 0.03, -0.93, 0.18], ['c', -0.36, 0.15, -0.51, 0.27, -0.90, 0.81], ['c', -0.24, 0.27, -0.45, 0.51, -0.48, 0.54], ['c', -0.12, 0.09, -0.27, 0.06, -0.39, 0.00], ['c', -0.24, -0.15, -0.33, -0.39, -0.21, -0.60], ['c', 0.09, -0.12, 3.18, -3.87, 3.33, -4.02], ['c', 0.06, -0.06, 0.18, -0.15, 0.24, -0.21], ['z']], w: 10.817, h: 6.125 },\n\t'scripts.prall': { d: [['M', -4.38, -3.69], ['c', 0.06, -0.03, 0.18, -0.06, 0.24, -0.06], ['c', 0.30, 0.00, 0.27, -0.03, 1.89, 1.95], ['l', 1.53, 1.83], ['c', 0.03, 0.00, 0.57, -0.84, 1.23, -1.83], ['c', 1.14, -1.68, 1.23, -1.83, 1.35, -1.89], ['c', 0.06, -0.03, 0.18, -0.06, 0.24, -0.06], ['c', 0.30, 0.00, 0.27, -0.03, 1.89, 1.95], ['l', 1.53, 1.83], ['l', 0.48, -0.69], ['c', 0.51, -0.78, 0.54, -0.84, 0.69, -0.90], ['c', 0.42, -0.18, 0.87, 0.15, 0.81, 0.60], ['c', -0.03, 0.12, -0.30, 0.51, -1.50, 2.37], ['c', -1.38, 2.07, -1.50, 2.22, -1.62, 2.28], ['c', -0.06, 0.03, -0.18, 0.06, -0.24, 0.06], ['c', -0.30, 0.00, -0.27, 0.03, -1.89, -1.95], ['l', -1.53, -1.83], ['c', -0.03, 0.00, -0.57, 0.84, -1.23, 1.83], ['c', -1.14, 1.68, -1.23, 1.83, -1.35, 1.89], ['c', -0.06, 0.03, -0.18, 0.06, -0.24, 0.06], ['c', -0.30, 0.00, -0.27, 0.03, -1.89, -1.95], ['l', -1.53, -1.83], ['l', -0.48, 0.69], ['c', -0.51, 0.78, -0.54, 0.84, -0.69, 0.90], ['c', -0.42, 0.18, -0.87, -0.15, -0.81, -0.60], ['c', 0.03, -0.12, 0.30, -0.51, 1.50, -2.37], ['c', 1.38, -2.07, 1.50, -2.22, 1.62, -2.28], ['z']], w: 15.011, h: 7.5 },\n\t'scripts.arpeggio': { d: [['M', 1.5, 0], ['c', 1.5, 2, 1.5, 3, 1.5, 3], ['s', 0, 1, -2, 1.5], ['s', -0.5, 3, 1, 5.5], ['l', 1.5, 0], ['s', -1.75, -2, -1.9, -3.25], ['s', 2.15, -0.6, 2.95, -1.6], ['s', 0.45, -1, 0.5, -1.25], ['s', 0, -1, -2, -3.9], ['l', -1.5, 0], ['z']], w: 5, h: 10 },\n\t'scripts.mordent': { d: [['M', -0.21, -4.95], ['c', 0.27, -0.15, 0.63, 0.00, 0.75, 0.27], ['c', 0.06, 0.12, 0.06, 0.24, 0.06, 1.44], ['l', 0.00, 1.29], ['l', 0.57, -0.84], ['c', 0.51, -0.75, 0.57, -0.84, 0.69, -0.90], ['c', 0.06, -0.03, 0.18, -0.06, 0.24, -0.06], ['c', 0.30, 0.00, 0.27, -0.03, 1.89, 1.95], ['l', 1.53, 1.83], ['l', 0.48, -0.69], ['c', 0.51, -0.78, 0.54, -0.84, 0.69, -0.90], ['c', 0.42, -0.18, 0.87, 0.15, 0.81, 0.60], ['c', -0.03, 0.12, -0.30, 0.51, -1.50, 2.37], ['c', -1.38, 2.07, -1.50, 2.22, -1.62, 2.28], ['c', -0.06, 0.03, -0.18, 0.06, -0.24, 0.06], ['c', -0.30, 0.00, -0.27, 0.03, -1.83, -1.89], ['c', -0.81, -0.99, -1.50, -1.80, -1.53, -1.86], ['c', -0.06, -0.03, -0.06, -0.03, -0.12, 0.03], ['c', -0.06, 0.06, -0.06, 0.15, -0.06, 2.28], ['c', 0.00, 1.95, 0.00, 2.25, -0.06, 2.34], ['c', -0.18, 0.45, -0.81, 0.48, -1.05, 0.03], ['c', -0.03, -0.06, -0.06, -0.24, -0.06, -1.41], ['l', 0.00, -1.35], ['l', -0.57, 0.84], ['c', -0.54, 0.78, -0.60, 0.87, -0.72, 0.93], ['c', -0.06, 0.03, -0.18, 0.06, -0.24, 0.06], ['c', -0.30, 0.00, -0.27, 0.03, -1.89, -1.95], ['l', -1.53, -1.83], ['l', -0.48, 0.69], ['c', -0.51, 0.78, -0.54, 0.84, -0.69, 0.90], ['c', -0.42, 0.18, -0.87, -0.15, -0.81, -0.60], ['c', 0.03, -0.12, 0.30, -0.51, 1.50, -2.37], ['c', 1.38, -2.07, 1.50, -2.22, 1.62, -2.28], ['c', 0.06, -0.03, 0.18, -0.06, 0.24, -0.06], ['c', 0.30, 0.00, 0.27, -0.03, 1.89, 1.95], ['l', 1.53, 1.83], ['c', 0.03, 0.00, 0.06, -0.06, 0.09, -0.09], ['c', 0.06, -0.12, 0.06, -0.15, 0.06, -2.28], ['c', 0.00, -1.92, 0.00, -2.22, 0.06, -2.31], ['c', 0.06, -0.15, 0.15, -0.24, 0.30, -0.30], ['z']], w: 15.011, h: 10.012 },\n\t'flags.u8th': { d: [['M', -0.42, 3.75], ['l', 0.00, -3.75], ['l', 0.21, 0.00], ['l', 0.21, 0.00], ['l', 0.00, 0.18], ['c', 0.00, 0.30, 0.06, 0.84, 0.12, 1.23], ['c', 0.24, 1.53, 0.90, 3.12, 2.13, 5.16], ['l', 0.99, 1.59], ['c', 0.87, 1.44, 1.38, 2.34, 1.77, 3.09], ['c', 0.81, 1.68, 1.20, 3.06, 1.26, 4.53], ['c', 0.03, 1.53, -0.21, 3.27, -0.75, 5.01], ['c', -0.21, 0.69, -0.51, 1.50, -0.60, 1.59], ['c', -0.09, 0.12, -0.27, 0.21, -0.42, 0.21], ['c', -0.15, 0.00, -0.42, -0.12, -0.51, -0.21], ['c', -0.15, -0.18, -0.18, -0.42, -0.09, -0.66], ['c', 0.15, -0.33, 0.45, -1.20, 0.57, -1.62], ['c', 0.42, -1.38, 0.60, -2.58, 0.60, -3.90], ['c', 0.00, -0.66, 0.00, -0.81, -0.06, -1.11], ['c', -0.39, -2.07, -1.80, -4.26, -4.59, -7.14], ['l', -0.42, -0.45], ['l', -0.21, 0.00], ['l', -0.21, 0.00], ['l', 0.00, -3.75], ['z']], w: 6.692, h: 22.59 },\n\t'flags.u16th': { d: [['M', -0.42, 7.50], ['l', 0.00, -7.50], ['l', 0.21, 0.00], ['l', 0.21, 0.00], ['l', 0.00, 0.39], ['c', 0.06, 1.08, 0.39, 2.19, 0.99, 3.39], ['c', 0.45, 0.90, 0.87, 1.59, 1.95, 3.12], ['c', 1.29, 1.86, 1.77, 2.64, 2.22, 3.57], ['c', 0.45, 0.93, 0.72, 1.80, 0.87, 2.64], ['c', 0.06, 0.51, 0.06, 1.50, 0.00, 1.92], ['c', -0.12, 0.60, -0.30, 1.20, -0.54, 1.71], ['l', -0.09, 0.24], ['l', 0.18, 0.45], ['c', 0.51, 1.20, 0.72, 2.22, 0.69, 3.42], ['c', -0.06, 1.53, -0.39, 3.03, -0.99, 4.53], ['c', -0.30, 0.75, -0.36, 0.81, -0.57, 0.90], ['c', -0.15, 0.09, -0.33, 0.06, -0.48, 0.00], ['c', -0.18, -0.09, -0.27, -0.18, -0.33, -0.33], ['c', -0.09, -0.18, -0.06, -0.30, 0.12, -0.75], ['c', 0.66, -1.41, 1.02, -2.88, 1.08, -4.32], ['c', 0.00, -0.60, -0.03, -1.05, -0.18, -1.59], ['c', -0.30, -1.20, -0.99, -2.40, -2.25, -3.87], ['c', -0.42, -0.48, -1.53, -1.62, -2.19, -2.22], ['l', -0.45, -0.42], ['l', -0.03, 1.11], ['l', 0.00, 1.11], ['l', -0.21, 0.00], ['l', -0.21, 0.00], ['l', 0.00, -7.50], ['z'], ['m', 1.65, 0.09], ['c', -0.30, -0.30, -0.69, -0.72, -0.90, -0.87], ['l', -0.33, -0.33], ['l', 0.00, 0.15], ['c', 0.00, 0.30, 0.06, 0.81, 0.15, 1.26], ['c', 0.27, 1.29, 0.87, 2.61, 2.04, 4.29], ['c', 0.15, 0.24, 0.60, 0.87, 0.96, 1.38], ['l', 1.08, 1.53], ['l', 0.42, 0.63], ['c', 0.03, 0.00, 0.12, -0.36, 0.21, -0.72], ['c', 0.06, -0.33, 0.06, -1.20, 0.00, -1.62], ['c', -0.33, -1.71, -1.44, -3.48, -3.63, -5.70], ['z']], w: 6.693, h: 26.337 },\n\t'flags.u32nd': { d: [['M', -0.42, 11.25], ['l', 0.00, -11.25], ['l', 0.21, 0.00], ['l', 0.21, 0.00], ['l', 0.00, 0.36], ['c', 0.09, 1.68, 0.69, 3.27, 2.07, 5.46], ['l', 0.87, 1.35], ['c', 1.02, 1.62, 1.47, 2.37, 1.86, 3.18], ['c', 0.48, 1.02, 0.78, 1.92, 0.93, 2.88], ['c', 0.06, 0.48, 0.06, 1.50, 0.00, 1.89], ['c', -0.09, 0.42, -0.21, 0.87, -0.36, 1.26], ['l', -0.12, 0.30], ['l', 0.15, 0.39], ['c', 0.69, 1.56, 0.84, 2.88, 0.54, 4.38], ['c', -0.09, 0.45, -0.27, 1.08, -0.45, 1.47], ['l', -0.12, 0.24], ['l', 0.18, 0.36], ['c', 0.33, 0.72, 0.57, 1.56, 0.69, 2.34], ['c', 0.12, 1.02, -0.06, 2.52, -0.42, 3.84], ['c', -0.27, 0.93, -0.75, 2.13, -0.93, 2.31], ['c', -0.18, 0.15, -0.45, 0.18, -0.66, 0.09], ['c', -0.18, -0.09, -0.27, -0.18, -0.33, -0.33], ['c', -0.09, -0.18, -0.06, -0.30, 0.06, -0.60], ['c', 0.21, -0.36, 0.42, -0.90, 0.57, -1.38], ['c', 0.51, -1.41, 0.69, -3.06, 0.48, -4.08], ['c', -0.15, -0.81, -0.57, -1.68, -1.20, -2.55], ['c', -0.72, -0.99, -1.83, -2.13, -3.30, -3.33], ['l', -0.48, -0.42], ['l', -0.03, 1.53], ['l', 0.00, 1.56], ['l', -0.21, 0.00], ['l', -0.21, 0.00], ['l', 0.00, -11.25], ['z'], ['m', 1.26, -3.96], ['c', -0.27, -0.30, -0.54, -0.60, -0.66, -0.72], ['l', -0.18, -0.21], ['l', 0.00, 0.42], ['c', 0.06, 0.87, 0.24, 1.74, 0.66, 2.67], ['c', 0.36, 0.87, 0.96, 1.86, 1.92, 3.18], ['c', 0.21, 0.33, 0.63, 0.87, 0.87, 1.23], ['c', 0.27, 0.39, 0.60, 0.84, 0.75, 1.08], ['l', 0.27, 0.39], ['l', 0.03, -0.12], ['c', 0.12, -0.45, 0.15, -1.05, 0.09, -1.59], ['c', -0.27, -1.86, -1.38, -3.78, -3.75, -6.33], ['z'], ['m', -0.27, 6.09], ['c', -0.27, -0.21, -0.48, -0.42, -0.51, -0.45], ['c', -0.06, -0.03, -0.06, -0.03, -0.06, 0.21], ['c', 0.00, 0.90, 0.30, 2.04, 0.81, 3.09], ['c', 0.48, 1.02, 0.96, 1.77, 2.37, 3.63], ['c', 0.60, 0.78, 1.05, 1.44, 1.29, 1.77], ['c', 0.06, 0.12, 0.15, 0.21, 0.15, 0.18], ['c', 0.03, -0.03, 0.18, -0.57, 0.24, -0.87], ['c', 0.06, -0.45, 0.06, -1.32, -0.03, -1.74], ['c', -0.09, -0.48, -0.24, -0.90, -0.51, -1.44], ['c', -0.66, -1.35, -1.83, -2.70, -3.75, -4.38], ['z']], w: 6.697, h: 32.145 },\n\t'flags.u64th': { d: [['M', -0.42, 15.00], ['l', 0.00, -15.00], ['l', 0.21, 0.00], ['l', 0.21, 0.00], ['l', 0.00, 0.36], ['c', 0.06, 1.20, 0.39, 2.37, 1.02, 3.66], ['c', 0.39, 0.81, 0.84, 1.56, 1.80, 3.09], ['c', 0.81, 1.26, 1.05, 1.68, 1.35, 2.22], ['c', 0.87, 1.50, 1.35, 2.79, 1.56, 4.08], ['c', 0.06, 0.54, 0.06, 1.56, -0.03, 2.04], ['c', -0.09, 0.48, -0.21, 0.99, -0.36, 1.35], ['l', -0.12, 0.27], ['l', 0.12, 0.27], ['c', 0.09, 0.15, 0.21, 0.45, 0.27, 0.66], ['c', 0.69, 1.89, 0.63, 3.66, -0.18, 5.46], ['l', -0.18, 0.39], ['l', 0.15, 0.33], ['c', 0.30, 0.66, 0.51, 1.44, 0.63, 2.10], ['c', 0.06, 0.48, 0.06, 1.35, 0.00, 1.71], ['c', -0.15, 0.57, -0.42, 1.20, -0.78, 1.68], ['l', -0.21, 0.27], ['l', 0.18, 0.33], ['c', 0.57, 1.05, 0.93, 2.13, 1.02, 3.18], ['c', 0.06, 0.72, 0.00, 1.83, -0.21, 2.79], ['c', -0.18, 1.02, -0.63, 2.34, -1.02, 3.09], ['c', -0.15, 0.33, -0.48, 0.45, -0.78, 0.30], ['c', -0.18, -0.09, -0.27, -0.18, -0.33, -0.33], ['c', -0.09, -0.18, -0.06, -0.30, 0.03, -0.54], ['c', 0.75, -1.50, 1.23, -3.45, 1.17, -4.89], ['c', -0.06, -1.02, -0.42, -2.01, -1.17, -3.15], ['c', -0.48, -0.72, -1.02, -1.35, -1.89, -2.22], ['c', -0.57, -0.57, -1.56, -1.50, -1.92, -1.77], ['l', -0.12, -0.09], ['l', 0.00, 1.68], ['l', 0.00, 1.68], ['l', -0.21, 0.00], ['l', -0.21, 0.00], ['l', 0.00, -15.00], ['z'], ['m', 0.93, -8.07], ['c', -0.27, -0.30, -0.48, -0.54, -0.51, -0.54], ['c', 0.00, 0.00, 0.00, 0.69, 0.03, 1.02], ['c', 0.15, 1.47, 0.75, 2.94, 2.04, 4.83], ['l', 1.08, 1.53], ['c', 0.39, 0.57, 0.84, 1.20, 0.99, 1.44], ['c', 0.15, 0.24, 0.30, 0.45, 0.30, 0.45], ['c', 0.00, 0.00, 0.03, -0.09, 0.06, -0.21], ['c', 0.36, -1.59, -0.15, -3.33, -1.47, -5.40], ['c', -0.63, -0.93, -1.35, -1.83, -2.52, -3.12], ['z'], ['m', 0.06, 6.72], ['c', -0.24, -0.21, -0.48, -0.42, -0.51, -0.45], ['l', -0.06, -0.06], ['l', 0.00, 0.33], ['c', 0.00, 1.20, 0.30, 2.34, 0.93, 3.60], ['c', 0.45, 0.90, 0.96, 1.68, 2.25, 3.51], ['c', 0.39, 0.54, 0.84, 1.17, 1.02, 1.44], ['c', 0.21, 0.33, 0.33, 0.51, 0.33, 0.48], ['c', 0.06, -0.09, 0.21, -0.63, 0.30, -0.99], ['c', 0.06, -0.33, 0.06, -0.45, 0.06, -0.96], ['c', 0.00, -0.60, -0.03, -0.84, -0.18, -1.35], ['c', -0.30, -1.08, -1.02, -2.28, -2.13, -3.57], ['c', -0.39, -0.45, -1.44, -1.47, -2.01, -1.98], ['z'], ['m', 0.00, 6.72], ['c', -0.24, -0.21, -0.48, -0.39, -0.51, -0.42], ['l', -0.06, -0.06], ['l', 0.00, 0.33], ['c', 0.00, 1.41, 0.45, 2.82, 1.38, 4.35], ['c', 0.42, 0.72, 0.72, 1.14, 1.86, 2.73], ['c', 0.36, 0.45, 0.75, 0.99, 0.87, 1.20], ['c', 0.15, 0.21, 0.30, 0.36, 0.30, 0.36], ['c', 0.06, 0.00, 0.30, -0.48, 0.39, -0.75], ['c', 0.09, -0.36, 0.12, -0.63, 0.12, -1.05], ['c', -0.06, -1.05, -0.45, -2.04, -1.20, -3.18], ['c', -0.57, -0.87, -1.11, -1.53, -2.07, -2.49], ['c', -0.36, -0.33, -0.84, -0.78, -1.08, -1.02], ['z']], w: 6.682, h: 39.694 },\n\t'flags.d8th': { d: [['M', 5.67, -21.63], ['c', 0.24, -0.12, 0.54, -0.06, 0.69, 0.15], ['c', 0.06, 0.06, 0.21, 0.36, 0.39, 0.66], ['c', 0.84, 1.77, 1.26, 3.36, 1.32, 5.10], ['c', 0.03, 1.29, -0.21, 2.37, -0.81, 3.63], ['c', -0.60, 1.23, -1.26, 2.13, -3.21, 4.38], ['c', -1.35, 1.53, -1.86, 2.19, -2.40, 2.97], ['c', -0.63, 0.93, -1.11, 1.92, -1.38, 2.79], ['c', -0.15, 0.54, -0.27, 1.35, -0.27, 1.80], ['l', 0.00, 0.15], ['l', -0.21, 0.00], ['l', -0.21, 0.00], ['l', 0.00, -3.75], ['l', 0.00, -3.75], ['l', 0.21, 0.00], ['l', 0.21, 0.00], ['l', 0.48, -0.30], ['c', 1.83, -1.11, 3.12, -2.10, 4.17, -3.12], ['c', 0.78, -0.81, 1.32, -1.53, 1.71, -2.31], ['c', 0.45, -0.93, 0.60, -1.74, 0.51, -2.88], ['c', -0.12, -1.56, -0.63, -3.18, -1.47, -4.68], ['c', -0.12, -0.21, -0.15, -0.33, -0.06, -0.51], ['c', 0.06, -0.15, 0.15, -0.24, 0.33, -0.33], ['z']], w: 8.492, h: 21.691 },\n\t'flags.ugrace': { d: [['M', 6.03, 6.93], ['c', 0.15, -0.09, 0.33, -0.06, 0.51, 0.00], ['c', 0.15, 0.09, 0.21, 0.15, 0.30, 0.33], ['c', 0.09, 0.18, 0.06, 0.39, -0.03, 0.54], ['c', -0.06, 0.15, -10.89, 8.88, -11.07, 8.97], ['c', -0.15, 0.09, -0.33, 0.06, -0.48, 0.00], ['c', -0.18, -0.09, -0.24, -0.15, -0.33, -0.33], ['c', -0.09, -0.18, -0.06, -0.39, 0.03, -0.54], ['c', 0.06, -0.15, 10.89, -8.88, 11.07, -8.97], ['z']], w: 12.019, h: 9.954 },\n\t'flags.dgrace': { d: [['M', -6.06, -15.93], ['c', 0.18, -0.09, 0.33, -0.12, 0.48, -0.06], ['c', 0.18, 0.09, 14.01, 8.04, 14.10, 8.10], ['c', 0.12, 0.12, 0.18, 0.33, 0.18, 0.51], ['c', -0.03, 0.21, -0.15, 0.39, -0.36, 0.48], ['c', -0.18, 0.09, -0.33, 0.12, -0.48, 0.06], ['c', -0.18, -0.09, -14.01, -8.04, -14.10, -8.10], ['c', -0.12, -0.12, -0.18, -0.33, -0.18, -0.51], ['c', 0.03, -0.21, 0.15, -0.39, 0.36, -0.48], ['z']], w: 15.12, h: 9.212 },\n\t'flags.d16th': { d: [['M', 6.84, -22.53], ['c', 0.27, -0.12, 0.57, -0.06, 0.72, 0.15], ['c', 0.15, 0.15, 0.33, 0.87, 0.45, 1.56], ['c', 0.06, 0.33, 0.06, 1.35, 0.00, 1.65], ['c', -0.06, 0.33, -0.15, 0.78, -0.27, 1.11], ['c', -0.12, 0.33, -0.45, 0.96, -0.66, 1.32], ['l', -0.18, 0.27], ['l', 0.09, 0.18], ['c', 0.48, 1.02, 0.72, 2.25, 0.69, 3.30], ['c', -0.06, 1.23, -0.42, 2.28, -1.26, 3.45], ['c', -0.57, 0.87, -0.99, 1.32, -3.00, 3.39], ['c', -1.56, 1.56, -2.22, 2.40, -2.76, 3.45], ['c', -0.42, 0.84, -0.66, 1.80, -0.66, 2.55], ['l', 0.00, 0.15], ['l', -0.21, 0.00], ['l', -0.21, 0.00], ['l', 0.00, -7.50], ['l', 0.00, -7.50], ['l', 0.21, 0.00], ['l', 0.21, 0.00], ['l', 0.00, 1.14], ['l', 0.00, 1.11], ['l', 0.27, -0.15], ['c', 1.11, -0.57, 1.77, -0.99, 2.52, -1.47], ['c', 2.37, -1.56, 3.69, -3.15, 4.05, -4.83], ['c', 0.03, -0.18, 0.03, -0.39, 0.03, -0.78], ['c', 0.00, -0.60, -0.03, -0.93, -0.24, -1.50], ['c', -0.06, -0.18, -0.12, -0.39, -0.15, -0.45], ['c', -0.03, -0.24, 0.12, -0.48, 0.36, -0.60], ['z'], ['m', -0.63, 7.50], ['c', -0.06, -0.18, -0.15, -0.36, -0.15, -0.36], ['c', -0.03, 0.00, -0.03, 0.03, -0.06, 0.06], ['c', -0.06, 0.12, -0.96, 1.02, -1.95, 1.98], ['c', -0.63, 0.57, -1.26, 1.17, -1.44, 1.35], ['c', -1.53, 1.62, -2.28, 2.85, -2.55, 4.32], ['c', -0.03, 0.18, -0.03, 0.54, -0.06, 0.99], ['l', 0.00, 0.69], ['l', 0.18, -0.09], ['c', 0.93, -0.54, 2.10, -1.29, 2.82, -1.83], ['c', 0.69, -0.51, 1.02, -0.81, 1.53, -1.29], ['c', 1.86, -1.89, 2.37, -3.66, 1.68, -5.82], ['z']], w: 8.475, h: 22.591 },\n\t'flags.d32nd': { d: [['M', 6.84, -29.13], ['c', 0.27, -0.12, 0.57, -0.06, 0.72, 0.15], ['c', 0.12, 0.12, 0.27, 0.63, 0.36, 1.11], ['c', 0.33, 1.59, 0.06, 3.06, -0.81, 4.47], ['l', -0.18, 0.27], ['l', 0.09, 0.15], ['c', 0.12, 0.24, 0.33, 0.69, 0.45, 1.05], ['c', 0.63, 1.83, 0.45, 3.57, -0.57, 5.22], ['l', -0.18, 0.30], ['l', 0.15, 0.27], ['c', 0.42, 0.87, 0.60, 1.71, 0.57, 2.61], ['c', -0.06, 1.29, -0.48, 2.46, -1.35, 3.78], ['c', -0.54, 0.81, -0.93, 1.29, -2.46, 3.00], ['c', -0.51, 0.54, -1.05, 1.17, -1.26, 1.41], ['c', -1.56, 1.86, -2.25, 3.36, -2.37, 5.01], ['l', 0.00, 0.33], ['l', -0.21, 0.00], ['l', -0.21, 0.00], ['l', 0.00, -11.25], ['l', 0.00, -11.25], ['l', 0.21, 0.00], ['l', 0.21, 0.00], ['l', 0.00, 1.35], ['l', 0.03, 1.35], ['l', 0.78, -0.39], ['c', 1.38, -0.69, 2.34, -1.26, 3.24, -1.92], ['c', 1.38, -1.02, 2.28, -2.13, 2.64, -3.21], ['c', 0.15, -0.48, 0.18, -0.72, 0.18, -1.29], ['c', 0.00, -0.57, -0.06, -0.90, -0.24, -1.47], ['c', -0.06, -0.18, -0.12, -0.39, -0.15, -0.45], ['c', -0.03, -0.24, 0.12, -0.48, 0.36, -0.60], ['z'], ['m', -0.63, 7.20], ['c', -0.09, -0.18, -0.12, -0.21, -0.12, -0.15], ['c', -0.03, 0.09, -1.02, 1.08, -2.04, 2.04], ['c', -1.17, 1.08, -1.65, 1.56, -2.07, 2.04], ['c', -0.84, 0.96, -1.38, 1.86, -1.68, 2.76], ['c', -0.21, 0.57, -0.27, 0.99, -0.30, 1.65], ['l', 0.00, 0.54], ['l', 0.66, -0.33], ['c', 3.57, -1.86, 5.49, -3.69, 5.94, -5.70], ['c', 0.06, -0.39, 0.06, -1.20, -0.03, -1.65], ['c', -0.06, -0.39, -0.24, -0.90, -0.36, -1.20], ['z'], ['m', -0.06, 7.20], ['c', -0.06, -0.15, -0.12, -0.33, -0.15, -0.45], ['l', -0.06, -0.18], ['l', -0.18, 0.21], ['l', -1.83, 1.83], ['c', -0.87, 0.90, -1.77, 1.80, -1.95, 2.01], ['c', -1.08, 1.29, -1.62, 2.31, -1.89, 3.51], ['c', -0.06, 0.30, -0.06, 0.51, -0.09, 0.93], ['l', 0.00, 0.57], ['l', 0.09, -0.06], ['c', 0.75, -0.45, 1.89, -1.26, 2.52, -1.74], ['c', 0.81, -0.66, 1.74, -1.53, 2.22, -2.16], ['c', 1.26, -1.53, 1.68, -3.06, 1.32, -4.47], ['z']], w: 8.385, h: 29.191 },\n\t'flags.d64th': { d: [['M', 7.08, -32.88], ['c', 0.30, -0.12, 0.66, -0.03, 0.78, 0.24], ['c', 0.18, 0.33, 0.27, 2.10, 0.15, 2.64], ['c', -0.09, 0.39, -0.21, 0.78, -0.39, 1.08], ['l', -0.15, 0.30], ['l', 0.09, 0.27], ['c', 0.03, 0.12, 0.09, 0.45, 0.12, 0.69], ['c', 0.27, 1.44, 0.18, 2.55, -0.30, 3.60], ['l', -0.12, 0.33], ['l', 0.06, 0.42], ['c', 0.27, 1.35, 0.33, 2.82, 0.21, 3.63], ['c', -0.12, 0.60, -0.30, 1.23, -0.57, 1.80], ['l', -0.15, 0.27], ['l', 0.03, 0.42], ['c', 0.06, 1.02, 0.06, 2.70, 0.03, 3.06], ['c', -0.15, 1.47, -0.66, 2.76, -1.74, 4.41], ['c', -0.45, 0.69, -0.75, 1.11, -1.74, 2.37], ['c', -1.05, 1.38, -1.50, 1.98, -1.95, 2.73], ['c', -0.93, 1.50, -1.38, 2.82, -1.44, 4.20], ['l', 0.00, 0.42], ['l', -0.21, 0.00], ['l', -0.21, 0.00], ['l', 0.00, -15.00], ['l', 0.00, -15.00], ['l', 0.21, 0.00], ['l', 0.21, 0.00], ['l', 0.00, 1.86], ['l', 0.00, 1.89], ['c', 0.00, 0.00, 0.21, -0.03, 0.45, -0.09], ['c', 2.22, -0.39, 4.08, -1.11, 5.19, -2.01], ['c', 0.63, -0.54, 1.02, -1.14, 1.20, -1.80], ['c', 0.06, -0.30, 0.06, -1.14, -0.03, -1.65], ['c', -0.03, -0.18, -0.06, -0.39, -0.09, -0.48], ['c', -0.03, -0.24, 0.12, -0.48, 0.36, -0.60], ['z'], ['m', -0.45, 6.15], ['c', -0.03, -0.18, -0.06, -0.42, -0.06, -0.54], ['l', -0.03, -0.18], ['l', -0.33, 0.30], ['c', -0.42, 0.36, -0.87, 0.72, -1.68, 1.29], ['c', -1.98, 1.38, -2.25, 1.59, -2.85, 2.16], ['c', -0.75, 0.69, -1.23, 1.44, -1.47, 2.19], ['c', -0.15, 0.45, -0.18, 0.63, -0.21, 1.35], ['l', 0.00, 0.66], ['l', 0.39, -0.18], ['c', 1.83, -0.90, 3.45, -1.95, 4.47, -2.91], ['c', 0.93, -0.90, 1.53, -1.83, 1.74, -2.82], ['c', 0.06, -0.33, 0.06, -0.87, 0.03, -1.32], ['z'], ['m', -0.27, 4.86], ['c', -0.03, -0.21, -0.06, -0.36, -0.06, -0.36], ['c', 0.00, -0.03, -0.12, 0.09, -0.24, 0.24], ['c', -0.39, 0.48, -0.99, 1.08, -2.16, 2.19], ['c', -1.47, 1.38, -1.92, 1.83, -2.46, 2.49], ['c', -0.66, 0.87, -1.08, 1.74, -1.29, 2.58], ['c', -0.09, 0.42, -0.15, 0.87, -0.15, 1.44], ['l', 0.00, 0.54], ['l', 0.48, -0.33], ['c', 1.50, -1.02, 2.58, -1.89, 3.51, -2.82], ['c', 1.47, -1.47, 2.25, -2.85, 2.40, -4.26], ['c', 0.03, -0.39, 0.03, -1.17, -0.03, -1.71], ['z'], ['m', -0.66, 7.68], ['c', 0.03, -0.15, 0.03, -0.60, 0.03, -0.99], ['l', 0.00, -0.72], ['l', -0.27, 0.33], ['l', -1.74, 1.98], ['c', -1.77, 1.92, -2.43, 2.76, -2.97, 3.90], ['c', -0.51, 1.02, -0.72, 1.77, -0.75, 2.91], ['c', 0.00, 0.63, 0.00, 0.63, 0.06, 0.60], ['c', 0.03, -0.03, 0.30, -0.27, 0.63, -0.54], ['c', 0.66, -0.60, 1.86, -1.80, 2.31, -2.31], ['c', 1.65, -1.89, 2.52, -3.54, 2.70, -5.16], ['z']], w: 8.485, h: 32.932 },\n\t'clefs.C': { d: [['M', 0.06, -14.94], ['l', 0.09, -0.06], ['l', 1.92, 0.00], ['l', 1.92, 0.00], ['l', 0.09, 0.06], ['l', 0.06, 0.09], ['l', 0.00, 14.85], ['l', 0.00, 14.82], ['l', -0.06, 0.09], ['l', -0.09, 0.06], ['l', -1.92, 0.00], ['l', -1.92, 0.00], ['l', -0.09, -0.06], ['l', -0.06, -0.09], ['l', 0.00, -14.82], ['l', 0.00, -14.85], ['z'], ['m', 5.37, 0.00], ['c', 0.09, -0.06, 0.09, -0.06, 0.57, -0.06], ['c', 0.45, 0.00, 0.45, 0.00, 0.54, 0.06], ['l', 0.06, 0.09], ['l', 0.00, 7.14], ['l', 0.00, 7.11], ['l', 0.09, -0.06], ['c', 0.18, -0.18, 0.72, -0.84, 0.96, -1.20], ['c', 0.30, -0.45, 0.66, -1.17, 0.84, -1.65], ['c', 0.36, -0.90, 0.57, -1.83, 0.60, -2.79], ['c', 0.03, -0.48, 0.03, -0.54, 0.09, -0.63], ['c', 0.12, -0.18, 0.36, -0.21, 0.54, -0.12], ['c', 0.18, 0.09, 0.21, 0.15, 0.24, 0.66], ['c', 0.06, 0.87, 0.21, 1.56, 0.57, 2.22], ['c', 0.51, 1.02, 1.26, 1.68, 2.22, 1.92], ['c', 0.21, 0.06, 0.33, 0.06, 0.78, 0.06], ['c', 0.45, 0.00, 0.57, 0.00, 0.84, -0.06], ['c', 0.45, -0.12, 0.81, -0.33, 1.08, -0.60], ['c', 0.57, -0.57, 0.87, -1.41, 0.99, -2.88], ['c', 0.06, -0.54, 0.06, -3.00, 0.00, -3.57], ['c', -0.21, -2.58, -0.84, -3.87, -2.16, -4.50], ['c', -0.48, -0.21, -1.17, -0.36, -1.77, -0.36], ['c', -0.69, 0.00, -1.29, 0.27, -1.50, 0.72], ['c', -0.06, 0.15, -0.06, 0.21, -0.06, 0.42], ['c', 0.00, 0.24, 0.00, 0.30, 0.06, 0.45], ['c', 0.12, 0.24, 0.24, 0.39, 0.63, 0.66], ['c', 0.42, 0.30, 0.57, 0.48, 0.69, 0.72], ['c', 0.06, 0.15, 0.06, 0.21, 0.06, 0.48], ['c', 0.00, 0.39, -0.03, 0.63, -0.21, 0.96], ['c', -0.30, 0.60, -0.87, 1.08, -1.50, 1.26], ['c', -0.27, 0.06, -0.87, 0.06, -1.14, 0.00], ['c', -0.78, -0.24, -1.44, -0.87, -1.65, -1.68], ['c', -0.12, -0.42, -0.09, -1.17, 0.09, -1.71], ['c', 0.51, -1.65, 1.98, -2.82, 3.81, -3.09], ['c', 0.84, -0.09, 2.46, 0.03, 3.51, 0.27], ['c', 2.22, 0.57, 3.69, 1.80, 4.44, 3.75], ['c', 0.36, 0.93, 0.57, 2.13, 0.57, 3.36], ['c', 0.00, 1.44, -0.48, 2.73, -1.38, 3.81], ['c', -1.26, 1.50, -3.27, 2.43, -5.28, 2.43], ['c', -0.48, 0.00, -0.51, 0.00, -0.75, -0.09], ['c', -0.15, -0.03, -0.48, -0.21, -0.78, -0.36], ['c', -0.69, -0.36, -0.87, -0.42, -1.26, -0.42], ['c', -0.27, 0.00, -0.30, 0.00, -0.51, 0.09], ['c', -0.57, 0.30, -0.81, 0.90, -0.81, 2.10], ['c', 0.00, 1.23, 0.24, 1.83, 0.81, 2.13], ['c', 0.21, 0.09, 0.24, 0.09, 0.51, 0.09], ['c', 0.39, 0.00, 0.57, -0.06, 1.26, -0.42], ['c', 0.30, -0.15, 0.63, -0.33, 0.78, -0.36], ['c', 0.24, -0.09, 0.27, -0.09, 0.75, -0.09], ['c', 2.01, 0.00, 4.02, 0.93, 5.28, 2.40], ['c', 0.90, 1.11, 1.38, 2.40, 1.38, 3.84], ['c', 0.00, 1.50, -0.30, 2.88, -0.84, 3.96], ['c', -0.78, 1.59, -2.19, 2.64, -4.17, 3.15], ['c', -1.05, 0.24, -2.67, 0.36, -3.51, 0.27], ['c', -1.83, -0.27, -3.30, -1.44, -3.81, -3.09], ['c', -0.18, -0.54, -0.21, -1.29, -0.09, -1.74], ['c', 0.15, -0.60, 0.63, -1.20, 1.23, -1.47], ['c', 0.36, -0.18, 0.57, -0.21, 0.99, -0.21], ['c', 0.42, 0.00, 0.63, 0.03, 1.02, 0.21], ['c', 0.42, 0.21, 0.84, 0.63, 1.05, 1.05], ['c', 0.18, 0.36, 0.21, 0.60, 0.21, 0.96], ['c', 0.00, 0.30, 0.00, 0.36, -0.06, 0.51], ['c', -0.12, 0.24, -0.27, 0.42, -0.69, 0.72], ['c', -0.57, 0.42, -0.69, 0.63, -0.69, 1.08], ['c', 0.00, 0.24, 0.00, 0.30, 0.06, 0.45], ['c', 0.12, 0.21, 0.30, 0.39, 0.57, 0.54], ['c', 0.42, 0.18, 0.87, 0.21, 1.53, 0.15], ['c', 1.08, -0.15, 1.80, -0.57, 2.34, -1.32], ['c', 0.54, -0.75, 0.84, -1.83, 0.99, -3.51], ['c', 0.06, -0.57, 0.06, -3.03, 0.00, -3.57], ['c', -0.12, -1.47, -0.42, -2.31, -0.99, -2.88], ['c', -0.27, -0.27, -0.63, -0.48, -1.08, -0.60], ['c', -0.27, -0.06, -0.39, -0.06, -0.84, -0.06], ['c', -0.45, 0.00, -0.57, 0.00, -0.78, 0.06], ['c', -1.14, 0.27, -2.01, 1.17, -2.46, 2.49], ['c', -0.21, 0.57, -0.30, 0.99, -0.33, 1.65], ['c', -0.03, 0.51, -0.06, 0.57, -0.24, 0.66], ['c', -0.12, 0.06, -0.27, 0.06, -0.39, 0.00], ['c', -0.21, -0.09, -0.21, -0.15, -0.24, -0.75], ['c', -0.09, -1.92, -0.78, -3.72, -2.01, -5.19], ['c', -0.18, -0.21, -0.36, -0.42, -0.39, -0.45], ['l', -0.09, -0.06], ['l', 0.00, 7.11], ['l', 0.00, 7.14], ['l', -0.06, 0.09], ['c', -0.09, 0.06, -0.09, 0.06, -0.54, 0.06], ['c', -0.48, 0.00, -0.48, 0.00, -0.57, -0.06], ['l', -0.06, -0.09], ['l', 0.00, -14.82], ['l', 0.00, -14.85], ['z']], w: 20.31, h: 29.97 },\n\t'clefs.F': { d: [['M', 6.30, -7.80], ['c', 0.36, -0.03, 1.65, 0.00, 2.13, 0.03], ['c', 3.60, 0.42, 6.03, 2.10, 6.93, 4.86], ['c', 0.27, 0.84, 0.36, 1.50, 0.36, 2.58], ['c', 0.00, 0.90, -0.03, 1.35, -0.18, 2.16], ['c', -0.78, 3.78, -3.54, 7.08, -8.37, 9.96], ['c', -1.74, 1.05, -3.87, 2.13, -6.18, 3.12], ['c', -0.39, 0.18, -0.75, 0.33, -0.81, 0.36], ['c', -0.06, 0.03, -0.15, 0.06, -0.18, 0.06], ['c', -0.15, 0.00, -0.33, -0.18, -0.33, -0.33], ['c', 0.00, -0.15, 0.06, -0.21, 0.51, -0.48], ['c', 3.00, -1.77, 5.13, -3.21, 6.84, -4.74], ['c', 0.51, -0.45, 1.59, -1.50, 1.95, -1.95], ['c', 1.89, -2.19, 2.88, -4.32, 3.15, -6.78], ['c', 0.06, -0.42, 0.06, -1.77, 0.00, -2.19], ['c', -0.24, -2.01, -0.93, -3.63, -2.04, -4.71], ['c', -0.63, -0.63, -1.29, -1.02, -2.07, -1.20], ['c', -1.62, -0.39, -3.36, 0.15, -4.56, 1.44], ['c', -0.54, 0.60, -1.05, 1.47, -1.32, 2.22], ['l', -0.09, 0.21], ['l', 0.24, -0.12], ['c', 0.39, -0.21, 0.63, -0.24, 1.11, -0.24], ['c', 0.30, 0.00, 0.45, 0.00, 0.66, 0.06], ['c', 1.92, 0.48, 2.85, 2.55, 1.95, 4.38], ['c', -0.45, 0.99, -1.41, 1.62, -2.46, 1.71], ['c', -1.47, 0.09, -2.91, -0.87, -3.39, -2.25], ['c', -0.18, -0.57, -0.21, -1.32, -0.03, -2.28], ['c', 0.39, -2.25, 1.83, -4.20, 3.81, -5.19], ['c', 0.69, -0.36, 1.59, -0.60, 2.37, -0.69], ['z'], ['m', 11.58, 2.52], ['c', 0.84, -0.21, 1.71, 0.30, 1.89, 1.14], ['c', 0.30, 1.17, -0.72, 2.19, -1.89, 1.89], ['c', -0.99, -0.21, -1.50, -1.32, -1.02, -2.25], ['c', 0.18, -0.39, 0.60, -0.69, 1.02, -0.78], ['z'], ['m', 0.00, 7.50], ['c', 0.84, -0.21, 1.71, 0.30, 1.89, 1.14], ['c', 0.21, 0.87, -0.30, 1.71, -1.14, 1.89], ['c', -0.87, 0.21, -1.71, -0.30, -1.89, -1.14], ['c', -0.21, -0.84, 0.30, -1.71, 1.14, -1.89], ['z']], w: 20.153, h: 23.142 },\n\t'clefs.G': { d: [['M', 9.69, -37.41], ['c', 0.09, -0.09, 0.24, -0.06, 0.36, 0.00], ['c', 0.12, 0.09, 0.57, 0.60, 0.96, 1.11], ['c', 1.77, 2.34, 3.21, 5.85, 3.57, 8.73], ['c', 0.21, 1.56, 0.03, 3.27, -0.45, 4.86], ['c', -0.69, 2.31, -1.92, 4.47, -4.23, 7.44], ['c', -0.30, 0.39, -0.57, 0.72, -0.60, 0.75], ['c', -0.03, 0.06, 0.00, 0.15, 0.18, 0.78], ['c', 0.54, 1.68, 1.38, 4.44, 1.68, 5.49], ['l', 0.09, 0.42], ['l', 0.39, 0.00], ['c', 1.47, 0.09, 2.76, 0.51, 3.96, 1.29], ['c', 1.83, 1.23, 3.06, 3.21, 3.39, 5.52], ['c', 0.09, 0.45, 0.12, 1.29, 0.06, 1.74], ['c', -0.09, 1.02, -0.33, 1.83, -0.75, 2.73], ['c', -0.84, 1.71, -2.28, 3.06, -4.02, 3.72], ['l', -0.33, 0.12], ['l', 0.03, 1.26], ['c', 0.00, 1.74, -0.06, 3.63, -0.21, 4.62], ['c', -0.45, 3.06, -2.19, 5.49, -4.47, 6.21], ['c', -0.57, 0.18, -0.90, 0.21, -1.59, 0.21], ['c', -0.69, 0.00, -1.02, -0.03, -1.65, -0.21], ['c', -1.14, -0.27, -2.13, -0.84, -2.94, -1.65], ['c', -0.99, -0.99, -1.56, -2.16, -1.71, -3.54], ['c', -0.09, -0.81, 0.06, -1.53, 0.45, -2.13], ['c', 0.63, -0.99, 1.83, -1.56, 3.00, -1.53], ['c', 1.50, 0.09, 2.64, 1.32, 2.73, 2.94], ['c', 0.06, 1.47, -0.93, 2.70, -2.37, 2.97], ['c', -0.45, 0.06, -0.84, 0.03, -1.29, -0.09], ['l', -0.21, -0.09], ['l', 0.09, 0.12], ['c', 0.39, 0.54, 0.78, 0.93, 1.32, 1.26], ['c', 1.35, 0.87, 3.06, 1.02, 4.35, 0.36], ['c', 1.44, -0.72, 2.52, -2.28, 2.97, -4.35], ['c', 0.15, -0.66, 0.24, -1.50, 0.30, -3.03], ['c', 0.03, -0.84, 0.03, -2.94, 0.00, -3.00], ['c', -0.03, 0.00, -0.18, 0.00, -0.36, 0.03], ['c', -0.66, 0.12, -0.99, 0.12, -1.83, 0.12], ['c', -1.05, 0.00, -1.71, -0.06, -2.61, -0.30], ['c', -4.02, -0.99, -7.11, -4.35, -7.80, -8.46], ['c', -0.12, -0.66, -0.12, -0.99, -0.12, -1.83], ['c', 0.00, -0.84, 0.00, -1.14, 0.15, -1.92], ['c', 0.36, -2.28, 1.41, -4.62, 3.30, -7.29], ['l', 2.79, -3.60], ['c', 0.54, -0.66, 0.96, -1.20, 0.96, -1.23], ['c', 0.00, -0.03, -0.09, -0.33, -0.18, -0.69], ['c', -0.96, -3.21, -1.41, -5.28, -1.59, -7.68], ['c', -0.12, -1.38, -0.15, -3.09, -0.06, -3.96], ['c', 0.33, -2.67, 1.38, -5.07, 3.12, -7.08], ['c', 0.36, -0.42, 0.99, -1.05, 1.17, -1.14], ['z'], ['m', 2.01, 4.71], ['c', -0.15, -0.30, -0.30, -0.54, -0.30, -0.54], ['c', -0.03, 0.00, -0.18, 0.09, -0.30, 0.21], ['c', -2.40, 1.74, -3.87, 4.20, -4.26, 7.11], ['c', -0.06, 0.54, -0.06, 1.41, -0.03, 1.89], ['c', 0.09, 1.29, 0.48, 3.12, 1.08, 5.22], ['c', 0.15, 0.42, 0.24, 0.78, 0.24, 0.81], ['c', 0.00, 0.03, 0.84, -1.11, 1.23, -1.68], ['c', 1.89, -2.73, 2.88, -5.07, 3.15, -7.53], ['c', 0.09, -0.57, 0.12, -1.74, 0.06, -2.37], ['c', -0.09, -1.23, -0.27, -1.92, -0.87, -3.12], ['z'], ['m', -2.94, 20.70], ['c', -0.21, -0.72, -0.39, -1.32, -0.42, -1.32], ['c', 0.00, 0.00, -1.20, 1.47, -1.86, 2.37], ['c', -2.79, 3.63, -4.02, 6.30, -4.35, 9.30], ['c', -0.03, 0.21, -0.03, 0.69, -0.03, 1.08], ['c', 0.00, 0.69, 0.00, 0.75, 0.06, 1.11], ['c', 0.12, 0.54, 0.27, 0.99, 0.51, 1.47], ['c', 0.69, 1.38, 1.83, 2.55, 3.42, 3.42], ['c', 0.96, 0.54, 2.07, 0.90, 3.21, 1.08], ['c', 0.78, 0.12, 2.04, 0.12, 2.94, -0.03], ['c', 0.51, -0.06, 0.45, -0.03, 0.42, -0.30], ['c', -0.24, -3.33, -0.72, -6.33, -1.62, -10.08], ['c', -0.09, -0.39, -0.18, -0.75, -0.18, -0.78], ['c', -0.03, -0.03, -0.42, 0.00, -0.81, 0.09], ['c', -0.90, 0.18, -1.65, 0.57, -2.22, 1.14], ['c', -0.72, 0.72, -1.08, 1.65, -1.05, 2.64], ['c', 0.06, 0.96, 0.48, 1.83, 1.23, 2.58], ['c', 0.36, 0.36, 0.72, 0.63, 1.17, 0.90], ['c', 0.33, 0.18, 0.36, 0.21, 0.42, 0.33], ['c', 0.18, 0.42, -0.18, 0.90, -0.60, 0.87], ['c', -0.18, -0.03, -0.84, -0.36, -1.26, -0.63], ['c', -0.78, -0.51, -1.38, -1.11, -1.86, -1.83], ['c', -1.77, -2.70, -0.99, -6.42, 1.71, -8.19], ['c', 0.30, -0.21, 0.81, -0.48, 1.17, -0.63], ['c', 0.30, -0.09, 1.02, -0.30, 1.14, -0.30], ['c', 0.06, 0.00, 0.09, 0.00, 0.09, -0.03], ['c', 0.03, -0.03, -0.51, -1.92, -1.23, -4.26], ['z'], ['m', 3.78, 7.41], ['c', -0.18, -0.03, -0.36, -0.06, -0.39, -0.06], ['c', -0.03, 0.00, 0.00, 0.21, 0.18, 1.02], ['c', 0.75, 3.18, 1.26, 6.30, 1.50, 9.09], ['c', 0.06, 0.72, 0.00, 0.69, 0.51, 0.42], ['c', 0.78, -0.36, 1.44, -0.96, 1.98, -1.77], ['c', 1.08, -1.62, 1.20, -3.69, 0.30, -5.55], ['c', -0.81, -1.62, -2.31, -2.79, -4.08, -3.15], ['z']], w: 19.051, h: 57.057 },\n\t'clefs.perc': { d: [['M', 5.07, -7.44], ['l', 0.09, -0.06], ['l', 1.53, 0.00], ['l', 1.53, 0.00], ['l', 0.09, 0.06], ['l', 0.06, 0.09], ['l', 0.00, 7.35], ['l', 0.00, 7.32], ['l', -0.06, 0.09], ['l', -0.09, 0.06], ['l', -1.53, 0.00], ['l', -1.53, 0.00], ['l', -0.09, -0.06], ['l', -0.06, -0.09], ['l', 0.00, -7.32], ['l', 0.00, -7.35], ['z'], ['m', 6.63, 0.00], ['l', 0.09, -0.06], ['l', 1.53, 0.00], ['l', 1.53, 0.00], ['l', 0.09, 0.06], ['l', 0.06, 0.09], ['l', 0.00, 7.35], ['l', 0.00, 7.32], ['l', -0.06, 0.09], ['l', -0.09, 0.06], ['l', -1.53, 0.00], ['l', -1.53, 0.00], ['l', -0.09, -0.06], ['l', -0.06, -0.09], ['l', 0.00, -7.32], ['l', 0.00, -7.35], ['z']], w: 21, h: 14.97 },\n\t'tab.big': { d: [['M', 20.16, -21.66], ['c', 0.24, -0.09, 0.66, 0.09, 0.78, 0.36], ['c', 0.09, 0.21, 0.09, 0.24, -0.18, 0.54], ['c', -0.78, 0.81, -1.86, 1.44, -2.94, 1.71], ['c', -0.87, 0.24, -1.71, 0.24, -2.55, 0.03], ['l', -0.06, -0.03], ['l', -0.18, 0.99], ['c', -0.33, 1.98, -0.75, 4.26, -0.96, 5.04], ['c', -0.42, 1.65, -1.26, 3.18, -2.28, 4.14], ['c', -0.57, 0.57, -1.17, 0.90, -1.86, 1.08], ['c', -0.18, 0.06, -0.33, 0.06, -0.66, 0.06], ['c', -0.54, 0.00, -0.78, -0.03, -1.23, -0.27], ['c', -0.39, -0.18, -0.66, -0.39, -1.38, -0.99], ['c', -0.30, -0.24, -0.66, -0.51, -0.75, -0.57], ['c', -0.21, -0.15, -0.27, -0.24, -0.24, -0.45], ['c', 0.06, -0.27, 0.36, -0.60, 0.60, -0.66], ['c', 0.18, -0.03, 0.33, 0.06, 0.90, 0.57], ['c', 0.48, 0.42, 0.72, 0.57, 0.93, 0.69], ['c', 0.66, 0.33, 1.38, 0.21, 1.95, -0.36], ['c', 0.63, -0.60, 1.05, -1.62, 1.23, -3.00], ['c', 0.03, -0.18, 0.09, -0.66, 0.09, -1.11], ['c', 0.09, -1.56, 0.33, -3.81, 0.57, -5.49], ['c', 0.06, -0.33, 0.09, -0.63, 0.09, -0.63], ['c', -0.03, -0.03, -0.81, -0.12, -1.02, -0.12], ['c', -0.57, 0.00, -1.32, 0.12, -1.80, 0.33], ['c', -0.87, 0.30, -1.35, 0.78, -1.50, 1.41], ['c', -0.18, 0.63, 0.09, 1.26, 0.66, 1.65], ['c', 0.12, 0.06, 0.15, 0.12, 0.18, 0.24], ['c', 0.09, 0.27, 0.06, 0.57, -0.09, 0.75], ['c', -0.03, 0.06, -0.12, 0.09, -0.27, 0.15], ['c', -0.72, 0.21, -1.44, 0.15, -2.10, -0.18], ['c', -0.54, -0.27, -0.96, -0.66, -1.20, -1.14], ['c', -0.39, -0.75, -0.33, -1.74, 0.15, -2.52], ['c', 0.27, -0.42, 0.84, -0.93, 1.41, -1.23], ['c', 1.17, -0.57, 2.88, -0.90, 4.80, -0.90], ['c', 0.69, 0.00, 0.78, 0.00, 1.08, 0.06], ['c', 0.45, 0.09, 1.11, 0.30, 2.07, 0.60], ['c', 1.47, 0.48, 1.83, 0.57, 2.55, 0.54], ['c', 1.02, -0.06, 2.04, -0.45, 2.94, -1.11], ['c', 0.12, -0.09, 0.24, -0.18, 0.27, -0.18], ['z'], ['m', -5.88, 13.05], ['c', 0.21, -0.03, 0.81, 0.00, 1.08, 0.06], ['c', 0.48, 0.12, 0.90, 0.42, 0.99, 0.69], ['c', 0.03, 0.09, 0.03, 0.15, 0.00, 0.27], ['c', 0.00, 0.09, -0.03, 0.57, -0.06, 1.08], ['c', -0.09, 2.19, -0.24, 5.76, -0.39, 8.28], ['c', -0.06, 1.53, -0.06, 1.77, 0.03, 2.01], ['c', 0.09, 0.18, 0.15, 0.24, 0.30, 0.30], ['c', 0.24, 0.12, 0.54, 0.06, 1.23, -0.27], ['c', 0.57, -0.27, 0.66, -0.30, 0.75, -0.24], ['c', 0.09, 0.06, 0.18, 0.30, 0.18, 0.45], ['c', 0.00, 0.33, -0.15, 0.51, -0.45, 0.63], ['c', -0.12, 0.03, -0.39, 0.15, -0.60, 0.27], ['c', -1.17, 0.60, -1.38, 0.69, -1.80, 0.72], ['c', -0.45, 0.03, -0.78, -0.09, -1.08, -0.39], ['c', -0.39, -0.42, -0.66, -1.20, -1.02, -3.12], ['c', -0.24, -1.23, -0.36, -2.07, -0.54, -3.75], ['l', 0.00, -0.18], ['l', -0.36, 0.45], ['c', -0.60, 0.75, -1.32, 1.59, -1.95, 2.25], ['c', -0.15, 0.18, -0.27, 0.30, -0.27, 0.33], ['c', 0.00, 0.00, 0.06, 0.09, 0.15, 0.18], ['c', 0.24, 0.33, 0.60, 0.57, 1.05, 0.69], ['c', 0.18, 0.06, 0.30, 0.06, 0.69, 0.06], ['l', 0.48, 0.03], ['l', 0.06, 0.12], ['c', 0.15, 0.27, 0.03, 0.72, -0.21, 0.90], ['c', -0.18, 0.12, -0.93, 0.27, -1.41, 0.27], ['c', -0.84, 0.00, -1.59, -0.30, -1.98, -0.84], ['l', -0.12, -0.15], ['l', -0.45, 0.42], ['c', -0.99, 0.87, -1.53, 1.32, -2.16, 1.74], ['c', -0.78, 0.51, -1.50, 0.84, -2.10, 0.93], ['c', -0.69, 0.12, -1.20, 0.03, -1.95, -0.42], ['c', -0.21, -0.12, -0.51, -0.27, -0.66, -0.36], ['c', -0.24, -0.12, -0.30, -0.18, -0.33, -0.24], ['c', -0.12, -0.27, 0.15, -0.78, 0.45, -0.93], ['c', 0.24, -0.12, 0.33, -0.09, 0.90, 0.18], ['c', 0.60, 0.30, 0.84, 0.39, 1.20, 0.36], ['c', 0.87, -0.09, 1.77, -0.69, 3.24, -2.31], ['c', 2.67, -2.85, 4.59, -5.94, 5.70, -9.15], ['c', 0.15, -0.45, 0.24, -0.63, 0.42, -0.81], ['c', 0.21, -0.24, 0.60, -0.45, 0.99, -0.51], ['z'], ['m', -3.99, 16.05], ['c', 0.18, 0.00, 0.69, -0.03, 1.17, 0.00], ['c', 3.27, 0.03, 5.37, 0.75, 6.00, 2.07], ['c', 0.45, 0.99, 0.12, 2.40, -0.81, 3.42], ['c', -0.24, 0.27, -0.57, 0.57, -0.84, 0.75], ['c', -0.09, 0.06, -0.18, 0.09, -0.18, 0.12], ['c', 0.00, 0.00, 0.18, 0.03, 0.42, 0.09], ['c', 1.23, 0.30, 2.01, 0.81, 2.37, 1.59], ['c', 0.27, 0.54, 0.30, 1.32, 0.09, 2.10], ['c', -0.12, 0.36, -0.45, 1.05, -0.69, 1.35], ['c', -0.87, 1.17, -2.10, 1.92, -3.54, 2.25], ['c', -0.36, 0.06, -0.48, 0.06, -0.96, 0.06], ['c', -0.45, 0.00, -0.66, 0.00, -0.84, -0.03], ['c', -0.84, -0.18, -1.47, -0.51, -2.07, -1.11], ['c', -0.33, -0.33, -0.45, -0.51, -0.45, -0.63], ['c', 0.00, -0.06, 0.03, -0.15, 0.06, -0.24], ['c', 0.18, -0.33, 0.69, -0.60, 0.93, -0.48], ['c', 0.03, 0.03, 0.15, 0.12, 0.27, 0.24], ['c', 0.39, 0.42, 0.99, 0.57, 1.62, 0.45], ['c', 1.05, -0.21, 1.98, -1.02, 2.31, -2.01], ['c', 0.48, -1.53, -0.48, -2.55, -2.58, -2.67], ['c', -0.21, 0.00, -0.36, -0.03, -0.42, -0.06], ['c', -0.15, -0.09, -0.21, -0.51, -0.06, -0.78], ['c', 0.12, -0.27, 0.24, -0.33, 0.60, -0.36], ['c', 0.57, -0.06, 1.11, -0.42, 1.50, -0.99], ['c', 0.48, -0.72, 0.54, -1.59, 0.18, -2.31], ['c', -0.12, -0.21, -0.45, -0.54, -0.69, -0.69], ['c', -0.33, -0.21, -0.93, -0.45, -1.35, -0.51], ['l', -0.12, -0.03], ['l', -0.06, 0.48], ['c', -0.54, 2.94, -1.14, 6.24, -1.29, 6.75], ['c', -0.33, 1.35, -0.93, 2.61, -1.65, 3.60], ['c', -0.30, 0.36, -0.81, 0.90, -1.14, 1.14], ['c', -0.30, 0.24, -0.84, 0.48, -1.14, 0.57], ['c', -0.33, 0.09, -0.96, 0.09, -1.26, 0.03], ['c', -0.45, -0.12, -0.87, -0.39, -1.53, -0.96], ['c', -0.24, -0.15, -0.51, -0.39, -0.63, -0.48], ['c', -0.30, -0.21, -0.33, -0.33, -0.21, -0.63], ['c', 0.12, -0.18, 0.27, -0.36, 0.42, -0.45], ['c', 0.27, -0.12, 0.36, -0.09, 0.87, 0.33], ['c', 0.78, 0.60, 1.08, 0.75, 1.65, 0.72], ['c', 0.45, -0.03, 0.81, -0.21, 1.17, -0.54], ['c', 0.87, -0.90, 1.38, -2.85, 1.38, -5.37], ['c', 0.00, -0.60, 0.03, -1.11, 0.12, -2.04], ['c', 0.06, -0.69, 0.24, -2.01, 0.33, -2.58], ['c', 0.06, -0.24, 0.06, -0.42, 0.06, -0.42], ['c', 0.00, 0.00, -0.12, 0.03, -0.21, 0.09], ['c', -1.44, 0.57, -2.16, 1.65, -1.74, 2.55], ['c', 0.09, 0.15, 0.18, 0.24, 0.27, 0.33], ['c', 0.24, 0.21, 0.30, 0.27, 0.33, 0.39], ['c', 0.06, 0.24, 0.00, 0.63, -0.15, 0.78], ['c', -0.09, 0.12, -0.54, 0.21, -0.96, 0.24], ['c', -1.02, 0.03, -2.01, -0.48, -2.43, -1.32], ['c', -0.21, -0.45, -0.27, -0.90, -0.15, -1.44], ['c', 0.06, -0.27, 0.21, -0.66, 0.39, -0.93], ['c', 0.87, -1.29, 3.00, -2.22, 5.64, -2.43], ['z']], w: 19.643, h: 43.325 },\n\t'tab.tiny': { d: [['M', 16.02, -17.25], ['c', 0.12, -0.09, 0.15, -0.09, 0.27, -0.09], ['c', 0.21, 0.03, 0.51, 0.30, 0.51, 0.45], ['c', 0.00, 0.06, -0.12, 0.18, -0.30, 0.36], ['c', -1.11, 1.08, -2.55, 1.59, -3.84, 1.41], ['c', -0.15, -0.03, -0.33, -0.06, -0.39, -0.09], ['c', -0.06, -0.03, -0.09, -0.03, -0.12, -0.03], ['c', 0.00, 0.00, -0.06, 0.42, -0.15, 0.93], ['c', -0.33, 2.01, -0.66, 3.69, -0.84, 4.26], ['c', -0.42, 1.41, -1.23, 2.67, -2.16, 3.33], ['c', -0.27, 0.18, -0.75, 0.42, -0.99, 0.48], ['c', -0.30, 0.09, -0.72, 0.09, -1.02, 0.06], ['c', -0.45, -0.09, -0.84, -0.33, -1.53, -0.90], ['c', -0.21, -0.18, -0.51, -0.39, -0.63, -0.48], ['c', -0.27, -0.21, -0.30, -0.24, -0.30, -0.36], ['c', 0.00, -0.12, 0.09, -0.36, 0.18, -0.45], ['c', 0.09, -0.09, 0.27, -0.18, 0.36, -0.18], ['c', 0.12, 0.00, 0.30, 0.12, 0.66, 0.45], ['c', 0.57, 0.51, 0.87, 0.69, 1.23, 0.72], ['c', 0.93, 0.06, 1.68, -0.78, 1.98, -2.37], ['c', 0.09, -0.39, 0.15, -0.75, 0.18, -1.53], ['c', 0.06, -0.99, 0.24, -2.79, 0.42, -4.05], ['c', 0.03, -0.30, 0.06, -0.57, 0.06, -0.60], ['c', 0.00, -0.06, -0.03, -0.09, -0.15, -0.12], ['c', -0.90, -0.18, -2.13, 0.06, -2.76, 0.57], ['c', -0.36, 0.30, -0.51, 0.60, -0.51, 1.02], ['c', 0.00, 0.45, 0.15, 0.75, 0.48, 0.99], ['c', 0.06, 0.06, 0.15, 0.18, 0.18, 0.24], ['c', 0.12, 0.24, 0.03, 0.63, -0.15, 0.69], ['c', -0.24, 0.12, -0.60, 0.15, -0.90, 0.15], ['c', -0.36, -0.03, -0.57, -0.09, -0.87, -0.24], ['c', -0.78, -0.36, -1.23, -1.11, -1.20, -1.92], ['c', 0.12, -1.53, 1.74, -2.49, 4.62, -2.70], ['c', 1.20, -0.09, 1.47, -0.03, 3.33, 0.57], ['c', 0.90, 0.30, 1.14, 0.36, 1.56, 0.39], ['c', 0.45, 0.00, 0.93, -0.06, 1.38, -0.21], ['c', 0.51, -0.18, 0.81, -0.33, 1.41, -0.75], ['z'], ['m', -4.68, 10.38], ['c', 0.39, -0.06, 0.84, 0.00, 1.20, 0.15], ['c', 0.24, 0.12, 0.36, 0.21, 0.45, 0.36], ['l', 0.09, 0.09], ['l', -0.06, 1.41], ['c', -0.09, 2.19, -0.18, 3.96, -0.27, 5.49], ['c', -0.03, 0.78, -0.06, 1.59, -0.06, 1.86], ['c', 0.00, 0.42, 0.00, 0.48, 0.06, 0.57], ['c', 0.06, 0.18, 0.18, 0.24, 0.36, 0.27], ['c', 0.18, 0.00, 0.39, -0.06, 0.84, -0.27], ['c', 0.45, -0.21, 0.54, -0.24, 0.63, -0.18], ['c', 0.12, 0.12, 0.15, 0.54, 0.03, 0.69], ['c', -0.03, 0.03, -0.15, 0.12, -0.27, 0.18], ['c', -0.15, 0.03, -0.30, 0.12, -0.36, 0.15], ['c', -0.87, 0.45, -1.02, 0.51, -1.26, 0.57], ['c', -0.33, 0.09, -0.60, 0.06, -0.84, -0.06], ['c', -0.42, -0.18, -0.63, -0.60, -0.87, -1.44], ['c', -0.30, -1.23, -0.57, -2.97, -0.66, -4.08], ['c', 0.00, -0.18, -0.03, -0.30, -0.03, -0.33], ['l', -0.06, 0.06], ['c', -0.18, 0.27, -1.11, 1.38, -1.68, 2.01], ['l', -0.33, 0.33], ['l', 0.06, 0.09], ['c', 0.06, 0.15, 0.27, 0.33, 0.48, 0.42], ['c', 0.27, 0.18, 0.51, 0.24, 0.96, 0.27], ['l', 0.39, 0.00], ['l', 0.03, 0.12], ['c', 0.12, 0.21, 0.03, 0.57, -0.15, 0.69], ['c', -0.03, 0.03, -0.21, 0.09, -0.36, 0.15], ['c', -0.27, 0.06, -0.39, 0.06, -0.75, 0.06], ['c', -0.48, 0.00, -0.75, -0.03, -1.08, -0.21], ['c', -0.21, -0.12, -0.51, -0.36, -0.57, -0.48], ['l', -0.03, -0.09], ['l', -0.39, 0.36], ['c', -1.47, 1.35, -2.49, 1.98, -3.42, 2.13], ['c', -0.54, 0.09, -0.96, -0.03, -1.62, -0.39], ['c', -0.21, -0.15, -0.45, -0.27, -0.54, -0.30], ['c', -0.18, -0.09, -0.21, -0.21, -0.12, -0.45], ['c', 0.06, -0.27, 0.33, -0.48, 0.54, -0.48], ['c', 0.03, 0.00, 0.27, 0.09, 0.48, 0.21], ['c', 0.48, 0.24, 0.69, 0.27, 0.99, 0.27], ['c', 0.60, -0.06, 1.17, -0.42, 2.10, -1.35], ['c', 2.22, -2.22, 4.02, -4.98, 4.95, -7.59], ['c', 0.21, -0.57, 0.30, -0.78, 0.48, -0.93], ['c', 0.15, -0.15, 0.42, -0.27, 0.66, -0.33], ['z'], ['m', -3.06, 12.84], ['c', 0.27, -0.03, 1.68, 0.00, 2.01, 0.03], ['c', 1.92, 0.18, 3.15, 0.69, 3.63, 1.50], ['c', 0.18, 0.33, 0.24, 0.51, 0.21, 0.93], ['c', 0.00, 0.45, -0.06, 0.72, -0.24, 1.11], ['c', -0.24, 0.51, -0.69, 1.02, -1.17, 1.35], ['c', -0.21, 0.15, -0.21, 0.15, -0.12, 0.18], ['c', 0.72, 0.15, 1.11, 0.30, 1.50, 0.57], ['c', 0.39, 0.24, 0.63, 0.57, 0.75, 0.96], ['c', 0.09, 0.30, 0.09, 0.96, 0.00, 1.29], ['c', -0.15, 0.57, -0.39, 1.05, -0.78, 1.50], ['c', -0.66, 0.75, -1.62, 1.32, -2.61, 1.53], ['c', -0.27, 0.06, -0.42, 0.06, -0.84, 0.06], ['c', -0.48, 0.00, -0.57, 0.00, -0.81, -0.06], ['c', -0.60, -0.18, -1.05, -0.42, -1.47, -0.81], ['c', -0.36, -0.39, -0.42, -0.51, -0.30, -0.75], ['c', 0.12, -0.21, 0.39, -0.39, 0.60, -0.39], ['c', 0.09, 0.00, 0.15, 0.03, 0.33, 0.18], ['c', 0.12, 0.12, 0.27, 0.24, 0.36, 0.27], ['c', 0.96, 0.48, 2.46, -0.33, 2.82, -1.50], ['c', 0.24, -0.81, -0.03, -1.44, -0.69, -1.77], ['c', -0.39, -0.21, -1.02, -0.33, -1.53, -0.33], ['c', -0.18, 0.00, -0.21, 0.00, -0.27, -0.09], ['c', -0.06, -0.09, -0.06, -0.30, -0.03, -0.48], ['c', 0.06, -0.18, 0.18, -0.36, 0.33, -0.36], ['c', 0.39, -0.06, 0.51, -0.09, 0.72, -0.18], ['c', 0.69, -0.36, 1.11, -1.23, 0.99, -2.01], ['c', -0.09, -0.51, -0.42, -0.90, -0.93, -1.17], ['c', -0.24, -0.12, -0.60, -0.27, -0.87, -0.30], ['c', -0.09, -0.03, -0.09, -0.03, -0.12, 0.12], ['c', 0.00, 0.09, -0.21, 1.11, -0.42, 2.25], ['c', -0.66, 3.75, -0.72, 3.99, -1.26, 5.07], ['c', -0.90, 1.89, -2.25, 2.85, -3.48, 2.61], ['c', -0.39, -0.09, -0.69, -0.27, -1.38, -0.84], ['c', -0.63, -0.51, -0.63, -0.48, -0.63, -0.60], ['c', 0.00, -0.18, 0.18, -0.48, 0.39, -0.57], ['c', 0.21, -0.12, 0.30, -0.09, 0.81, 0.33], ['c', 0.15, 0.15, 0.39, 0.30, 0.54, 0.36], ['c', 0.18, 0.12, 0.27, 0.12, 0.48, 0.15], ['c', 0.99, 0.06, 1.71, -0.78, 2.04, -2.46], ['c', 0.12, -0.66, 0.18, -1.14, 0.21, -2.22], ['c', 0.03, -1.23, 0.12, -2.25, 0.36, -3.63], ['c', 0.03, -0.24, 0.06, -0.45, 0.06, -0.48], ['c', -0.06, -0.03, -0.66, 0.27, -0.90, 0.42], ['c', -0.06, 0.06, -0.21, 0.18, -0.33, 0.30], ['c', -0.57, 0.57, -0.60, 1.35, -0.06, 1.74], ['c', 0.18, 0.12, 0.24, 0.24, 0.21, 0.51], ['c', -0.03, 0.30, -0.15, 0.42, -0.57, 0.48], ['c', -1.11, 0.24, -2.22, -0.42, -2.43, -1.38], ['c', -0.09, -0.45, 0.03, -1.02, 0.30, -1.47], ['c', 0.18, -0.24, 0.60, -0.63, 0.90, -0.84], ['c', 0.90, -0.60, 2.28, -1.02, 3.69, -1.11], ['z']], w: 15.709, h: 34.656 },\n\t'timesig.common': { d: [['M', 6.66, -7.83], ['c', 0.72, -0.06, 1.41, -0.03, 1.98, 0.09], ['c', 1.20, 0.27, 2.34, 0.96, 3.09, 1.92], ['c', 0.63, 0.81, 1.08, 1.86, 1.14, 2.73], ['c', 0.06, 1.02, -0.51, 1.92, -1.44, 2.22], ['c', -0.24, 0.09, -0.30, 0.09, -0.63, 0.09], ['c', -0.33, 0.00, -0.42, 0.00, -0.63, -0.06], ['c', -0.66, -0.24, -1.14, -0.63, -1.41, -1.20], ['c', -0.15, -0.30, -0.21, -0.51, -0.24, -0.90], ['c', -0.06, -1.08, 0.57, -2.04, 1.56, -2.37], ['c', 0.18, -0.06, 0.27, -0.06, 0.63, -0.06], ['l', 0.45, 0.00], ['c', 0.06, 0.03, 0.09, 0.03, 0.09, 0.00], ['c', 0.00, 0.00, -0.09, -0.12, -0.24, -0.27], ['c', -1.02, -1.11, -2.55, -1.68, -4.08, -1.50], ['c', -1.29, 0.15, -2.04, 0.69, -2.40, 1.74], ['c', -0.36, 0.93, -0.42, 1.89, -0.42, 5.37], ['c', 0.00, 2.97, 0.06, 3.96, 0.24, 4.77], ['c', 0.24, 1.08, 0.63, 1.68, 1.41, 2.07], ['c', 0.81, 0.39, 2.16, 0.45, 3.18, 0.09], ['c', 1.29, -0.45, 2.37, -1.53, 3.03, -2.97], ['c', 0.15, -0.33, 0.33, -0.87, 0.39, -1.17], ['c', 0.09, -0.24, 0.15, -0.36, 0.30, -0.39], ['c', 0.21, -0.03, 0.42, 0.15, 0.39, 0.36], ['c', -0.06, 0.39, -0.42, 1.38, -0.69, 1.89], ['c', -0.96, 1.80, -2.49, 2.94, -4.23, 3.18], ['c', -0.99, 0.12, -2.58, -0.06, -3.63, -0.45], ['c', -0.96, -0.36, -1.71, -0.84, -2.40, -1.50], ['c', -1.11, -1.11, -1.80, -2.61, -2.04, -4.56], ['c', -0.06, -0.60, -0.06, -2.01, 0.00, -2.61], ['c', 0.24, -1.95, 0.90, -3.45, 2.01, -4.56], ['c', 0.69, -0.66, 1.44, -1.11, 2.37, -1.47], ['c', 0.63, -0.24, 1.47, -0.42, 2.22, -0.48], ['z']], w: 13.038, h: 15.689 },\n\t'timesig.cut': { d: [['M', 6.24, -10.44], ['c', 0.09, -0.06, 0.09, -0.06, 0.48, -0.06], ['c', 0.36, 0.00, 0.36, 0.00, 0.45, 0.06], ['l', 0.06, 0.09], ['l', 0.00, 1.23], ['l', 0.00, 1.26], ['l', 0.27, 0.00], ['c', 1.26, 0.00, 2.49, 0.45, 3.48, 1.29], ['c', 1.05, 0.87, 1.80, 2.28, 1.89, 3.48], ['c', 0.06, 1.02, -0.51, 1.92, -1.44, 2.22], ['c', -0.24, 0.09, -0.30, 0.09, -0.63, 0.09], ['c', -0.33, 0.00, -0.42, 0.00, -0.63, -0.06], ['c', -0.66, -0.24, -1.14, -0.63, -1.41, -1.20], ['c', -0.15, -0.30, -0.21, -0.51, -0.24, -0.90], ['c', -0.06, -1.08, 0.57, -2.04, 1.56, -2.37], ['c', 0.18, -0.06, 0.27, -0.06, 0.63, -0.06], ['l', 0.45, 0.00], ['c', 0.06, 0.03, 0.09, 0.03, 0.09, 0.00], ['c', 0.00, -0.03, -0.45, -0.51, -0.66, -0.69], ['c', -0.87, -0.69, -1.83, -1.05, -2.94, -1.11], ['l', -0.42, 0.00], ['l', 0.00, 7.17], ['l', 0.00, 7.14], ['l', 0.42, 0.00], ['c', 0.69, -0.03, 1.23, -0.18, 1.86, -0.51], ['c', 1.05, -0.51, 1.89, -1.47, 2.46, -2.70], ['c', 0.15, -0.33, 0.33, -0.87, 0.39, -1.17], ['c', 0.09, -0.24, 0.15, -0.36, 0.30, -0.39], ['c', 0.21, -0.03, 0.42, 0.15, 0.39, 0.36], ['c', -0.03, 0.24, -0.21, 0.78, -0.39, 1.20], ['c', -0.96, 2.37, -2.94, 3.90, -5.13, 3.90], ['l', -0.30, 0.00], ['l', 0.00, 1.26], ['l', 0.00, 1.23], ['l', -0.06, 0.09], ['c', -0.09, 0.06, -0.09, 0.06, -0.45, 0.06], ['c', -0.39, 0.00, -0.39, 0.00, -0.48, -0.06], ['l', -0.06, -0.09], ['l', 0.00, -1.29], ['l', 0.00, -1.29], ['l', -0.21, -0.03], ['c', -1.23, -0.21, -2.31, -0.63, -3.21, -1.29], ['c', -0.15, -0.09, -0.45, -0.36, -0.66, -0.57], ['c', -1.11, -1.11, -1.80, -2.61, -2.04, -4.56], ['c', -0.06, -0.60, -0.06, -2.01, 0.00, -2.61], ['c', 0.24, -1.95, 0.93, -3.45, 2.04, -4.59], ['c', 0.42, -0.39, 0.78, -0.66, 1.26, -0.93], ['c', 0.75, -0.45, 1.65, -0.75, 2.61, -0.90], ['l', 0.21, -0.03], ['l', 0.00, -1.29], ['l', 0.00, -1.29], ['z'], ['m', -0.06, 10.44], ['c', 0.00, -5.58, 0.00, -6.99, -0.03, -6.99], ['c', -0.15, 0.00, -0.63, 0.27, -0.87, 0.45], ['c', -0.45, 0.36, -0.75, 0.93, -0.93, 1.77], ['c', -0.18, 0.81, -0.24, 1.80, -0.24, 4.74], ['c', 0.00, 2.97, 0.06, 3.96, 0.24, 4.77], ['c', 0.24, 1.08, 0.66, 1.68, 1.41, 2.07], ['c', 0.12, 0.06, 0.30, 0.12, 0.33, 0.15], ['l', 0.09, 0.00], ['l', 0.00, -6.96], ['z']], w: 13.038, h: 20.97 },\n\t'timesig.imperfectum': { d: [['M', 13, -5], ['a', 8, 8, 0, 1, 0, 0, 10]], w: 13.038, h: 20.97 },\n\t'timesig.imperfectum2': { d: [['M', 13, -5], ['a', 8, 8, 0, 1, 0, 0, 10]], w: 13.038, h: 20.97 },\n\t'timesig.perfectum': { d: [['M', 13, -5], ['a', 8, 8, 0, 1, 0, 0, 10]], w: 13.038, h: 20.97 },\n\t'timesig.perfectum2': { d: [['M', 13, -5], ['a', 8, 8, 0, 1, 0, 0, 10]], w: 13.038, h: 20.97 },\n\t'f': { d: [['M', 9.93, -14.28], ['c', 1.53, -0.18, 2.88, 0.45, 3.12, 1.50], ['c', 0.12, 0.51, 0.00, 1.32, -0.27, 1.86], ['c', -0.15, 0.30, -0.42, 0.57, -0.63, 0.69], ['c', -0.69, 0.36, -1.56, 0.03, -1.83, -0.69], ['c', -0.09, -0.24, -0.09, -0.69, 0.00, -0.87], ['c', 0.06, -0.12, 0.21, -0.24, 0.45, -0.42], ['c', 0.42, -0.24, 0.57, -0.45, 0.60, -0.72], ['c', 0.03, -0.33, -0.09, -0.39, -0.63, -0.42], ['c', -0.30, 0.00, -0.45, 0.00, -0.60, 0.03], ['c', -0.81, 0.21, -1.35, 0.93, -1.74, 2.46], ['c', -0.06, 0.27, -0.48, 2.25, -0.48, 2.31], ['c', 0.00, 0.03, 0.39, 0.03, 0.90, 0.03], ['c', 0.72, 0.00, 0.90, 0.00, 0.99, 0.06], ['c', 0.42, 0.15, 0.45, 0.72, 0.03, 0.90], ['c', -0.12, 0.06, -0.24, 0.06, -1.17, 0.06], ['l', -1.05, 0.00], ['l', -0.78, 2.55], ['c', -0.45, 1.41, -0.87, 2.79, -0.96, 3.06], ['c', -0.87, 2.37, -2.37, 4.74, -3.78, 5.91], ['c', -1.05, 0.90, -2.04, 1.23, -3.09, 1.08], ['c', -1.11, -0.18, -1.89, -0.78, -2.04, -1.59], ['c', -0.12, -0.66, 0.15, -1.71, 0.54, -2.19], ['c', 0.69, -0.75, 1.86, -0.54, 2.22, 0.39], ['c', 0.06, 0.15, 0.09, 0.27, 0.09, 0.48], ['c', 0.00, 0.24, -0.03, 0.27, -0.12, 0.42], ['c', -0.03, 0.09, -0.15, 0.18, -0.27, 0.27], ['c', -0.09, 0.06, -0.27, 0.21, -0.36, 0.27], ['c', -0.24, 0.18, -0.36, 0.36, -0.39, 0.60], ['c', -0.03, 0.33, 0.09, 0.39, 0.63, 0.42], ['c', 0.42, 0.00, 0.63, -0.03, 0.90, -0.15], ['c', 0.60, -0.30, 0.96, -0.96, 1.38, -2.64], ['c', 0.09, -0.42, 0.63, -2.55, 1.17, -4.77], ['l', 1.02, -4.08], ['c', 0.00, -0.03, -0.36, -0.03, -0.81, -0.03], ['c', -0.72, 0.00, -0.81, 0.00, -0.93, -0.06], ['c', -0.42, -0.18, -0.39, -0.75, 0.03, -0.90], ['c', 0.09, -0.06, 0.27, -0.06, 1.05, -0.06], ['l', 0.96, 0.00], ['l', 0.00, -0.09], ['c', 0.06, -0.18, 0.30, -0.72, 0.51, -1.17], ['c', 1.20, -2.46, 3.30, -4.23, 5.34, -4.50], ['z']], w: 16.155, h: 19.445 },\n\t'm': { d: [['M', 2.79, -8.91], ['c', 0.09, 0.00, 0.30, -0.03, 0.45, -0.03], ['c', 0.24, 0.03, 0.30, 0.03, 0.45, 0.12], ['c', 0.36, 0.15, 0.63, 0.54, 0.75, 1.02], ['l', 0.03, 0.21], ['l', 0.33, -0.30], ['c', 0.69, -0.69, 1.38, -1.02, 2.07, -1.02], ['c', 0.27, 0.00, 0.33, 0.00, 0.48, 0.06], ['c', 0.21, 0.09, 0.48, 0.36, 0.63, 0.60], ['c', 0.03, 0.09, 0.12, 0.27, 0.18, 0.42], ['c', 0.03, 0.15, 0.09, 0.27, 0.12, 0.27], ['c', 0.00, 0.00, 0.09, -0.09, 0.18, -0.21], ['c', 0.33, -0.39, 0.87, -0.81, 1.29, -0.99], ['c', 0.78, -0.33, 1.47, -0.21, 2.01, 0.33], ['c', 0.30, 0.33, 0.48, 0.69, 0.60, 1.14], ['c', 0.09, 0.42, 0.06, 0.54, -0.54, 3.06], ['c', -0.33, 1.29, -0.57, 2.40, -0.57, 2.43], ['c', 0.00, 0.12, 0.09, 0.21, 0.21, 0.21], ['c', 0.24, 0.00, 0.75, -0.30, 1.20, -0.72], ['c', 0.45, -0.39, 0.60, -0.45, 0.78, -0.27], ['c', 0.18, 0.18, 0.09, 0.36, -0.45, 0.87], ['c', -1.05, 0.96, -1.83, 1.47, -2.58, 1.71], ['c', -0.93, 0.33, -1.53, 0.21, -1.80, -0.33], ['c', -0.06, -0.15, -0.06, -0.21, -0.06, -0.45], ['c', 0.00, -0.24, 0.03, -0.48, 0.60, -2.82], ['c', 0.42, -1.71, 0.60, -2.64, 0.63, -2.79], ['c', 0.03, -0.57, -0.30, -0.75, -0.84, -0.48], ['c', -0.24, 0.12, -0.54, 0.39, -0.66, 0.63], ['c', -0.03, 0.09, -0.42, 1.38, -0.90, 3.00], ['c', -0.90, 3.15, -0.84, 3.00, -1.14, 3.15], ['l', -0.15, 0.09], ['l', -0.78, 0.00], ['c', -0.60, 0.00, -0.78, 0.00, -0.84, -0.06], ['c', -0.09, -0.03, -0.18, -0.18, -0.18, -0.27], ['c', 0.00, -0.03, 0.36, -1.38, 0.84, -2.97], ['c', 0.57, -2.04, 0.81, -2.97, 0.84, -3.12], ['c', 0.03, -0.54, -0.30, -0.72, -0.84, -0.45], ['c', -0.24, 0.12, -0.57, 0.42, -0.66, 0.63], ['c', -0.06, 0.09, -0.51, 1.44, -1.05, 2.97], ['c', -0.51, 1.56, -0.99, 2.85, -0.99, 2.91], ['c', -0.06, 0.12, -0.21, 0.24, -0.36, 0.30], ['c', -0.12, 0.06, -0.21, 0.06, -0.90, 0.06], ['c', -0.60, 0.00, -0.78, 0.00, -0.84, -0.06], ['c', -0.09, -0.03, -0.18, -0.18, -0.18, -0.27], ['c', 0.00, -0.03, 0.45, -1.38, 0.99, -2.97], ['c', 1.05, -3.18, 1.05, -3.18, 0.93, -3.45], ['c', -0.12, -0.27, -0.39, -0.30, -0.72, -0.15], ['c', -0.54, 0.27, -1.14, 1.17, -1.56, 2.40], ['c', -0.06, 0.15, -0.15, 0.30, -0.18, 0.36], ['c', -0.21, 0.21, -0.57, 0.27, -0.72, 0.09], ['c', -0.09, -0.09, -0.06, -0.21, 0.06, -0.63], ['c', 0.48, -1.26, 1.26, -2.46, 2.01, -3.21], ['c', 0.57, -0.54, 1.20, -0.87, 1.83, -1.02], ['z']], w: 14.687, h: 9.126 },\n\t'p': { d: [['M', 1.92, -8.70], ['c', 0.27, -0.09, 0.81, -0.06, 1.11, 0.03], ['c', 0.54, 0.18, 0.93, 0.51, 1.17, 0.99], ['c', 0.09, 0.15, 0.15, 0.33, 0.18, 0.36], ['l', 0.00, 0.12], ['l', 0.30, -0.27], ['c', 0.66, -0.60, 1.35, -1.02, 2.13, -1.20], ['c', 0.21, -0.06, 0.33, -0.06, 0.78, -0.06], ['c', 0.45, 0.00, 0.51, 0.00, 0.84, 0.09], ['c', 1.29, 0.33, 2.07, 1.32, 2.25, 2.79], ['c', 0.09, 0.81, -0.09, 2.01, -0.45, 2.79], ['c', -0.54, 1.26, -1.86, 2.55, -3.18, 3.03], ['c', -0.45, 0.18, -0.81, 0.24, -1.29, 0.24], ['c', -0.69, -0.03, -1.35, -0.18, -1.86, -0.45], ['c', -0.30, -0.15, -0.51, -0.18, -0.69, -0.09], ['c', -0.09, 0.03, -0.18, 0.09, -0.18, 0.12], ['c', -0.09, 0.12, -1.05, 2.94, -1.05, 3.06], ['c', 0.00, 0.24, 0.18, 0.48, 0.51, 0.63], ['c', 0.18, 0.06, 0.54, 0.15, 0.75, 0.15], ['c', 0.21, 0.00, 0.36, 0.06, 0.42, 0.18], ['c', 0.12, 0.18, 0.06, 0.42, -0.12, 0.54], ['c', -0.09, 0.03, -0.15, 0.03, -0.78, 0.00], ['c', -1.98, -0.15, -3.81, -0.15, -5.79, 0.00], ['c', -0.63, 0.03, -0.69, 0.03, -0.78, 0.00], ['c', -0.24, -0.15, -0.24, -0.57, 0.03, -0.66], ['c', 0.06, -0.03, 0.48, -0.09, 0.99, -0.12], ['c', 0.87, -0.06, 1.11, -0.09, 1.35, -0.21], ['c', 0.18, -0.06, 0.33, -0.18, 0.39, -0.30], ['c', 0.06, -0.12, 3.24, -9.42, 3.27, -9.60], ['c', 0.06, -0.33, 0.03, -0.57, -0.15, -0.69], ['c', -0.09, -0.06, -0.12, -0.06, -0.30, -0.06], ['c', -0.69, 0.06, -1.53, 1.02, -2.28, 2.61], ['c', -0.09, 0.21, -0.21, 0.45, -0.27, 0.51], ['c', -0.09, 0.12, -0.33, 0.24, -0.48, 0.24], ['c', -0.18, 0.00, -0.36, -0.15, -0.36, -0.30], ['c', 0.00, -0.24, 0.78, -1.83, 1.26, -2.55], ['c', 0.72, -1.11, 1.47, -1.74, 2.28, -1.92], ['z'], ['m', 5.37, 1.47], ['c', -0.27, -0.12, -0.75, -0.03, -1.14, 0.21], ['c', -0.75, 0.48, -1.47, 1.68, -1.89, 3.15], ['c', -0.45, 1.47, -0.42, 2.34, 0.00, 2.70], ['c', 0.45, 0.39, 1.26, 0.21, 1.83, -0.36], ['c', 0.51, -0.51, 0.99, -1.68, 1.38, -3.27], ['c', 0.30, -1.17, 0.33, -1.74, 0.15, -2.13], ['c', -0.09, -0.15, -0.15, -0.21, -0.33, -0.30], ['z']], w: 14.689, h: 13.127 },\n\t'r': { d: [['M', 6.33, -9.12], ['c', 0.27, -0.03, 0.93, 0.00, 1.20, 0.06], ['c', 0.84, 0.21, 1.23, 0.81, 1.02, 1.53], ['c', -0.24, 0.75, -0.90, 1.17, -1.56, 0.96], ['c', -0.33, -0.09, -0.51, -0.30, -0.66, -0.75], ['c', -0.03, -0.12, -0.09, -0.24, -0.12, -0.30], ['c', -0.09, -0.15, -0.30, -0.24, -0.48, -0.24], ['c', -0.57, 0.00, -1.38, 0.54, -1.65, 1.08], ['c', -0.06, 0.15, -0.33, 1.17, -0.90, 3.27], ['c', -0.57, 2.31, -0.81, 3.12, -0.87, 3.21], ['c', -0.03, 0.06, -0.12, 0.15, -0.18, 0.21], ['l', -0.12, 0.06], ['l', -0.81, 0.03], ['c', -0.69, 0.00, -0.81, 0.00, -0.90, -0.03], ['c', -0.09, -0.06, -0.18, -0.21, -0.18, -0.30], ['c', 0.00, -0.06, 0.39, -1.62, 0.90, -3.51], ['c', 0.84, -3.24, 0.87, -3.45, 0.87, -3.72], ['c', 0.00, -0.21, 0.00, -0.27, -0.03, -0.36], ['c', -0.12, -0.15, -0.21, -0.24, -0.42, -0.24], ['c', -0.24, 0.00, -0.45, 0.15, -0.78, 0.42], ['c', -0.33, 0.36, -0.45, 0.54, -0.72, 1.14], ['c', -0.03, 0.12, -0.21, 0.24, -0.36, 0.27], ['c', -0.12, 0.00, -0.15, 0.00, -0.24, -0.06], ['c', -0.18, -0.12, -0.18, -0.21, -0.06, -0.54], ['c', 0.21, -0.57, 0.42, -0.93, 0.78, -1.32], ['c', 0.54, -0.51, 1.20, -0.81, 1.95, -0.87], ['c', 0.81, -0.03, 1.53, 0.30, 1.92, 0.87], ['l', 0.12, 0.18], ['l', 0.09, -0.09], ['c', 0.57, -0.45, 1.41, -0.84, 2.19, -0.96], ['z']], w: 9.41, h: 9.132 },\n\t's': { d: [['M', 4.47, -8.73], ['c', 0.09, 0.00, 0.36, -0.03, 0.57, -0.03], ['c', 0.75, 0.03, 1.29, 0.24, 1.71, 0.63], ['c', 0.51, 0.54, 0.66, 1.26, 0.36, 1.83], ['c', -0.24, 0.42, -0.63, 0.57, -1.11, 0.42], ['c', -0.33, -0.09, -0.60, -0.36, -0.60, -0.57], ['c', 0.00, -0.03, 0.06, -0.21, 0.15, -0.39], ['c', 0.12, -0.21, 0.15, -0.33, 0.18, -0.48], ['c', 0.00, -0.24, -0.06, -0.48, -0.15, -0.60], ['c', -0.15, -0.21, -0.42, -0.24, -0.75, -0.15], ['c', -0.27, 0.06, -0.48, 0.18, -0.69, 0.36], ['c', -0.39, 0.39, -0.51, 0.96, -0.33, 1.38], ['c', 0.09, 0.21, 0.42, 0.51, 0.78, 0.72], ['c', 1.11, 0.69, 1.59, 1.11, 1.89, 1.68], ['c', 0.21, 0.39, 0.24, 0.78, 0.15, 1.29], ['c', -0.18, 1.20, -1.17, 2.16, -2.52, 2.52], ['c', -1.02, 0.24, -1.95, 0.12, -2.70, -0.42], ['c', -0.72, -0.51, -0.99, -1.47, -0.60, -2.19], ['c', 0.24, -0.48, 0.72, -0.63, 1.17, -0.42], ['c', 0.33, 0.18, 0.54, 0.45, 0.57, 0.81], ['c', 0.00, 0.21, -0.03, 0.30, -0.33, 0.51], ['c', -0.33, 0.24, -0.39, 0.42, -0.27, 0.69], ['c', 0.06, 0.15, 0.21, 0.27, 0.45, 0.33], ['c', 0.30, 0.09, 0.87, 0.09, 1.20, 0.00], ['c', 0.75, -0.21, 1.23, -0.72, 1.29, -1.35], ['c', 0.03, -0.42, -0.15, -0.81, -0.54, -1.20], ['c', -0.24, -0.24, -0.48, -0.42, -1.41, -1.02], ['c', -0.69, -0.42, -1.05, -0.93, -1.05, -1.47], ['c', 0.00, -0.39, 0.12, -0.87, 0.30, -1.23], ['c', 0.27, -0.57, 0.78, -1.05, 1.38, -1.35], ['c', 0.24, -0.12, 0.63, -0.27, 0.90, -0.30], ['z']], w: 6.632, h: 8.758 },\n\t'z': { d: [['M', 2.64, -7.95], ['c', 0.36, -0.09, 0.81, -0.03, 1.71, 0.27], ['c', 0.78, 0.21, 0.96, 0.27, 1.74, 0.30], ['c', 0.87, 0.06, 1.02, 0.03, 1.38, -0.21], ['c', 0.21, -0.15, 0.33, -0.15, 0.48, -0.06], ['c', 0.15, 0.09, 0.21, 0.30, 0.15, 0.45], ['c', -0.03, 0.06, -1.26, 1.26, -2.76, 2.67], ['l', -2.73, 2.55], ['l', 0.54, 0.03], ['c', 0.54, 0.03, 0.72, 0.03, 2.01, 0.15], ['c', 0.36, 0.03, 0.90, 0.06, 1.20, 0.09], ['c', 0.66, 0.00, 0.81, -0.03, 1.02, -0.24], ['c', 0.30, -0.30, 0.39, -0.72, 0.27, -1.23], ['c', -0.06, -0.27, -0.06, -0.27, -0.03, -0.39], ['c', 0.15, -0.30, 0.54, -0.27, 0.69, 0.03], ['c', 0.15, 0.33, 0.27, 1.02, 0.27, 1.50], ['c', 0.00, 1.47, -1.11, 2.70, -2.52, 2.79], ['c', -0.57, 0.03, -1.02, -0.09, -2.01, -0.51], ['c', -1.02, -0.42, -1.23, -0.48, -2.13, -0.54], ['c', -0.81, -0.06, -0.96, -0.03, -1.26, 0.18], ['c', -0.12, 0.06, -0.24, 0.12, -0.27, 0.12], ['c', -0.27, 0.00, -0.45, -0.30, -0.36, -0.51], ['c', 0.03, -0.06, 1.32, -1.32, 2.91, -2.79], ['l', 2.88, -2.73], ['c', -0.03, 0.00, -0.21, 0.03, -0.42, 0.06], ['c', -0.21, 0.03, -0.78, 0.09, -1.23, 0.12], ['c', -1.11, 0.12, -1.23, 0.15, -1.95, 0.27], ['c', -0.72, 0.15, -1.17, 0.18, -1.29, 0.09], ['c', -0.27, -0.18, -0.21, -0.75, 0.12, -1.26], ['c', 0.39, -0.60, 0.93, -1.02, 1.59, -1.20], ['z']], w: 8.573, h: 8.743 },\n\t'+': { d: [['M', 3.48, -9.3], ['c', 0.18, -0.09, 0.36, -0.09, 0.54, 0.00], ['c', 0.18, 0.09, 0.24, 0.15, 0.33, 0.30], ['l', 0.06, 0.15], ['l', 0.00, 1.29], ['l', 0.00, 1.29], ['l', 1.29, 0.00], ['c', 1.23, 0.00, 1.29, 0.00, 1.41, 0.06], ['c', 0.06, 0.03, 0.15, 0.09, 0.18, 0.12], ['c', 0.12, 0.09, 0.21, 0.33, 0.21, 0.48], ['c', 0.00, 0.15, -0.09, 0.39, -0.21, 0.48], ['c', -0.03, 0.03, -0.12, 0.09, -0.18, 0.12], ['c', -0.12, 0.06, -0.18, 0.06, -1.41, 0.06], ['l', -1.29, 0.00], ['l', 0.00, 1.29], ['c', 0.00, 1.23, 0.00, 1.29, -0.06, 1.41], ['c', -0.09, 0.18, -0.15, 0.24, -0.30, 0.33], ['c', -0.21, 0.09, -0.39, 0.09, -0.57, 0.00], ['c', -0.18, -0.09, -0.24, -0.15, -0.33, -0.33], ['c', -0.06, -0.12, -0.06, -0.18, -0.06, -1.41], ['l', 0.00, -1.29], ['l', -1.29, 0.00], ['c', -1.23, 0.00, -1.29, 0.00, -1.41, -0.06], ['c', -0.18, -0.09, -0.24, -0.15, -0.33, -0.33], ['c', -0.09, -0.18, -0.09, -0.36, 0.00, -0.54], ['c', 0.09, -0.18, 0.15, -0.24, 0.33, -0.33], ['l', 0.15, -0.06], ['l', 1.26, 0.00], ['l', 1.29, 0.00], ['l', 0.00, -1.29], ['c', 0.00, -1.23, 0.00, -1.29, 0.06, -1.41], ['c', 0.09, -0.18, 0.15, -0.24, 0.33, -0.33], ['z']], w: 7.507, h: 7.515 },\n\t',': { d: [['M', 1.85, -3.36], ['c', 0.57, -0.15, 1.17, 0.03, 1.59, 0.45], ['c', 0.45, 0.45, 0.60, 0.96, 0.51, 1.89], ['c', -0.09, 1.23, -0.42, 2.46, -0.99, 3.93], ['c', -0.30, 0.72, -0.72, 1.62, -0.78, 1.68], ['c', -0.18, 0.21, -0.51, 0.18, -0.66, -0.06], ['c', -0.03, -0.06, -0.06, -0.15, -0.06, -0.18], ['c', 0.00, -0.06, 0.12, -0.33, 0.24, -0.63], ['c', 0.84, -1.80, 1.02, -2.61, 0.69, -3.24], ['c', -0.12, -0.24, -0.27, -0.36, -0.75, -0.60], ['c', -0.36, -0.15, -0.42, -0.21, -0.60, -0.39], ['c', -0.69, -0.69, -0.69, -1.71, 0.00, -2.40], ['c', 0.21, -0.21, 0.51, -0.39, 0.81, -0.45], ['z']], w: 3.452, h: 8.143 },\n\t'-': { d: [['M', 0.18, -5.34], ['c', 0.09, -0.06, 0.15, -0.06, 2.31, -0.06], ['c', 2.46, 0.00, 2.37, 0.00, 2.46, 0.21], ['c', 0.12, 0.21, 0.03, 0.42, -0.15, 0.54], ['c', -0.09, 0.06, -0.15, 0.06, -2.28, 0.06], ['c', -2.16, 0.00, -2.22, 0.00, -2.31, -0.06], ['c', -0.27, -0.15, -0.27, -0.54, -0.03, -0.69], ['z']], w: 5.001, h: 0.81 },\n\t'.': { d: [['M', 1.32, -3.36], ['c', 1.05, -0.27, 2.10, 0.57, 2.10, 1.65], ['c', 0.00, 1.08, -1.05, 1.92, -2.10, 1.65], ['c', -0.90, -0.21, -1.50, -1.14, -1.26, -2.04], ['c', 0.12, -0.63, 0.63, -1.11, 1.26, -1.26], ['z']], w: 3.413, h: 3.402 },\n\t'scripts.wedge': { d: [['M', -3.66, -7.44], ['c', 0.06, -0.09, 0.00, -0.09, 0.81, 0.03], ['c', 1.86, 0.30, 3.84, 0.30, 5.73, 0.00], ['c', 0.78, -0.12, 0.72, -0.12, 0.78, -0.03], ['c', 0.15, 0.15, 0.12, 0.24, -0.24, 0.60], ['c', -0.93, 0.93, -1.98, 2.76, -2.67, 4.62], ['c', -0.30, 0.78, -0.51, 1.71, -0.51, 2.13], ['c', 0.00, 0.15, 0.00, 0.18, -0.06, 0.27], ['c', -0.12, 0.09, -0.24, 0.09, -0.36, 0.00], ['c', -0.06, -0.09, -0.06, -0.12, -0.06, -0.27], ['c', 0.00, -0.42, -0.21, -1.35, -0.51, -2.13], ['c', -0.69, -1.86, -1.74, -3.69, -2.67, -4.62], ['c', -0.36, -0.36, -0.39, -0.45, -0.24, -0.60], ['z']], w: 7.49, h: 7.752 },\n\t'scripts.thumb': { d: [['M', -0.54, -3.69], ['c', 0.15, -0.03, 0.36, -0.06, 0.51, -0.06], ['c', 1.44, 0.00, 2.58, 1.11, 2.94, 2.85], ['c', 0.09, 0.48, 0.09, 1.32, 0.00, 1.80], ['c', -0.27, 1.41, -1.08, 2.43, -2.16, 2.73], ['l', -0.18, 0.06], ['l', 0.00, 0.12], ['c', 0.03, 0.06, 0.06, 0.45, 0.09, 0.87], ['c', 0.03, 0.57, 0.03, 0.78, 0.00, 0.84], ['c', -0.09, 0.27, -0.39, 0.48, -0.66, 0.48], ['c', -0.27, 0.00, -0.57, -0.21, -0.66, -0.48], ['c', -0.03, -0.06, -0.03, -0.27, 0.00, -0.84], ['c', 0.03, -0.42, 0.06, -0.81, 0.09, -0.87], ['l', 0.00, -0.12], ['l', -0.18, -0.06], ['c', -1.08, -0.30, -1.89, -1.32, -2.16, -2.73], ['c', -0.09, -0.48, -0.09, -1.32, 0.00, -1.80], ['c', 0.15, -0.84, 0.51, -1.53, 1.02, -2.04], ['c', 0.39, -0.39, 0.84, -0.63, 1.35, -0.75], ['z'], ['m', 1.05, 0.90], ['c', -0.15, -0.09, -0.21, -0.09, -0.45, -0.12], ['c', -0.15, 0.00, -0.30, 0.03, -0.39, 0.03], ['c', -0.57, 0.18, -0.90, 0.72, -1.08, 1.74], ['c', -0.06, 0.48, -0.06, 1.80, 0.00, 2.28], ['c', 0.15, 0.90, 0.42, 1.44, 0.90, 1.65], ['c', 0.18, 0.09, 0.21, 0.09, 0.51, 0.09], ['c', 0.30, 0.00, 0.33, 0.00, 0.51, -0.09], ['c', 0.48, -0.21, 0.75, -0.75, 0.90, -1.65], ['c', 0.03, -0.27, 0.03, -0.54, 0.03, -1.14], ['c', 0.00, -0.60, 0.00, -0.87, -0.03, -1.14], ['c', -0.15, -0.90, -0.45, -1.44, -0.90, -1.65], ['z']], w: 5.955, h: 9.75 },\n\t'scripts.open': { d: [['M', -0.54, -3.69], ['c', 0.15, -0.03, 0.36, -0.06, 0.51, -0.06], ['c', 1.44, 0.00, 2.58, 1.11, 2.94, 2.85], ['c', 0.09, 0.48, 0.09, 1.32, 0.00, 1.80], ['c', -0.33, 1.74, -1.47, 2.85, -2.91, 2.85], ['c', -1.44, 0.00, -2.58, -1.11, -2.91, -2.85], ['c', -0.09, -0.48, -0.09, -1.32, 0.00, -1.80], ['c', 0.15, -0.84, 0.51, -1.53, 1.02, -2.04], ['c', 0.39, -0.39, 0.84, -0.63, 1.35, -0.75], ['z'], ['m', 1.11, 0.90], ['c', -0.21, -0.09, -0.27, -0.09, -0.51, -0.12], ['c', -0.30, 0.00, -0.42, 0.03, -0.66, 0.15], ['c', -0.24, 0.12, -0.51, 0.39, -0.66, 0.63], ['c', -0.54, 0.93, -0.63, 2.64, -0.21, 3.81], ['c', 0.21, 0.54, 0.51, 0.90, 0.93, 1.11], ['c', 0.21, 0.09, 0.24, 0.09, 0.54, 0.09], ['c', 0.30, 0.00, 0.33, 0.00, 0.54, -0.09], ['c', 0.42, -0.21, 0.72, -0.57, 0.93, -1.11], ['c', 0.36, -0.99, 0.36, -2.37, 0.00, -3.36], ['c', -0.21, -0.54, -0.51, -0.90, -0.90, -1.11], ['z']], w: 5.955, h: 7.5 },\n\t'scripts.longphrase': { d: [['M', 1.47, -15.09], ['c', 0.36, -0.09, 0.66, -0.18, 0.69, -0.18], ['c', 0.06, 0.00, 0.06, 0.54, 0.06, 11.25], ['l', 0.00, 11.25], ['l', -0.63, 0.15], ['c', -0.66, 0.18, -1.44, 0.39, -1.50, 0.39], ['c', -0.03, 0.00, -0.03, -3.39, -0.03, -11.25], ['l', 0.00, -11.25], ['l', 0.36, -0.09], ['c', 0.21, -0.06, 0.66, -0.18, 1.05, -0.27], ['z']], w: 2.16, h: 23.04 },\n\t'scripts.mediumphrase': { d: [['M', 1.47, -7.59], ['c', 0.36, -0.09, 0.66, -0.18, 0.69, -0.18], ['c', 0.06, 0.00, 0.06, 0.39, 0.06, 7.50], ['l', 0.00, 7.50], ['l', -0.63, 0.15], ['c', -0.66, 0.18, -1.44, 0.39, -1.50, 0.39], ['c', -0.03, 0.00, -0.03, -2.28, -0.03, -7.50], ['l', 0.00, -7.50], ['l', 0.36, -0.09], ['c', 0.21, -0.06, 0.66, -0.18, 1.05, -0.27], ['z']], w: 2.16, h: 15.54 },\n\t'scripts.shortphrase': { d: [['M', 1.47, -7.59], ['c', 0.36, -0.09, 0.66, -0.18, 0.69, -0.18], ['c', 0.06, 0.00, 0.06, 0.21, 0.06, 3.75], ['l', 0.00, 3.75], ['l', -0.42, 0.09], ['c', -0.57, 0.18, -1.65, 0.45, -1.71, 0.45], ['c', -0.03, 0.00, -0.03, -0.72, -0.03, -3.75], ['l', 0.00, -3.75], ['l', 0.36, -0.09], ['c', 0.21, -0.06, 0.66, -0.18, 1.05, -0.27], ['z']], w: 2.16, h: 8.04 },\n\t'scripts.snap': { d: [['M', 4.50, -3.39], ['c', 0.36, -0.03, 0.96, -0.03, 1.35, 0.00], ['c', 1.56, 0.15, 3.15, 0.90, 4.20, 2.01], ['c', 0.24, 0.27, 0.33, 0.42, 0.33, 0.60], ['c', 0.00, 0.27, 0.03, 0.24, -2.46, 2.22], ['c', -1.29, 1.02, -2.40, 1.86, -2.49, 1.92], ['c', -0.18, 0.09, -0.30, 0.09, -0.48, 0.00], ['c', -0.09, -0.06, -1.20, -0.90, -2.49, -1.92], ['c', -2.49, -1.98, -2.46, -1.95, -2.46, -2.22], ['c', 0.00, -0.18, 0.09, -0.33, 0.33, -0.60], ['c', 1.05, -1.08, 2.64, -1.86, 4.17, -2.01], ['z'], ['m', 1.29, 1.17], ['c', -1.47, -0.15, -2.97, 0.30, -4.14, 1.20], ['l', -0.18, 0.15], ['l', 0.06, 0.09], ['c', 0.15, 0.12, 3.63, 2.85, 3.66, 2.85], ['c', 0.03, 0.00, 3.51, -2.73, 3.66, -2.85], ['l', 0.06, -0.09], ['l', -0.18, -0.15], ['c', -0.84, -0.66, -1.89, -1.08, -2.94, -1.20], ['z']], w: 10.38, h: 6.84 }\n};\n\n// Custom characters that weren't generated from the font:\nglyphs['noteheads.slash.whole'] = { d: [['M', 5, -5], ['l', 1, 1], ['l', -5, 5], ['l', -1, -1], ['z'], ['m', 4, 6], ['l', -5, -5], ['l', 2, -2], ['l', 5, 5], ['z'], ['m', 0, -2], ['l', 1, 1], ['l', -5, 5], ['l', -1, -1], ['z'], ['m', -4, 6], ['l', -5, -5], ['l', 2, -2], ['l', 5, 5], ['z']], w: 10.81, h: 15.63 };\n\nglyphs['noteheads.slash.quarter'] = { d: [['M', 9, -6], ['l', 0, 4], ['l', -9, 9], ['l', 0, -4], ['z']], w: 9, h: 9 };\n\nglyphs['noteheads.harmonic.quarter'] = { d: [['M', 3.63, -4.02], ['c', 0.09, -0.06, 0.18, -0.09, 0.24, -0.03], ['c', 0.03, 0.03, 0.87, 0.93, 1.83, 2.01], ['c', 1.50, 1.65, 1.80, 1.98, 1.80, 2.04], ['c', 0.00, 0.06, -0.30, 0.39, -1.80, 2.04], ['c', -0.96, 1.08, -1.80, 1.98, -1.83, 2.01], ['c', -0.06, 0.06, -0.15, 0.03, -0.24, -0.03], ['c', -0.12, -0.09, -3.54, -3.84, -3.60, -3.93], ['c', -0.03, -0.03, -0.03, -0.09, -0.03, -0.15], ['c', 0.03, -0.06, 3.45, -3.84, 3.63, -3.96], ['z']], w: 7.5, h: 8.165 };\n\nglyphs['noteheads.triangle.quarter'] = { d: [['M', 0, 4], ['l', 9, 0], ['l', -4.5, -9], ['z']], w: 9, h: 9 };\n\nvar pathClone = function (pathArray) {\n\tvar res = [];\n\tfor (var i = 0, ii = pathArray.length; i < ii; i++) {\n\t\tres[i] = [];\n\t\tfor (var j = 0, jj = pathArray[i].length; j < jj; j++) {\n\t\t\tres[i][j] = pathArray[i][j];\n\t\t}\n\t}\n\treturn res;\n};\n\nvar pathScale = function (pathArray, kx, ky) {\n\tfor (var i = 0, ii = pathArray.length; i < ii; i++) {\n\t\tvar p = pathArray[i];\n\t\tvar j, jj;\n\t\tfor (j = 1, jj = p.length; j < jj; j++) {\n\t\t\tp[j] *= (j % 2) ? kx : ky;\n\t\t}\n\t}\n};\n\nvar Glyphs = {\n\tprintSymbol: function (x, y, symb, paper, attrs) {\n\t\tif (!glyphs[symb]) return null;\n\t\tvar pathArray = pathClone(glyphs[symb].d);\n\t\tpathArray[0][1] += x;\n\t\tpathArray[0][2] += y;\n\t\tvar path = \"\";\n\t\tfor (var i = 0; i < pathArray.length; i++)\n\t\t\tpath += pathArray[i].join(\" \");\n\t\tattrs.path = path;\n\t\treturn paper.path(attrs);\n\t},\n\n\tgetPathForSymbol: function (x, y, symb, scalex, scaley) {\n\t\tscalex = scalex || 1;\n\t\tscaley = scaley || 1;\n\t\tif (!glyphs[symb]) return null;\n\t\tvar pathArray = pathClone(glyphs[symb].d);\n\t\tif (scalex !== 1 || scaley !== 1) pathScale(pathArray, scalex, scaley);\n\t\tpathArray[0][1] += x;\n\t\tpathArray[0][2] += y;\n\n\t\treturn pathArray;\n\t},\n\n\tgetSymbolWidth: function (symbol) {\n\t\tif (glyphs[symbol]) return glyphs[symbol].w;\n\t\treturn 0;\n\t},\n\n\tsymbolHeightInPitches: function (symbol) {\n\t\tvar height = glyphs[symbol] ? glyphs[symbol].h : 0;\n\t\treturn height / spacing.STEP;\n\t},\n\n\tgetSymbolAlign: function (symbol) {\n\t\tif (symbol.substring(0, 7) === \"scripts\" &&\n\t\t\tsymbol !== \"scripts.roll\") {\n\t\t\treturn \"center\";\n\t\t}\n\t\treturn \"left\";\n\t},\n\n\tgetYCorr: function (symbol) {\n\t\tswitch (symbol) {\n\t\t\tcase \"0\":\n\t\t\tcase \"1\":\n\t\t\tcase \"2\":\n\t\t\tcase \"3\":\n\t\t\tcase \"4\":\n\t\t\tcase \"5\":\n\t\t\tcase \"6\":\n\t\t\tcase \"7\":\n\t\t\tcase \"8\":\n\t\t\tcase \"9\":\n\t\t\tcase \"+\": return -2;\n\t\t\tcase \"timesig.common\":\n\t\t\tcase \"timesig.cut\": return 0;\n\t\t\tcase \"flags.d32nd\": return -1;\n\t\t\tcase \"flags.d64th\": return -2;\n\t\t\tcase \"flags.u32nd\": return 1;\n\t\t\tcase \"flags.u64th\": return 3;\n\t\t\tcase \"rests.whole\": return 1;\n\t\t\tcase \"rests.half\": return -1;\n\t\t\tcase \"rests.8th\": return -1;\n\t\t\tcase \"rests.quarter\": return -1;\n\t\t\tcase \"rests.16th\": return -1;\n\t\t\tcase \"rests.32nd\": return -1;\n\t\t\tcase \"rests.64th\": return -1;\n\t\t\tcase \"f\":\n\t\t\tcase \"m\":\n\t\t\tcase \"p\":\n\t\t\tcase \"s\":\n\t\t\tcase \"z\":\n\t\t\t\treturn -4;\n\t\t\tcase \"scripts.trill\":\n\t\t\tcase \"scripts.upbow\":\n\t\t\tcase \"scripts.downbow\":\n\t\t\t\treturn -2;\n\t\t\tcase \"scripts.ufermata\":\n\t\t\tcase \"scripts.wedge\":\n\t\t\tcase \"scripts.roll\":\n\t\t\tcase \"scripts.shortphrase\":\n\t\t\tcase \"scripts.longphrase\":\n\t\t\t\treturn -1;\n\t\t\tcase \"scripts.dfermata\":\n\t\t\t\treturn 1;\n\t\t\tdefault: return 0;\n\t\t}\n\t},\n\tsetSymbol: function (name, path) {\n\t\tglyphs[name] = path;\n\t}\n};\n\nmodule.exports = Glyphs; // we need the glyphs for layout information\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/glyphs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/creation/translate-chord.js":
/*!******************************************************************!*\
  !*** ./node_modules/abcjs/src/write/creation/translate-chord.js ***!
  \******************************************************************/
/***/ ((module) => {

eval("function germanNote(note) {\n\tswitch (note) {\n\t\tcase \"B#\": return \"H#\";\n\t\tcase \"B♯\": return \"H♯\";\n\t\tcase \"B\": return \"H\";\n\t\tcase \"Bb\": return \"B\";\n\t\tcase \"B♭\": return \"B\";\n\t}\n\treturn note;\n}\n\nfunction translateChord(chordString, jazzchords, germanAlphabet) {\n\tvar lines = chordString.split(\"\\n\");\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tlet chord = lines[i];\n\t\t// If the chord isn't in a recognizable format then just skip it.\n\t\tlet reg = chord.match(/^([ABCDEFG][♯♭]?)?([^\\/]+)?(\\/([ABCDEFG][#b♯♭]?))?/);\n\t\tif (!reg) {\n\t\t\tcontinue;\n\t\t}\n\t\tlet baseChord = reg[1] || \"\";\n\t\tlet modifier = reg[2] || \"\";\n\t\tlet bassNote = reg[4] || \"\";\n\t\tif (germanAlphabet) {\n\t\t\tbaseChord = germanNote(baseChord);\n\t\t\tbassNote = germanNote(bassNote);\n\t\t}\n\t\t// This puts markers in the pieces of the chord that are read by the svg creator.\n\t\t// After the main part of the chord (the letter, a sharp or flat, and \"m\") a marker is added. Before a slash a marker is added.\n\t\tconst marker = jazzchords ? \"\\x03\" : \"\";\n\t\tconst bass = bassNote ? \"/\" + bassNote : \"\";\n\t\tlines[i] = [baseChord, modifier, bass].join(marker);\n\t}\n\treturn lines.join(\"\\n\");\n}\n\nmodule.exports = translateChord;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2NyZWF0aW9uL3RyYW5zbGF0ZS1jaG9yZC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCLGtCQUFrQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvY3JlYXRpb24vdHJhbnNsYXRlLWNob3JkLmpzPzhhMzgiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gZ2VybWFuTm90ZShub3RlKSB7XG5cdHN3aXRjaCAobm90ZSkge1xuXHRcdGNhc2UgXCJCI1wiOiByZXR1cm4gXCJII1wiO1xuXHRcdGNhc2UgXCJC4pmvXCI6IHJldHVybiBcIkjima9cIjtcblx0XHRjYXNlIFwiQlwiOiByZXR1cm4gXCJIXCI7XG5cdFx0Y2FzZSBcIkJiXCI6IHJldHVybiBcIkJcIjtcblx0XHRjYXNlIFwiQuKZrVwiOiByZXR1cm4gXCJCXCI7XG5cdH1cblx0cmV0dXJuIG5vdGU7XG59XG5cbmZ1bmN0aW9uIHRyYW5zbGF0ZUNob3JkKGNob3JkU3RyaW5nLCBqYXp6Y2hvcmRzLCBnZXJtYW5BbHBoYWJldCkge1xuXHR2YXIgbGluZXMgPSBjaG9yZFN0cmluZy5zcGxpdChcIlxcblwiKTtcblx0Zm9yIChsZXQgaSA9IDA7IGkgPCBsaW5lcy5sZW5ndGg7IGkrKykge1xuXHRcdGxldCBjaG9yZCA9IGxpbmVzW2ldO1xuXHRcdC8vIElmIHRoZSBjaG9yZCBpc24ndCBpbiBhIHJlY29nbml6YWJsZSBmb3JtYXQgdGhlbiBqdXN0IHNraXAgaXQuXG5cdFx0bGV0IHJlZyA9IGNob3JkLm1hdGNoKC9eKFtBQkNERUZHXVvima/ima1dPyk/KFteXFwvXSspPyhcXC8oW0FCQ0RFRkddWyNi4pmv4pmtXT8pKT8vKTtcblx0XHRpZiAoIXJlZykge1xuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXHRcdGxldCBiYXNlQ2hvcmQgPSByZWdbMV0gfHwgXCJcIjtcblx0XHRsZXQgbW9kaWZpZXIgPSByZWdbMl0gfHwgXCJcIjtcblx0XHRsZXQgYmFzc05vdGUgPSByZWdbNF0gfHwgXCJcIjtcblx0XHRpZiAoZ2VybWFuQWxwaGFiZXQpIHtcblx0XHRcdGJhc2VDaG9yZCA9IGdlcm1hbk5vdGUoYmFzZUNob3JkKTtcblx0XHRcdGJhc3NOb3RlID0gZ2VybWFuTm90ZShiYXNzTm90ZSk7XG5cdFx0fVxuXHRcdC8vIFRoaXMgcHV0cyBtYXJrZXJzIGluIHRoZSBwaWVjZXMgb2YgdGhlIGNob3JkIHRoYXQgYXJlIHJlYWQgYnkgdGhlIHN2ZyBjcmVhdG9yLlxuXHRcdC8vIEFmdGVyIHRoZSBtYWluIHBhcnQgb2YgdGhlIGNob3JkICh0aGUgbGV0dGVyLCBhIHNoYXJwIG9yIGZsYXQsIGFuZCBcIm1cIikgYSBtYXJrZXIgaXMgYWRkZWQuIEJlZm9yZSBhIHNsYXNoIGEgbWFya2VyIGlzIGFkZGVkLlxuXHRcdGNvbnN0IG1hcmtlciA9IGphenpjaG9yZHMgPyBcIlxceDAzXCIgOiBcIlwiO1xuXHRcdGNvbnN0IGJhc3MgPSBiYXNzTm90ZSA/IFwiL1wiICsgYmFzc05vdGUgOiBcIlwiO1xuXHRcdGxpbmVzW2ldID0gW2Jhc2VDaG9yZCwgbW9kaWZpZXIsIGJhc3NdLmpvaW4obWFya2VyKTtcblx0fVxuXHRyZXR1cm4gbGluZXMuam9pbihcIlxcblwiKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB0cmFuc2xhdGVDaG9yZDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/creation/translate-chord.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/absolute.js":
/*!*******************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/absolute.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var drawTempo = __webpack_require__(/*! ./tempo */ \"(ssr)/./node_modules/abcjs/src/write/draw/tempo.js\");\nvar drawRelativeElement = __webpack_require__(/*! ./relative */ \"(ssr)/./node_modules/abcjs/src/write/draw/relative.js\");\nvar spacing = __webpack_require__(/*! ../helpers/spacing */ \"(ssr)/./node_modules/abcjs/src/write/helpers/spacing.js\");\nvar setClass = __webpack_require__(/*! ../helpers/set-class */ \"(ssr)/./node_modules/abcjs/src/write/helpers/set-class.js\");\nvar elementGroup = __webpack_require__(/*! ./group-elements */ \"(ssr)/./node_modules/abcjs/src/write/draw/group-elements.js\");\n\nfunction drawAbsolute(renderer, params, bartop, selectables, staffPos) {\n\tif (params.invisible) return;\n\tvar isTempo = params.children.length > 0 && params.children[0].type === \"TempoElement\";\n\tparams.elemset = [];\n\telementGroup.beginGroup(renderer.paper, renderer.controller);\n\tfor (var i = 0; i < params.children.length; i++) {\n\t\tvar child = params.children[i];\n\t\tswitch (child.type) {\n\t\t\tcase \"TempoElement\":\n\t\t\t\tdrawTempo(renderer, child);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tvar el = drawRelativeElement(renderer, child, bartop);\n\t\t\t\tif (child.type === \"symbol\" && child.c && child.c.indexOf('notehead') >= 0) {\n\t\t\t\t\tel.setAttribute('class', 'abcjs-notehead')\n\t\t\t\t}\n\t\t}\n\t}\n\tvar klass = params.type;\n\tif (params.type === 'note' || params.type === 'rest') {\n\t\tparams.counters = renderer.controller.classes.getCurrent();\n\t\tklass += ' d' + Math.round(params.durationClass * 1000) / 1000;\n\t\tklass = klass.replace(/\\./g, '-');\n\t\tif (params.abcelem.pitches) {\n\t\t\tfor (var j = 0; j < params.abcelem.pitches.length; j++) {\n\t\t\t\tklass += ' p' + params.abcelem.pitches[j].pitch;\n\t\t\t}\n\t\t}\n\t}\n\tvar g = elementGroup.endGroup(klass, params.type);\n\tif (g) {\n\t\t// TODO-PER-HACK! This corrects the classes because the tablature is not being created at the right time.\n\t\tif (params.cloned) {\n\t\t\tparams.cloned.overrideClasses = g.className.baseVal\n\t\t}\n\t\tif (params.overrideClasses) {\n\t\t\tvar type = g.classList && g.classList.length > 0 ? g.classList[0] + ' ' : ''\n\t\t\tg.setAttribute(\"class\", type + params.overrideClasses)\n\t\t}\n\t\tif (isTempo) {\n\t\t\tparams.startChar = params.abcelem.startChar;\n\t\t\tparams.endChar = params.abcelem.endChar;\n\t\t\tselectables.add(params, g, false, staffPos);\n\t\t} else {\n\t\t\tparams.elemset.push(g);\n\t\t\tvar isSelectable = false;\n\t\t\tif (params.type === 'note' || params.type === 'tabNumber') {\n\t\t\t\tisSelectable = true;\n\t\t\t}\n\t\t\tselectables.add(params, g, isSelectable, staffPos);\n\t\t}\n\t} else if (params.elemset.length > 0)\n\t\tselectables.add(params, params.elemset[0], params.type === 'note', staffPos);\n\t// If there was no output, then don't add to the selectables. This happens when using the \"y\" spacer, for instance.\n\n\tif (params.klass)\n\t\tsetClass(params.elemset, \"mark\", \"\", \"#00ff00\");\n\tif (params.hint)\n\t\tsetClass(params.elemset, \"abcjs-hint\", \"\", null);\n\tparams.abcelem.abselem = params;\n\n\tif (params.heads && params.heads.length > 0) {\n\t\tparams.notePositions = [];\n\t\tfor (var jj = 0; jj < params.heads.length; jj++) {\n\t\t\tparams.notePositions.push({\n\t\t\t\tx: params.heads[jj].x + params.heads[jj].w / 2,\n\t\t\t\ty: staffPos.zero - params.heads[jj].pitch * spacing.STEP\n\t\t\t});\n\t\t}\n\t}\n}\n\nmodule.exports = drawAbsolute;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvYWJzb2x1dGUuanMiLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLG1CQUFPLENBQUMsbUVBQVM7QUFDakMsMEJBQTBCLG1CQUFPLENBQUMseUVBQVk7QUFDOUMsY0FBYyxtQkFBTyxDQUFDLG1GQUFvQjtBQUMxQyxlQUFlLG1CQUFPLENBQUMsdUZBQXNCO0FBQzdDLG1CQUFtQixtQkFBTyxDQUFDLHFGQUFrQjs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiw0QkFBNEI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG1DQUFtQztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxtQkFBbUIsMEJBQTBCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvZHJhdy9hYnNvbHV0ZS5qcz81ZTg2Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBkcmF3VGVtcG8gPSByZXF1aXJlKCcuL3RlbXBvJyk7XG52YXIgZHJhd1JlbGF0aXZlRWxlbWVudCA9IHJlcXVpcmUoJy4vcmVsYXRpdmUnKTtcbnZhciBzcGFjaW5nID0gcmVxdWlyZSgnLi4vaGVscGVycy9zcGFjaW5nJyk7XG52YXIgc2V0Q2xhc3MgPSByZXF1aXJlKCcuLi9oZWxwZXJzL3NldC1jbGFzcycpO1xudmFyIGVsZW1lbnRHcm91cCA9IHJlcXVpcmUoJy4vZ3JvdXAtZWxlbWVudHMnKTtcblxuZnVuY3Rpb24gZHJhd0Fic29sdXRlKHJlbmRlcmVyLCBwYXJhbXMsIGJhcnRvcCwgc2VsZWN0YWJsZXMsIHN0YWZmUG9zKSB7XG5cdGlmIChwYXJhbXMuaW52aXNpYmxlKSByZXR1cm47XG5cdHZhciBpc1RlbXBvID0gcGFyYW1zLmNoaWxkcmVuLmxlbmd0aCA+IDAgJiYgcGFyYW1zLmNoaWxkcmVuWzBdLnR5cGUgPT09IFwiVGVtcG9FbGVtZW50XCI7XG5cdHBhcmFtcy5lbGVtc2V0ID0gW107XG5cdGVsZW1lbnRHcm91cC5iZWdpbkdyb3VwKHJlbmRlcmVyLnBhcGVyLCByZW5kZXJlci5jb250cm9sbGVyKTtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBwYXJhbXMuY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgY2hpbGQgPSBwYXJhbXMuY2hpbGRyZW5baV07XG5cdFx0c3dpdGNoIChjaGlsZC50eXBlKSB7XG5cdFx0XHRjYXNlIFwiVGVtcG9FbGVtZW50XCI6XG5cdFx0XHRcdGRyYXdUZW1wbyhyZW5kZXJlciwgY2hpbGQpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdHZhciBlbCA9IGRyYXdSZWxhdGl2ZUVsZW1lbnQocmVuZGVyZXIsIGNoaWxkLCBiYXJ0b3ApO1xuXHRcdFx0XHRpZiAoY2hpbGQudHlwZSA9PT0gXCJzeW1ib2xcIiAmJiBjaGlsZC5jICYmIGNoaWxkLmMuaW5kZXhPZignbm90ZWhlYWQnKSA+PSAwKSB7XG5cdFx0XHRcdFx0ZWwuc2V0QXR0cmlidXRlKCdjbGFzcycsICdhYmNqcy1ub3RlaGVhZCcpXG5cdFx0XHRcdH1cblx0XHR9XG5cdH1cblx0dmFyIGtsYXNzID0gcGFyYW1zLnR5cGU7XG5cdGlmIChwYXJhbXMudHlwZSA9PT0gJ25vdGUnIHx8IHBhcmFtcy50eXBlID09PSAncmVzdCcpIHtcblx0XHRwYXJhbXMuY291bnRlcnMgPSByZW5kZXJlci5jb250cm9sbGVyLmNsYXNzZXMuZ2V0Q3VycmVudCgpO1xuXHRcdGtsYXNzICs9ICcgZCcgKyBNYXRoLnJvdW5kKHBhcmFtcy5kdXJhdGlvbkNsYXNzICogMTAwMCkgLyAxMDAwO1xuXHRcdGtsYXNzID0ga2xhc3MucmVwbGFjZSgvXFwuL2csICctJyk7XG5cdFx0aWYgKHBhcmFtcy5hYmNlbGVtLnBpdGNoZXMpIHtcblx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgcGFyYW1zLmFiY2VsZW0ucGl0Y2hlcy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRrbGFzcyArPSAnIHAnICsgcGFyYW1zLmFiY2VsZW0ucGl0Y2hlc1tqXS5waXRjaDtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0dmFyIGcgPSBlbGVtZW50R3JvdXAuZW5kR3JvdXAoa2xhc3MsIHBhcmFtcy50eXBlKTtcblx0aWYgKGcpIHtcblx0XHQvLyBUT0RPLVBFUi1IQUNLISBUaGlzIGNvcnJlY3RzIHRoZSBjbGFzc2VzIGJlY2F1c2UgdGhlIHRhYmxhdHVyZSBpcyBub3QgYmVpbmcgY3JlYXRlZCBhdCB0aGUgcmlnaHQgdGltZS5cblx0XHRpZiAocGFyYW1zLmNsb25lZCkge1xuXHRcdFx0cGFyYW1zLmNsb25lZC5vdmVycmlkZUNsYXNzZXMgPSBnLmNsYXNzTmFtZS5iYXNlVmFsXG5cdFx0fVxuXHRcdGlmIChwYXJhbXMub3ZlcnJpZGVDbGFzc2VzKSB7XG5cdFx0XHR2YXIgdHlwZSA9IGcuY2xhc3NMaXN0ICYmIGcuY2xhc3NMaXN0Lmxlbmd0aCA+IDAgPyBnLmNsYXNzTGlzdFswXSArICcgJyA6ICcnXG5cdFx0XHRnLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIHR5cGUgKyBwYXJhbXMub3ZlcnJpZGVDbGFzc2VzKVxuXHRcdH1cblx0XHRpZiAoaXNUZW1wbykge1xuXHRcdFx0cGFyYW1zLnN0YXJ0Q2hhciA9IHBhcmFtcy5hYmNlbGVtLnN0YXJ0Q2hhcjtcblx0XHRcdHBhcmFtcy5lbmRDaGFyID0gcGFyYW1zLmFiY2VsZW0uZW5kQ2hhcjtcblx0XHRcdHNlbGVjdGFibGVzLmFkZChwYXJhbXMsIGcsIGZhbHNlLCBzdGFmZlBvcyk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHBhcmFtcy5lbGVtc2V0LnB1c2goZyk7XG5cdFx0XHR2YXIgaXNTZWxlY3RhYmxlID0gZmFsc2U7XG5cdFx0XHRpZiAocGFyYW1zLnR5cGUgPT09ICdub3RlJyB8fCBwYXJhbXMudHlwZSA9PT0gJ3RhYk51bWJlcicpIHtcblx0XHRcdFx0aXNTZWxlY3RhYmxlID0gdHJ1ZTtcblx0XHRcdH1cblx0XHRcdHNlbGVjdGFibGVzLmFkZChwYXJhbXMsIGcsIGlzU2VsZWN0YWJsZSwgc3RhZmZQb3MpO1xuXHRcdH1cblx0fSBlbHNlIGlmIChwYXJhbXMuZWxlbXNldC5sZW5ndGggPiAwKVxuXHRcdHNlbGVjdGFibGVzLmFkZChwYXJhbXMsIHBhcmFtcy5lbGVtc2V0WzBdLCBwYXJhbXMudHlwZSA9PT0gJ25vdGUnLCBzdGFmZlBvcyk7XG5cdC8vIElmIHRoZXJlIHdhcyBubyBvdXRwdXQsIHRoZW4gZG9uJ3QgYWRkIHRvIHRoZSBzZWxlY3RhYmxlcy4gVGhpcyBoYXBwZW5zIHdoZW4gdXNpbmcgdGhlIFwieVwiIHNwYWNlciwgZm9yIGluc3RhbmNlLlxuXG5cdGlmIChwYXJhbXMua2xhc3MpXG5cdFx0c2V0Q2xhc3MocGFyYW1zLmVsZW1zZXQsIFwibWFya1wiLCBcIlwiLCBcIiMwMGZmMDBcIik7XG5cdGlmIChwYXJhbXMuaGludClcblx0XHRzZXRDbGFzcyhwYXJhbXMuZWxlbXNldCwgXCJhYmNqcy1oaW50XCIsIFwiXCIsIG51bGwpO1xuXHRwYXJhbXMuYWJjZWxlbS5hYnNlbGVtID0gcGFyYW1zO1xuXG5cdGlmIChwYXJhbXMuaGVhZHMgJiYgcGFyYW1zLmhlYWRzLmxlbmd0aCA+IDApIHtcblx0XHRwYXJhbXMubm90ZVBvc2l0aW9ucyA9IFtdO1xuXHRcdGZvciAodmFyIGpqID0gMDsgamogPCBwYXJhbXMuaGVhZHMubGVuZ3RoOyBqaisrKSB7XG5cdFx0XHRwYXJhbXMubm90ZVBvc2l0aW9ucy5wdXNoKHtcblx0XHRcdFx0eDogcGFyYW1zLmhlYWRzW2pqXS54ICsgcGFyYW1zLmhlYWRzW2pqXS53IC8gMixcblx0XHRcdFx0eTogc3RhZmZQb3MuemVybyAtIHBhcmFtcy5oZWFkc1tqal0ucGl0Y2ggKiBzcGFjaW5nLlNURVBcblx0XHRcdH0pO1xuXHRcdH1cblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRyYXdBYnNvbHV0ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/absolute.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/beam.js":
/*!***************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/beam.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var printPath = __webpack_require__(/*! ./print-path */ \"(ssr)/./node_modules/abcjs/src/write/draw/print-path.js\");\nvar roundNumber = __webpack_require__(/*! ./round-number */ \"(ssr)/./node_modules/abcjs/src/write/draw/round-number.js\");\n\nfunction drawBeam(renderer, params) {\n\tif (params.beams.length === 0) return;\n\n\tvar pathString = \"\";\n\tfor (var i = 0; i < params.beams.length; i++) {\n\t\tvar beam = params.beams[i];\n\t\tif (beam.split) {\n\t\t\tvar slope = getSlope(renderer, beam.startX, beam.startY, beam.endX, beam.endY);\n\t\t\tvar xes = [];\n\t\t\tfor (var j = 0; j < beam.split.length; j += 2) {\n\t\t\t\txes.push([beam.split[j], beam.split[j + 1]]);\n\t\t\t}\n\t\t\tfor (j = 0; j < xes.length; j++) {\n\t\t\t\tvar y1 = getY(beam.startX, beam.startY, slope, xes[j][0]);\n\t\t\t\tvar y2 = getY(beam.startX, beam.startY, slope, xes[j][1]);\n\t\t\t\tpathString += draw(renderer, xes[j][0], y1, xes[j][1], y2, beam.dy);\n\t\t\t}\n\t\t} else\n\t\t\tpathString += draw(renderer, beam.startX, beam.startY, beam.endX, beam.endY, beam.dy);\n\t}\n\tvar durationClass = (\"abcjs-d\" + params.duration).replace(/\\./g, \"-\");\n\tvar klasses = renderer.controller.classes.generate('beam-elem ' + durationClass);\n\tvar el = printPath(renderer, {\n\t\tpath: pathString,\n\t\tstroke: \"none\",\n\t\tfill: renderer.foregroundColor,\n\t\t'class': klasses\n\t});\n\treturn [el];\n}\n\nfunction draw(renderer, startX, startY, endX, endY, dy) {\n\t// the X coordinates are actual coordinates, but the Y coordinates are in pitches.\n\tstartY = roundNumber(renderer.calcY(startY));\n\tendY = roundNumber(renderer.calcY(endY));\n\tstartX = roundNumber(startX);\n\tendX = roundNumber(endX);\n\tvar startY2 = roundNumber(startY + dy);\n\tvar endY2 = roundNumber(endY + dy);\n\treturn \"M\" + startX + \" \" + startY + \" L\" + endX + \" \" + endY +\n\t\t\"L\" + endX + \" \" + endY2 + \" L\" + startX + \" \" + startY2 + \"z\";\n}\n\nfunction getSlope(renderer, startX, startY, endX, endY) {\n\treturn (endY - startY) / (endX - startX);\n}\n\nfunction getY(startX, startY, slope, currentX) {\n\tvar x = currentX - startX;\n\treturn startY + x * slope;\n}\n\nmodule.exports = drawBeam;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvYmVhbS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0IsbUJBQU8sQ0FBQyw2RUFBYztBQUN0QyxrQkFBa0IsbUJBQU8sQ0FBQyxpRkFBZ0I7O0FBRTFDO0FBQ0E7O0FBRUE7QUFDQSxpQkFBaUIseUJBQXlCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVCQUF1QjtBQUMxQztBQUNBO0FBQ0EsZUFBZSxnQkFBZ0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvZHJhdy9iZWFtLmpzPzkxYmEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHByaW50UGF0aCA9IHJlcXVpcmUoJy4vcHJpbnQtcGF0aCcpO1xudmFyIHJvdW5kTnVtYmVyID0gcmVxdWlyZShcIi4vcm91bmQtbnVtYmVyXCIpO1xuXG5mdW5jdGlvbiBkcmF3QmVhbShyZW5kZXJlciwgcGFyYW1zKSB7XG5cdGlmIChwYXJhbXMuYmVhbXMubGVuZ3RoID09PSAwKSByZXR1cm47XG5cblx0dmFyIHBhdGhTdHJpbmcgPSBcIlwiO1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IHBhcmFtcy5iZWFtcy5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBiZWFtID0gcGFyYW1zLmJlYW1zW2ldO1xuXHRcdGlmIChiZWFtLnNwbGl0KSB7XG5cdFx0XHR2YXIgc2xvcGUgPSBnZXRTbG9wZShyZW5kZXJlciwgYmVhbS5zdGFydFgsIGJlYW0uc3RhcnRZLCBiZWFtLmVuZFgsIGJlYW0uZW5kWSk7XG5cdFx0XHR2YXIgeGVzID0gW107XG5cdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGJlYW0uc3BsaXQubGVuZ3RoOyBqICs9IDIpIHtcblx0XHRcdFx0eGVzLnB1c2goW2JlYW0uc3BsaXRbal0sIGJlYW0uc3BsaXRbaiArIDFdXSk7XG5cdFx0XHR9XG5cdFx0XHRmb3IgKGogPSAwOyBqIDwgeGVzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdHZhciB5MSA9IGdldFkoYmVhbS5zdGFydFgsIGJlYW0uc3RhcnRZLCBzbG9wZSwgeGVzW2pdWzBdKTtcblx0XHRcdFx0dmFyIHkyID0gZ2V0WShiZWFtLnN0YXJ0WCwgYmVhbS5zdGFydFksIHNsb3BlLCB4ZXNbal1bMV0pO1xuXHRcdFx0XHRwYXRoU3RyaW5nICs9IGRyYXcocmVuZGVyZXIsIHhlc1tqXVswXSwgeTEsIHhlc1tqXVsxXSwgeTIsIGJlYW0uZHkpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZVxuXHRcdFx0cGF0aFN0cmluZyArPSBkcmF3KHJlbmRlcmVyLCBiZWFtLnN0YXJ0WCwgYmVhbS5zdGFydFksIGJlYW0uZW5kWCwgYmVhbS5lbmRZLCBiZWFtLmR5KTtcblx0fVxuXHR2YXIgZHVyYXRpb25DbGFzcyA9IChcImFiY2pzLWRcIiArIHBhcmFtcy5kdXJhdGlvbikucmVwbGFjZSgvXFwuL2csIFwiLVwiKTtcblx0dmFyIGtsYXNzZXMgPSByZW5kZXJlci5jb250cm9sbGVyLmNsYXNzZXMuZ2VuZXJhdGUoJ2JlYW0tZWxlbSAnICsgZHVyYXRpb25DbGFzcyk7XG5cdHZhciBlbCA9IHByaW50UGF0aChyZW5kZXJlciwge1xuXHRcdHBhdGg6IHBhdGhTdHJpbmcsXG5cdFx0c3Ryb2tlOiBcIm5vbmVcIixcblx0XHRmaWxsOiByZW5kZXJlci5mb3JlZ3JvdW5kQ29sb3IsXG5cdFx0J2NsYXNzJzoga2xhc3Nlc1xuXHR9KTtcblx0cmV0dXJuIFtlbF07XG59XG5cbmZ1bmN0aW9uIGRyYXcocmVuZGVyZXIsIHN0YXJ0WCwgc3RhcnRZLCBlbmRYLCBlbmRZLCBkeSkge1xuXHQvLyB0aGUgWCBjb29yZGluYXRlcyBhcmUgYWN0dWFsIGNvb3JkaW5hdGVzLCBidXQgdGhlIFkgY29vcmRpbmF0ZXMgYXJlIGluIHBpdGNoZXMuXG5cdHN0YXJ0WSA9IHJvdW5kTnVtYmVyKHJlbmRlcmVyLmNhbGNZKHN0YXJ0WSkpO1xuXHRlbmRZID0gcm91bmROdW1iZXIocmVuZGVyZXIuY2FsY1koZW5kWSkpO1xuXHRzdGFydFggPSByb3VuZE51bWJlcihzdGFydFgpO1xuXHRlbmRYID0gcm91bmROdW1iZXIoZW5kWCk7XG5cdHZhciBzdGFydFkyID0gcm91bmROdW1iZXIoc3RhcnRZICsgZHkpO1xuXHR2YXIgZW5kWTIgPSByb3VuZE51bWJlcihlbmRZICsgZHkpO1xuXHRyZXR1cm4gXCJNXCIgKyBzdGFydFggKyBcIiBcIiArIHN0YXJ0WSArIFwiIExcIiArIGVuZFggKyBcIiBcIiArIGVuZFkgK1xuXHRcdFwiTFwiICsgZW5kWCArIFwiIFwiICsgZW5kWTIgKyBcIiBMXCIgKyBzdGFydFggKyBcIiBcIiArIHN0YXJ0WTIgKyBcInpcIjtcbn1cblxuZnVuY3Rpb24gZ2V0U2xvcGUocmVuZGVyZXIsIHN0YXJ0WCwgc3RhcnRZLCBlbmRYLCBlbmRZKSB7XG5cdHJldHVybiAoZW5kWSAtIHN0YXJ0WSkgLyAoZW5kWCAtIHN0YXJ0WCk7XG59XG5cbmZ1bmN0aW9uIGdldFkoc3RhcnRYLCBzdGFydFksIHNsb3BlLCBjdXJyZW50WCkge1xuXHR2YXIgeCA9IGN1cnJlbnRYIC0gc3RhcnRYO1xuXHRyZXR1cm4gc3RhcnRZICsgeCAqIHNsb3BlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRyYXdCZWFtO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/beam.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/brace.js":
/*!****************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/brace.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var sprintf = __webpack_require__(/*! ./sprintf */ \"(ssr)/./node_modules/abcjs/src/write/draw/sprintf.js\");\nvar spacing = __webpack_require__(/*! ../helpers/spacing */ \"(ssr)/./node_modules/abcjs/src/write/helpers/spacing.js\");\nvar renderText = __webpack_require__(/*! ./text */ \"(ssr)/./node_modules/abcjs/src/write/draw/text.js\");\n\nfunction drawBrace(renderer, params, selectables) {\n\t// The absoluteY number is the spot where the note on the first ledger line is drawn (i.e. middle C if treble clef)\n\t// The STEP offset here moves it to the top and bottom lines\n\tvar startY = params.startVoice.staff.absoluteY - spacing.STEP * 10;\n\tif (params.endVoice && params.endVoice.staff)\n\t\tparams.endY = params.endVoice.staff.absoluteY - spacing.STEP * 2;\n\telse if (params.lastContinuedVoice && params.lastContinuedVoice.staff)\n\t\tparams.endY = params.lastContinuedVoice.staff.absoluteY - spacing.STEP * 2;\n\telse\n\t\tparams.endY = params.startVoice.staff.absoluteY - spacing.STEP * 2;\n\treturn draw(renderer, params.x, startY, params.endY, params.type, params.header, selectables);\n}\n\nfunction straightPath(renderer, xLeft, yTop, yBottom, type) {\n\txLeft += spacing.STEP;\n\tvar xLineWidth = spacing.STEP * 0.75;\n\tvar yOverlap = spacing.STEP * 0.75;\n\tvar height = yBottom - yTop;\n\t// Straight line\n\tvar pathString = sprintf(\"M %f %f l %f %f l %f %f l %f %f z\",\n\t\txLeft, yTop - yOverlap, // top left line\n\t\t0, height + yOverlap * 2, // bottom left line\n\t\txLineWidth, 0, // bottom right line\n\t\t0, - (height + yOverlap * 2) // top right line\n\t);\n\t// Top arm\n\tvar wCurve = spacing.STEP * 2;\n\tvar hCurve = spacing.STEP;\n\tpathString += sprintf(\"M %f %f q %f %f %f %f q %f %f %f %f z\",\n\t\txLeft + xLineWidth, yTop - yOverlap, // top left arm\n\t\twCurve * 0.6, hCurve * 0.2,\n\t\twCurve, -hCurve, // right point\n\t\t-wCurve * 0.1, hCurve * 0.3,\n\t\t-wCurve, hCurve + spacing.STEP // left bottom\n\t);\n\t// Bottom arm\n\tpathString += sprintf(\"M %f %f q %f %f %f %f q %f %f %f %f z\",\n\t\txLeft + xLineWidth, yTop + yOverlap + height, // bottom left arm\n\t\twCurve * 0.6, -hCurve * 0.2,\n\t\twCurve, hCurve, // right point\n\t\t-wCurve * 0.1, -hCurve * 0.3,\n\t\t-wCurve, -hCurve - spacing.STEP // left bottom\n\t);\n\treturn renderer.paper.path({ path: pathString, stroke: renderer.foregroundColor, fill: renderer.foregroundColor, 'class': renderer.controller.classes.generate(type), \"data-name\": type });\n}\n\nfunction curvyPath(renderer, xLeft, yTop, yBottom, type) {\n\tvar yHeight = yBottom - yTop;\n\n\tvar pathString = curve(xLeft,\n\t\tyTop,\n\t\t[7.5, -8, 21, 0, 18.5, -10.5, 7.5],\n\t\t[0, yHeight / 5.5, yHeight / 3.14, yHeight / 2, yHeight / 2.93, yHeight / 4.88, 0]);\n\n\tpathString += curve(xLeft,\n\t\tyTop,\n\t\t[0, 17.5, -7.5, 6.6, -5, 20, 0],\n\t\t[yHeight / 2, yHeight / 1.46, yHeight / 1.22, yHeight, yHeight / 1.19, yHeight / 1.42, yHeight / 2]);\n\n\treturn renderer.paper.path({ path: pathString, stroke: renderer.foregroundColor, fill: renderer.foregroundColor, 'class': renderer.controller.classes.generate(type), \"data-name\": type });\n}\n\nfunction curve(xLeft, yTop, xCurve, yCurve) {\n\treturn sprintf(\"M %f %f C %f %f %f %f %f %f C %f %f %f %f %f %f z\",\n\t\txLeft + xCurve[0], yTop + yCurve[0],\n\t\txLeft + xCurve[1], yTop + yCurve[1],\n\t\txLeft + xCurve[2], yTop + yCurve[2],\n\t\txLeft + xCurve[3], yTop + yCurve[3],\n\t\txLeft + xCurve[4], yTop + yCurve[4],\n\t\txLeft + xCurve[5], yTop + yCurve[5],\n\t\txLeft + xCurve[6], yTop + yCurve[6]);\n}\n\nvar draw = function (renderer, xLeft, yTop, yBottom, type, header, selectables) {//Tony\n\tvar ret;\n\tif (header) {\n\t\trenderer.paper.openGroup({ klass: renderer.controller.classes.generate(\"staff-extra voice-name\"), \"data-name\": type });\n\t\tvar position = yTop + (yBottom - yTop) / 2;\n\t\tposition = position - renderer.controller.getTextSize.baselineToCenter(header, \"voicefont\", 'staff-extra voice-name', 0, 1);\n\n\t\trenderText(renderer, {\n\t\t\tx: renderer.padding.left,\n\t\t\ty: position,\n\t\t\ttext: header,\n\t\t\ttype: 'voicefont',\n\t\t\tklass: 'staff-extra voice-name',\n\t\t\tanchor: 'start',\n\t\t\tcenterVertically: true\n\t\t});\n\t}\n\tif (type === \"brace\")\n\t\tret = curvyPath(renderer, xLeft, yTop, yBottom, type);\n\telse if (type === \"bracket\")\n\t\tret = straightPath(renderer, xLeft, yTop, yBottom, type);\n\tif (header) {\n\t\tret = renderer.paper.closeGroup();\n\t}\n\tselectables.wrapSvgEl({ el_type: type, startChar: -1, endChar: -1 }, ret);\n\n\treturn ret;\n};\nmodule.exports = drawBrace;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvYnJhY2UuanMiLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxtQkFBTyxDQUFDLHVFQUFXO0FBQ2pDLGNBQWMsbUJBQU8sQ0FBQyxtRkFBb0I7QUFDMUMsaUJBQWlCLG1CQUFPLENBQUMsaUVBQVE7O0FBRWpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsNEpBQTRKO0FBQzFMOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsOEJBQThCLDRKQUE0SjtBQUMxTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpRkFBaUY7QUFDakY7QUFDQTtBQUNBLDZCQUE2QiwwRkFBMEY7QUFDdkg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsMkNBQTJDOztBQUVwRTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvZHJhdy9icmFjZS5qcz8zZTMzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBzcHJpbnRmID0gcmVxdWlyZSgnLi9zcHJpbnRmJyk7XG52YXIgc3BhY2luZyA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvc3BhY2luZycpO1xudmFyIHJlbmRlclRleHQgPSByZXF1aXJlKCcuL3RleHQnKTtcblxuZnVuY3Rpb24gZHJhd0JyYWNlKHJlbmRlcmVyLCBwYXJhbXMsIHNlbGVjdGFibGVzKSB7XG5cdC8vIFRoZSBhYnNvbHV0ZVkgbnVtYmVyIGlzIHRoZSBzcG90IHdoZXJlIHRoZSBub3RlIG9uIHRoZSBmaXJzdCBsZWRnZXIgbGluZSBpcyBkcmF3biAoaS5lLiBtaWRkbGUgQyBpZiB0cmVibGUgY2xlZilcblx0Ly8gVGhlIFNURVAgb2Zmc2V0IGhlcmUgbW92ZXMgaXQgdG8gdGhlIHRvcCBhbmQgYm90dG9tIGxpbmVzXG5cdHZhciBzdGFydFkgPSBwYXJhbXMuc3RhcnRWb2ljZS5zdGFmZi5hYnNvbHV0ZVkgLSBzcGFjaW5nLlNURVAgKiAxMDtcblx0aWYgKHBhcmFtcy5lbmRWb2ljZSAmJiBwYXJhbXMuZW5kVm9pY2Uuc3RhZmYpXG5cdFx0cGFyYW1zLmVuZFkgPSBwYXJhbXMuZW5kVm9pY2Uuc3RhZmYuYWJzb2x1dGVZIC0gc3BhY2luZy5TVEVQICogMjtcblx0ZWxzZSBpZiAocGFyYW1zLmxhc3RDb250aW51ZWRWb2ljZSAmJiBwYXJhbXMubGFzdENvbnRpbnVlZFZvaWNlLnN0YWZmKVxuXHRcdHBhcmFtcy5lbmRZID0gcGFyYW1zLmxhc3RDb250aW51ZWRWb2ljZS5zdGFmZi5hYnNvbHV0ZVkgLSBzcGFjaW5nLlNURVAgKiAyO1xuXHRlbHNlXG5cdFx0cGFyYW1zLmVuZFkgPSBwYXJhbXMuc3RhcnRWb2ljZS5zdGFmZi5hYnNvbHV0ZVkgLSBzcGFjaW5nLlNURVAgKiAyO1xuXHRyZXR1cm4gZHJhdyhyZW5kZXJlciwgcGFyYW1zLngsIHN0YXJ0WSwgcGFyYW1zLmVuZFksIHBhcmFtcy50eXBlLCBwYXJhbXMuaGVhZGVyLCBzZWxlY3RhYmxlcyk7XG59XG5cbmZ1bmN0aW9uIHN0cmFpZ2h0UGF0aChyZW5kZXJlciwgeExlZnQsIHlUb3AsIHlCb3R0b20sIHR5cGUpIHtcblx0eExlZnQgKz0gc3BhY2luZy5TVEVQO1xuXHR2YXIgeExpbmVXaWR0aCA9IHNwYWNpbmcuU1RFUCAqIDAuNzU7XG5cdHZhciB5T3ZlcmxhcCA9IHNwYWNpbmcuU1RFUCAqIDAuNzU7XG5cdHZhciBoZWlnaHQgPSB5Qm90dG9tIC0geVRvcDtcblx0Ly8gU3RyYWlnaHQgbGluZVxuXHR2YXIgcGF0aFN0cmluZyA9IHNwcmludGYoXCJNICVmICVmIGwgJWYgJWYgbCAlZiAlZiBsICVmICVmIHpcIixcblx0XHR4TGVmdCwgeVRvcCAtIHlPdmVybGFwLCAvLyB0b3AgbGVmdCBsaW5lXG5cdFx0MCwgaGVpZ2h0ICsgeU92ZXJsYXAgKiAyLCAvLyBib3R0b20gbGVmdCBsaW5lXG5cdFx0eExpbmVXaWR0aCwgMCwgLy8gYm90dG9tIHJpZ2h0IGxpbmVcblx0XHQwLCAtIChoZWlnaHQgKyB5T3ZlcmxhcCAqIDIpIC8vIHRvcCByaWdodCBsaW5lXG5cdCk7XG5cdC8vIFRvcCBhcm1cblx0dmFyIHdDdXJ2ZSA9IHNwYWNpbmcuU1RFUCAqIDI7XG5cdHZhciBoQ3VydmUgPSBzcGFjaW5nLlNURVA7XG5cdHBhdGhTdHJpbmcgKz0gc3ByaW50ZihcIk0gJWYgJWYgcSAlZiAlZiAlZiAlZiBxICVmICVmICVmICVmIHpcIixcblx0XHR4TGVmdCArIHhMaW5lV2lkdGgsIHlUb3AgLSB5T3ZlcmxhcCwgLy8gdG9wIGxlZnQgYXJtXG5cdFx0d0N1cnZlICogMC42LCBoQ3VydmUgKiAwLjIsXG5cdFx0d0N1cnZlLCAtaEN1cnZlLCAvLyByaWdodCBwb2ludFxuXHRcdC13Q3VydmUgKiAwLjEsIGhDdXJ2ZSAqIDAuMyxcblx0XHQtd0N1cnZlLCBoQ3VydmUgKyBzcGFjaW5nLlNURVAgLy8gbGVmdCBib3R0b21cblx0KTtcblx0Ly8gQm90dG9tIGFybVxuXHRwYXRoU3RyaW5nICs9IHNwcmludGYoXCJNICVmICVmIHEgJWYgJWYgJWYgJWYgcSAlZiAlZiAlZiAlZiB6XCIsXG5cdFx0eExlZnQgKyB4TGluZVdpZHRoLCB5VG9wICsgeU92ZXJsYXAgKyBoZWlnaHQsIC8vIGJvdHRvbSBsZWZ0IGFybVxuXHRcdHdDdXJ2ZSAqIDAuNiwgLWhDdXJ2ZSAqIDAuMixcblx0XHR3Q3VydmUsIGhDdXJ2ZSwgLy8gcmlnaHQgcG9pbnRcblx0XHQtd0N1cnZlICogMC4xLCAtaEN1cnZlICogMC4zLFxuXHRcdC13Q3VydmUsIC1oQ3VydmUgLSBzcGFjaW5nLlNURVAgLy8gbGVmdCBib3R0b21cblx0KTtcblx0cmV0dXJuIHJlbmRlcmVyLnBhcGVyLnBhdGgoeyBwYXRoOiBwYXRoU3RyaW5nLCBzdHJva2U6IHJlbmRlcmVyLmZvcmVncm91bmRDb2xvciwgZmlsbDogcmVuZGVyZXIuZm9yZWdyb3VuZENvbG9yLCAnY2xhc3MnOiByZW5kZXJlci5jb250cm9sbGVyLmNsYXNzZXMuZ2VuZXJhdGUodHlwZSksIFwiZGF0YS1uYW1lXCI6IHR5cGUgfSk7XG59XG5cbmZ1bmN0aW9uIGN1cnZ5UGF0aChyZW5kZXJlciwgeExlZnQsIHlUb3AsIHlCb3R0b20sIHR5cGUpIHtcblx0dmFyIHlIZWlnaHQgPSB5Qm90dG9tIC0geVRvcDtcblxuXHR2YXIgcGF0aFN0cmluZyA9IGN1cnZlKHhMZWZ0LFxuXHRcdHlUb3AsXG5cdFx0WzcuNSwgLTgsIDIxLCAwLCAxOC41LCAtMTAuNSwgNy41XSxcblx0XHRbMCwgeUhlaWdodCAvIDUuNSwgeUhlaWdodCAvIDMuMTQsIHlIZWlnaHQgLyAyLCB5SGVpZ2h0IC8gMi45MywgeUhlaWdodCAvIDQuODgsIDBdKTtcblxuXHRwYXRoU3RyaW5nICs9IGN1cnZlKHhMZWZ0LFxuXHRcdHlUb3AsXG5cdFx0WzAsIDE3LjUsIC03LjUsIDYuNiwgLTUsIDIwLCAwXSxcblx0XHRbeUhlaWdodCAvIDIsIHlIZWlnaHQgLyAxLjQ2LCB5SGVpZ2h0IC8gMS4yMiwgeUhlaWdodCwgeUhlaWdodCAvIDEuMTksIHlIZWlnaHQgLyAxLjQyLCB5SGVpZ2h0IC8gMl0pO1xuXG5cdHJldHVybiByZW5kZXJlci5wYXBlci5wYXRoKHsgcGF0aDogcGF0aFN0cmluZywgc3Ryb2tlOiByZW5kZXJlci5mb3JlZ3JvdW5kQ29sb3IsIGZpbGw6IHJlbmRlcmVyLmZvcmVncm91bmRDb2xvciwgJ2NsYXNzJzogcmVuZGVyZXIuY29udHJvbGxlci5jbGFzc2VzLmdlbmVyYXRlKHR5cGUpLCBcImRhdGEtbmFtZVwiOiB0eXBlIH0pO1xufVxuXG5mdW5jdGlvbiBjdXJ2ZSh4TGVmdCwgeVRvcCwgeEN1cnZlLCB5Q3VydmUpIHtcblx0cmV0dXJuIHNwcmludGYoXCJNICVmICVmIEMgJWYgJWYgJWYgJWYgJWYgJWYgQyAlZiAlZiAlZiAlZiAlZiAlZiB6XCIsXG5cdFx0eExlZnQgKyB4Q3VydmVbMF0sIHlUb3AgKyB5Q3VydmVbMF0sXG5cdFx0eExlZnQgKyB4Q3VydmVbMV0sIHlUb3AgKyB5Q3VydmVbMV0sXG5cdFx0eExlZnQgKyB4Q3VydmVbMl0sIHlUb3AgKyB5Q3VydmVbMl0sXG5cdFx0eExlZnQgKyB4Q3VydmVbM10sIHlUb3AgKyB5Q3VydmVbM10sXG5cdFx0eExlZnQgKyB4Q3VydmVbNF0sIHlUb3AgKyB5Q3VydmVbNF0sXG5cdFx0eExlZnQgKyB4Q3VydmVbNV0sIHlUb3AgKyB5Q3VydmVbNV0sXG5cdFx0eExlZnQgKyB4Q3VydmVbNl0sIHlUb3AgKyB5Q3VydmVbNl0pO1xufVxuXG52YXIgZHJhdyA9IGZ1bmN0aW9uIChyZW5kZXJlciwgeExlZnQsIHlUb3AsIHlCb3R0b20sIHR5cGUsIGhlYWRlciwgc2VsZWN0YWJsZXMpIHsvL1Rvbnlcblx0dmFyIHJldDtcblx0aWYgKGhlYWRlcikge1xuXHRcdHJlbmRlcmVyLnBhcGVyLm9wZW5Hcm91cCh7IGtsYXNzOiByZW5kZXJlci5jb250cm9sbGVyLmNsYXNzZXMuZ2VuZXJhdGUoXCJzdGFmZi1leHRyYSB2b2ljZS1uYW1lXCIpLCBcImRhdGEtbmFtZVwiOiB0eXBlIH0pO1xuXHRcdHZhciBwb3NpdGlvbiA9IHlUb3AgKyAoeUJvdHRvbSAtIHlUb3ApIC8gMjtcblx0XHRwb3NpdGlvbiA9IHBvc2l0aW9uIC0gcmVuZGVyZXIuY29udHJvbGxlci5nZXRUZXh0U2l6ZS5iYXNlbGluZVRvQ2VudGVyKGhlYWRlciwgXCJ2b2ljZWZvbnRcIiwgJ3N0YWZmLWV4dHJhIHZvaWNlLW5hbWUnLCAwLCAxKTtcblxuXHRcdHJlbmRlclRleHQocmVuZGVyZXIsIHtcblx0XHRcdHg6IHJlbmRlcmVyLnBhZGRpbmcubGVmdCxcblx0XHRcdHk6IHBvc2l0aW9uLFxuXHRcdFx0dGV4dDogaGVhZGVyLFxuXHRcdFx0dHlwZTogJ3ZvaWNlZm9udCcsXG5cdFx0XHRrbGFzczogJ3N0YWZmLWV4dHJhIHZvaWNlLW5hbWUnLFxuXHRcdFx0YW5jaG9yOiAnc3RhcnQnLFxuXHRcdFx0Y2VudGVyVmVydGljYWxseTogdHJ1ZVxuXHRcdH0pO1xuXHR9XG5cdGlmICh0eXBlID09PSBcImJyYWNlXCIpXG5cdFx0cmV0ID0gY3VydnlQYXRoKHJlbmRlcmVyLCB4TGVmdCwgeVRvcCwgeUJvdHRvbSwgdHlwZSk7XG5cdGVsc2UgaWYgKHR5cGUgPT09IFwiYnJhY2tldFwiKVxuXHRcdHJldCA9IHN0cmFpZ2h0UGF0aChyZW5kZXJlciwgeExlZnQsIHlUb3AsIHlCb3R0b20sIHR5cGUpO1xuXHRpZiAoaGVhZGVyKSB7XG5cdFx0cmV0ID0gcmVuZGVyZXIucGFwZXIuY2xvc2VHcm91cCgpO1xuXHR9XG5cdHNlbGVjdGFibGVzLndyYXBTdmdFbCh7IGVsX3R5cGU6IHR5cGUsIHN0YXJ0Q2hhcjogLTEsIGVuZENoYXI6IC0xIH0sIHJldCk7XG5cblx0cmV0dXJuIHJldDtcbn07XG5tb2R1bGUuZXhwb3J0cyA9IGRyYXdCcmFjZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/brace.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/crescendo.js":
/*!********************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/crescendo.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var sprintf = __webpack_require__(/*! ./sprintf */ \"(ssr)/./node_modules/abcjs/src/write/draw/sprintf.js\");\nvar printPath = __webpack_require__(/*! ./print-path */ \"(ssr)/./node_modules/abcjs/src/write/draw/print-path.js\");\nvar roundNumber = __webpack_require__(/*! ./round-number */ \"(ssr)/./node_modules/abcjs/src/write/draw/round-number.js\");\n\nfunction drawCrescendo(renderer, params, selectables) {\n\tif (params.pitch === undefined)\n\t\twindow.console.error(\"Crescendo Element y-coordinate not set.\");\n\tvar y = renderer.calcY(params.pitch) + 4; // This is the top pixel to use (it is offset a little so that it looks good with the volume marks.)\n\tvar height = 8;\n\n\t// TODO-PER: This is just a quick hack to make the dynamic marks not crash if they are mismatched. See the slur treatment for the way to get the beginning and end.\n\tvar left = params.anchor1 ? params.anchor1.x : 0;\n\tvar right = params.anchor2 ? params.anchor2.x : 800;\n\n\tvar el;\n\tif (params.dir === \"<\") {\n\t\tel = drawLine(renderer, y + height / 2, y, y + height / 2, y + height, left, right);\n\t} else {\n\t\tel = drawLine(renderer, y, y + height / 2, y + height, y + height / 2, left, right);\n\t}\n\tselectables.wrapSvgEl({ el_type: \"dynamicDecoration\", startChar: -1, endChar: -1 }, el);\n\treturn [el];\n}\n\nvar drawLine = function (renderer, y1, y2, y3, y4, left, right) {\n\ty1 = roundNumber(y1);\n\ty2 = roundNumber(y2);\n\ty3 = roundNumber(y3);\n\ty4 = roundNumber(y4);\n\tleft = roundNumber(left);\n\tright = roundNumber(right);\n\n\tvar pathString = sprintf(\"M %f %f L %f %f M %f %f L %f %f\",\n\t\tleft, y1, right, y2, left, y3, right, y4);\n\treturn printPath(renderer, { path: pathString, highlight: \"stroke\", stroke: renderer.foregroundColor, 'class': renderer.controller.classes.generate('dynamics decoration'), \"data-name\": \"dynamics\" });\n};\n\nmodule.exports = drawCrescendo;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvY3Jlc2NlbmRvLmpzIiwibWFwcGluZ3MiOiJBQUFBLGNBQWMsbUJBQU8sQ0FBQyx1RUFBVztBQUNqQyxnQkFBZ0IsbUJBQU8sQ0FBQyw2RUFBYztBQUN0QyxrQkFBa0IsbUJBQU8sQ0FBQyxpRkFBZ0I7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQztBQUMzQzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSx5QkFBeUIsMERBQTBEO0FBQ25GO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDhCQUE4Qix3S0FBd0s7QUFDdE07O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvZHJhdy9jcmVzY2VuZG8uanM/MmY3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc3ByaW50ZiA9IHJlcXVpcmUoJy4vc3ByaW50ZicpO1xudmFyIHByaW50UGF0aCA9IHJlcXVpcmUoJy4vcHJpbnQtcGF0aCcpO1xudmFyIHJvdW5kTnVtYmVyID0gcmVxdWlyZShcIi4vcm91bmQtbnVtYmVyXCIpO1xuXG5mdW5jdGlvbiBkcmF3Q3Jlc2NlbmRvKHJlbmRlcmVyLCBwYXJhbXMsIHNlbGVjdGFibGVzKSB7XG5cdGlmIChwYXJhbXMucGl0Y2ggPT09IHVuZGVmaW5lZClcblx0XHR3aW5kb3cuY29uc29sZS5lcnJvcihcIkNyZXNjZW5kbyBFbGVtZW50IHktY29vcmRpbmF0ZSBub3Qgc2V0LlwiKTtcblx0dmFyIHkgPSByZW5kZXJlci5jYWxjWShwYXJhbXMucGl0Y2gpICsgNDsgLy8gVGhpcyBpcyB0aGUgdG9wIHBpeGVsIHRvIHVzZSAoaXQgaXMgb2Zmc2V0IGEgbGl0dGxlIHNvIHRoYXQgaXQgbG9va3MgZ29vZCB3aXRoIHRoZSB2b2x1bWUgbWFya3MuKVxuXHR2YXIgaGVpZ2h0ID0gODtcblxuXHQvLyBUT0RPLVBFUjogVGhpcyBpcyBqdXN0IGEgcXVpY2sgaGFjayB0byBtYWtlIHRoZSBkeW5hbWljIG1hcmtzIG5vdCBjcmFzaCBpZiB0aGV5IGFyZSBtaXNtYXRjaGVkLiBTZWUgdGhlIHNsdXIgdHJlYXRtZW50IGZvciB0aGUgd2F5IHRvIGdldCB0aGUgYmVnaW5uaW5nIGFuZCBlbmQuXG5cdHZhciBsZWZ0ID0gcGFyYW1zLmFuY2hvcjEgPyBwYXJhbXMuYW5jaG9yMS54IDogMDtcblx0dmFyIHJpZ2h0ID0gcGFyYW1zLmFuY2hvcjIgPyBwYXJhbXMuYW5jaG9yMi54IDogODAwO1xuXG5cdHZhciBlbDtcblx0aWYgKHBhcmFtcy5kaXIgPT09IFwiPFwiKSB7XG5cdFx0ZWwgPSBkcmF3TGluZShyZW5kZXJlciwgeSArIGhlaWdodCAvIDIsIHksIHkgKyBoZWlnaHQgLyAyLCB5ICsgaGVpZ2h0LCBsZWZ0LCByaWdodCk7XG5cdH0gZWxzZSB7XG5cdFx0ZWwgPSBkcmF3TGluZShyZW5kZXJlciwgeSwgeSArIGhlaWdodCAvIDIsIHkgKyBoZWlnaHQsIHkgKyBoZWlnaHQgLyAyLCBsZWZ0LCByaWdodCk7XG5cdH1cblx0c2VsZWN0YWJsZXMud3JhcFN2Z0VsKHsgZWxfdHlwZTogXCJkeW5hbWljRGVjb3JhdGlvblwiLCBzdGFydENoYXI6IC0xLCBlbmRDaGFyOiAtMSB9LCBlbCk7XG5cdHJldHVybiBbZWxdO1xufVxuXG52YXIgZHJhd0xpbmUgPSBmdW5jdGlvbiAocmVuZGVyZXIsIHkxLCB5MiwgeTMsIHk0LCBsZWZ0LCByaWdodCkge1xuXHR5MSA9IHJvdW5kTnVtYmVyKHkxKTtcblx0eTIgPSByb3VuZE51bWJlcih5Mik7XG5cdHkzID0gcm91bmROdW1iZXIoeTMpO1xuXHR5NCA9IHJvdW5kTnVtYmVyKHk0KTtcblx0bGVmdCA9IHJvdW5kTnVtYmVyKGxlZnQpO1xuXHRyaWdodCA9IHJvdW5kTnVtYmVyKHJpZ2h0KTtcblxuXHR2YXIgcGF0aFN0cmluZyA9IHNwcmludGYoXCJNICVmICVmIEwgJWYgJWYgTSAlZiAlZiBMICVmICVmXCIsXG5cdFx0bGVmdCwgeTEsIHJpZ2h0LCB5MiwgbGVmdCwgeTMsIHJpZ2h0LCB5NCk7XG5cdHJldHVybiBwcmludFBhdGgocmVuZGVyZXIsIHsgcGF0aDogcGF0aFN0cmluZywgaGlnaGxpZ2h0OiBcInN0cm9rZVwiLCBzdHJva2U6IHJlbmRlcmVyLmZvcmVncm91bmRDb2xvciwgJ2NsYXNzJzogcmVuZGVyZXIuY29udHJvbGxlci5jbGFzc2VzLmdlbmVyYXRlKCdkeW5hbWljcyBkZWNvcmF0aW9uJyksIFwiZGF0YS1uYW1lXCI6IFwiZHluYW1pY3NcIiB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZHJhd0NyZXNjZW5kbztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/crescendo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/debug-box.js":
/*!********************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/debug-box.js ***!
  \********************************************************/
/***/ ((module) => {

eval("function printDebugBox(renderer, attr, comment) {\n\tvar box = renderer.paper.rectBeneath(attr);\n\tif (comment)\n\t\trenderer.paper.text(comment, { x: 0, y: attr.y + 7, \"text-anchor\": \"start\", \"font-size\": \"14px\", fill: \"rgba(0,0,255,.4)\", stroke: \"rgba(0,0,255,.4)\" });\n\treturn box;\n}\n\nmodule.exports = printDebugBox;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvZGVidWctYm94LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyx3SEFBd0g7QUFDeko7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9kcmF3L2RlYnVnLWJveC5qcz9iOTYyIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHByaW50RGVidWdCb3gocmVuZGVyZXIsIGF0dHIsIGNvbW1lbnQpIHtcblx0dmFyIGJveCA9IHJlbmRlcmVyLnBhcGVyLnJlY3RCZW5lYXRoKGF0dHIpO1xuXHRpZiAoY29tbWVudClcblx0XHRyZW5kZXJlci5wYXBlci50ZXh0KGNvbW1lbnQsIHsgeDogMCwgeTogYXR0ci55ICsgNywgXCJ0ZXh0LWFuY2hvclwiOiBcInN0YXJ0XCIsIFwiZm9udC1zaXplXCI6IFwiMTRweFwiLCBmaWxsOiBcInJnYmEoMCwwLDI1NSwuNClcIiwgc3Ryb2tlOiBcInJnYmEoMCwwLDI1NSwuNClcIiB9KTtcblx0cmV0dXJuIGJveDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBwcmludERlYnVnQm94O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/debug-box.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/draw.js":
/*!***************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/draw.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var drawStaffGroup = __webpack_require__(/*! ./staff-group */ \"(ssr)/./node_modules/abcjs/src/write/draw/staff-group.js\");\nvar setPaperSize = __webpack_require__(/*! ./set-paper-size */ \"(ssr)/./node_modules/abcjs/src/write/draw/set-paper-size.js\");\nvar nonMusic = __webpack_require__(/*! ./non-music */ \"(ssr)/./node_modules/abcjs/src/write/draw/non-music.js\");\nvar spacing = __webpack_require__(/*! ../helpers/spacing */ \"(ssr)/./node_modules/abcjs/src/write/helpers/spacing.js\");\nvar Selectables = __webpack_require__(/*! ./selectables */ \"(ssr)/./node_modules/abcjs/src/write/draw/selectables.js\");\n\nfunction draw(renderer, classes, abcTune, width, maxWidth, responsive, scale, selectTypes, tuneNumber, lineOffset) {\n\tvar selectables = new Selectables(renderer.paper, selectTypes, tuneNumber);\n\tvar groupClasses = {}\n\tif (classes.shouldAddClasses)\n\t\tgroupClasses.klass = \"abcjs-meta-top\"\n\trenderer.paper.openGroup(groupClasses)\n\trenderer.moveY(renderer.padding.top);\n\tnonMusic(renderer, abcTune.topText, selectables);\n\trenderer.paper.closeGroup()\n\trenderer.moveY(renderer.spacing.music);\n\tvar staffgroups = [];\n\tvar nStaves = 0;\n\tfor (var line = 0; line < abcTune.lines.length; line++) {\n\t\tclasses.incrLine();\n\t\tvar abcLine = abcTune.lines[line];\n\t\tif (abcLine.staff) {\n\t\t\t// MAE 26 May 2025 - for incipits staff count limiting\n\t\t\tnStaves++;\n\t\t\tif (abcTune.formatting.maxStaves){\n\t\t\t\tif (nStaves > abcTune.formatting.maxStaves){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (classes.shouldAddClasses)\n\t\t\t\tgroupClasses.klass = \"abcjs-staff-wrapper abcjs-l\" + classes.lineNumber\n\t\t\trenderer.paper.openGroup(groupClasses)\n\t\t\tif (abcLine.vskip) {\n\t\t\t\trenderer.moveY(abcLine.vskip);\n\t\t\t}\n\t\t\tif (staffgroups.length >= 1)\n\t\t\t\taddStaffPadding(renderer, renderer.spacing.staffSeparation, staffgroups[staffgroups.length - 1], abcLine.staffGroup);\n\t\t\tvar staffgroup = engraveStaffLine(renderer, abcLine.staffGroup, selectables, line);\n\t\t\tstaffgroup.line = lineOffset + line; // If there are non-music lines then the staffgroup array won't line up with the line array, so this keeps track.\n\t\t\tstaffgroups.push(staffgroup);\n\t\t\trenderer.paper.closeGroup()\n\t\t} else if (abcLine.nonMusic) {\n\t\t\tif (classes.shouldAddClasses)\n\t\t\t\tgroupClasses.klass = \"abcjs-non-music\"\n\t\t\trenderer.paper.openGroup(groupClasses)\n\t\t\tnonMusic(renderer, abcLine.nonMusic, selectables);\n\t\t\trenderer.paper.closeGroup()\n\t\t}\n\t}\n\n\tclasses.reset();\n\tif (abcTune.bottomText && abcTune.bottomText.rows && abcTune.bottomText.rows.length > 0) {\n\t\tif (classes.shouldAddClasses)\n\t\t\tgroupClasses.klass = \"abcjs-meta-bottom\"\n\t\trenderer.paper.openGroup(groupClasses)\n\t\trenderer.moveY(24); // TODO-PER: Empirically discovered. What variable should this be?\n\t\tnonMusic(renderer, abcTune.bottomText, selectables);\n\t\trenderer.paper.closeGroup()\n\t}\n\tsetPaperSize(renderer, maxWidth, scale, responsive);\n\treturn { staffgroups: staffgroups, selectables: selectables.getElements() };\n}\n\nfunction engraveStaffLine(renderer, staffGroup, selectables, lineNumber) {\n\tdrawStaffGroup(renderer, staffGroup, selectables, lineNumber);\n\tvar height = staffGroup.height * spacing.STEP;\n\trenderer.y += height;\n\treturn staffGroup;\n}\n\nfunction addStaffPadding(renderer, staffSeparation, lastStaffGroup, thisStaffGroup) {\n\tvar lastStaff = lastStaffGroup.staffs[lastStaffGroup.staffs.length - 1];\n\tvar lastBottomLine = -(lastStaff.bottom - 2); // The 2 is because the scale goes to 2 below the last line.\n\tvar nextTopLine = thisStaffGroup.staffs[0].top - 10; // Because 10 represents the top line.\n\tvar naturalSeparation = nextTopLine + lastBottomLine; // This is how far apart they'd be without extra spacing\n\tvar separationInPixels = naturalSeparation * spacing.STEP;\n\tif (separationInPixels < staffSeparation)\n\t\trenderer.moveY(staffSeparation - separationInPixels);\n}\n\nmodule.exports = draw;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvZHJhdy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxQkFBcUIsbUJBQU8sQ0FBQywrRUFBZTtBQUM1QyxtQkFBbUIsbUJBQU8sQ0FBQyxxRkFBa0I7QUFDN0MsZUFBZSxtQkFBTyxDQUFDLDJFQUFhO0FBQ3BDLGNBQWMsbUJBQU8sQ0FBQyxtRkFBb0I7QUFDMUMsa0JBQWtCLG1CQUFPLENBQUMsK0VBQWU7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw2QkFBNkI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsK0NBQStDO0FBQy9DLHNEQUFzRDtBQUN0RCx1REFBdUQ7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvZHJhdy9kcmF3LmpzP2FhZjMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGRyYXdTdGFmZkdyb3VwID0gcmVxdWlyZSgnLi9zdGFmZi1ncm91cCcpO1xudmFyIHNldFBhcGVyU2l6ZSA9IHJlcXVpcmUoJy4vc2V0LXBhcGVyLXNpemUnKTtcbnZhciBub25NdXNpYyA9IHJlcXVpcmUoJy4vbm9uLW11c2ljJyk7XG52YXIgc3BhY2luZyA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvc3BhY2luZycpO1xudmFyIFNlbGVjdGFibGVzID0gcmVxdWlyZSgnLi9zZWxlY3RhYmxlcycpO1xuXG5mdW5jdGlvbiBkcmF3KHJlbmRlcmVyLCBjbGFzc2VzLCBhYmNUdW5lLCB3aWR0aCwgbWF4V2lkdGgsIHJlc3BvbnNpdmUsIHNjYWxlLCBzZWxlY3RUeXBlcywgdHVuZU51bWJlciwgbGluZU9mZnNldCkge1xuXHR2YXIgc2VsZWN0YWJsZXMgPSBuZXcgU2VsZWN0YWJsZXMocmVuZGVyZXIucGFwZXIsIHNlbGVjdFR5cGVzLCB0dW5lTnVtYmVyKTtcblx0dmFyIGdyb3VwQ2xhc3NlcyA9IHt9XG5cdGlmIChjbGFzc2VzLnNob3VsZEFkZENsYXNzZXMpXG5cdFx0Z3JvdXBDbGFzc2VzLmtsYXNzID0gXCJhYmNqcy1tZXRhLXRvcFwiXG5cdHJlbmRlcmVyLnBhcGVyLm9wZW5Hcm91cChncm91cENsYXNzZXMpXG5cdHJlbmRlcmVyLm1vdmVZKHJlbmRlcmVyLnBhZGRpbmcudG9wKTtcblx0bm9uTXVzaWMocmVuZGVyZXIsIGFiY1R1bmUudG9wVGV4dCwgc2VsZWN0YWJsZXMpO1xuXHRyZW5kZXJlci5wYXBlci5jbG9zZUdyb3VwKClcblx0cmVuZGVyZXIubW92ZVkocmVuZGVyZXIuc3BhY2luZy5tdXNpYyk7XG5cdHZhciBzdGFmZmdyb3VwcyA9IFtdO1xuXHR2YXIgblN0YXZlcyA9IDA7XG5cdGZvciAodmFyIGxpbmUgPSAwOyBsaW5lIDwgYWJjVHVuZS5saW5lcy5sZW5ndGg7IGxpbmUrKykge1xuXHRcdGNsYXNzZXMuaW5jckxpbmUoKTtcblx0XHR2YXIgYWJjTGluZSA9IGFiY1R1bmUubGluZXNbbGluZV07XG5cdFx0aWYgKGFiY0xpbmUuc3RhZmYpIHtcblx0XHRcdC8vIE1BRSAyNiBNYXkgMjAyNSAtIGZvciBpbmNpcGl0cyBzdGFmZiBjb3VudCBsaW1pdGluZ1xuXHRcdFx0blN0YXZlcysrO1xuXHRcdFx0aWYgKGFiY1R1bmUuZm9ybWF0dGluZy5tYXhTdGF2ZXMpe1xuXHRcdFx0XHRpZiAoblN0YXZlcyA+IGFiY1R1bmUuZm9ybWF0dGluZy5tYXhTdGF2ZXMpe1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRpZiAoY2xhc3Nlcy5zaG91bGRBZGRDbGFzc2VzKVxuXHRcdFx0XHRncm91cENsYXNzZXMua2xhc3MgPSBcImFiY2pzLXN0YWZmLXdyYXBwZXIgYWJjanMtbFwiICsgY2xhc3Nlcy5saW5lTnVtYmVyXG5cdFx0XHRyZW5kZXJlci5wYXBlci5vcGVuR3JvdXAoZ3JvdXBDbGFzc2VzKVxuXHRcdFx0aWYgKGFiY0xpbmUudnNraXApIHtcblx0XHRcdFx0cmVuZGVyZXIubW92ZVkoYWJjTGluZS52c2tpcCk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoc3RhZmZncm91cHMubGVuZ3RoID49IDEpXG5cdFx0XHRcdGFkZFN0YWZmUGFkZGluZyhyZW5kZXJlciwgcmVuZGVyZXIuc3BhY2luZy5zdGFmZlNlcGFyYXRpb24sIHN0YWZmZ3JvdXBzW3N0YWZmZ3JvdXBzLmxlbmd0aCAtIDFdLCBhYmNMaW5lLnN0YWZmR3JvdXApO1xuXHRcdFx0dmFyIHN0YWZmZ3JvdXAgPSBlbmdyYXZlU3RhZmZMaW5lKHJlbmRlcmVyLCBhYmNMaW5lLnN0YWZmR3JvdXAsIHNlbGVjdGFibGVzLCBsaW5lKTtcblx0XHRcdHN0YWZmZ3JvdXAubGluZSA9IGxpbmVPZmZzZXQgKyBsaW5lOyAvLyBJZiB0aGVyZSBhcmUgbm9uLW11c2ljIGxpbmVzIHRoZW4gdGhlIHN0YWZmZ3JvdXAgYXJyYXkgd29uJ3QgbGluZSB1cCB3aXRoIHRoZSBsaW5lIGFycmF5LCBzbyB0aGlzIGtlZXBzIHRyYWNrLlxuXHRcdFx0c3RhZmZncm91cHMucHVzaChzdGFmZmdyb3VwKTtcblx0XHRcdHJlbmRlcmVyLnBhcGVyLmNsb3NlR3JvdXAoKVxuXHRcdH0gZWxzZSBpZiAoYWJjTGluZS5ub25NdXNpYykge1xuXHRcdFx0aWYgKGNsYXNzZXMuc2hvdWxkQWRkQ2xhc3Nlcylcblx0XHRcdFx0Z3JvdXBDbGFzc2VzLmtsYXNzID0gXCJhYmNqcy1ub24tbXVzaWNcIlxuXHRcdFx0cmVuZGVyZXIucGFwZXIub3Blbkdyb3VwKGdyb3VwQ2xhc3Nlcylcblx0XHRcdG5vbk11c2ljKHJlbmRlcmVyLCBhYmNMaW5lLm5vbk11c2ljLCBzZWxlY3RhYmxlcyk7XG5cdFx0XHRyZW5kZXJlci5wYXBlci5jbG9zZUdyb3VwKClcblx0XHR9XG5cdH1cblxuXHRjbGFzc2VzLnJlc2V0KCk7XG5cdGlmIChhYmNUdW5lLmJvdHRvbVRleHQgJiYgYWJjVHVuZS5ib3R0b21UZXh0LnJvd3MgJiYgYWJjVHVuZS5ib3R0b21UZXh0LnJvd3MubGVuZ3RoID4gMCkge1xuXHRcdGlmIChjbGFzc2VzLnNob3VsZEFkZENsYXNzZXMpXG5cdFx0XHRncm91cENsYXNzZXMua2xhc3MgPSBcImFiY2pzLW1ldGEtYm90dG9tXCJcblx0XHRyZW5kZXJlci5wYXBlci5vcGVuR3JvdXAoZ3JvdXBDbGFzc2VzKVxuXHRcdHJlbmRlcmVyLm1vdmVZKDI0KTsgLy8gVE9ETy1QRVI6IEVtcGlyaWNhbGx5IGRpc2NvdmVyZWQuIFdoYXQgdmFyaWFibGUgc2hvdWxkIHRoaXMgYmU/XG5cdFx0bm9uTXVzaWMocmVuZGVyZXIsIGFiY1R1bmUuYm90dG9tVGV4dCwgc2VsZWN0YWJsZXMpO1xuXHRcdHJlbmRlcmVyLnBhcGVyLmNsb3NlR3JvdXAoKVxuXHR9XG5cdHNldFBhcGVyU2l6ZShyZW5kZXJlciwgbWF4V2lkdGgsIHNjYWxlLCByZXNwb25zaXZlKTtcblx0cmV0dXJuIHsgc3RhZmZncm91cHM6IHN0YWZmZ3JvdXBzLCBzZWxlY3RhYmxlczogc2VsZWN0YWJsZXMuZ2V0RWxlbWVudHMoKSB9O1xufVxuXG5mdW5jdGlvbiBlbmdyYXZlU3RhZmZMaW5lKHJlbmRlcmVyLCBzdGFmZkdyb3VwLCBzZWxlY3RhYmxlcywgbGluZU51bWJlcikge1xuXHRkcmF3U3RhZmZHcm91cChyZW5kZXJlciwgc3RhZmZHcm91cCwgc2VsZWN0YWJsZXMsIGxpbmVOdW1iZXIpO1xuXHR2YXIgaGVpZ2h0ID0gc3RhZmZHcm91cC5oZWlnaHQgKiBzcGFjaW5nLlNURVA7XG5cdHJlbmRlcmVyLnkgKz0gaGVpZ2h0O1xuXHRyZXR1cm4gc3RhZmZHcm91cDtcbn1cblxuZnVuY3Rpb24gYWRkU3RhZmZQYWRkaW5nKHJlbmRlcmVyLCBzdGFmZlNlcGFyYXRpb24sIGxhc3RTdGFmZkdyb3VwLCB0aGlzU3RhZmZHcm91cCkge1xuXHR2YXIgbGFzdFN0YWZmID0gbGFzdFN0YWZmR3JvdXAuc3RhZmZzW2xhc3RTdGFmZkdyb3VwLnN0YWZmcy5sZW5ndGggLSAxXTtcblx0dmFyIGxhc3RCb3R0b21MaW5lID0gLShsYXN0U3RhZmYuYm90dG9tIC0gMik7IC8vIFRoZSAyIGlzIGJlY2F1c2UgdGhlIHNjYWxlIGdvZXMgdG8gMiBiZWxvdyB0aGUgbGFzdCBsaW5lLlxuXHR2YXIgbmV4dFRvcExpbmUgPSB0aGlzU3RhZmZHcm91cC5zdGFmZnNbMF0udG9wIC0gMTA7IC8vIEJlY2F1c2UgMTAgcmVwcmVzZW50cyB0aGUgdG9wIGxpbmUuXG5cdHZhciBuYXR1cmFsU2VwYXJhdGlvbiA9IG5leHRUb3BMaW5lICsgbGFzdEJvdHRvbUxpbmU7IC8vIFRoaXMgaXMgaG93IGZhciBhcGFydCB0aGV5J2QgYmUgd2l0aG91dCBleHRyYSBzcGFjaW5nXG5cdHZhciBzZXBhcmF0aW9uSW5QaXhlbHMgPSBuYXR1cmFsU2VwYXJhdGlvbiAqIHNwYWNpbmcuU1RFUDtcblx0aWYgKHNlcGFyYXRpb25JblBpeGVscyA8IHN0YWZmU2VwYXJhdGlvbilcblx0XHRyZW5kZXJlci5tb3ZlWShzdGFmZlNlcGFyYXRpb24gLSBzZXBhcmF0aW9uSW5QaXhlbHMpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRyYXc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/draw.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/dynamics.js":
/*!*******************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/dynamics.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var printSymbol = __webpack_require__(/*! ./print-symbol */ \"(ssr)/./node_modules/abcjs/src/write/draw/print-symbol.js\");\n\nfunction drawDynamics(renderer, params, selectables) {\n\tif (params.pitch === undefined)\n\t\twindow.console.error(\"Dynamic Element y-coordinate not set.\");\n\tvar scalex = 1;\n\tvar scaley = 1;\n\tvar el = printSymbol(renderer, params.anchor.x, params.pitch, params.dec, {\n\t\tscalex: scalex,\n\t\tscaley: scaley,\n\t\tklass: renderer.controller.classes.generate('decoration dynamics'),\n\t\tfill: renderer.foregroundColor,\n\t\tstroke: \"none\",\n\t\tname: \"dynamics\"\n\t});\n\tselectables.wrapSvgEl({ el_type: \"dynamicDecoration\", startChar: -1, endChar: -1, decoration: params.dec }, el);\n\treturn [el];\n}\n\nmodule.exports = drawDynamics;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvZHluYW1pY3MuanMiLCJtYXBwaW5ncyI6IkFBQUEsa0JBQWtCLG1CQUFPLENBQUMsaUZBQWdCOztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0YseUJBQXlCLGtGQUFrRjtBQUMzRztBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvZHluYW1pY3MuanM/NTcyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcHJpbnRTeW1ib2wgPSByZXF1aXJlKCcuL3ByaW50LXN5bWJvbCcpO1xuXG5mdW5jdGlvbiBkcmF3RHluYW1pY3MocmVuZGVyZXIsIHBhcmFtcywgc2VsZWN0YWJsZXMpIHtcblx0aWYgKHBhcmFtcy5waXRjaCA9PT0gdW5kZWZpbmVkKVxuXHRcdHdpbmRvdy5jb25zb2xlLmVycm9yKFwiRHluYW1pYyBFbGVtZW50IHktY29vcmRpbmF0ZSBub3Qgc2V0LlwiKTtcblx0dmFyIHNjYWxleCA9IDE7XG5cdHZhciBzY2FsZXkgPSAxO1xuXHR2YXIgZWwgPSBwcmludFN5bWJvbChyZW5kZXJlciwgcGFyYW1zLmFuY2hvci54LCBwYXJhbXMucGl0Y2gsIHBhcmFtcy5kZWMsIHtcblx0XHRzY2FsZXg6IHNjYWxleCxcblx0XHRzY2FsZXk6IHNjYWxleSxcblx0XHRrbGFzczogcmVuZGVyZXIuY29udHJvbGxlci5jbGFzc2VzLmdlbmVyYXRlKCdkZWNvcmF0aW9uIGR5bmFtaWNzJyksXG5cdFx0ZmlsbDogcmVuZGVyZXIuZm9yZWdyb3VuZENvbG9yLFxuXHRcdHN0cm9rZTogXCJub25lXCIsXG5cdFx0bmFtZTogXCJkeW5hbWljc1wiXG5cdH0pO1xuXHRzZWxlY3RhYmxlcy53cmFwU3ZnRWwoeyBlbF90eXBlOiBcImR5bmFtaWNEZWNvcmF0aW9uXCIsIHN0YXJ0Q2hhcjogLTEsIGVuZENoYXI6IC0xLCBkZWNvcmF0aW9uOiBwYXJhbXMuZGVjIH0sIGVsKTtcblx0cmV0dXJuIFtlbF07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZHJhd0R5bmFtaWNzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/dynamics.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/ending.js":
/*!*****************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/ending.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var sprintf = __webpack_require__(/*! ./sprintf */ \"(ssr)/./node_modules/abcjs/src/write/draw/sprintf.js\");\nvar renderText = __webpack_require__(/*! ./text */ \"(ssr)/./node_modules/abcjs/src/write/draw/text.js\");\nvar printPath = __webpack_require__(/*! ./print-path */ \"(ssr)/./node_modules/abcjs/src/write/draw/print-path.js\");\nvar roundNumber = __webpack_require__(/*! ./round-number */ \"(ssr)/./node_modules/abcjs/src/write/draw/round-number.js\");\n\nfunction drawEnding(renderer, params, linestartx, lineendx, selectables) {\n\tif (params.pitch === undefined)\n\t\twindow.console.error(\"Ending Element y-coordinate not set.\");\n\tvar y = roundNumber(renderer.calcY(params.pitch));\n\tvar height = 20;\n\tvar pathString = '';\n\n\tif (params.anchor1) {\n\t\tlinestartx = roundNumber(params.anchor1.x + params.anchor1.w);\n\t\tpathString += sprintf(\"M %f %f L %f %f \",\n\t\t\tlinestartx, y, linestartx, roundNumber(y + height));\n\t}\n\n\tif (params.anchor2) {\n\t\tlineendx = roundNumber(params.anchor2.x);\n\t\tpathString += sprintf(\"M %f %f L %f %f \",\n\t\t\tlineendx, y, lineendx, roundNumber(y + height));\n\t}\n\n\tpathString += sprintf(\"M %f %f L %f %f \",\n\t\tlinestartx, y, lineendx, y);\n\trenderer.paper.openGroup({\n\t\tklass: renderer.controller.classes.generate(\"ending\"),\n\t\t// MAE 17 May 2025 - Ending numbers not being drawn in correct color\n\t\tfill: renderer.foregroundColor,\n\t\t\"data-name\": \"ending\"\n\t});\n\tprintPath(renderer, {\n\t\tpath: pathString,\n\t\tstroke: renderer.foregroundColor,\n\t\tfill: renderer.foregroundColor,\n\t\t\"data-name\": \"line\"\n\t});\n\tif (params.anchor1)\n\t\trenderText(renderer, {\n\t\t\tx: roundNumber(linestartx + 5),\n\t\t\ty: roundNumber(renderer.calcY(params.pitch - 0.5)),\n\t\t\ttext: params.text,\n\t\t\ttype: 'repeatfont',\n\t\t\tklass: 'ending',\n\t\t\tanchor: \"start\",\n\t\t\tnoClass: true,\n\t\t\tname: params.text\n\t\t});\n\tvar g = renderer.paper.closeGroup();\n\tselectables.wrapSvgEl({ el_type: \"ending\", startChar: -1, endChar: -1 }, g);\n\treturn [g];\n}\n\nmodule.exports = drawEnding;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvZW5kaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFBLGNBQWMsbUJBQU8sQ0FBQyx1RUFBVztBQUNqQyxpQkFBaUIsbUJBQU8sQ0FBQyxpRUFBUTtBQUNqQyxnQkFBZ0IsbUJBQU8sQ0FBQyw2RUFBYztBQUN0QyxrQkFBa0IsbUJBQU8sQ0FBQyxpRkFBZ0I7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLHlCQUF5QiwrQ0FBK0M7QUFDeEU7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9kcmF3L2VuZGluZy5qcz9kMjM5Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBzcHJpbnRmID0gcmVxdWlyZSgnLi9zcHJpbnRmJyk7XG52YXIgcmVuZGVyVGV4dCA9IHJlcXVpcmUoJy4vdGV4dCcpO1xudmFyIHByaW50UGF0aCA9IHJlcXVpcmUoJy4vcHJpbnQtcGF0aCcpO1xudmFyIHJvdW5kTnVtYmVyID0gcmVxdWlyZShcIi4vcm91bmQtbnVtYmVyXCIpO1xuXG5mdW5jdGlvbiBkcmF3RW5kaW5nKHJlbmRlcmVyLCBwYXJhbXMsIGxpbmVzdGFydHgsIGxpbmVlbmR4LCBzZWxlY3RhYmxlcykge1xuXHRpZiAocGFyYW1zLnBpdGNoID09PSB1bmRlZmluZWQpXG5cdFx0d2luZG93LmNvbnNvbGUuZXJyb3IoXCJFbmRpbmcgRWxlbWVudCB5LWNvb3JkaW5hdGUgbm90IHNldC5cIik7XG5cdHZhciB5ID0gcm91bmROdW1iZXIocmVuZGVyZXIuY2FsY1kocGFyYW1zLnBpdGNoKSk7XG5cdHZhciBoZWlnaHQgPSAyMDtcblx0dmFyIHBhdGhTdHJpbmcgPSAnJztcblxuXHRpZiAocGFyYW1zLmFuY2hvcjEpIHtcblx0XHRsaW5lc3RhcnR4ID0gcm91bmROdW1iZXIocGFyYW1zLmFuY2hvcjEueCArIHBhcmFtcy5hbmNob3IxLncpO1xuXHRcdHBhdGhTdHJpbmcgKz0gc3ByaW50ZihcIk0gJWYgJWYgTCAlZiAlZiBcIixcblx0XHRcdGxpbmVzdGFydHgsIHksIGxpbmVzdGFydHgsIHJvdW5kTnVtYmVyKHkgKyBoZWlnaHQpKTtcblx0fVxuXG5cdGlmIChwYXJhbXMuYW5jaG9yMikge1xuXHRcdGxpbmVlbmR4ID0gcm91bmROdW1iZXIocGFyYW1zLmFuY2hvcjIueCk7XG5cdFx0cGF0aFN0cmluZyArPSBzcHJpbnRmKFwiTSAlZiAlZiBMICVmICVmIFwiLFxuXHRcdFx0bGluZWVuZHgsIHksIGxpbmVlbmR4LCByb3VuZE51bWJlcih5ICsgaGVpZ2h0KSk7XG5cdH1cblxuXHRwYXRoU3RyaW5nICs9IHNwcmludGYoXCJNICVmICVmIEwgJWYgJWYgXCIsXG5cdFx0bGluZXN0YXJ0eCwgeSwgbGluZWVuZHgsIHkpO1xuXHRyZW5kZXJlci5wYXBlci5vcGVuR3JvdXAoe1xuXHRcdGtsYXNzOiByZW5kZXJlci5jb250cm9sbGVyLmNsYXNzZXMuZ2VuZXJhdGUoXCJlbmRpbmdcIiksXG5cdFx0Ly8gTUFFIDE3IE1heSAyMDI1IC0gRW5kaW5nIG51bWJlcnMgbm90IGJlaW5nIGRyYXduIGluIGNvcnJlY3QgY29sb3Jcblx0XHRmaWxsOiByZW5kZXJlci5mb3JlZ3JvdW5kQ29sb3IsXG5cdFx0XCJkYXRhLW5hbWVcIjogXCJlbmRpbmdcIlxuXHR9KTtcblx0cHJpbnRQYXRoKHJlbmRlcmVyLCB7XG5cdFx0cGF0aDogcGF0aFN0cmluZyxcblx0XHRzdHJva2U6IHJlbmRlcmVyLmZvcmVncm91bmRDb2xvcixcblx0XHRmaWxsOiByZW5kZXJlci5mb3JlZ3JvdW5kQ29sb3IsXG5cdFx0XCJkYXRhLW5hbWVcIjogXCJsaW5lXCJcblx0fSk7XG5cdGlmIChwYXJhbXMuYW5jaG9yMSlcblx0XHRyZW5kZXJUZXh0KHJlbmRlcmVyLCB7XG5cdFx0XHR4OiByb3VuZE51bWJlcihsaW5lc3RhcnR4ICsgNSksXG5cdFx0XHR5OiByb3VuZE51bWJlcihyZW5kZXJlci5jYWxjWShwYXJhbXMucGl0Y2ggLSAwLjUpKSxcblx0XHRcdHRleHQ6IHBhcmFtcy50ZXh0LFxuXHRcdFx0dHlwZTogJ3JlcGVhdGZvbnQnLFxuXHRcdFx0a2xhc3M6ICdlbmRpbmcnLFxuXHRcdFx0YW5jaG9yOiBcInN0YXJ0XCIsXG5cdFx0XHRub0NsYXNzOiB0cnVlLFxuXHRcdFx0bmFtZTogcGFyYW1zLnRleHRcblx0XHR9KTtcblx0dmFyIGcgPSByZW5kZXJlci5wYXBlci5jbG9zZUdyb3VwKCk7XG5cdHNlbGVjdGFibGVzLndyYXBTdmdFbCh7IGVsX3R5cGU6IFwiZW5kaW5nXCIsIHN0YXJ0Q2hhcjogLTEsIGVuZENoYXI6IC0xIH0sIGcpO1xuXHRyZXR1cm4gW2ddO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRyYXdFbmRpbmc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/ending.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/glissando.js":
/*!********************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/glissando.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var sprintf = __webpack_require__(/*! ./sprintf */ \"(ssr)/./node_modules/abcjs/src/write/draw/sprintf.js\");\nvar printPath = __webpack_require__(/*! ./print-path */ \"(ssr)/./node_modules/abcjs/src/write/draw/print-path.js\");\nvar roundNumber = __webpack_require__(/*! ./round-number */ \"(ssr)/./node_modules/abcjs/src/write/draw/round-number.js\");\n\nfunction drawGlissando(renderer, params, selectables) {\n\tif (!params.anchor1 || !params.anchor2 || !params.anchor1.heads || !params.anchor2.heads || params.anchor1.heads.length === 0 || params.anchor2.heads.length === 0)\n\t\twindow.console.error(\"Glissando Element not set.\");\n\n\tvar margin = 4;\n\tvar leftY = renderer.calcY(params.anchor1.heads[0].pitch)\n\tvar rightY = renderer.calcY(params.anchor2.heads[0].pitch)\n\tvar leftX = params.anchor1.x + params.anchor1.w / 2\n\tvar rightX = params.anchor2.x + params.anchor2.w / 2\n\t\n\tvar len = lineLength(leftX, leftY, rightX, rightY)\n\tvar marginLeft = params.anchor1.w / 2 + margin\n\tvar marginRight = params.anchor2.w / 2 + margin\n\tvar s = slope(leftX, leftY, rightX, rightY)\n\tvar leftYAdj = getY(leftY, s, marginLeft)\n\tvar rightYAdj = getY(rightY, s, -marginRight)\n\tvar num = numSquigglies(len - marginLeft - marginRight)\n\n\tvar el = drawSquiggly(renderer, leftX + marginLeft, leftYAdj, num, s)\n\tselectables.wrapSvgEl({ el_type: \"glissando\", startChar: -1, endChar: -1 }, el);\n\treturn [el];\n}\n\nfunction lineLength(leftX, leftY, rightX, rightY) {\n\t// The length from notehead center to notehead center.\n\tvar w = rightX - leftX\n\tvar h = rightY - leftY\n\treturn Math.sqrt(w * w + h * h)\n}\n\nfunction slope(leftX, leftY, rightX, rightY) {\n\treturn (rightY - leftY) / (rightX - leftX)\n}\n\nfunction getY(y, slope, xOfs) {\n\treturn roundNumber(y + (xOfs) * slope);\n}\n\nfunction numSquigglies(length) {\n\tvar endLen = 5; // The width of the end - that is, the non repeating part\n\treturn Math.max(2, Math.floor((length - endLen * 2) / 6));\n}\n\nvar leftStart = [[3.5, -4.8]]\nvar right = [[1.5, -1], [.3, -.3], [-3.5, 3.8]]\nvar leftEnd = [[-1.5, 2]]\nvar top = [[3, 4], [3, -4]]\nvar bottom = [[-3, 4], [-3, -4]]\n\nfunction segment(arr, slope) {\n\tvar ret = \"\";\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tret += 'l' + arr[i][0] + ' ' + getY(arr[i][1], slope, arr[i][0])\n\t}\n\treturn ret\n}\n\nvar drawSquiggly = function (renderer, x, y, num, slope) {\n\tvar p = sprintf(\"M %f %f\", x, y);\n\tp += segment(leftStart, slope)\n\tvar i\n\tfor (i = 0; i < num; i++) {\n\t\tp += segment(top, slope)\n\t}\n\tp += segment(right, slope)\n\tfor (i = 0; i < num; i++)\n\t\tp += segment(bottom, slope)\n\tp += segment(leftEnd, slope) + 'z'\n\treturn printPath(renderer, { path: p, highlight: \"stroke\", stroke: renderer.foregroundColor, 'class': renderer.controller.classes.generate('decoration'), \"data-name\": \"glissando\" });\n}\n\nmodule.exports = drawGlissando;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvZ2xpc3NhbmRvLmpzIiwibWFwcGluZ3MiOiJBQUFBLGNBQWMsbUJBQU8sQ0FBQyx1RUFBVztBQUNqQyxnQkFBZ0IsbUJBQU8sQ0FBQyw2RUFBYztBQUN0QyxrQkFBa0IsbUJBQU8sQ0FBQyxpRkFBZ0I7O0FBRTFDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHlCQUF5QixrREFBa0Q7QUFDM0U7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlCQUFpQixnQkFBZ0I7QUFDakM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQSw4QkFBOEIsdUpBQXVKO0FBQ3JMOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvZ2xpc3NhbmRvLmpzPzcxZDgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHNwcmludGYgPSByZXF1aXJlKCcuL3NwcmludGYnKTtcbnZhciBwcmludFBhdGggPSByZXF1aXJlKCcuL3ByaW50LXBhdGgnKTtcbnZhciByb3VuZE51bWJlciA9IHJlcXVpcmUoXCIuL3JvdW5kLW51bWJlclwiKTtcblxuZnVuY3Rpb24gZHJhd0dsaXNzYW5kbyhyZW5kZXJlciwgcGFyYW1zLCBzZWxlY3RhYmxlcykge1xuXHRpZiAoIXBhcmFtcy5hbmNob3IxIHx8ICFwYXJhbXMuYW5jaG9yMiB8fCAhcGFyYW1zLmFuY2hvcjEuaGVhZHMgfHwgIXBhcmFtcy5hbmNob3IyLmhlYWRzIHx8IHBhcmFtcy5hbmNob3IxLmhlYWRzLmxlbmd0aCA9PT0gMCB8fCBwYXJhbXMuYW5jaG9yMi5oZWFkcy5sZW5ndGggPT09IDApXG5cdFx0d2luZG93LmNvbnNvbGUuZXJyb3IoXCJHbGlzc2FuZG8gRWxlbWVudCBub3Qgc2V0LlwiKTtcblxuXHR2YXIgbWFyZ2luID0gNDtcblx0dmFyIGxlZnRZID0gcmVuZGVyZXIuY2FsY1kocGFyYW1zLmFuY2hvcjEuaGVhZHNbMF0ucGl0Y2gpXG5cdHZhciByaWdodFkgPSByZW5kZXJlci5jYWxjWShwYXJhbXMuYW5jaG9yMi5oZWFkc1swXS5waXRjaClcblx0dmFyIGxlZnRYID0gcGFyYW1zLmFuY2hvcjEueCArIHBhcmFtcy5hbmNob3IxLncgLyAyXG5cdHZhciByaWdodFggPSBwYXJhbXMuYW5jaG9yMi54ICsgcGFyYW1zLmFuY2hvcjIudyAvIDJcblx0XG5cdHZhciBsZW4gPSBsaW5lTGVuZ3RoKGxlZnRYLCBsZWZ0WSwgcmlnaHRYLCByaWdodFkpXG5cdHZhciBtYXJnaW5MZWZ0ID0gcGFyYW1zLmFuY2hvcjEudyAvIDIgKyBtYXJnaW5cblx0dmFyIG1hcmdpblJpZ2h0ID0gcGFyYW1zLmFuY2hvcjIudyAvIDIgKyBtYXJnaW5cblx0dmFyIHMgPSBzbG9wZShsZWZ0WCwgbGVmdFksIHJpZ2h0WCwgcmlnaHRZKVxuXHR2YXIgbGVmdFlBZGogPSBnZXRZKGxlZnRZLCBzLCBtYXJnaW5MZWZ0KVxuXHR2YXIgcmlnaHRZQWRqID0gZ2V0WShyaWdodFksIHMsIC1tYXJnaW5SaWdodClcblx0dmFyIG51bSA9IG51bVNxdWlnZ2xpZXMobGVuIC0gbWFyZ2luTGVmdCAtIG1hcmdpblJpZ2h0KVxuXG5cdHZhciBlbCA9IGRyYXdTcXVpZ2dseShyZW5kZXJlciwgbGVmdFggKyBtYXJnaW5MZWZ0LCBsZWZ0WUFkaiwgbnVtLCBzKVxuXHRzZWxlY3RhYmxlcy53cmFwU3ZnRWwoeyBlbF90eXBlOiBcImdsaXNzYW5kb1wiLCBzdGFydENoYXI6IC0xLCBlbmRDaGFyOiAtMSB9LCBlbCk7XG5cdHJldHVybiBbZWxdO1xufVxuXG5mdW5jdGlvbiBsaW5lTGVuZ3RoKGxlZnRYLCBsZWZ0WSwgcmlnaHRYLCByaWdodFkpIHtcblx0Ly8gVGhlIGxlbmd0aCBmcm9tIG5vdGVoZWFkIGNlbnRlciB0byBub3RlaGVhZCBjZW50ZXIuXG5cdHZhciB3ID0gcmlnaHRYIC0gbGVmdFhcblx0dmFyIGggPSByaWdodFkgLSBsZWZ0WVxuXHRyZXR1cm4gTWF0aC5zcXJ0KHcgKiB3ICsgaCAqIGgpXG59XG5cbmZ1bmN0aW9uIHNsb3BlKGxlZnRYLCBsZWZ0WSwgcmlnaHRYLCByaWdodFkpIHtcblx0cmV0dXJuIChyaWdodFkgLSBsZWZ0WSkgLyAocmlnaHRYIC0gbGVmdFgpXG59XG5cbmZ1bmN0aW9uIGdldFkoeSwgc2xvcGUsIHhPZnMpIHtcblx0cmV0dXJuIHJvdW5kTnVtYmVyKHkgKyAoeE9mcykgKiBzbG9wZSk7XG59XG5cbmZ1bmN0aW9uIG51bVNxdWlnZ2xpZXMobGVuZ3RoKSB7XG5cdHZhciBlbmRMZW4gPSA1OyAvLyBUaGUgd2lkdGggb2YgdGhlIGVuZCAtIHRoYXQgaXMsIHRoZSBub24gcmVwZWF0aW5nIHBhcnRcblx0cmV0dXJuIE1hdGgubWF4KDIsIE1hdGguZmxvb3IoKGxlbmd0aCAtIGVuZExlbiAqIDIpIC8gNikpO1xufVxuXG52YXIgbGVmdFN0YXJ0ID0gW1szLjUsIC00LjhdXVxudmFyIHJpZ2h0ID0gW1sxLjUsIC0xXSwgWy4zLCAtLjNdLCBbLTMuNSwgMy44XV1cbnZhciBsZWZ0RW5kID0gW1stMS41LCAyXV1cbnZhciB0b3AgPSBbWzMsIDRdLCBbMywgLTRdXVxudmFyIGJvdHRvbSA9IFtbLTMsIDRdLCBbLTMsIC00XV1cblxuZnVuY3Rpb24gc2VnbWVudChhcnIsIHNsb3BlKSB7XG5cdHZhciByZXQgPSBcIlwiO1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuXHRcdHJldCArPSAnbCcgKyBhcnJbaV1bMF0gKyAnICcgKyBnZXRZKGFycltpXVsxXSwgc2xvcGUsIGFycltpXVswXSlcblx0fVxuXHRyZXR1cm4gcmV0XG59XG5cbnZhciBkcmF3U3F1aWdnbHkgPSBmdW5jdGlvbiAocmVuZGVyZXIsIHgsIHksIG51bSwgc2xvcGUpIHtcblx0dmFyIHAgPSBzcHJpbnRmKFwiTSAlZiAlZlwiLCB4LCB5KTtcblx0cCArPSBzZWdtZW50KGxlZnRTdGFydCwgc2xvcGUpXG5cdHZhciBpXG5cdGZvciAoaSA9IDA7IGkgPCBudW07IGkrKykge1xuXHRcdHAgKz0gc2VnbWVudCh0b3AsIHNsb3BlKVxuXHR9XG5cdHAgKz0gc2VnbWVudChyaWdodCwgc2xvcGUpXG5cdGZvciAoaSA9IDA7IGkgPCBudW07IGkrKylcblx0XHRwICs9IHNlZ21lbnQoYm90dG9tLCBzbG9wZSlcblx0cCArPSBzZWdtZW50KGxlZnRFbmQsIHNsb3BlKSArICd6J1xuXHRyZXR1cm4gcHJpbnRQYXRoKHJlbmRlcmVyLCB7IHBhdGg6IHAsIGhpZ2hsaWdodDogXCJzdHJva2VcIiwgc3Ryb2tlOiByZW5kZXJlci5mb3JlZ3JvdW5kQ29sb3IsICdjbGFzcyc6IHJlbmRlcmVyLmNvbnRyb2xsZXIuY2xhc3Nlcy5nZW5lcmF0ZSgnZGVjb3JhdGlvbicpLCBcImRhdGEtbmFtZVwiOiBcImdsaXNzYW5kb1wiIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRyYXdHbGlzc2FuZG87XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/glissando.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/group-elements.js":
/*!*************************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/group-elements.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Begin a group of glyphs that will always be moved, scaled and highlighted together\n */\n\nvar roundNumber = __webpack_require__(/*! ./round-number */ \"(ssr)/./node_modules/abcjs/src/write/draw/round-number.js\");\n\nfunction Group() {\n\tthis.ingroup = false;\n}\n\nGroup.prototype.beginGroup = function (paper, controller) {\n\tthis.paper = paper;\n\tthis.controller = controller;\n\tthis.path = [];\n\tthis.lastM = [0, 0];\n\tthis.ingroup = true;\n\tthis.paper.openGroup();\n};\n\nGroup.prototype.isInGroup = function () {\n\treturn this.ingroup;\n}\n\nGroup.prototype.addPath = function (path) {\n\tpath = path || [];\n\tif (path.length === 0) return;\n\tpath[0][0] = \"m\";\n\tpath[0][1] = roundNumber(path[0][1] - this.lastM[0]);\n\tpath[0][2] = roundNumber(path[0][2] - this.lastM[1]);\n\tthis.lastM[0] += path[0][1];\n\tthis.lastM[1] += path[0][2];\n\tthis.path.push(path[0]);\n\tfor (var i = 1, ii = path.length; i < ii; i++) {\n\t\tif (path[i][0] === \"m\") {\n\t\t\tthis.lastM[0] += path[i][1];\n\t\t\tthis.lastM[1] += path[i][2];\n\t\t}\n\t\tthis.path.push(path[i]);\n\t}\n};\n\n/**\n * End a group of glyphs that will always be moved, scaled and highlighted together\n */\nGroup.prototype.endGroup = function (klass, name) {\n\tthis.ingroup = false;\n\t//if (this.path.length === 0) return null;\n\tvar path = \"\";\n\tfor (var i = 0; i < this.path.length; i++)\n\t\tpath += this.path[i].join(\" \");\n\tthis.path = [];\n\n\tvar ret = this.paper.closeGroup();\n\tif (ret) {\n\t\tret.setAttribute(\"class\", this.controller.classes.generate(klass))\n\t\tret.setAttribute(\"fill\", this.controller.renderer.foregroundColor)\n\t\tret.setAttribute(\"stroke\", \"none\")\n\t\tret.setAttribute(\"data-name\", name)\n\t}\n\treturn ret;\n};\n\n// There is just a singleton of this object.\nvar elementGroup = new Group();\n\nmodule.exports = elementGroup;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvZ3JvdXAtZWxlbWVudHMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBLGtCQUFrQixtQkFBTyxDQUFDLGlGQUFnQjs7QUFFMUM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxRQUFRO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHNCQUFzQjtBQUN2QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvZ3JvdXAtZWxlbWVudHMuanM/ZjJlMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEJlZ2luIGEgZ3JvdXAgb2YgZ2x5cGhzIHRoYXQgd2lsbCBhbHdheXMgYmUgbW92ZWQsIHNjYWxlZCBhbmQgaGlnaGxpZ2h0ZWQgdG9nZXRoZXJcbiAqL1xuXG52YXIgcm91bmROdW1iZXIgPSByZXF1aXJlKFwiLi9yb3VuZC1udW1iZXJcIik7XG5cbmZ1bmN0aW9uIEdyb3VwKCkge1xuXHR0aGlzLmluZ3JvdXAgPSBmYWxzZTtcbn1cblxuR3JvdXAucHJvdG90eXBlLmJlZ2luR3JvdXAgPSBmdW5jdGlvbiAocGFwZXIsIGNvbnRyb2xsZXIpIHtcblx0dGhpcy5wYXBlciA9IHBhcGVyO1xuXHR0aGlzLmNvbnRyb2xsZXIgPSBjb250cm9sbGVyO1xuXHR0aGlzLnBhdGggPSBbXTtcblx0dGhpcy5sYXN0TSA9IFswLCAwXTtcblx0dGhpcy5pbmdyb3VwID0gdHJ1ZTtcblx0dGhpcy5wYXBlci5vcGVuR3JvdXAoKTtcbn07XG5cbkdyb3VwLnByb3RvdHlwZS5pc0luR3JvdXAgPSBmdW5jdGlvbiAoKSB7XG5cdHJldHVybiB0aGlzLmluZ3JvdXA7XG59XG5cbkdyb3VwLnByb3RvdHlwZS5hZGRQYXRoID0gZnVuY3Rpb24gKHBhdGgpIHtcblx0cGF0aCA9IHBhdGggfHwgW107XG5cdGlmIChwYXRoLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuXHRwYXRoWzBdWzBdID0gXCJtXCI7XG5cdHBhdGhbMF1bMV0gPSByb3VuZE51bWJlcihwYXRoWzBdWzFdIC0gdGhpcy5sYXN0TVswXSk7XG5cdHBhdGhbMF1bMl0gPSByb3VuZE51bWJlcihwYXRoWzBdWzJdIC0gdGhpcy5sYXN0TVsxXSk7XG5cdHRoaXMubGFzdE1bMF0gKz0gcGF0aFswXVsxXTtcblx0dGhpcy5sYXN0TVsxXSArPSBwYXRoWzBdWzJdO1xuXHR0aGlzLnBhdGgucHVzaChwYXRoWzBdKTtcblx0Zm9yICh2YXIgaSA9IDEsIGlpID0gcGF0aC5sZW5ndGg7IGkgPCBpaTsgaSsrKSB7XG5cdFx0aWYgKHBhdGhbaV1bMF0gPT09IFwibVwiKSB7XG5cdFx0XHR0aGlzLmxhc3RNWzBdICs9IHBhdGhbaV1bMV07XG5cdFx0XHR0aGlzLmxhc3RNWzFdICs9IHBhdGhbaV1bMl07XG5cdFx0fVxuXHRcdHRoaXMucGF0aC5wdXNoKHBhdGhbaV0pO1xuXHR9XG59O1xuXG4vKipcbiAqIEVuZCBhIGdyb3VwIG9mIGdseXBocyB0aGF0IHdpbGwgYWx3YXlzIGJlIG1vdmVkLCBzY2FsZWQgYW5kIGhpZ2hsaWdodGVkIHRvZ2V0aGVyXG4gKi9cbkdyb3VwLnByb3RvdHlwZS5lbmRHcm91cCA9IGZ1bmN0aW9uIChrbGFzcywgbmFtZSkge1xuXHR0aGlzLmluZ3JvdXAgPSBmYWxzZTtcblx0Ly9pZiAodGhpcy5wYXRoLmxlbmd0aCA9PT0gMCkgcmV0dXJuIG51bGw7XG5cdHZhciBwYXRoID0gXCJcIjtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnBhdGgubGVuZ3RoOyBpKyspXG5cdFx0cGF0aCArPSB0aGlzLnBhdGhbaV0uam9pbihcIiBcIik7XG5cdHRoaXMucGF0aCA9IFtdO1xuXG5cdHZhciByZXQgPSB0aGlzLnBhcGVyLmNsb3NlR3JvdXAoKTtcblx0aWYgKHJldCkge1xuXHRcdHJldC5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCB0aGlzLmNvbnRyb2xsZXIuY2xhc3Nlcy5nZW5lcmF0ZShrbGFzcykpXG5cdFx0cmV0LnNldEF0dHJpYnV0ZShcImZpbGxcIiwgdGhpcy5jb250cm9sbGVyLnJlbmRlcmVyLmZvcmVncm91bmRDb2xvcilcblx0XHRyZXQuc2V0QXR0cmlidXRlKFwic3Ryb2tlXCIsIFwibm9uZVwiKVxuXHRcdHJldC5zZXRBdHRyaWJ1dGUoXCJkYXRhLW5hbWVcIiwgbmFtZSlcblx0fVxuXHRyZXR1cm4gcmV0O1xufTtcblxuLy8gVGhlcmUgaXMganVzdCBhIHNpbmdsZXRvbiBvZiB0aGlzIG9iamVjdC5cbnZhciBlbGVtZW50R3JvdXAgPSBuZXcgR3JvdXAoKTtcblxubW9kdWxlLmV4cG9ydHMgPSBlbGVtZW50R3JvdXA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/group-elements.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/non-music.js":
/*!********************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/non-music.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var drawSeparator = __webpack_require__(/*! ./separator */ \"(ssr)/./node_modules/abcjs/src/write/draw/separator.js\");\nvar renderText = __webpack_require__(/*! ./text */ \"(ssr)/./node_modules/abcjs/src/write/draw/text.js\");\n\nfunction nonMusic(renderer, obj, selectables) {\n\tfor (var i = 0; i < obj.rows.length; i++) {\n\t\tvar row = obj.rows[i];\n\t\tif (row.absmove) {\n\t\t\trenderer.absolutemoveY(row.absmove);\n\t\t} else if (row.move) {\n\t\t\trenderer.moveY(row.move);\n\t\t} else if (row.text || row.phrases) {\n\t\t\tvar x = row.left ? row.left : 0;\n\t\t\tvar el = renderText(renderer, {\n\t\t\t\tx: x,\n\t\t\t\ty: renderer.y,\n\t\t\t\ttext: row.text,\n\t\t\t\tphrases: row.phrases,\n\t\t\t\t'dominant-baseline': row['dominant-baseline'],\n\t\t\t\ttype: row.font,\n\t\t\t\tklass: row.klass,\n\t\t\t\tname: row.name,\n\t\t\t\tanchor: row.anchor\n\t\t\t});\n\t\t\tif (row.absElemType) {\n\t\t\t\tselectables.wrapSvgEl({\n\t\t\t\t\tel_type: row.absElemType,\n\t\t\t\t\tname: row.name,\n\t\t\t\t\tstartChar: row.startChar,\n\t\t\t\t\tendChar: row.endChar,\n\t\t\t\t\ttext: row.text\n\t\t\t\t}, el);\n\t\t\t}\n\t\t} else if (row.separator) {\n\t\t\tdrawSeparator(renderer, row.separator)\n\t\t} else if (row.startGroup) {\n\t\t\trenderer.paper.openGroup({ klass: row.klass, \"data-name\": row.name });\n\t\t} else if (row.endGroup) {\n\t\t\t// TODO-PER: also create a history element with the title \"row.endGroup\"\n\t\t\tvar g = renderer.paper.closeGroup();\n\t\t\tif (row.absElemType)\n\t\t\t\tselectables.wrapSvgEl({\n\t\t\t\t\tel_type: row.absElemType,\n\t\t\t\t\tname: row.name,\n\t\t\t\t\tstartChar: row.startChar,\n\t\t\t\t\tendChar: row.endChar,\n\t\t\t\t\ttext: \"\"\n\t\t\t\t}, g);\n\t\t}\n\t}\n}\n\nmodule.exports = nonMusic;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvbm9uLW11c2ljLmpzIiwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQixtQkFBTyxDQUFDLDJFQUFhO0FBQ3pDLGlCQUFpQixtQkFBTyxDQUFDLGlFQUFROztBQUVqQztBQUNBLGlCQUFpQixxQkFBcUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0osOEJBQThCLHlDQUF5QztBQUN2RSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9kcmF3L25vbi1tdXNpYy5qcz8zODE3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBkcmF3U2VwYXJhdG9yID0gcmVxdWlyZSgnLi9zZXBhcmF0b3InKTtcbnZhciByZW5kZXJUZXh0ID0gcmVxdWlyZSgnLi90ZXh0Jyk7XG5cbmZ1bmN0aW9uIG5vbk11c2ljKHJlbmRlcmVyLCBvYmosIHNlbGVjdGFibGVzKSB7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgb2JqLnJvd3MubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgcm93ID0gb2JqLnJvd3NbaV07XG5cdFx0aWYgKHJvdy5hYnNtb3ZlKSB7XG5cdFx0XHRyZW5kZXJlci5hYnNvbHV0ZW1vdmVZKHJvdy5hYnNtb3ZlKTtcblx0XHR9IGVsc2UgaWYgKHJvdy5tb3ZlKSB7XG5cdFx0XHRyZW5kZXJlci5tb3ZlWShyb3cubW92ZSk7XG5cdFx0fSBlbHNlIGlmIChyb3cudGV4dCB8fCByb3cucGhyYXNlcykge1xuXHRcdFx0dmFyIHggPSByb3cubGVmdCA/IHJvdy5sZWZ0IDogMDtcblx0XHRcdHZhciBlbCA9IHJlbmRlclRleHQocmVuZGVyZXIsIHtcblx0XHRcdFx0eDogeCxcblx0XHRcdFx0eTogcmVuZGVyZXIueSxcblx0XHRcdFx0dGV4dDogcm93LnRleHQsXG5cdFx0XHRcdHBocmFzZXM6IHJvdy5waHJhc2VzLFxuXHRcdFx0XHQnZG9taW5hbnQtYmFzZWxpbmUnOiByb3dbJ2RvbWluYW50LWJhc2VsaW5lJ10sXG5cdFx0XHRcdHR5cGU6IHJvdy5mb250LFxuXHRcdFx0XHRrbGFzczogcm93LmtsYXNzLFxuXHRcdFx0XHRuYW1lOiByb3cubmFtZSxcblx0XHRcdFx0YW5jaG9yOiByb3cuYW5jaG9yXG5cdFx0XHR9KTtcblx0XHRcdGlmIChyb3cuYWJzRWxlbVR5cGUpIHtcblx0XHRcdFx0c2VsZWN0YWJsZXMud3JhcFN2Z0VsKHtcblx0XHRcdFx0XHRlbF90eXBlOiByb3cuYWJzRWxlbVR5cGUsXG5cdFx0XHRcdFx0bmFtZTogcm93Lm5hbWUsXG5cdFx0XHRcdFx0c3RhcnRDaGFyOiByb3cuc3RhcnRDaGFyLFxuXHRcdFx0XHRcdGVuZENoYXI6IHJvdy5lbmRDaGFyLFxuXHRcdFx0XHRcdHRleHQ6IHJvdy50ZXh0XG5cdFx0XHRcdH0sIGVsKTtcblx0XHRcdH1cblx0XHR9IGVsc2UgaWYgKHJvdy5zZXBhcmF0b3IpIHtcblx0XHRcdGRyYXdTZXBhcmF0b3IocmVuZGVyZXIsIHJvdy5zZXBhcmF0b3IpXG5cdFx0fSBlbHNlIGlmIChyb3cuc3RhcnRHcm91cCkge1xuXHRcdFx0cmVuZGVyZXIucGFwZXIub3Blbkdyb3VwKHsga2xhc3M6IHJvdy5rbGFzcywgXCJkYXRhLW5hbWVcIjogcm93Lm5hbWUgfSk7XG5cdFx0fSBlbHNlIGlmIChyb3cuZW5kR3JvdXApIHtcblx0XHRcdC8vIFRPRE8tUEVSOiBhbHNvIGNyZWF0ZSBhIGhpc3RvcnkgZWxlbWVudCB3aXRoIHRoZSB0aXRsZSBcInJvdy5lbmRHcm91cFwiXG5cdFx0XHR2YXIgZyA9IHJlbmRlcmVyLnBhcGVyLmNsb3NlR3JvdXAoKTtcblx0XHRcdGlmIChyb3cuYWJzRWxlbVR5cGUpXG5cdFx0XHRcdHNlbGVjdGFibGVzLndyYXBTdmdFbCh7XG5cdFx0XHRcdFx0ZWxfdHlwZTogcm93LmFic0VsZW1UeXBlLFxuXHRcdFx0XHRcdG5hbWU6IHJvdy5uYW1lLFxuXHRcdFx0XHRcdHN0YXJ0Q2hhcjogcm93LnN0YXJ0Q2hhcixcblx0XHRcdFx0XHRlbmRDaGFyOiByb3cuZW5kQ2hhcixcblx0XHRcdFx0XHR0ZXh0OiBcIlwiXG5cdFx0XHRcdH0sIGcpO1xuXHRcdH1cblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG5vbk11c2ljO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/non-music.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/print-line.js":
/*!*********************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/print-line.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var sprintf = __webpack_require__(/*! ./sprintf */ \"(ssr)/./node_modules/abcjs/src/write/draw/sprintf.js\");\nvar roundNumber = __webpack_require__(/*! ./round-number */ \"(ssr)/./node_modules/abcjs/src/write/draw/round-number.js\");\n\nfunction printLine(renderer, x1, x2, y, klass, name, dy) {\n\tvar fill = renderer.foregroundColor;\n\tx1 = roundNumber(x1);\n\tx2 = roundNumber(x2);\n\tvar y1 = roundNumber(y - dy);\n\tvar y2 = roundNumber(y + dy);\n\t// TODO-PER: This fixes a firefox bug where it isn't displayed\n\tif (renderer.firefox112) {\n\t\ty += dy / 2; // Because the y coordinate is the edge of where the line goes but the width widens from the middle.\n\t\tvar attr = {\n\t\t\tx1: x1,\n\t\t\tx2: x2,\n\t\t\ty1: y,\n\t\t\ty2: y,\n\t\t\tstroke: renderer.foregroundColor,\n\t\t\t'stroke-width': Math.abs(dy*2)\n\t\t}\n\t\tif (klass)\n\t\t\tattr['class'] = klass;\n\t\tif (name)\n\t\t\tattr['data-name'] = name;\n\t\t\n\t\treturn renderer.paper.lineToBack(attr);\n\t}\n\n\tvar pathString = sprintf(\"M %f %f L %f %f L %f %f L %f %f z\", x1, y1, x2, y1,\n\t\tx2, y2, x1, y2);\n\tvar options = { path: pathString, stroke: \"none\", fill: fill };\n\tif (name)\n\t\toptions['data-name'] = name;\n\tif (klass)\n\t\toptions['class'] = klass;\n\tvar ret = renderer.paper.pathToBack(options);\n\n\treturn ret;\n}\n\nmodule.exports = printLine;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvcHJpbnQtbGluZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxjQUFjLG1CQUFPLENBQUMsdUVBQVc7QUFDakMsa0JBQWtCLG1CQUFPLENBQUMsaUZBQWdCOztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9kcmF3L3ByaW50LWxpbmUuanM/ZWI0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc3ByaW50ZiA9IHJlcXVpcmUoJy4vc3ByaW50ZicpO1xudmFyIHJvdW5kTnVtYmVyID0gcmVxdWlyZShcIi4vcm91bmQtbnVtYmVyXCIpO1xuXG5mdW5jdGlvbiBwcmludExpbmUocmVuZGVyZXIsIHgxLCB4MiwgeSwga2xhc3MsIG5hbWUsIGR5KSB7XG5cdHZhciBmaWxsID0gcmVuZGVyZXIuZm9yZWdyb3VuZENvbG9yO1xuXHR4MSA9IHJvdW5kTnVtYmVyKHgxKTtcblx0eDIgPSByb3VuZE51bWJlcih4Mik7XG5cdHZhciB5MSA9IHJvdW5kTnVtYmVyKHkgLSBkeSk7XG5cdHZhciB5MiA9IHJvdW5kTnVtYmVyKHkgKyBkeSk7XG5cdC8vIFRPRE8tUEVSOiBUaGlzIGZpeGVzIGEgZmlyZWZveCBidWcgd2hlcmUgaXQgaXNuJ3QgZGlzcGxheWVkXG5cdGlmIChyZW5kZXJlci5maXJlZm94MTEyKSB7XG5cdFx0eSArPSBkeSAvIDI7IC8vIEJlY2F1c2UgdGhlIHkgY29vcmRpbmF0ZSBpcyB0aGUgZWRnZSBvZiB3aGVyZSB0aGUgbGluZSBnb2VzIGJ1dCB0aGUgd2lkdGggd2lkZW5zIGZyb20gdGhlIG1pZGRsZS5cblx0XHR2YXIgYXR0ciA9IHtcblx0XHRcdHgxOiB4MSxcblx0XHRcdHgyOiB4Mixcblx0XHRcdHkxOiB5LFxuXHRcdFx0eTI6IHksXG5cdFx0XHRzdHJva2U6IHJlbmRlcmVyLmZvcmVncm91bmRDb2xvcixcblx0XHRcdCdzdHJva2Utd2lkdGgnOiBNYXRoLmFicyhkeSoyKVxuXHRcdH1cblx0XHRpZiAoa2xhc3MpXG5cdFx0XHRhdHRyWydjbGFzcyddID0ga2xhc3M7XG5cdFx0aWYgKG5hbWUpXG5cdFx0XHRhdHRyWydkYXRhLW5hbWUnXSA9IG5hbWU7XG5cdFx0XG5cdFx0cmV0dXJuIHJlbmRlcmVyLnBhcGVyLmxpbmVUb0JhY2soYXR0cik7XG5cdH1cblxuXHR2YXIgcGF0aFN0cmluZyA9IHNwcmludGYoXCJNICVmICVmIEwgJWYgJWYgTCAlZiAlZiBMICVmICVmIHpcIiwgeDEsIHkxLCB4MiwgeTEsXG5cdFx0eDIsIHkyLCB4MSwgeTIpO1xuXHR2YXIgb3B0aW9ucyA9IHsgcGF0aDogcGF0aFN0cmluZywgc3Ryb2tlOiBcIm5vbmVcIiwgZmlsbDogZmlsbCB9O1xuXHRpZiAobmFtZSlcblx0XHRvcHRpb25zWydkYXRhLW5hbWUnXSA9IG5hbWU7XG5cdGlmIChrbGFzcylcblx0XHRvcHRpb25zWydjbGFzcyddID0ga2xhc3M7XG5cdHZhciByZXQgPSByZW5kZXJlci5wYXBlci5wYXRoVG9CYWNrKG9wdGlvbnMpO1xuXG5cdHJldHVybiByZXQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcHJpbnRMaW5lO1xuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/print-line.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/print-path.js":
/*!*********************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/print-path.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("function printPath(renderer, attrs, params) {\n\tvar ret = renderer.paper.path(attrs);\n\n\treturn ret;\n}\n\nmodule.exports = printPath;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvcHJpbnQtcGF0aC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvZHJhdy9wcmludC1wYXRoLmpzP2QyYWIiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gcHJpbnRQYXRoKHJlbmRlcmVyLCBhdHRycywgcGFyYW1zKSB7XG5cdHZhciByZXQgPSByZW5kZXJlci5wYXBlci5wYXRoKGF0dHJzKTtcblxuXHRyZXR1cm4gcmV0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHByaW50UGF0aDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/print-path.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/print-stem.js":
/*!*********************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/print-stem.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var elementGroup = __webpack_require__(/*! ./group-elements */ \"(ssr)/./node_modules/abcjs/src/write/draw/group-elements.js\");\nvar roundNumber = __webpack_require__(/*! ./round-number */ \"(ssr)/./node_modules/abcjs/src/write/draw/round-number.js\");\n\nfunction printStem(renderer, x, dx, y1, y2, klass, name) {\n\tif (dx < 0 || y1 < y2) { // correct path \"handedness\" for intersection with other elements\n\t\tvar tmp = roundNumber(y2);\n\t\ty2 = roundNumber(y1);\n\t\ty1 = tmp;\n\t} else {\n\t\ty1 = roundNumber(y1);\n\t\ty2 = roundNumber(y2);\n\t}\n\tx = roundNumber(x);\n\tvar x2 = roundNumber(x + dx);\n\t// TODO-PER: This fixes a firefox bug where it isn't displayed\n\tif (renderer.firefox112) {\n\t\tx += dx / 2; // Because the x coordinate is the edge of where the line goes but the width widens from the middle.\n\t\tvar attr = {\n\t\t\tx1: x,\n\t\t\tx2: x,\n\t\t\ty1: y1,\n\t\t\ty2: y2,\n\t\t\tstroke: renderer.foregroundColor,\n\t\t\t'stroke-width': Math.abs(dx)\n\t\t}\n\t\tif (klass)\n\t\t\tattr['class'] = klass;\n\t\tif (name)\n\t\t\tattr['data-name'] = name;\n\t\t\n\t\treturn renderer.paper.lineToBack(attr);\n\t}\n\tvar pathArray = [[\"M\", x, y1], [\"L\", x, y2], [\"L\", x2, y2], [\"L\", x2, y1], [\"z\"]];\n\tvar attr = { path: \"\" };\n\tfor (var i = 0; i < pathArray.length; i++)\n\t\tattr.path += pathArray[i].join(\" \");\n\tif (klass)\n\t\tattr['class'] = klass;\n\tif (name)\n\t\tattr['data-name'] = name;\n\tif (!elementGroup.isInGroup()) {\n\t\tattr.stroke = \"none\";\n\t\tattr.fill = renderer.foregroundColor;\n\t}\n\treturn renderer.paper.pathToBack(attr);\n}\n\nmodule.exports = printStem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvcHJpbnQtc3RlbS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxtQkFBbUIsbUJBQU8sQ0FBQyxxRkFBa0I7QUFDN0Msa0JBQWtCLG1CQUFPLENBQUMsaUZBQWdCOztBQUUxQztBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsaUJBQWlCLHNCQUFzQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvcHJpbnQtc3RlbS5qcz9iNWQ2Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBlbGVtZW50R3JvdXAgPSByZXF1aXJlKCcuL2dyb3VwLWVsZW1lbnRzJyk7XG52YXIgcm91bmROdW1iZXIgPSByZXF1aXJlKFwiLi9yb3VuZC1udW1iZXJcIik7XG5cbmZ1bmN0aW9uIHByaW50U3RlbShyZW5kZXJlciwgeCwgZHgsIHkxLCB5Miwga2xhc3MsIG5hbWUpIHtcblx0aWYgKGR4IDwgMCB8fCB5MSA8IHkyKSB7IC8vIGNvcnJlY3QgcGF0aCBcImhhbmRlZG5lc3NcIiBmb3IgaW50ZXJzZWN0aW9uIHdpdGggb3RoZXIgZWxlbWVudHNcblx0XHR2YXIgdG1wID0gcm91bmROdW1iZXIoeTIpO1xuXHRcdHkyID0gcm91bmROdW1iZXIoeTEpO1xuXHRcdHkxID0gdG1wO1xuXHR9IGVsc2Uge1xuXHRcdHkxID0gcm91bmROdW1iZXIoeTEpO1xuXHRcdHkyID0gcm91bmROdW1iZXIoeTIpO1xuXHR9XG5cdHggPSByb3VuZE51bWJlcih4KTtcblx0dmFyIHgyID0gcm91bmROdW1iZXIoeCArIGR4KTtcblx0Ly8gVE9ETy1QRVI6IFRoaXMgZml4ZXMgYSBmaXJlZm94IGJ1ZyB3aGVyZSBpdCBpc24ndCBkaXNwbGF5ZWRcblx0aWYgKHJlbmRlcmVyLmZpcmVmb3gxMTIpIHtcblx0XHR4ICs9IGR4IC8gMjsgLy8gQmVjYXVzZSB0aGUgeCBjb29yZGluYXRlIGlzIHRoZSBlZGdlIG9mIHdoZXJlIHRoZSBsaW5lIGdvZXMgYnV0IHRoZSB3aWR0aCB3aWRlbnMgZnJvbSB0aGUgbWlkZGxlLlxuXHRcdHZhciBhdHRyID0ge1xuXHRcdFx0eDE6IHgsXG5cdFx0XHR4MjogeCxcblx0XHRcdHkxOiB5MSxcblx0XHRcdHkyOiB5Mixcblx0XHRcdHN0cm9rZTogcmVuZGVyZXIuZm9yZWdyb3VuZENvbG9yLFxuXHRcdFx0J3N0cm9rZS13aWR0aCc6IE1hdGguYWJzKGR4KVxuXHRcdH1cblx0XHRpZiAoa2xhc3MpXG5cdFx0XHRhdHRyWydjbGFzcyddID0ga2xhc3M7XG5cdFx0aWYgKG5hbWUpXG5cdFx0XHRhdHRyWydkYXRhLW5hbWUnXSA9IG5hbWU7XG5cdFx0XG5cdFx0cmV0dXJuIHJlbmRlcmVyLnBhcGVyLmxpbmVUb0JhY2soYXR0cik7XG5cdH1cblx0dmFyIHBhdGhBcnJheSA9IFtbXCJNXCIsIHgsIHkxXSwgW1wiTFwiLCB4LCB5Ml0sIFtcIkxcIiwgeDIsIHkyXSwgW1wiTFwiLCB4MiwgeTFdLCBbXCJ6XCJdXTtcblx0dmFyIGF0dHIgPSB7IHBhdGg6IFwiXCIgfTtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBwYXRoQXJyYXkubGVuZ3RoOyBpKyspXG5cdFx0YXR0ci5wYXRoICs9IHBhdGhBcnJheVtpXS5qb2luKFwiIFwiKTtcblx0aWYgKGtsYXNzKVxuXHRcdGF0dHJbJ2NsYXNzJ10gPSBrbGFzcztcblx0aWYgKG5hbWUpXG5cdFx0YXR0clsnZGF0YS1uYW1lJ10gPSBuYW1lO1xuXHRpZiAoIWVsZW1lbnRHcm91cC5pc0luR3JvdXAoKSkge1xuXHRcdGF0dHIuc3Ryb2tlID0gXCJub25lXCI7XG5cdFx0YXR0ci5maWxsID0gcmVuZGVyZXIuZm9yZWdyb3VuZENvbG9yO1xuXHR9XG5cdHJldHVybiByZW5kZXJlci5wYXBlci5wYXRoVG9CYWNrKGF0dHIpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHByaW50U3RlbTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/print-stem.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/print-symbol.js":
/*!***********************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/print-symbol.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var renderText = __webpack_require__(/*! ./text */ \"(ssr)/./node_modules/abcjs/src/write/draw/text.js\");\nvar glyphs = __webpack_require__(/*! ../creation/glyphs */ \"(ssr)/./node_modules/abcjs/src/write/creation/glyphs.js\");\nvar elementGroup = __webpack_require__(/*! ./group-elements */ \"(ssr)/./node_modules/abcjs/src/write/draw/group-elements.js\");\n\n/**\n * assumes this.y is set appropriately\n * if symbol is a multichar string without a . (as in scripts.staccato) 1 symbol per char is assumed\n * not scaled if not in printgroup\n */\nfunction printSymbol(renderer, x, offset, symbol, options) {\n\t// TODO-PER: what happened to scalex, and scaley? That might have been a bug introduced in refactoring\n\tvar el;\n\tvar ycorr;\n\tif (!symbol) return null;\n\tif (symbol.length > 1 && symbol.indexOf(\".\") < 0) {\n\t\tvar groupClass = elementGroup.isInGroup() ? '' : options.klass // If this is already in a group then don't repeat the classes for the sub-group)\n\t\trenderer.paper.openGroup({ \"data-name\": options.name, klass: groupClass });\n\t\tvar dx = 0;\n\t\tfor (var i = 0; i < symbol.length; i++) {\n\t\t\tvar s = symbol[i];\n\t\t\tycorr = glyphs.getYCorr(s);\n\t\t\tel = glyphs.printSymbol(x + dx, renderer.calcY(offset + ycorr), s, renderer.paper, { stroke: options.stroke, fill: options.fill });\n\t\t\tif (el) {\n\t\t\t\tif (i < symbol.length - 1)\n\t\t\t\t\tdx += kernSymbols(s, symbol[i + 1], glyphs.getSymbolWidth(s));\n\t\t\t} else {\n\t\t\t\trenderText(renderer, { x: x, y: renderer.y, text: \"no symbol:\" + symbol, type: \"debugfont\", klass: 'debug-msg', anchor: 'start' }, false);\n\t\t\t}\n\t\t}\n\t\tvar g = renderer.paper.closeGroup();\n\t\treturn g;\n\t} else {\n\t\tycorr = glyphs.getYCorr(symbol);\n\t\tif (elementGroup.isInGroup()) {\n\t\t\tel = glyphs.printSymbol(x, renderer.calcY(offset + ycorr), symbol, renderer.paper, { \"data-name\": options.name });\n\t\t} else {\n\t\t\tel = glyphs.printSymbol(x, renderer.calcY(offset + ycorr), symbol, renderer.paper, { klass: options.klass, stroke: options.stroke, fill: options.fill, \"data-name\": options.name });\n\t\t}\n\t\tif (el) {\n\t\t\treturn el;\n\t\t}\n\t\trenderText(renderer, { x: x, y: renderer.y, text: \"no symbol:\" + symbol, type: \"debugfont\", klass: 'debug-msg', anchor: 'start' }, false);\n\t\treturn null;\n\t}\n}\n\nfunction kernSymbols(lastSymbol, thisSymbol, lastSymbolWidth) {\n\t// This is just some adjustments to make it look better.\n\tvar width = lastSymbolWidth;\n\tif (lastSymbol === 'f' && thisSymbol === 'f')\n\t\twidth = width * 2 / 3;\n\tif (lastSymbol === 'p' && thisSymbol === 'p')\n\t\twidth = width * 5 / 6;\n\tif (lastSymbol === 'f' && thisSymbol === 'z')\n\t\twidth = width * 5 / 8;\n\treturn width;\n}\n\nmodule.exports = printSymbol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvcHJpbnQtc3ltYm9sLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLGlFQUFRO0FBQ2pDLGFBQWEsbUJBQU8sQ0FBQyxtRkFBb0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMscUZBQWtCOztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsOENBQThDO0FBQzNFO0FBQ0Esa0JBQWtCLG1CQUFtQjtBQUNyQztBQUNBO0FBQ0Esd0ZBQXdGLDRDQUE0QztBQUNwSTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsMkJBQTJCLDBHQUEwRztBQUNySTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0Esd0ZBQXdGLDJCQUEyQjtBQUNuSCxJQUFJO0FBQ0osd0ZBQXdGLDZGQUE2RjtBQUNyTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwwR0FBMEc7QUFDbkk7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvZHJhdy9wcmludC1zeW1ib2wuanM/YjJiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVuZGVyVGV4dCA9IHJlcXVpcmUoJy4vdGV4dCcpO1xudmFyIGdseXBocyA9IHJlcXVpcmUoJy4uL2NyZWF0aW9uL2dseXBocycpO1xudmFyIGVsZW1lbnRHcm91cCA9IHJlcXVpcmUoJy4vZ3JvdXAtZWxlbWVudHMnKTtcblxuLyoqXG4gKiBhc3N1bWVzIHRoaXMueSBpcyBzZXQgYXBwcm9wcmlhdGVseVxuICogaWYgc3ltYm9sIGlzIGEgbXVsdGljaGFyIHN0cmluZyB3aXRob3V0IGEgLiAoYXMgaW4gc2NyaXB0cy5zdGFjY2F0bykgMSBzeW1ib2wgcGVyIGNoYXIgaXMgYXNzdW1lZFxuICogbm90IHNjYWxlZCBpZiBub3QgaW4gcHJpbnRncm91cFxuICovXG5mdW5jdGlvbiBwcmludFN5bWJvbChyZW5kZXJlciwgeCwgb2Zmc2V0LCBzeW1ib2wsIG9wdGlvbnMpIHtcblx0Ly8gVE9ETy1QRVI6IHdoYXQgaGFwcGVuZWQgdG8gc2NhbGV4LCBhbmQgc2NhbGV5PyBUaGF0IG1pZ2h0IGhhdmUgYmVlbiBhIGJ1ZyBpbnRyb2R1Y2VkIGluIHJlZmFjdG9yaW5nXG5cdHZhciBlbDtcblx0dmFyIHljb3JyO1xuXHRpZiAoIXN5bWJvbCkgcmV0dXJuIG51bGw7XG5cdGlmIChzeW1ib2wubGVuZ3RoID4gMSAmJiBzeW1ib2wuaW5kZXhPZihcIi5cIikgPCAwKSB7XG5cdFx0dmFyIGdyb3VwQ2xhc3MgPSBlbGVtZW50R3JvdXAuaXNJbkdyb3VwKCkgPyAnJyA6IG9wdGlvbnMua2xhc3MgLy8gSWYgdGhpcyBpcyBhbHJlYWR5IGluIGEgZ3JvdXAgdGhlbiBkb24ndCByZXBlYXQgdGhlIGNsYXNzZXMgZm9yIHRoZSBzdWItZ3JvdXApXG5cdFx0cmVuZGVyZXIucGFwZXIub3Blbkdyb3VwKHsgXCJkYXRhLW5hbWVcIjogb3B0aW9ucy5uYW1lLCBrbGFzczogZ3JvdXBDbGFzcyB9KTtcblx0XHR2YXIgZHggPSAwO1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9sLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgcyA9IHN5bWJvbFtpXTtcblx0XHRcdHljb3JyID0gZ2x5cGhzLmdldFlDb3JyKHMpO1xuXHRcdFx0ZWwgPSBnbHlwaHMucHJpbnRTeW1ib2woeCArIGR4LCByZW5kZXJlci5jYWxjWShvZmZzZXQgKyB5Y29yciksIHMsIHJlbmRlcmVyLnBhcGVyLCB7IHN0cm9rZTogb3B0aW9ucy5zdHJva2UsIGZpbGw6IG9wdGlvbnMuZmlsbCB9KTtcblx0XHRcdGlmIChlbCkge1xuXHRcdFx0XHRpZiAoaSA8IHN5bWJvbC5sZW5ndGggLSAxKVxuXHRcdFx0XHRcdGR4ICs9IGtlcm5TeW1ib2xzKHMsIHN5bWJvbFtpICsgMV0sIGdseXBocy5nZXRTeW1ib2xXaWR0aChzKSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZW5kZXJUZXh0KHJlbmRlcmVyLCB7IHg6IHgsIHk6IHJlbmRlcmVyLnksIHRleHQ6IFwibm8gc3ltYm9sOlwiICsgc3ltYm9sLCB0eXBlOiBcImRlYnVnZm9udFwiLCBrbGFzczogJ2RlYnVnLW1zZycsIGFuY2hvcjogJ3N0YXJ0JyB9LCBmYWxzZSk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHZhciBnID0gcmVuZGVyZXIucGFwZXIuY2xvc2VHcm91cCgpO1xuXHRcdHJldHVybiBnO1xuXHR9IGVsc2Uge1xuXHRcdHljb3JyID0gZ2x5cGhzLmdldFlDb3JyKHN5bWJvbCk7XG5cdFx0aWYgKGVsZW1lbnRHcm91cC5pc0luR3JvdXAoKSkge1xuXHRcdFx0ZWwgPSBnbHlwaHMucHJpbnRTeW1ib2woeCwgcmVuZGVyZXIuY2FsY1kob2Zmc2V0ICsgeWNvcnIpLCBzeW1ib2wsIHJlbmRlcmVyLnBhcGVyLCB7IFwiZGF0YS1uYW1lXCI6IG9wdGlvbnMubmFtZSB9KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0ZWwgPSBnbHlwaHMucHJpbnRTeW1ib2woeCwgcmVuZGVyZXIuY2FsY1kob2Zmc2V0ICsgeWNvcnIpLCBzeW1ib2wsIHJlbmRlcmVyLnBhcGVyLCB7IGtsYXNzOiBvcHRpb25zLmtsYXNzLCBzdHJva2U6IG9wdGlvbnMuc3Ryb2tlLCBmaWxsOiBvcHRpb25zLmZpbGwsIFwiZGF0YS1uYW1lXCI6IG9wdGlvbnMubmFtZSB9KTtcblx0XHR9XG5cdFx0aWYgKGVsKSB7XG5cdFx0XHRyZXR1cm4gZWw7XG5cdFx0fVxuXHRcdHJlbmRlclRleHQocmVuZGVyZXIsIHsgeDogeCwgeTogcmVuZGVyZXIueSwgdGV4dDogXCJubyBzeW1ib2w6XCIgKyBzeW1ib2wsIHR5cGU6IFwiZGVidWdmb250XCIsIGtsYXNzOiAnZGVidWctbXNnJywgYW5jaG9yOiAnc3RhcnQnIH0sIGZhbHNlKTtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxufVxuXG5mdW5jdGlvbiBrZXJuU3ltYm9scyhsYXN0U3ltYm9sLCB0aGlzU3ltYm9sLCBsYXN0U3ltYm9sV2lkdGgpIHtcblx0Ly8gVGhpcyBpcyBqdXN0IHNvbWUgYWRqdXN0bWVudHMgdG8gbWFrZSBpdCBsb29rIGJldHRlci5cblx0dmFyIHdpZHRoID0gbGFzdFN5bWJvbFdpZHRoO1xuXHRpZiAobGFzdFN5bWJvbCA9PT0gJ2YnICYmIHRoaXNTeW1ib2wgPT09ICdmJylcblx0XHR3aWR0aCA9IHdpZHRoICogMiAvIDM7XG5cdGlmIChsYXN0U3ltYm9sID09PSAncCcgJiYgdGhpc1N5bWJvbCA9PT0gJ3AnKVxuXHRcdHdpZHRoID0gd2lkdGggKiA1IC8gNjtcblx0aWYgKGxhc3RTeW1ib2wgPT09ICdmJyAmJiB0aGlzU3ltYm9sID09PSAneicpXG5cdFx0d2lkdGggPSB3aWR0aCAqIDUgLyA4O1xuXHRyZXR1cm4gd2lkdGg7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcHJpbnRTeW1ib2w7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/print-symbol.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/relative.js":
/*!*******************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/relative.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var renderText = __webpack_require__(/*! ./text */ \"(ssr)/./node_modules/abcjs/src/write/draw/text.js\");\nvar printStem = __webpack_require__(/*! ./print-stem */ \"(ssr)/./node_modules/abcjs/src/write/draw/print-stem.js\");\nvar printStaffLine = __webpack_require__(/*! ./staff-line */ \"(ssr)/./node_modules/abcjs/src/write/draw/staff-line.js\");\nvar printSymbol = __webpack_require__(/*! ./print-symbol */ \"(ssr)/./node_modules/abcjs/src/write/draw/print-symbol.js\");\n\nfunction drawRelativeElement(renderer, params, bartop) {\n\tif (params.pitch === undefined)\n\t\twindow.console.error(params.type + \" Relative Element y-coordinate not set.\");\n\tvar y = renderer.calcY(params.pitch);\n\tswitch (params.type) {\n\t\tcase \"symbol\":\n\t\t\tif (params.c === null) return null;\n\t\t\tvar klass = \"symbol\";\n\t\t\tif (params.klass) klass += \" \" + params.klass;\n\t\t\tparams.graphelem = printSymbol(renderer, params.x, params.pitch, params.c, {\n\t\t\t\tscalex: params.scalex,\n\t\t\t\tscaley: params.scaley,\n\t\t\t\tklass: renderer.controller.classes.generate(klass),\n\t\t\t\t//\t\t\t\tfill:\"none\",\n\t\t\t\t//\t\t\t\tstroke: renderer.foregroundColor,\n\t\t\t\tname: params.name\n\t\t\t});\n\t\t\tbreak;\n\t\tcase \"debug\":\n\t\t\tparams.graphelem = renderText(renderer, { x: params.x, y: renderer.calcY(15), text: \"\" + params.c, type: \"debugfont\", klass: renderer.controller.classes.generate('debug-msg'), anchor: 'start', centerVertically: false, dim: params.dim }, false);\n\t\t\tbreak;\n\t\tcase \"tabNumber\":\n\t\t\tvar hAnchor = \"middle\";\n\t\t\tvar tabFont = \"tabnumberfont\";\n\t\t\tvar tabClass = 'abcjs-tab-number';\n\t\t\tif (params.isGrace) {\n\t\t\t\ttabFont = \"tabgracefont\";\n\t\t\t\ty += 2.5;\n\t\t\t\ttabClass = 'tab-grace'\n\t\t\t}\n\t\t\tparams.graphelem = renderText(renderer, { x: params.x, y: y, text: \"\" + params.c, type: tabFont, klass: renderer.controller.classes.generate(tabClass), anchor: hAnchor, centerVertically: false, dim: params.dim, cursor: 'default' }, false);\n\t\t\tbreak;\n\t\tcase \"barNumber\":\n\t\t\tparams.graphelem = renderText(renderer, { x: params.x, y: y, text: \"\" + params.c, type: \"measurefont\", klass: renderer.controller.classes.generate('bar-number'), anchor: \"middle\", dim: params.dim, name: \"bar-number\" }, true);\n\t\t\tbreak;\n\t\tcase \"lyric\":\n\t\t\tparams.graphelem = renderText(renderer, { x: params.x, y: y, text: params.c, type: \"vocalfont\", klass: renderer.controller.classes.generate('lyric'), anchor: \"middle\", dim: params.dim, name: \"lyric\" }, false);\n\t\t\tbreak;\n\t\tcase \"chord\":\n\t\t\tparams.graphelem = renderText(renderer, { x: params.x, y: y, text: params.c, type: 'gchordfont', klass: renderer.controller.classes.generate(\"chord\"), anchor: \"middle\", dim: params.dim, lane: params.getLane(), name: \"chord\" }, false);\n\t\t\tbreak;\n\t\tcase \"decoration\":\n\t\t\t// The +6 is to compensate for the placement of text in svg: to be on the same row as symbols, the y-coord needs to compensate for the center line.\n\t\t\tparams.graphelem = renderText(renderer, { x: params.x, y: y + 6, text: params.c, type: 'annotationfont', klass: renderer.controller.classes.generate(\"annotation\"), anchor: params.anchor, centerVertically: true, dim: params.dim }, false);\n\t\t\tbreak;\n\t\tcase \"text\":\n\t\t\tparams.graphelem = renderText(renderer, { x: params.x, y: y, text: params.c, type: 'annotationfont', klass: renderer.controller.classes.generate(\"annotation\"), anchor: \"start\", centerVertically: params.centerVertically, dim: params.dim, lane: params.getLane(), name: \"annotation\" }, false);\n\t\t\tbreak;\n\t\tcase \"multimeasure-text\":\n\t\t\tparams.graphelem = renderText(renderer, { x: params.x + params.w / 2, y: y, text: params.c, type: 'tempofont', klass: renderer.controller.classes.generate(\"rest\"), anchor: \"middle\", centerVertically: false, dim: params.dim }, false);\n\t\t\tbreak;\n\t\tcase \"part\":\n\t\t\tparams.graphelem = renderText(renderer, { x: params.x, y: y, text: params.c, type: 'partsfont', klass: renderer.controller.classes.generate(\"part\"), anchor: \"start\", dim: params.dim, name: params.c }, true);\n\t\t\tbreak;\n\t\tcase \"bar\":\n\t\t\tparams.graphelem = printStem(renderer, params.x, params.linewidth + renderer.lineThickness, y, (bartop) ? bartop : renderer.calcY(params.pitch2), null, \"bar\"); break; // bartop can't be 0\n\t\tcase \"stem\":\n\t\t\tvar stemWidth = params.linewidth > 0 ? params.linewidth + renderer.lineThickness : params.linewidth - renderer.lineThickness\n\t\t\tparams.graphelem = printStem(renderer, params.x, stemWidth, y, renderer.calcY(params.pitch2), 'abcjs-stem', 'stem'); break;\n\t\tcase \"ledger\":\n\t\t\tparams.graphelem = printStaffLine(renderer, params.x, params.x + params.w, params.pitch, \"abcjs-ledger\", \"ledger\", 0.35 + renderer.lineThickness); break;\n\t}\n\tif (params.scalex !== 1 && params.graphelem) {\n\t\tscaleExistingElem(renderer.paper, params.graphelem, params.scalex, params.scaley, params.x, y);\n\t}\n\treturn params.graphelem;\n}\n\nfunction scaleExistingElem(paper, elem, scaleX, scaleY, x, y) {\n\tpaper.setAttributeOnElement(elem, { style: \"transform:scale(\" + scaleX + \",\" + scaleY + \");transform-origin:\" + x + \"px \" + y + \"px;\" });\n}\n\nmodule.exports = drawRelativeElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvcmVsYXRpdmUuanMiLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsaUVBQVE7QUFDakMsZ0JBQWdCLG1CQUFPLENBQUMsNkVBQWM7QUFDdEMscUJBQXFCLG1CQUFPLENBQUMsNkVBQWM7QUFDM0Msa0JBQWtCLG1CQUFPLENBQUMsaUZBQWdCOztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsNkNBQTZDLGlNQUFpTTtBQUM5TztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2Qyw0TEFBNEw7QUFDek87QUFDQTtBQUNBLDZDQUE2QywrS0FBK0s7QUFDNU47QUFDQTtBQUNBLDZDQUE2Qyw4SkFBOEo7QUFDM007QUFDQTtBQUNBLDZDQUE2Qyx1TEFBdUw7QUFDcE87QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLDBMQUEwTDtBQUN2TztBQUNBO0FBQ0EsNkNBQTZDLCtPQUErTztBQUM1UjtBQUNBO0FBQ0EsNkNBQTZDLHNMQUFzTDtBQUNuTztBQUNBO0FBQ0EsNkNBQTZDLDZKQUE2SjtBQUMxTTtBQUNBO0FBQ0EsbUtBQW1LLE9BQU87QUFDMUs7QUFDQTtBQUNBLHdIQUF3SDtBQUN4SDtBQUNBLHNKQUFzSjtBQUN0SjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxxQ0FBcUMsdURBQXVELHlDQUF5QyxHQUFHO0FBQ3hJOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvcmVsYXRpdmUuanM/ZDE2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVuZGVyVGV4dCA9IHJlcXVpcmUoJy4vdGV4dCcpO1xudmFyIHByaW50U3RlbSA9IHJlcXVpcmUoJy4vcHJpbnQtc3RlbScpO1xudmFyIHByaW50U3RhZmZMaW5lID0gcmVxdWlyZSgnLi9zdGFmZi1saW5lJyk7XG52YXIgcHJpbnRTeW1ib2wgPSByZXF1aXJlKCcuL3ByaW50LXN5bWJvbCcpO1xuXG5mdW5jdGlvbiBkcmF3UmVsYXRpdmVFbGVtZW50KHJlbmRlcmVyLCBwYXJhbXMsIGJhcnRvcCkge1xuXHRpZiAocGFyYW1zLnBpdGNoID09PSB1bmRlZmluZWQpXG5cdFx0d2luZG93LmNvbnNvbGUuZXJyb3IocGFyYW1zLnR5cGUgKyBcIiBSZWxhdGl2ZSBFbGVtZW50IHktY29vcmRpbmF0ZSBub3Qgc2V0LlwiKTtcblx0dmFyIHkgPSByZW5kZXJlci5jYWxjWShwYXJhbXMucGl0Y2gpO1xuXHRzd2l0Y2ggKHBhcmFtcy50eXBlKSB7XG5cdFx0Y2FzZSBcInN5bWJvbFwiOlxuXHRcdFx0aWYgKHBhcmFtcy5jID09PSBudWxsKSByZXR1cm4gbnVsbDtcblx0XHRcdHZhciBrbGFzcyA9IFwic3ltYm9sXCI7XG5cdFx0XHRpZiAocGFyYW1zLmtsYXNzKSBrbGFzcyArPSBcIiBcIiArIHBhcmFtcy5rbGFzcztcblx0XHRcdHBhcmFtcy5ncmFwaGVsZW0gPSBwcmludFN5bWJvbChyZW5kZXJlciwgcGFyYW1zLngsIHBhcmFtcy5waXRjaCwgcGFyYW1zLmMsIHtcblx0XHRcdFx0c2NhbGV4OiBwYXJhbXMuc2NhbGV4LFxuXHRcdFx0XHRzY2FsZXk6IHBhcmFtcy5zY2FsZXksXG5cdFx0XHRcdGtsYXNzOiByZW5kZXJlci5jb250cm9sbGVyLmNsYXNzZXMuZ2VuZXJhdGUoa2xhc3MpLFxuXHRcdFx0XHQvL1x0XHRcdFx0ZmlsbDpcIm5vbmVcIixcblx0XHRcdFx0Ly9cdFx0XHRcdHN0cm9rZTogcmVuZGVyZXIuZm9yZWdyb3VuZENvbG9yLFxuXHRcdFx0XHRuYW1lOiBwYXJhbXMubmFtZVxuXHRcdFx0fSk7XG5cdFx0XHRicmVhaztcblx0XHRjYXNlIFwiZGVidWdcIjpcblx0XHRcdHBhcmFtcy5ncmFwaGVsZW0gPSByZW5kZXJUZXh0KHJlbmRlcmVyLCB7IHg6IHBhcmFtcy54LCB5OiByZW5kZXJlci5jYWxjWSgxNSksIHRleHQ6IFwiXCIgKyBwYXJhbXMuYywgdHlwZTogXCJkZWJ1Z2ZvbnRcIiwga2xhc3M6IHJlbmRlcmVyLmNvbnRyb2xsZXIuY2xhc3Nlcy5nZW5lcmF0ZSgnZGVidWctbXNnJyksIGFuY2hvcjogJ3N0YXJ0JywgY2VudGVyVmVydGljYWxseTogZmFsc2UsIGRpbTogcGFyYW1zLmRpbSB9LCBmYWxzZSk7XG5cdFx0XHRicmVhaztcblx0XHRjYXNlIFwidGFiTnVtYmVyXCI6XG5cdFx0XHR2YXIgaEFuY2hvciA9IFwibWlkZGxlXCI7XG5cdFx0XHR2YXIgdGFiRm9udCA9IFwidGFibnVtYmVyZm9udFwiO1xuXHRcdFx0dmFyIHRhYkNsYXNzID0gJ2FiY2pzLXRhYi1udW1iZXInO1xuXHRcdFx0aWYgKHBhcmFtcy5pc0dyYWNlKSB7XG5cdFx0XHRcdHRhYkZvbnQgPSBcInRhYmdyYWNlZm9udFwiO1xuXHRcdFx0XHR5ICs9IDIuNTtcblx0XHRcdFx0dGFiQ2xhc3MgPSAndGFiLWdyYWNlJ1xuXHRcdFx0fVxuXHRcdFx0cGFyYW1zLmdyYXBoZWxlbSA9IHJlbmRlclRleHQocmVuZGVyZXIsIHsgeDogcGFyYW1zLngsIHk6IHksIHRleHQ6IFwiXCIgKyBwYXJhbXMuYywgdHlwZTogdGFiRm9udCwga2xhc3M6IHJlbmRlcmVyLmNvbnRyb2xsZXIuY2xhc3Nlcy5nZW5lcmF0ZSh0YWJDbGFzcyksIGFuY2hvcjogaEFuY2hvciwgY2VudGVyVmVydGljYWxseTogZmFsc2UsIGRpbTogcGFyYW1zLmRpbSwgY3Vyc29yOiAnZGVmYXVsdCcgfSwgZmFsc2UpO1xuXHRcdFx0YnJlYWs7XG5cdFx0Y2FzZSBcImJhck51bWJlclwiOlxuXHRcdFx0cGFyYW1zLmdyYXBoZWxlbSA9IHJlbmRlclRleHQocmVuZGVyZXIsIHsgeDogcGFyYW1zLngsIHk6IHksIHRleHQ6IFwiXCIgKyBwYXJhbXMuYywgdHlwZTogXCJtZWFzdXJlZm9udFwiLCBrbGFzczogcmVuZGVyZXIuY29udHJvbGxlci5jbGFzc2VzLmdlbmVyYXRlKCdiYXItbnVtYmVyJyksIGFuY2hvcjogXCJtaWRkbGVcIiwgZGltOiBwYXJhbXMuZGltLCBuYW1lOiBcImJhci1udW1iZXJcIiB9LCB0cnVlKTtcblx0XHRcdGJyZWFrO1xuXHRcdGNhc2UgXCJseXJpY1wiOlxuXHRcdFx0cGFyYW1zLmdyYXBoZWxlbSA9IHJlbmRlclRleHQocmVuZGVyZXIsIHsgeDogcGFyYW1zLngsIHk6IHksIHRleHQ6IHBhcmFtcy5jLCB0eXBlOiBcInZvY2FsZm9udFwiLCBrbGFzczogcmVuZGVyZXIuY29udHJvbGxlci5jbGFzc2VzLmdlbmVyYXRlKCdseXJpYycpLCBhbmNob3I6IFwibWlkZGxlXCIsIGRpbTogcGFyYW1zLmRpbSwgbmFtZTogXCJseXJpY1wiIH0sIGZhbHNlKTtcblx0XHRcdGJyZWFrO1xuXHRcdGNhc2UgXCJjaG9yZFwiOlxuXHRcdFx0cGFyYW1zLmdyYXBoZWxlbSA9IHJlbmRlclRleHQocmVuZGVyZXIsIHsgeDogcGFyYW1zLngsIHk6IHksIHRleHQ6IHBhcmFtcy5jLCB0eXBlOiAnZ2Nob3JkZm9udCcsIGtsYXNzOiByZW5kZXJlci5jb250cm9sbGVyLmNsYXNzZXMuZ2VuZXJhdGUoXCJjaG9yZFwiKSwgYW5jaG9yOiBcIm1pZGRsZVwiLCBkaW06IHBhcmFtcy5kaW0sIGxhbmU6IHBhcmFtcy5nZXRMYW5lKCksIG5hbWU6IFwiY2hvcmRcIiB9LCBmYWxzZSk7XG5cdFx0XHRicmVhaztcblx0XHRjYXNlIFwiZGVjb3JhdGlvblwiOlxuXHRcdFx0Ly8gVGhlICs2IGlzIHRvIGNvbXBlbnNhdGUgZm9yIHRoZSBwbGFjZW1lbnQgb2YgdGV4dCBpbiBzdmc6IHRvIGJlIG9uIHRoZSBzYW1lIHJvdyBhcyBzeW1ib2xzLCB0aGUgeS1jb29yZCBuZWVkcyB0byBjb21wZW5zYXRlIGZvciB0aGUgY2VudGVyIGxpbmUuXG5cdFx0XHRwYXJhbXMuZ3JhcGhlbGVtID0gcmVuZGVyVGV4dChyZW5kZXJlciwgeyB4OiBwYXJhbXMueCwgeTogeSArIDYsIHRleHQ6IHBhcmFtcy5jLCB0eXBlOiAnYW5ub3RhdGlvbmZvbnQnLCBrbGFzczogcmVuZGVyZXIuY29udHJvbGxlci5jbGFzc2VzLmdlbmVyYXRlKFwiYW5ub3RhdGlvblwiKSwgYW5jaG9yOiBwYXJhbXMuYW5jaG9yLCBjZW50ZXJWZXJ0aWNhbGx5OiB0cnVlLCBkaW06IHBhcmFtcy5kaW0gfSwgZmFsc2UpO1xuXHRcdFx0YnJlYWs7XG5cdFx0Y2FzZSBcInRleHRcIjpcblx0XHRcdHBhcmFtcy5ncmFwaGVsZW0gPSByZW5kZXJUZXh0KHJlbmRlcmVyLCB7IHg6IHBhcmFtcy54LCB5OiB5LCB0ZXh0OiBwYXJhbXMuYywgdHlwZTogJ2Fubm90YXRpb25mb250Jywga2xhc3M6IHJlbmRlcmVyLmNvbnRyb2xsZXIuY2xhc3Nlcy5nZW5lcmF0ZShcImFubm90YXRpb25cIiksIGFuY2hvcjogXCJzdGFydFwiLCBjZW50ZXJWZXJ0aWNhbGx5OiBwYXJhbXMuY2VudGVyVmVydGljYWxseSwgZGltOiBwYXJhbXMuZGltLCBsYW5lOiBwYXJhbXMuZ2V0TGFuZSgpLCBuYW1lOiBcImFubm90YXRpb25cIiB9LCBmYWxzZSk7XG5cdFx0XHRicmVhaztcblx0XHRjYXNlIFwibXVsdGltZWFzdXJlLXRleHRcIjpcblx0XHRcdHBhcmFtcy5ncmFwaGVsZW0gPSByZW5kZXJUZXh0KHJlbmRlcmVyLCB7IHg6IHBhcmFtcy54ICsgcGFyYW1zLncgLyAyLCB5OiB5LCB0ZXh0OiBwYXJhbXMuYywgdHlwZTogJ3RlbXBvZm9udCcsIGtsYXNzOiByZW5kZXJlci5jb250cm9sbGVyLmNsYXNzZXMuZ2VuZXJhdGUoXCJyZXN0XCIpLCBhbmNob3I6IFwibWlkZGxlXCIsIGNlbnRlclZlcnRpY2FsbHk6IGZhbHNlLCBkaW06IHBhcmFtcy5kaW0gfSwgZmFsc2UpO1xuXHRcdFx0YnJlYWs7XG5cdFx0Y2FzZSBcInBhcnRcIjpcblx0XHRcdHBhcmFtcy5ncmFwaGVsZW0gPSByZW5kZXJUZXh0KHJlbmRlcmVyLCB7IHg6IHBhcmFtcy54LCB5OiB5LCB0ZXh0OiBwYXJhbXMuYywgdHlwZTogJ3BhcnRzZm9udCcsIGtsYXNzOiByZW5kZXJlci5jb250cm9sbGVyLmNsYXNzZXMuZ2VuZXJhdGUoXCJwYXJ0XCIpLCBhbmNob3I6IFwic3RhcnRcIiwgZGltOiBwYXJhbXMuZGltLCBuYW1lOiBwYXJhbXMuYyB9LCB0cnVlKTtcblx0XHRcdGJyZWFrO1xuXHRcdGNhc2UgXCJiYXJcIjpcblx0XHRcdHBhcmFtcy5ncmFwaGVsZW0gPSBwcmludFN0ZW0ocmVuZGVyZXIsIHBhcmFtcy54LCBwYXJhbXMubGluZXdpZHRoICsgcmVuZGVyZXIubGluZVRoaWNrbmVzcywgeSwgKGJhcnRvcCkgPyBiYXJ0b3AgOiByZW5kZXJlci5jYWxjWShwYXJhbXMucGl0Y2gyKSwgbnVsbCwgXCJiYXJcIik7IGJyZWFrOyAvLyBiYXJ0b3AgY2FuJ3QgYmUgMFxuXHRcdGNhc2UgXCJzdGVtXCI6XG5cdFx0XHR2YXIgc3RlbVdpZHRoID0gcGFyYW1zLmxpbmV3aWR0aCA+IDAgPyBwYXJhbXMubGluZXdpZHRoICsgcmVuZGVyZXIubGluZVRoaWNrbmVzcyA6IHBhcmFtcy5saW5ld2lkdGggLSByZW5kZXJlci5saW5lVGhpY2tuZXNzXG5cdFx0XHRwYXJhbXMuZ3JhcGhlbGVtID0gcHJpbnRTdGVtKHJlbmRlcmVyLCBwYXJhbXMueCwgc3RlbVdpZHRoLCB5LCByZW5kZXJlci5jYWxjWShwYXJhbXMucGl0Y2gyKSwgJ2FiY2pzLXN0ZW0nLCAnc3RlbScpOyBicmVhaztcblx0XHRjYXNlIFwibGVkZ2VyXCI6XG5cdFx0XHRwYXJhbXMuZ3JhcGhlbGVtID0gcHJpbnRTdGFmZkxpbmUocmVuZGVyZXIsIHBhcmFtcy54LCBwYXJhbXMueCArIHBhcmFtcy53LCBwYXJhbXMucGl0Y2gsIFwiYWJjanMtbGVkZ2VyXCIsIFwibGVkZ2VyXCIsIDAuMzUgKyByZW5kZXJlci5saW5lVGhpY2tuZXNzKTsgYnJlYWs7XG5cdH1cblx0aWYgKHBhcmFtcy5zY2FsZXggIT09IDEgJiYgcGFyYW1zLmdyYXBoZWxlbSkge1xuXHRcdHNjYWxlRXhpc3RpbmdFbGVtKHJlbmRlcmVyLnBhcGVyLCBwYXJhbXMuZ3JhcGhlbGVtLCBwYXJhbXMuc2NhbGV4LCBwYXJhbXMuc2NhbGV5LCBwYXJhbXMueCwgeSk7XG5cdH1cblx0cmV0dXJuIHBhcmFtcy5ncmFwaGVsZW07XG59XG5cbmZ1bmN0aW9uIHNjYWxlRXhpc3RpbmdFbGVtKHBhcGVyLCBlbGVtLCBzY2FsZVgsIHNjYWxlWSwgeCwgeSkge1xuXHRwYXBlci5zZXRBdHRyaWJ1dGVPbkVsZW1lbnQoZWxlbSwgeyBzdHlsZTogXCJ0cmFuc2Zvcm06c2NhbGUoXCIgKyBzY2FsZVggKyBcIixcIiArIHNjYWxlWSArIFwiKTt0cmFuc2Zvcm0tb3JpZ2luOlwiICsgeCArIFwicHggXCIgKyB5ICsgXCJweDtcIiB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkcmF3UmVsYXRpdmVFbGVtZW50O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/relative.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/round-number.js":
/*!***********************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/round-number.js ***!
  \***********************************************************/
/***/ ((module) => {

eval("function roundNumber(x) {\n\treturn parseFloat(x.toFixed(2));\n}\n\nmodule.exports = roundNumber;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvcm91bmQtbnVtYmVyLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9kcmF3L3JvdW5kLW51bWJlci5qcz9kZTViIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHJvdW5kTnVtYmVyKHgpIHtcblx0cmV0dXJuIHBhcnNlRmxvYXQoeC50b0ZpeGVkKDIpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSByb3VuZE51bWJlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/round-number.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/selectables.js":
/*!**********************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/selectables.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var highlight = __webpack_require__(/*! ../interactive/highlight */ \"(ssr)/./node_modules/abcjs/src/write/interactive/highlight.js\");\nvar unhighlight = __webpack_require__(/*! ../interactive/unhighlight */ \"(ssr)/./node_modules/abcjs/src/write/interactive/unhighlight.js\");\n\nfunction Selectables(paper, selectTypes, tuneNumber) {\n\tthis.elements = [];\n\tthis.paper = paper;\n\tthis.tuneNumber = tuneNumber;\n\tthis.selectTypes = selectTypes;\n}\n\nSelectables.prototype.getElements = function () {\n\treturn this.elements;\n};\n\nSelectables.prototype.add = function (absEl, svgEl, isNoteOrTabNumber, staffPos) {\n\tif (!this.canSelect(absEl))\n\t\treturn;\n\tvar params;\n\tif (this.selectTypes === undefined)\n\t\tparams = { selectable: false, \"data-index\": this.elements.length }; // This is the old behavior.\n\telse\n\t\tparams = { selectable: true, tabindex: 0, \"data-index\": this.elements.length };\n\tthis.paper.setAttributeOnElement(svgEl, params);\n\tvar sel = { absEl: absEl, svgEl: svgEl, isDraggable: isNoteOrTabNumber };\n\tif (staffPos !== undefined)\n\t\tsel.staffPos = staffPos;\n\tthis.elements.push(sel);\n\n};\n\nSelectables.prototype.canSelect = function (absEl) {\n\tif (this.selectTypes === false)\n\t\treturn false;\n\tif (!absEl || !absEl.abcelem)\n\t\treturn false;\n\tif (this.selectTypes === true)\n\t\treturn true;\n\tif (this.selectTypes === undefined) {\n\t\t// by default, only notes and tab numbers can be clicked.\n\t\tif (absEl.abcelem.el_type === 'note' || absEl.abcelem.el_type === 'tabNumber') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\treturn this.selectTypes.indexOf(absEl.abcelem.el_type) >= 0;\n};\n\nSelectables.prototype.wrapSvgEl = function (abcelem, el) {\n\tvar absEl = {\n\t\ttuneNumber: this.tuneNumber,\n\t\tabcelem: abcelem,\n\t\telemset: [el],\n\t\thighlight: highlight,\n\t\tunhighlight: unhighlight\n\t};\n\tthis.add(absEl, el, false);\n};\n\nmodule.exports = Selectables;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvc2VsZWN0YWJsZXMuanMiLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLG1CQUFPLENBQUMsK0ZBQTBCO0FBQ2xELGtCQUFrQixtQkFBTyxDQUFDLG1HQUE0Qjs7QUFFdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx5REFBeUQ7QUFDdEU7QUFDQSxhQUFhO0FBQ2I7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvc2VsZWN0YWJsZXMuanM/Y2I0MiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaGlnaGxpZ2h0ID0gcmVxdWlyZSgnLi4vaW50ZXJhY3RpdmUvaGlnaGxpZ2h0Jyk7XG52YXIgdW5oaWdobGlnaHQgPSByZXF1aXJlKCcuLi9pbnRlcmFjdGl2ZS91bmhpZ2hsaWdodCcpO1xuXG5mdW5jdGlvbiBTZWxlY3RhYmxlcyhwYXBlciwgc2VsZWN0VHlwZXMsIHR1bmVOdW1iZXIpIHtcblx0dGhpcy5lbGVtZW50cyA9IFtdO1xuXHR0aGlzLnBhcGVyID0gcGFwZXI7XG5cdHRoaXMudHVuZU51bWJlciA9IHR1bmVOdW1iZXI7XG5cdHRoaXMuc2VsZWN0VHlwZXMgPSBzZWxlY3RUeXBlcztcbn1cblxuU2VsZWN0YWJsZXMucHJvdG90eXBlLmdldEVsZW1lbnRzID0gZnVuY3Rpb24gKCkge1xuXHRyZXR1cm4gdGhpcy5lbGVtZW50cztcbn07XG5cblNlbGVjdGFibGVzLnByb3RvdHlwZS5hZGQgPSBmdW5jdGlvbiAoYWJzRWwsIHN2Z0VsLCBpc05vdGVPclRhYk51bWJlciwgc3RhZmZQb3MpIHtcblx0aWYgKCF0aGlzLmNhblNlbGVjdChhYnNFbCkpXG5cdFx0cmV0dXJuO1xuXHR2YXIgcGFyYW1zO1xuXHRpZiAodGhpcy5zZWxlY3RUeXBlcyA9PT0gdW5kZWZpbmVkKVxuXHRcdHBhcmFtcyA9IHsgc2VsZWN0YWJsZTogZmFsc2UsIFwiZGF0YS1pbmRleFwiOiB0aGlzLmVsZW1lbnRzLmxlbmd0aCB9OyAvLyBUaGlzIGlzIHRoZSBvbGQgYmVoYXZpb3IuXG5cdGVsc2Vcblx0XHRwYXJhbXMgPSB7IHNlbGVjdGFibGU6IHRydWUsIHRhYmluZGV4OiAwLCBcImRhdGEtaW5kZXhcIjogdGhpcy5lbGVtZW50cy5sZW5ndGggfTtcblx0dGhpcy5wYXBlci5zZXRBdHRyaWJ1dGVPbkVsZW1lbnQoc3ZnRWwsIHBhcmFtcyk7XG5cdHZhciBzZWwgPSB7IGFic0VsOiBhYnNFbCwgc3ZnRWw6IHN2Z0VsLCBpc0RyYWdnYWJsZTogaXNOb3RlT3JUYWJOdW1iZXIgfTtcblx0aWYgKHN0YWZmUG9zICE9PSB1bmRlZmluZWQpXG5cdFx0c2VsLnN0YWZmUG9zID0gc3RhZmZQb3M7XG5cdHRoaXMuZWxlbWVudHMucHVzaChzZWwpO1xuXG59O1xuXG5TZWxlY3RhYmxlcy5wcm90b3R5cGUuY2FuU2VsZWN0ID0gZnVuY3Rpb24gKGFic0VsKSB7XG5cdGlmICh0aGlzLnNlbGVjdFR5cGVzID09PSBmYWxzZSlcblx0XHRyZXR1cm4gZmFsc2U7XG5cdGlmICghYWJzRWwgfHwgIWFic0VsLmFiY2VsZW0pXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHRpZiAodGhpcy5zZWxlY3RUeXBlcyA9PT0gdHJ1ZSlcblx0XHRyZXR1cm4gdHJ1ZTtcblx0aWYgKHRoaXMuc2VsZWN0VHlwZXMgPT09IHVuZGVmaW5lZCkge1xuXHRcdC8vIGJ5IGRlZmF1bHQsIG9ubHkgbm90ZXMgYW5kIHRhYiBudW1iZXJzIGNhbiBiZSBjbGlja2VkLlxuXHRcdGlmIChhYnNFbC5hYmNlbGVtLmVsX3R5cGUgPT09ICdub3RlJyB8fCBhYnNFbC5hYmNlbGVtLmVsX3R5cGUgPT09ICd0YWJOdW1iZXInKSB7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cdHJldHVybiB0aGlzLnNlbGVjdFR5cGVzLmluZGV4T2YoYWJzRWwuYWJjZWxlbS5lbF90eXBlKSA+PSAwO1xufTtcblxuU2VsZWN0YWJsZXMucHJvdG90eXBlLndyYXBTdmdFbCA9IGZ1bmN0aW9uIChhYmNlbGVtLCBlbCkge1xuXHR2YXIgYWJzRWwgPSB7XG5cdFx0dHVuZU51bWJlcjogdGhpcy50dW5lTnVtYmVyLFxuXHRcdGFiY2VsZW06IGFiY2VsZW0sXG5cdFx0ZWxlbXNldDogW2VsXSxcblx0XHRoaWdobGlnaHQ6IGhpZ2hsaWdodCxcblx0XHR1bmhpZ2hsaWdodDogdW5oaWdobGlnaHRcblx0fTtcblx0dGhpcy5hZGQoYWJzRWwsIGVsLCBmYWxzZSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNlbGVjdGFibGVzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/selectables.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/separator.js":
/*!********************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/separator.js ***!
  \********************************************************/
/***/ ((module) => {

eval("function drawSeparator(renderer, width) {\n\tvar fill = \"rgba(0,0,0,255)\";\n\tvar stroke = \"rgba(0,0,0,0)\";\n\tvar y = Math.round(renderer.y);\n\tvar staffWidth = renderer.controller.width;\n\tvar x1 = (staffWidth - width) / 2;\n\tvar x2 = x1 + width;\n\tvar pathString = 'M ' + x1 + ' ' + y +\n\t\t' L ' + x2 + ' ' + y +\n\t\t' L ' + x2 + ' ' + (y + 1) +\n\t\t' L ' + x1 + ' ' + (y + 1) +\n\t\t' L ' + x1 + ' ' + y + ' z';\n\trenderer.paper.pathToBack({ path: pathString, stroke: stroke, fill: fill, 'class': renderer.controller.classes.generate('defined-text') });\n}\n\nmodule.exports = drawSeparator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvc2VwYXJhdG9yLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw2R0FBNkc7QUFDMUk7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvZHJhdy9zZXBhcmF0b3IuanM/NjBhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBkcmF3U2VwYXJhdG9yKHJlbmRlcmVyLCB3aWR0aCkge1xuXHR2YXIgZmlsbCA9IFwicmdiYSgwLDAsMCwyNTUpXCI7XG5cdHZhciBzdHJva2UgPSBcInJnYmEoMCwwLDAsMClcIjtcblx0dmFyIHkgPSBNYXRoLnJvdW5kKHJlbmRlcmVyLnkpO1xuXHR2YXIgc3RhZmZXaWR0aCA9IHJlbmRlcmVyLmNvbnRyb2xsZXIud2lkdGg7XG5cdHZhciB4MSA9IChzdGFmZldpZHRoIC0gd2lkdGgpIC8gMjtcblx0dmFyIHgyID0geDEgKyB3aWR0aDtcblx0dmFyIHBhdGhTdHJpbmcgPSAnTSAnICsgeDEgKyAnICcgKyB5ICtcblx0XHQnIEwgJyArIHgyICsgJyAnICsgeSArXG5cdFx0JyBMICcgKyB4MiArICcgJyArICh5ICsgMSkgK1xuXHRcdCcgTCAnICsgeDEgKyAnICcgKyAoeSArIDEpICtcblx0XHQnIEwgJyArIHgxICsgJyAnICsgeSArICcgeic7XG5cdHJlbmRlcmVyLnBhcGVyLnBhdGhUb0JhY2soeyBwYXRoOiBwYXRoU3RyaW5nLCBzdHJva2U6IHN0cm9rZSwgZmlsbDogZmlsbCwgJ2NsYXNzJzogcmVuZGVyZXIuY29udHJvbGxlci5jbGFzc2VzLmdlbmVyYXRlKCdkZWZpbmVkLXRleHQnKSB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkcmF3U2VwYXJhdG9yO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/separator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/set-paper-size.js":
/*!*************************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/set-paper-size.js ***!
  \*************************************************************/
/***/ ((module) => {

eval("function setPaperSize(renderer, maxwidth, scale, responsive) {\n\tvar w = (maxwidth + renderer.padding.left + renderer.padding.right) * scale;\n\tvar h = (renderer.y + renderer.padding.bottom) * scale;\n\tif (renderer.isPrint)\n\t\th = Math.max(h, 1056); // 11in x 72pt/in x 1.33px/pt\n\t// TODO-PER: We are letting the page get as long as it needs now, but eventually that should go to a second page.\n\n\t// for accessibility\n\tif (renderer.ariaLabel !== '') {\n\t\tvar text = \"Sheet Music\";\n\t\tif (renderer.abctune && renderer.abctune.metaText && renderer.abctune.metaText.title)\n\t\t\ttext += \" for \\\"\" + renderer.abctune.metaText.title + '\"';\n\t\trenderer.paper.setTitle(text);\n\t\tvar label = renderer.ariaLabel ? renderer.ariaLabel : text;\n\t\trenderer.paper.setAttribute(\"aria-label\", label);\n\t}\n\n\t// for dragging - don't select during drag\n\tvar styles = [\n\t\t\"-webkit-touch-callout: none;\",\n\t\t\"-webkit-user-select: none;\",\n\t\t\"-khtml-user-select: none;\",\n\t\t\"-moz-user-select: none;\",\n\t\t\"-ms-user-select: none;\",\n\t\t\"user-select: none;\"\n\t];\n\trenderer.paper.insertStyles(\".abcjs-dragging-in-progress text, .abcjs-dragging-in-progress tspan {\" + styles.join(\" \") + \"}\");\n\n\tvar parentStyles = { overflow: \"hidden\" };\n\tif (responsive === 'resize') {\n\t\trenderer.paper.setResponsiveWidth(w, h);\n\t} else {\n\t\tparentStyles.width = \"\";\n\t\tparentStyles.height = h + \"px\";\n\t\tif (scale < 1) {\n\t\t\tparentStyles.width = w + \"px\";\n\t\t\trenderer.paper.setSize(w / scale, h / scale);\n\t\t} else\n\t\t\trenderer.paper.setSize(w, h);\n\t}\n\trenderer.paper.setScale(scale);\n\trenderer.paper.setParentStyles(parentStyles);\n}\n\nmodule.exports = setPaperSize;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvc2V0LXBhcGVyLXNpemUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0IsNkJBQTZCO0FBQzdCLDRCQUE0QjtBQUM1QiwwQkFBMEI7QUFDMUIseUJBQXlCO0FBQ3pCLHFCQUFxQjtBQUNyQjtBQUNBLG1HQUFtRyx5QkFBeUI7O0FBRTVILHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9kcmF3L3NldC1wYXBlci1zaXplLmpzP2I2Y2IiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gc2V0UGFwZXJTaXplKHJlbmRlcmVyLCBtYXh3aWR0aCwgc2NhbGUsIHJlc3BvbnNpdmUpIHtcblx0dmFyIHcgPSAobWF4d2lkdGggKyByZW5kZXJlci5wYWRkaW5nLmxlZnQgKyByZW5kZXJlci5wYWRkaW5nLnJpZ2h0KSAqIHNjYWxlO1xuXHR2YXIgaCA9IChyZW5kZXJlci55ICsgcmVuZGVyZXIucGFkZGluZy5ib3R0b20pICogc2NhbGU7XG5cdGlmIChyZW5kZXJlci5pc1ByaW50KVxuXHRcdGggPSBNYXRoLm1heChoLCAxMDU2KTsgLy8gMTFpbiB4IDcycHQvaW4geCAxLjMzcHgvcHRcblx0Ly8gVE9ETy1QRVI6IFdlIGFyZSBsZXR0aW5nIHRoZSBwYWdlIGdldCBhcyBsb25nIGFzIGl0IG5lZWRzIG5vdywgYnV0IGV2ZW50dWFsbHkgdGhhdCBzaG91bGQgZ28gdG8gYSBzZWNvbmQgcGFnZS5cblxuXHQvLyBmb3IgYWNjZXNzaWJpbGl0eVxuXHRpZiAocmVuZGVyZXIuYXJpYUxhYmVsICE9PSAnJykge1xuXHRcdHZhciB0ZXh0ID0gXCJTaGVldCBNdXNpY1wiO1xuXHRcdGlmIChyZW5kZXJlci5hYmN0dW5lICYmIHJlbmRlcmVyLmFiY3R1bmUubWV0YVRleHQgJiYgcmVuZGVyZXIuYWJjdHVuZS5tZXRhVGV4dC50aXRsZSlcblx0XHRcdHRleHQgKz0gXCIgZm9yIFxcXCJcIiArIHJlbmRlcmVyLmFiY3R1bmUubWV0YVRleHQudGl0bGUgKyAnXCInO1xuXHRcdHJlbmRlcmVyLnBhcGVyLnNldFRpdGxlKHRleHQpO1xuXHRcdHZhciBsYWJlbCA9IHJlbmRlcmVyLmFyaWFMYWJlbCA/IHJlbmRlcmVyLmFyaWFMYWJlbCA6IHRleHQ7XG5cdFx0cmVuZGVyZXIucGFwZXIuc2V0QXR0cmlidXRlKFwiYXJpYS1sYWJlbFwiLCBsYWJlbCk7XG5cdH1cblxuXHQvLyBmb3IgZHJhZ2dpbmcgLSBkb24ndCBzZWxlY3QgZHVyaW5nIGRyYWdcblx0dmFyIHN0eWxlcyA9IFtcblx0XHRcIi13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTtcIixcblx0XHRcIi13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XCIsXG5cdFx0XCIta2h0bWwtdXNlci1zZWxlY3Q6IG5vbmU7XCIsXG5cdFx0XCItbW96LXVzZXItc2VsZWN0OiBub25lO1wiLFxuXHRcdFwiLW1zLXVzZXItc2VsZWN0OiBub25lO1wiLFxuXHRcdFwidXNlci1zZWxlY3Q6IG5vbmU7XCJcblx0XTtcblx0cmVuZGVyZXIucGFwZXIuaW5zZXJ0U3R5bGVzKFwiLmFiY2pzLWRyYWdnaW5nLWluLXByb2dyZXNzIHRleHQsIC5hYmNqcy1kcmFnZ2luZy1pbi1wcm9ncmVzcyB0c3BhbiB7XCIgKyBzdHlsZXMuam9pbihcIiBcIikgKyBcIn1cIik7XG5cblx0dmFyIHBhcmVudFN0eWxlcyA9IHsgb3ZlcmZsb3c6IFwiaGlkZGVuXCIgfTtcblx0aWYgKHJlc3BvbnNpdmUgPT09ICdyZXNpemUnKSB7XG5cdFx0cmVuZGVyZXIucGFwZXIuc2V0UmVzcG9uc2l2ZVdpZHRoKHcsIGgpO1xuXHR9IGVsc2Uge1xuXHRcdHBhcmVudFN0eWxlcy53aWR0aCA9IFwiXCI7XG5cdFx0cGFyZW50U3R5bGVzLmhlaWdodCA9IGggKyBcInB4XCI7XG5cdFx0aWYgKHNjYWxlIDwgMSkge1xuXHRcdFx0cGFyZW50U3R5bGVzLndpZHRoID0gdyArIFwicHhcIjtcblx0XHRcdHJlbmRlcmVyLnBhcGVyLnNldFNpemUodyAvIHNjYWxlLCBoIC8gc2NhbGUpO1xuXHRcdH0gZWxzZVxuXHRcdFx0cmVuZGVyZXIucGFwZXIuc2V0U2l6ZSh3LCBoKTtcblx0fVxuXHRyZW5kZXJlci5wYXBlci5zZXRTY2FsZShzY2FsZSk7XG5cdHJlbmRlcmVyLnBhcGVyLnNldFBhcmVudFN0eWxlcyhwYXJlbnRTdHlsZXMpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldFBhcGVyU2l6ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/set-paper-size.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/sprintf.js":
/*!******************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/sprintf.js ***!
  \******************************************************/
/***/ ((module) => {

eval("/**\n * sprintf() for JavaScript v.0.4\n *\n Copyright (c) 2007-present, Alexandru Mărășteanu <hello@alexei.ro>\n All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright\n notice, this list of conditions and the following disclaimer in the\n documentation and/or other materials provided with the distribution.\n * Neither the name of this software nor the names of its contributors may be\n used to endorse or promote products derived from this software without\n specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR\n ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n//function str_repeat(i, m) { for (var o = []; m > 0; o[--m] = i); return(o.join('')); }\n\nvar sprintf = function () {\n\tvar i = 0, a, f = arguments[i++], o = [], m, p, c, x;\n\twhile (f) {\n\t\tif (m = /^[^\\x25]+/.exec(f)) o.push(m[0]);\n\t\telse if (m = /^\\x25{2}/.exec(f)) o.push('%');\n\t\telse if (m = /^\\x25(?:(\\d+)\\$)?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(f)) {\n\t\t\tif (((a = arguments[m[1] || i++]) == null) || (a == undefined)) throw (\"Too few arguments.\");\n\t\t\tif (/[^s]/.test(m[7]) && (typeof (a) != 'number'))\n\t\t\t\tthrow (\"Expecting number but found \" + typeof (a));\n\t\t\tswitch (m[7]) {\n\t\t\t\tcase 'b': a = a.toString(2); break;\n\t\t\t\tcase 'c': a = String.fromCharCode(a); break;\n\t\t\t\tcase 'd': a = parseInt(a); break;\n\t\t\t\tcase 'e': a = m[6] ? a.toExponential(m[6]) : a.toExponential(); break;\n\t\t\t\tcase 'f': a = m[6] ? parseFloat(a).toFixed(m[6]) : parseFloat(a); break;\n\t\t\t\tcase 'o': a = a.toString(8); break;\n\t\t\t\tcase 's': a = ((a = String(a)) && m[6] ? a.substring(0, m[6]) : a); break;\n\t\t\t\tcase 'u': a = Math.abs(a); break;\n\t\t\t\tcase 'x': a = a.toString(16); break;\n\t\t\t\tcase 'X': a = a.toString(16).toUpperCase(); break;\n\t\t\t}\n\t\t\ta = (/[def]/.test(m[7]) && m[2] && a > 0 ? '+' + a : a);\n\t\t\tc = m[3] ? m[3] == '0' ? '0' : m[3][1] : ' ';\n\t\t\tx = m[5] - String(a).length;\n\t\t\tp = m[5] ? str_repeat(c, x) : '';\n\t\t\to.push(m[4] ? a + p : p + a);\n\t\t}\n\t\telse throw (\"Huh ?!\");\n\t\tf = f.substring(m[0].length);\n\t}\n\treturn o.join('');\n};\n\nmodule.exports = sprintf;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvc3ByaW50Zi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTs7QUFFQSw4QkFBOEIsaUJBQWlCLE9BQU8sYUFBYTs7QUFFbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsRUFBRTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDLDBDQUEwQztBQUMxQywrQkFBK0I7QUFDL0Isb0VBQW9FO0FBQ3BFLHNFQUFzRTtBQUN0RSxpQ0FBaUM7QUFDakMsd0VBQXdFO0FBQ3hFLCtCQUErQjtBQUMvQixrQ0FBa0M7QUFDbEMsZ0RBQWdEO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9kcmF3L3NwcmludGYuanM/MmQ3YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIHNwcmludGYoKSBmb3IgSmF2YVNjcmlwdCB2LjAuNFxuICpcbiBDb3B5cmlnaHQgKGMpIDIwMDctcHJlc2VudCwgQWxleGFuZHJ1IE3Eg3LEg8iZdGVhbnUgPGhlbGxvQGFsZXhlaS5ybz5cbiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuXG4gUmVkaXN0cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywgd2l0aCBvciB3aXRob3V0XG4gbW9kaWZpY2F0aW9uLCBhcmUgcGVybWl0dGVkIHByb3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIGFyZSBtZXQ6XG4gKiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4gdGhlIGFib3ZlIGNvcHlyaWdodFxuIG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lci5cbiAqIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0XG4gbm90aWNlLCB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyIGluIHRoZVxuIGRvY3VtZW50YXRpb24gYW5kL29yIG90aGVyIG1hdGVyaWFscyBwcm92aWRlZCB3aXRoIHRoZSBkaXN0cmlidXRpb24uXG4gKiBOZWl0aGVyIHRoZSBuYW1lIG9mIHRoaXMgc29mdHdhcmUgbm9yIHRoZSBuYW1lcyBvZiBpdHMgY29udHJpYnV0b3JzIG1heSBiZVxuIHVzZWQgdG8gZW5kb3JzZSBvciBwcm9tb3RlIHByb2R1Y3RzIGRlcml2ZWQgZnJvbSB0aGlzIHNvZnR3YXJlIHdpdGhvdXRcbiBzcGVjaWZpYyBwcmlvciB3cml0dGVuIHBlcm1pc3Npb24uXG5cbiBUSElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIFRIRSBDT1BZUklHSFQgSE9MREVSUyBBTkQgQ09OVFJJQlVUT1JTIFwiQVMgSVNcIiBBTkRcbiBBTlkgRVhQUkVTUyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRFxuIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBUkVcbiBESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SXG4gQU5ZIERJUkVDVCwgSU5ESVJFQ1QsIElOQ0lERU5UQUwsIFNQRUNJQUwsIEVYRU1QTEFSWSwgT1IgQ09OU0VRVUVOVElBTCBEQU1BR0VTXG4gKElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTO1xuIExPU1MgT0YgVVNFLCBEQVRBLCBPUiBQUk9GSVRTOyBPUiBCVVNJTkVTUyBJTlRFUlJVUFRJT04pIEhPV0VWRVIgQ0FVU0VEIEFORFxuIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSIElOIENPTlRSQUNULCBTVFJJQ1QgTElBQklMSVRZLCBPUiBUT1JUXG4gKElOQ0xVRElORyBORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVNcbiBTT0ZUV0FSRSwgRVZFTiBJRiBBRFZJU0VEIE9GIFRIRSBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRS5cbiAqL1xuXG4vL2Z1bmN0aW9uIHN0cl9yZXBlYXQoaSwgbSkgeyBmb3IgKHZhciBvID0gW107IG0gPiAwOyBvWy0tbV0gPSBpKTsgcmV0dXJuKG8uam9pbignJykpOyB9XG5cbnZhciBzcHJpbnRmID0gZnVuY3Rpb24gKCkge1xuXHR2YXIgaSA9IDAsIGEsIGYgPSBhcmd1bWVudHNbaSsrXSwgbyA9IFtdLCBtLCBwLCBjLCB4O1xuXHR3aGlsZSAoZikge1xuXHRcdGlmIChtID0gL15bXlxceDI1XSsvLmV4ZWMoZikpIG8ucHVzaChtWzBdKTtcblx0XHRlbHNlIGlmIChtID0gL15cXHgyNXsyfS8uZXhlYyhmKSkgby5wdXNoKCclJyk7XG5cdFx0ZWxzZSBpZiAobSA9IC9eXFx4MjUoPzooXFxkKylcXCQpPyhcXCspPygwfCdbXiRdKT8oLSk/KFxcZCspPyg/OlxcLihcXGQrKSk/KFtiLWZvc3V4WF0pLy5leGVjKGYpKSB7XG5cdFx0XHRpZiAoKChhID0gYXJndW1lbnRzW21bMV0gfHwgaSsrXSkgPT0gbnVsbCkgfHwgKGEgPT0gdW5kZWZpbmVkKSkgdGhyb3cgKFwiVG9vIGZldyBhcmd1bWVudHMuXCIpO1xuXHRcdFx0aWYgKC9bXnNdLy50ZXN0KG1bN10pICYmICh0eXBlb2YgKGEpICE9ICdudW1iZXInKSlcblx0XHRcdFx0dGhyb3cgKFwiRXhwZWN0aW5nIG51bWJlciBidXQgZm91bmQgXCIgKyB0eXBlb2YgKGEpKTtcblx0XHRcdHN3aXRjaCAobVs3XSkge1xuXHRcdFx0XHRjYXNlICdiJzogYSA9IGEudG9TdHJpbmcoMik7IGJyZWFrO1xuXHRcdFx0XHRjYXNlICdjJzogYSA9IFN0cmluZy5mcm9tQ2hhckNvZGUoYSk7IGJyZWFrO1xuXHRcdFx0XHRjYXNlICdkJzogYSA9IHBhcnNlSW50KGEpOyBicmVhaztcblx0XHRcdFx0Y2FzZSAnZSc6IGEgPSBtWzZdID8gYS50b0V4cG9uZW50aWFsKG1bNl0pIDogYS50b0V4cG9uZW50aWFsKCk7IGJyZWFrO1xuXHRcdFx0XHRjYXNlICdmJzogYSA9IG1bNl0gPyBwYXJzZUZsb2F0KGEpLnRvRml4ZWQobVs2XSkgOiBwYXJzZUZsb2F0KGEpOyBicmVhaztcblx0XHRcdFx0Y2FzZSAnbyc6IGEgPSBhLnRvU3RyaW5nKDgpOyBicmVhaztcblx0XHRcdFx0Y2FzZSAncyc6IGEgPSAoKGEgPSBTdHJpbmcoYSkpICYmIG1bNl0gPyBhLnN1YnN0cmluZygwLCBtWzZdKSA6IGEpOyBicmVhaztcblx0XHRcdFx0Y2FzZSAndSc6IGEgPSBNYXRoLmFicyhhKTsgYnJlYWs7XG5cdFx0XHRcdGNhc2UgJ3gnOiBhID0gYS50b1N0cmluZygxNik7IGJyZWFrO1xuXHRcdFx0XHRjYXNlICdYJzogYSA9IGEudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCk7IGJyZWFrO1xuXHRcdFx0fVxuXHRcdFx0YSA9ICgvW2RlZl0vLnRlc3QobVs3XSkgJiYgbVsyXSAmJiBhID4gMCA/ICcrJyArIGEgOiBhKTtcblx0XHRcdGMgPSBtWzNdID8gbVszXSA9PSAnMCcgPyAnMCcgOiBtWzNdWzFdIDogJyAnO1xuXHRcdFx0eCA9IG1bNV0gLSBTdHJpbmcoYSkubGVuZ3RoO1xuXHRcdFx0cCA9IG1bNV0gPyBzdHJfcmVwZWF0KGMsIHgpIDogJyc7XG5cdFx0XHRvLnB1c2gobVs0XSA/IGEgKyBwIDogcCArIGEpO1xuXHRcdH1cblx0XHRlbHNlIHRocm93IChcIkh1aCA/IVwiKTtcblx0XHRmID0gZi5zdWJzdHJpbmcobVswXS5sZW5ndGgpO1xuXHR9XG5cdHJldHVybiBvLmpvaW4oJycpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBzcHJpbnRmO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/sprintf.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/staff-group.js":
/*!**********************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/staff-group.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var spacing = __webpack_require__(/*! ../helpers/spacing */ \"(ssr)/./node_modules/abcjs/src/write/helpers/spacing.js\");\nvar drawBrace = __webpack_require__(/*! ./brace */ \"(ssr)/./node_modules/abcjs/src/write/draw/brace.js\");\nvar drawVoice = __webpack_require__(/*! ./voice */ \"(ssr)/./node_modules/abcjs/src/write/draw/voice.js\");\nvar printStaff = __webpack_require__(/*! ./staff */ \"(ssr)/./node_modules/abcjs/src/write/draw/staff.js\");\nvar printDebugBox = __webpack_require__(/*! ./debug-box */ \"(ssr)/./node_modules/abcjs/src/write/draw/debug-box.js\");\nvar printStem = __webpack_require__(/*! ./print-stem */ \"(ssr)/./node_modules/abcjs/src/write/draw/print-stem.js\");\nvar nonMusic = __webpack_require__(/*! ./non-music */ \"(ssr)/./node_modules/abcjs/src/write/draw/non-music.js\");\n\nfunction drawStaffGroup(renderer, params, selectables, lineNumber) {\n\t// We enter this method with renderer.y pointing to the topmost coordinate that we're allowed to draw.\n\t// All of the children that will be drawn have a relative \"pitch\" set, where zero is the first ledger line below the staff.\n\t// renderer.y will be offset at the beginning of each staff by the amount required to make the relative pitch work.\n\t// If there are multiple staves, then renderer.y will be incremented for each new staff.\n\n\tvar colorIndex;\n\n\t// An invisible marker is useful to be able to find where each system starts.\n\t//addInvisibleMarker(renderer, \"abcjs-top-of-system\");\n\n\tvar startY = renderer.y; // So that it can be restored after we're done.\n\t// Set the absolute Y position for each staff here, so the voice drawing below can just use if.\n\tfor (var j = 0; j < params.staffs.length; j++) {\n\t\tvar staff1 = params.staffs[j];\n\t\t//renderer.printHorizontalLine(50, renderer.y, \"start\");\n\t\trenderer.moveY(spacing.STEP, staff1.top);\n\t\tstaff1.absoluteY = renderer.y;\n\t\tif (renderer.showDebug) {\n\t\t\tif (renderer.showDebug.indexOf(\"box\") >= 0 && staff1.voices) {\n\t\t\t\tboxAllElements(renderer, params.voices, staff1.voices);\n\t\t\t}\n\t\t\tif (renderer.showDebug.indexOf(\"grid\") >= 0) {\n\t\t\t\trenderer.paper.dottedLine({ x1: renderer.padding.left, x2: renderer.padding.left + renderer.controller.width, y1: startY, y2: startY, stroke: \"#0000ff\" });\n\t\t\t\tprintDebugBox(renderer,\n\t\t\t\t\t{\n\t\t\t\t\t\tx: renderer.padding.left,\n\t\t\t\t\t\ty: renderer.calcY(staff1.originalTop),\n\t\t\t\t\t\twidth: renderer.controller.width,\n\t\t\t\t\t\theight: renderer.calcY(staff1.originalBottom) - renderer.calcY(staff1.originalTop),\n\t\t\t\t\t\tfill: renderer.foregroundColor,\n\t\t\t\t\t\tstroke: renderer.foregroundColor,\n\t\t\t\t\t\t\"fill-opacity\": 0.1,\n\t\t\t\t\t\t\"stroke-opacity\": 0.1\n\t\t\t\t\t});\n\t\t\t\tcolorIndex = 0;\n\t\t\t\tdebugPrintGridItem(staff1, 'chordHeightAbove');\n\t\t\t\tdebugPrintGridItem(staff1, 'chordHeightBelow');\n\t\t\t\tdebugPrintGridItem(staff1, 'dynamicHeightAbove');\n\t\t\t\tdebugPrintGridItem(staff1, 'dynamicHeightBelow');\n\t\t\t\tdebugPrintGridItem(staff1, 'endingHeightAbove');\n\t\t\t\tdebugPrintGridItem(staff1, 'lyricHeightAbove');\n\t\t\t\tdebugPrintGridItem(staff1, 'lyricHeightBelow');\n\t\t\t\tdebugPrintGridItem(staff1, 'partHeightAbove');\n\t\t\t\tdebugPrintGridItem(staff1, 'tempoHeightAbove');\n\t\t\t\tdebugPrintGridItem(staff1, 'volumeHeightAbove');\n\t\t\t\tdebugPrintGridItem(staff1, 'volumeHeightBelow');\n\t\t\t}\n\t\t}\n\t\trenderer.moveY(spacing.STEP, -staff1.bottom);\n\t\tif (renderer.showDebug) {\n\t\t\tif (renderer.showDebug.indexOf(\"grid\") >= 0) {\n\t\t\t\trenderer.paper.dottedLine({\n\t\t\t\t\tx1: renderer.padding.left,\n\t\t\t\t\tx2: renderer.padding.left + renderer.controller.width,\n\t\t\t\t\ty1: renderer.y,\n\t\t\t\t\ty2: renderer.y,\n\t\t\t\t\tstroke: \"#0000aa\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\tvar topLine; // these are to connect multiple staves. We need to remember where they are.\n\tvar bottomLine;\n\n\tvar linePitch = 2;\n\tvar bartop = 0;\n\tfor (var i = 0; i < params.voices.length; i++) {\n\t\tvar staff = params.voices[i].staff;\n\t\tvar tabName = params.voices[i].tabNameInfos;\n\t\trenderer.y = staff.absoluteY;\n\t\trenderer.controller.classes.incrVoice();\n\t\t//renderer.y = staff.y;\n\t\t// offset for starting the counting at middle C\n\t\tif (!params.voices[i].duplicate) {\n\t\t\t//\t\t\trenderer.moveY(spacing.STEP, staff.top);\n\t\t\tif (!topLine) topLine = renderer.calcY(10);\n\t\t\tbottomLine = renderer.calcY(linePitch);\n\t\t\tif (staff.lines !== 0) {\n\t\t\t\tif (staff.linePitch) {\n\t\t\t\t\tlinePitch = staff.linePitch;\n\t\t\t\t}\n\t\t\t\trenderer.controller.classes.newMeasure();\n\t\t\t\tvar lines = printStaff(renderer, params.startx, params.w, staff.lines, staff.linePitch, 0.35);\n\t\t\t\tbottomLine = lines[1];\n\t\t\t\tstaff.bottomLine = bottomLine;\n\t\t\t\tstaff.topLine = lines[0];\n\t\t\t\t// rework bartop when tabs are present with current staff\n\t\t\t\tif (staff.hasTab) {\n\t\t\t\t\t// do not link to staff above  (ugly looking)\n\t\t\t\t\tbartop = staff.topLine;\n\t\t\t\t}\n\t\t\t\tif (staff.hasStaff) {\n\t\t\t\t\t// this is a tab\n\t\t\t\t\tbartop = staff.hasStaff.topLine;\n\t\t\t\t\tparams.voices[i].barto = true;\n\t\t\t\t\tparams.voices[i].topLine = topLine;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tprintBrace(renderer, staff.absoluteY, params.brace, i, selectables);\n\t\t\tprintBrace(renderer, staff.absoluteY, params.bracket, i, selectables);\n\t\t}\n\t\tdrawVoice(renderer, params.voices[i], bartop, selectables, {\n\t\t\ttop: startY,\n\t\t\tzero: renderer.y,\n\t\t\theight: params.height * spacing.STEP\n\t\t});\n\t\tvar tabNameHeight = 0;\n\t\tif (tabName) {\n\t\t\t// print tab infos on staffBottom\n\t\t\tvar r = { rows: [] };\n\t\t\tr.rows.push({ absmove: bottomLine + 2 });\n\t\t\tvar leftMargin = 8;\n\t\t\tr.rows.push({ left: params.startx + leftMargin, text: tabName.name, font: 'tablabelfont', klass: 'text instrument-name', anchor: 'start' });\n\t\t\tr.rows.push({ move: tabName.textSize.height });\n\t\t\tnonMusic(renderer, r);\n\t\t\ttabNameHeight = tabName.textSize.height;\n\t\t}\n\n\t\trenderer.controller.classes.newMeasure();\n\t\tif (!params.voices[i].duplicate) {\n\t\t\tbartop = renderer.calcY(2 + tabNameHeight); // This connects the bar lines between two different staves.\n\t\t\t//\t\t\tif (staff.bottom < 0)\n\t\t\t//\t\t\t\trenderer.moveY(spacing.STEP, -staff.bottom);\n\t\t}\n\t}\n\trenderer.controller.classes.newMeasure();\n\n\t// connect all the staves together with a vertical line\n\tvar staffSize = params.staffs.length;\n\tif (staffSize > 1) {\n\t\ttopLine = params.staffs[0].topLine;\n\t\tbottomLine = params.staffs[staffSize - 1].bottomLine;\n\t\tprintStem(renderer, params.startx, 0.6, topLine, bottomLine, null);\n\t}\n\trenderer.y = startY;\n\n\tfunction debugPrintGridItem(staff, key) {\n\t\tvar colors = [\"rgb(207,27,36)\", \"rgb(168,214,80)\", \"rgb(110,161,224)\", \"rgb(191,119,218)\", \"rgb(195,30,151)\",\n\t\t\t\"rgb(31,170,177)\", \"rgb(220,166,142)\"];\n\t\tif (staff.positionY && staff.positionY[key]) {\n\t\t\tvar height = staff.specialY[key] * spacing.STEP;\n\t\t\tif (key === \"chordHeightAbove\" && staff.specialY.chordLines && staff.specialY.chordLines.above)\n\t\t\t\theight *= staff.specialY.chordLines.above;\n\t\t\tif (key === \"chordHeightBelow\" && staff.specialY.chordLines && staff.specialY.chordLines.below)\n\t\t\t\theight *= staff.specialY.chordLines.below;\n\t\t\tprintDebugBox(renderer,\n\t\t\t\t{\n\t\t\t\t\tx: renderer.padding.left,\n\t\t\t\t\ty: renderer.calcY(staff.positionY[key]),\n\t\t\t\t\twidth: renderer.controller.width,\n\t\t\t\t\theight: height,\n\t\t\t\t\tfill: colors[colorIndex],\n\t\t\t\t\tstroke: colors[colorIndex],\n\t\t\t\t\t\"fill-opacity\": 0.4,\n\t\t\t\t\t\"stroke-opacity\": 0.4\n\t\t\t\t},\n\t\t\t\tkey.substr(0, 4));\n\t\t\tcolorIndex += 1; if (colorIndex > 6) colorIndex = 0;\n\t\t}\n\t}\n}\n\nfunction printBrace(renderer, absoluteY, brace, index, selectables) {\n\tif (brace) {\n\t\tfor (var i = 0; i < brace.length; i++) {\n\t\t\tif (brace[i].isStartVoice(index)) {\n\t\t\t\tbrace[i].startY = absoluteY - spacing.STEP * 10;\n\t\t\t\tbrace[i].elemset = drawBrace(renderer, brace[i], selectables);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// function addInvisibleMarker(renderer, className) {\n// \tvar y = Math.round(renderer.y);\n// \trenderer.paper.pathToBack({path:\"M 0 \" + y + \" L 0 0\", stroke:\"none\", fill:\"none\", \"stroke-opacity\": 0, \"fill-opacity\": 0, 'class': renderer.controller.classes.generate(className), 'data-vertical': y });\n// }\n\nfunction boxAllElements(renderer, voices, which) {\n\tfor (var i = 0; i < which.length; i++) {\n\t\tvar children = voices[which[i]].children;\n\t\tfor (var j = 0; j < children.length; j++) {\n\t\t\tvar elem = children[j];\n\t\t\tvar coords = elem.getFixedCoords();\n\t\t\tif (elem.invisible || coords.t === undefined || coords.b === undefined)\n\t\t\t\tcontinue;\n\t\t\tvar height = (coords.t - coords.b) * spacing.STEP;\n\t\t\tprintDebugBox(renderer,\n\t\t\t\t{\n\t\t\t\t\tx: coords.x,\n\t\t\t\t\ty: renderer.calcY(coords.t),\n\t\t\t\t\twidth: coords.w,\n\t\t\t\t\theight: height,\n\t\t\t\t\tfill: \"#88e888\",\n\t\t\t\t\t\"fill-opacity\": 0.4,\n\t\t\t\t\tstroke: \"#4aa93d\",\n\t\t\t\t\t\"stroke-opacity\": 0.8\n\t\t\t\t});\n\n\t\t\tfor (var k = 0; k < elem.children.length; k++) {\n\t\t\t\tvar relElem = elem.children[k];\n\t\t\t\tvar chord = relElem.getChordDim();\n\t\t\t\tif (chord) {\n\t\t\t\t\tvar y = renderer.calcY(relElem.pitch);\n\t\t\t\t\ty += relElem.dim.font.size * relElem.getLane();\n\t\t\t\t\tprintDebugBox(renderer,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tx: chord.left,\n\t\t\t\t\t\t\ty: y,\n\t\t\t\t\t\t\twidth: chord.right - chord.left,\n\t\t\t\t\t\t\theight: relElem.dim.font.size,\n\t\t\t\t\t\t\tfill: \"none\",\n\t\t\t\t\t\t\tstroke: \"#4aa93d\",\n\t\t\t\t\t\t\t\"stroke-opacity\": 0.8\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nmodule.exports = drawStaffGroup;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/staff-group.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/staff-line.js":
/*!*********************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/staff-line.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var printLine = __webpack_require__(/*! ./print-line */ \"(ssr)/./node_modules/abcjs/src/write/draw/print-line.js\");\n\nfunction printStaffLine(renderer, x1, x2, pitch, klass, name, dy) {\n\tvar y = renderer.calcY(pitch);\n\treturn printLine(renderer, x1, x2, y, klass, name, dy);\n}\n\nmodule.exports = printStaffLine;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvc3RhZmYtbGluZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0IsbUJBQU8sQ0FBQyw2RUFBYzs7QUFFdEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvZHJhdy9zdGFmZi1saW5lLmpzPzQwYzAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHByaW50TGluZSA9IHJlcXVpcmUoJy4vcHJpbnQtbGluZScpO1xuXG5mdW5jdGlvbiBwcmludFN0YWZmTGluZShyZW5kZXJlciwgeDEsIHgyLCBwaXRjaCwga2xhc3MsIG5hbWUsIGR5KSB7XG5cdHZhciB5ID0gcmVuZGVyZXIuY2FsY1kocGl0Y2gpO1xuXHRyZXR1cm4gcHJpbnRMaW5lKHJlbmRlcmVyLCB4MSwgeDIsIHksIGtsYXNzLCBuYW1lLCBkeSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcHJpbnRTdGFmZkxpbmU7XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/staff-line.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/staff.js":
/*!****************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/staff.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var printStaffLine = __webpack_require__(/*! ./staff-line */ \"(ssr)/./node_modules/abcjs/src/write/draw/staff-line.js\");\n\nfunction printStaff(renderer, startx, endx, numLines, linePitch, dy) {\n\tvar klass = \"abcjs-top-line\";\n\tvar pitch = 2;\n\tif (linePitch) {\n\t\tpitch = linePitch;\n\t}\n\trenderer.paper.openGroup({ prepend: true, klass: renderer.controller.classes.generate(\"abcjs-staff\") });\n\t// If there is one line, it is the B line. Otherwise, the bottom line is the E line.\n\tvar firstYLine = 0;\n\tvar lastYLine = 0;\n\tif (numLines === 1) {\n\t\tprintStaffLine(renderer, startx, endx, 6, klass, null, dy + renderer.lineThickness);\n\t\tfirstYLine = renderer.calcY(10);\n\t\tlastYLine = renderer.calcY(2);\n\t} else {\n\n\t\tfor (var i = numLines - 1; i >= 0; i--) {\n\t\t\tvar curpitch = (i + 1) * pitch;\n\t\t\tlastYLine = renderer.calcY(curpitch);\n\t\t\tif (firstYLine === 0) {\n\t\t\t\tfirstYLine = lastYLine;\n\t\t\t}\n\t\t\tprintStaffLine(renderer, startx, endx, curpitch, klass, null, dy + renderer.lineThickness);\n\t\t\tklass = undefined;\n\t\t}\n\t}\n\trenderer.paper.closeGroup();\n\treturn [firstYLine, lastYLine];\n}\n\nmodule.exports = printStaff;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvc3RhZmYuanMiLCJtYXBwaW5ncyI6IkFBQUEscUJBQXFCLG1CQUFPLENBQUMsNkVBQWM7O0FBRTNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiwyRUFBMkU7QUFDdkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVILDZCQUE2QixRQUFRO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9kcmF3L3N0YWZmLmpzPzUzYjEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHByaW50U3RhZmZMaW5lID0gcmVxdWlyZSgnLi9zdGFmZi1saW5lJyk7XG5cbmZ1bmN0aW9uIHByaW50U3RhZmYocmVuZGVyZXIsIHN0YXJ0eCwgZW5keCwgbnVtTGluZXMsIGxpbmVQaXRjaCwgZHkpIHtcblx0dmFyIGtsYXNzID0gXCJhYmNqcy10b3AtbGluZVwiO1xuXHR2YXIgcGl0Y2ggPSAyO1xuXHRpZiAobGluZVBpdGNoKSB7XG5cdFx0cGl0Y2ggPSBsaW5lUGl0Y2g7XG5cdH1cblx0cmVuZGVyZXIucGFwZXIub3Blbkdyb3VwKHsgcHJlcGVuZDogdHJ1ZSwga2xhc3M6IHJlbmRlcmVyLmNvbnRyb2xsZXIuY2xhc3Nlcy5nZW5lcmF0ZShcImFiY2pzLXN0YWZmXCIpIH0pO1xuXHQvLyBJZiB0aGVyZSBpcyBvbmUgbGluZSwgaXQgaXMgdGhlIEIgbGluZS4gT3RoZXJ3aXNlLCB0aGUgYm90dG9tIGxpbmUgaXMgdGhlIEUgbGluZS5cblx0dmFyIGZpcnN0WUxpbmUgPSAwO1xuXHR2YXIgbGFzdFlMaW5lID0gMDtcblx0aWYgKG51bUxpbmVzID09PSAxKSB7XG5cdFx0cHJpbnRTdGFmZkxpbmUocmVuZGVyZXIsIHN0YXJ0eCwgZW5keCwgNiwga2xhc3MsIG51bGwsIGR5ICsgcmVuZGVyZXIubGluZVRoaWNrbmVzcyk7XG5cdFx0Zmlyc3RZTGluZSA9IHJlbmRlcmVyLmNhbGNZKDEwKTtcblx0XHRsYXN0WUxpbmUgPSByZW5kZXJlci5jYWxjWSgyKTtcblx0fSBlbHNlIHtcblxuXHRcdGZvciAodmFyIGkgPSBudW1MaW5lcyAtIDE7IGkgPj0gMDsgaS0tKSB7XG5cdFx0XHR2YXIgY3VycGl0Y2ggPSAoaSArIDEpICogcGl0Y2g7XG5cdFx0XHRsYXN0WUxpbmUgPSByZW5kZXJlci5jYWxjWShjdXJwaXRjaCk7XG5cdFx0XHRpZiAoZmlyc3RZTGluZSA9PT0gMCkge1xuXHRcdFx0XHRmaXJzdFlMaW5lID0gbGFzdFlMaW5lO1xuXHRcdFx0fVxuXHRcdFx0cHJpbnRTdGFmZkxpbmUocmVuZGVyZXIsIHN0YXJ0eCwgZW5keCwgY3VycGl0Y2gsIGtsYXNzLCBudWxsLCBkeSArIHJlbmRlcmVyLmxpbmVUaGlja25lc3MpO1xuXHRcdFx0a2xhc3MgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHR9XG5cdHJlbmRlcmVyLnBhcGVyLmNsb3NlR3JvdXAoKTtcblx0cmV0dXJuIFtmaXJzdFlMaW5lLCBsYXN0WUxpbmVdO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHByaW50U3RhZmY7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/staff.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/tempo.js":
/*!****************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/tempo.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var drawRelativeElement = __webpack_require__(/*! ./relative */ \"(ssr)/./node_modules/abcjs/src/write/draw/relative.js\");\nvar renderText = __webpack_require__(/*! ./text */ \"(ssr)/./node_modules/abcjs/src/write/draw/text.js\");\n\nfunction drawTempo(renderer, params) {\n\tvar x = params.x;\n\tif (params.pitch === undefined)\n\t\twindow.console.error(\"Tempo Element y-coordinate not set.\");\n\n\t//var tempoGroup;\n\tparams.tempo.el_type = \"tempo\";\n\t//\trenderer.wrapInAbsElem(params.tempo, \"abcjs-tempo\", function () {\n\t//renderer.paper.openGroup({klass: renderer.controller.classes.generate(\"tempo wha\")});\n\t// The text is aligned with extra room for descenders but numbers look like they are a little too high, so bump it a little.\n\tvar descenderHeight = 2;\n\tvar y = renderer.calcY(params.pitch) + 2;\n\tvar text;\n\tvar size;\n\tif (params.tempo.preString) {\n\t\ttext = renderText(renderer, { x: x, y: y, text: params.tempo.preString, type: 'tempofont', klass: 'abcjs-tempo', anchor: \"start\", noClass: true, name: \"pre\" }, true);\n\t\tsize = renderer.controller.getTextSize.calc(params.tempo.preString, 'tempofont', 'tempo', text);\n\t\tvar preWidth = size.width;\n\t\tvar charWidth = preWidth / params.tempo.preString.length; // Just get some average number to increase the spacing.\n\t\tx += preWidth + charWidth;\n\t}\n\tif (params.note) {\n\t\tparams.note.setX(x);\n\t\tfor (var i = 0; i < params.note.children.length; i++)\n\t\t\tdrawRelativeElement(renderer, params.note.children[i], x);\n\t\tx += (params.note.w + 5);\n\t\tvar str = \"= \" + params.tempo.bpm;\n\t\ttext = renderText(renderer, { x: x, y: y, text: str, type: 'tempofont', klass: 'abcjs-tempo', anchor: \"start\", noClass: true, name: \"beats\" });\n\t\tsize = renderer.controller.getTextSize.calc(str, 'tempofont', 'tempo', text);\n\t\tvar postWidth = size.width;\n\t\tvar charWidth2 = postWidth / str.length; // Just get some average number to increase the spacing.\n\t\tx += postWidth + charWidth2;\n\t}\n\tif (params.tempo.postString) {\n\t\trenderText(renderer, { x: x, y: y, text: params.tempo.postString, type: 'tempofont', klass: 'abcjs-tempo', anchor: \"start\", noClass: true, name: \"post\" }, true);\n\t}\n\t//tempoGroup = renderer.paper.closeGroup();\n\t//\t});\n\t//return [tempoGroup];\n}\n\nmodule.exports = drawTempo;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvdGVtcG8uanMiLCJtYXBwaW5ncyI6IkFBQUEsMEJBQTBCLG1CQUFPLENBQUMseUVBQVk7QUFDOUMsaUJBQWlCLG1CQUFPLENBQUMsaUVBQVE7O0FBRWpDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qix5REFBeUQ7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLGdJQUFnSTtBQUNoSztBQUNBO0FBQ0EsNERBQTREO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGlDQUFpQztBQUNuRDtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsK0dBQStHO0FBQy9JO0FBQ0E7QUFDQSwyQ0FBMkM7QUFDM0M7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGtJQUFrSTtBQUMzSjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvZHJhdy90ZW1wby5qcz9lMzhmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBkcmF3UmVsYXRpdmVFbGVtZW50ID0gcmVxdWlyZSgnLi9yZWxhdGl2ZScpO1xudmFyIHJlbmRlclRleHQgPSByZXF1aXJlKCcuL3RleHQnKTtcblxuZnVuY3Rpb24gZHJhd1RlbXBvKHJlbmRlcmVyLCBwYXJhbXMpIHtcblx0dmFyIHggPSBwYXJhbXMueDtcblx0aWYgKHBhcmFtcy5waXRjaCA9PT0gdW5kZWZpbmVkKVxuXHRcdHdpbmRvdy5jb25zb2xlLmVycm9yKFwiVGVtcG8gRWxlbWVudCB5LWNvb3JkaW5hdGUgbm90IHNldC5cIik7XG5cblx0Ly92YXIgdGVtcG9Hcm91cDtcblx0cGFyYW1zLnRlbXBvLmVsX3R5cGUgPSBcInRlbXBvXCI7XG5cdC8vXHRyZW5kZXJlci53cmFwSW5BYnNFbGVtKHBhcmFtcy50ZW1wbywgXCJhYmNqcy10ZW1wb1wiLCBmdW5jdGlvbiAoKSB7XG5cdC8vcmVuZGVyZXIucGFwZXIub3Blbkdyb3VwKHtrbGFzczogcmVuZGVyZXIuY29udHJvbGxlci5jbGFzc2VzLmdlbmVyYXRlKFwidGVtcG8gd2hhXCIpfSk7XG5cdC8vIFRoZSB0ZXh0IGlzIGFsaWduZWQgd2l0aCBleHRyYSByb29tIGZvciBkZXNjZW5kZXJzIGJ1dCBudW1iZXJzIGxvb2sgbGlrZSB0aGV5IGFyZSBhIGxpdHRsZSB0b28gaGlnaCwgc28gYnVtcCBpdCBhIGxpdHRsZS5cblx0dmFyIGRlc2NlbmRlckhlaWdodCA9IDI7XG5cdHZhciB5ID0gcmVuZGVyZXIuY2FsY1kocGFyYW1zLnBpdGNoKSArIDI7XG5cdHZhciB0ZXh0O1xuXHR2YXIgc2l6ZTtcblx0aWYgKHBhcmFtcy50ZW1wby5wcmVTdHJpbmcpIHtcblx0XHR0ZXh0ID0gcmVuZGVyVGV4dChyZW5kZXJlciwgeyB4OiB4LCB5OiB5LCB0ZXh0OiBwYXJhbXMudGVtcG8ucHJlU3RyaW5nLCB0eXBlOiAndGVtcG9mb250Jywga2xhc3M6ICdhYmNqcy10ZW1wbycsIGFuY2hvcjogXCJzdGFydFwiLCBub0NsYXNzOiB0cnVlLCBuYW1lOiBcInByZVwiIH0sIHRydWUpO1xuXHRcdHNpemUgPSByZW5kZXJlci5jb250cm9sbGVyLmdldFRleHRTaXplLmNhbGMocGFyYW1zLnRlbXBvLnByZVN0cmluZywgJ3RlbXBvZm9udCcsICd0ZW1wbycsIHRleHQpO1xuXHRcdHZhciBwcmVXaWR0aCA9IHNpemUud2lkdGg7XG5cdFx0dmFyIGNoYXJXaWR0aCA9IHByZVdpZHRoIC8gcGFyYW1zLnRlbXBvLnByZVN0cmluZy5sZW5ndGg7IC8vIEp1c3QgZ2V0IHNvbWUgYXZlcmFnZSBudW1iZXIgdG8gaW5jcmVhc2UgdGhlIHNwYWNpbmcuXG5cdFx0eCArPSBwcmVXaWR0aCArIGNoYXJXaWR0aDtcblx0fVxuXHRpZiAocGFyYW1zLm5vdGUpIHtcblx0XHRwYXJhbXMubm90ZS5zZXRYKHgpO1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgcGFyYW1zLm5vdGUuY2hpbGRyZW4ubGVuZ3RoOyBpKyspXG5cdFx0XHRkcmF3UmVsYXRpdmVFbGVtZW50KHJlbmRlcmVyLCBwYXJhbXMubm90ZS5jaGlsZHJlbltpXSwgeCk7XG5cdFx0eCArPSAocGFyYW1zLm5vdGUudyArIDUpO1xuXHRcdHZhciBzdHIgPSBcIj0gXCIgKyBwYXJhbXMudGVtcG8uYnBtO1xuXHRcdHRleHQgPSByZW5kZXJUZXh0KHJlbmRlcmVyLCB7IHg6IHgsIHk6IHksIHRleHQ6IHN0ciwgdHlwZTogJ3RlbXBvZm9udCcsIGtsYXNzOiAnYWJjanMtdGVtcG8nLCBhbmNob3I6IFwic3RhcnRcIiwgbm9DbGFzczogdHJ1ZSwgbmFtZTogXCJiZWF0c1wiIH0pO1xuXHRcdHNpemUgPSByZW5kZXJlci5jb250cm9sbGVyLmdldFRleHRTaXplLmNhbGMoc3RyLCAndGVtcG9mb250JywgJ3RlbXBvJywgdGV4dCk7XG5cdFx0dmFyIHBvc3RXaWR0aCA9IHNpemUud2lkdGg7XG5cdFx0dmFyIGNoYXJXaWR0aDIgPSBwb3N0V2lkdGggLyBzdHIubGVuZ3RoOyAvLyBKdXN0IGdldCBzb21lIGF2ZXJhZ2UgbnVtYmVyIHRvIGluY3JlYXNlIHRoZSBzcGFjaW5nLlxuXHRcdHggKz0gcG9zdFdpZHRoICsgY2hhcldpZHRoMjtcblx0fVxuXHRpZiAocGFyYW1zLnRlbXBvLnBvc3RTdHJpbmcpIHtcblx0XHRyZW5kZXJUZXh0KHJlbmRlcmVyLCB7IHg6IHgsIHk6IHksIHRleHQ6IHBhcmFtcy50ZW1wby5wb3N0U3RyaW5nLCB0eXBlOiAndGVtcG9mb250Jywga2xhc3M6ICdhYmNqcy10ZW1wbycsIGFuY2hvcjogXCJzdGFydFwiLCBub0NsYXNzOiB0cnVlLCBuYW1lOiBcInBvc3RcIiB9LCB0cnVlKTtcblx0fVxuXHQvL3RlbXBvR3JvdXAgPSByZW5kZXJlci5wYXBlci5jbG9zZUdyb3VwKCk7XG5cdC8vXHR9KTtcblx0Ly9yZXR1cm4gW3RlbXBvR3JvdXBdO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRyYXdUZW1wbztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/tempo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/text.js":
/*!***************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/text.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var roundNumber = __webpack_require__(/*! ./round-number */ \"(ssr)/./node_modules/abcjs/src/write/draw/round-number.js\");\n\nfunction renderText(renderer, params, alreadyInGroup) {\n\tvar y = params.y;\n\n\t// TODO-PER: Probably need to merge the regular text and rich text better. At the least, rich text loses the font box.\n\tif (params.phrases) {\n\t\t//richTextLine = function (phrases, x, y, klass, anchor, target)\n\t\tvar elem = renderer.paper.richTextLine(params.phrases, params.x, params.y, params.klass, params.anchor);\n\t\treturn elem;\n\t}\n\n\tif (params.lane) {\n\t\tvar laneMargin = params.dim.font.size * 0.25;\n\t\ty += (params.dim.font.size + laneMargin) * params.lane;\n\t}\n\n\tvar hash;\n\tif (params.dim) {\n\t\thash = params.dim;\n\t\thash.attr.class = params.klass;\n\t} else\n\t\thash = renderer.controller.getFontAndAttr.calc(params.type, params.klass);\n\tif (params.anchor)\n\t\thash.attr[\"text-anchor\"] = params.anchor;\n\tif (params['dominant-baseline'])\n\t\thash.attr[\"dominant-baseline\"] = params['dominant-baseline'];\n\thash.attr.x = params.x;\n\thash.attr.y = y;\n\tif (!params.centerVertically)\n\t\thash.attr.y += hash.font.size;\n\tif (params.type === 'debugfont') {\n\t\tconsole.log(\"Debug msg: \" + params.text);\n\t\thash.attr.stroke = \"#ff0000\";\n\t}\n\tif (params.cursor) {\n\t\thash.attr.cursor = params.cursor;\n\t}\n\n\t// MAE 9 May 2025 for free text blocks\n\tvar text;\n\tif (params.name == \"free-text\"){\n\t\ttext = params.text.replace(/^[ \\t]*\\n/gm, ' \\n');\n\t}\n\telse{\n\t\ttext = params.text.replace(/\\n\\n/g, \"\\n \\n\");\n\t}\n\ttext = text.replace(/^\\n/, \"\\xA0\\n\");\n\n\tif (hash.font.box) {\n\t\tif (!alreadyInGroup)\n\t\t\trenderer.paper.openGroup({ klass: hash.attr['class'], fill: renderer.foregroundColor, \"data-name\": params.name });\n\t\tif (hash.attr[\"text-anchor\"] === \"end\") {\n\t\t\thash.attr.x -= hash.font.padding;\n\t\t} else if (hash.attr[\"text-anchor\"] === \"start\") {\n\t\t\thash.attr.x += hash.font.padding;\n\t\t}\n\t\thash.attr.y += hash.font.padding;\n\t\tdelete hash.attr['class'];\n\t}\n\tif (params.noClass)\n\t\tdelete hash.attr['class'];\n\thash.attr.x = roundNumber(hash.attr.x);\n\thash.attr.y = roundNumber(hash.attr.y);\n\tif (params.name)\n\t\thash.attr[\"data-name\"] = params.name;\n\tvar elem = renderer.paper.text(text, hash.attr);\n\tif (hash.font.box) {\n\t\tvar size = elem.getBBox();\n\n\t\tvar delta = 0;\n\t\tif (hash.attr[\"text-anchor\"] === \"middle\") {\n\t\t\tdelta = size.width / 2 + hash.font.padding;\n\t\t} else if (hash.attr[\"text-anchor\"] === \"end\") {\n\t\t\tdelta = size.width + hash.font.padding * 2;\n\t\t}\n\t\tvar deltaY = 0;\n\t\tif (params.centerVertically) {\n\t\t\tdeltaY = size.height - hash.font.padding;\n\t\t}\n\t\trenderer.paper.rect({ \"data-name\": \"box\", x: Math.round(params.x - delta), y: Math.round(y - deltaY), width: Math.round(size.width + hash.font.padding * 2), height: Math.round(size.height + hash.font.padding * 2) });\n\t\tif (!alreadyInGroup)\n\t\t\telem = renderer.paper.closeGroup();\n\t}\n\treturn elem;\n}\n\nmodule.exports = renderText;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvdGV4dC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0IsbUJBQU8sQ0FBQyxpRkFBZ0I7O0FBRTFDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsOEJBQThCLHFGQUFxRjtBQUNuSDtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnTUFBZ007QUFDeE47QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9kcmF3L3RleHQuanM/NGIwNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm91bmROdW1iZXIgPSByZXF1aXJlKFwiLi9yb3VuZC1udW1iZXJcIik7XG5cbmZ1bmN0aW9uIHJlbmRlclRleHQocmVuZGVyZXIsIHBhcmFtcywgYWxyZWFkeUluR3JvdXApIHtcblx0dmFyIHkgPSBwYXJhbXMueTtcblxuXHQvLyBUT0RPLVBFUjogUHJvYmFibHkgbmVlZCB0byBtZXJnZSB0aGUgcmVndWxhciB0ZXh0IGFuZCByaWNoIHRleHQgYmV0dGVyLiBBdCB0aGUgbGVhc3QsIHJpY2ggdGV4dCBsb3NlcyB0aGUgZm9udCBib3guXG5cdGlmIChwYXJhbXMucGhyYXNlcykge1xuXHRcdC8vcmljaFRleHRMaW5lID0gZnVuY3Rpb24gKHBocmFzZXMsIHgsIHksIGtsYXNzLCBhbmNob3IsIHRhcmdldClcblx0XHR2YXIgZWxlbSA9IHJlbmRlcmVyLnBhcGVyLnJpY2hUZXh0TGluZShwYXJhbXMucGhyYXNlcywgcGFyYW1zLngsIHBhcmFtcy55LCBwYXJhbXMua2xhc3MsIHBhcmFtcy5hbmNob3IpO1xuXHRcdHJldHVybiBlbGVtO1xuXHR9XG5cblx0aWYgKHBhcmFtcy5sYW5lKSB7XG5cdFx0dmFyIGxhbmVNYXJnaW4gPSBwYXJhbXMuZGltLmZvbnQuc2l6ZSAqIDAuMjU7XG5cdFx0eSArPSAocGFyYW1zLmRpbS5mb250LnNpemUgKyBsYW5lTWFyZ2luKSAqIHBhcmFtcy5sYW5lO1xuXHR9XG5cblx0dmFyIGhhc2g7XG5cdGlmIChwYXJhbXMuZGltKSB7XG5cdFx0aGFzaCA9IHBhcmFtcy5kaW07XG5cdFx0aGFzaC5hdHRyLmNsYXNzID0gcGFyYW1zLmtsYXNzO1xuXHR9IGVsc2Vcblx0XHRoYXNoID0gcmVuZGVyZXIuY29udHJvbGxlci5nZXRGb250QW5kQXR0ci5jYWxjKHBhcmFtcy50eXBlLCBwYXJhbXMua2xhc3MpO1xuXHRpZiAocGFyYW1zLmFuY2hvcilcblx0XHRoYXNoLmF0dHJbXCJ0ZXh0LWFuY2hvclwiXSA9IHBhcmFtcy5hbmNob3I7XG5cdGlmIChwYXJhbXNbJ2RvbWluYW50LWJhc2VsaW5lJ10pXG5cdFx0aGFzaC5hdHRyW1wiZG9taW5hbnQtYmFzZWxpbmVcIl0gPSBwYXJhbXNbJ2RvbWluYW50LWJhc2VsaW5lJ107XG5cdGhhc2guYXR0ci54ID0gcGFyYW1zLng7XG5cdGhhc2guYXR0ci55ID0geTtcblx0aWYgKCFwYXJhbXMuY2VudGVyVmVydGljYWxseSlcblx0XHRoYXNoLmF0dHIueSArPSBoYXNoLmZvbnQuc2l6ZTtcblx0aWYgKHBhcmFtcy50eXBlID09PSAnZGVidWdmb250Jykge1xuXHRcdGNvbnNvbGUubG9nKFwiRGVidWcgbXNnOiBcIiArIHBhcmFtcy50ZXh0KTtcblx0XHRoYXNoLmF0dHIuc3Ryb2tlID0gXCIjZmYwMDAwXCI7XG5cdH1cblx0aWYgKHBhcmFtcy5jdXJzb3IpIHtcblx0XHRoYXNoLmF0dHIuY3Vyc29yID0gcGFyYW1zLmN1cnNvcjtcblx0fVxuXG5cdC8vIE1BRSA5IE1heSAyMDI1IGZvciBmcmVlIHRleHQgYmxvY2tzXG5cdHZhciB0ZXh0O1xuXHRpZiAocGFyYW1zLm5hbWUgPT0gXCJmcmVlLXRleHRcIil7XG5cdFx0dGV4dCA9IHBhcmFtcy50ZXh0LnJlcGxhY2UoL15bIFxcdF0qXFxuL2dtLCAnIFxcbicpO1xuXHR9XG5cdGVsc2V7XG5cdFx0dGV4dCA9IHBhcmFtcy50ZXh0LnJlcGxhY2UoL1xcblxcbi9nLCBcIlxcbiBcXG5cIik7XG5cdH1cblx0dGV4dCA9IHRleHQucmVwbGFjZSgvXlxcbi8sIFwiXFx4QTBcXG5cIik7XG5cblx0aWYgKGhhc2guZm9udC5ib3gpIHtcblx0XHRpZiAoIWFscmVhZHlJbkdyb3VwKVxuXHRcdFx0cmVuZGVyZXIucGFwZXIub3Blbkdyb3VwKHsga2xhc3M6IGhhc2guYXR0clsnY2xhc3MnXSwgZmlsbDogcmVuZGVyZXIuZm9yZWdyb3VuZENvbG9yLCBcImRhdGEtbmFtZVwiOiBwYXJhbXMubmFtZSB9KTtcblx0XHRpZiAoaGFzaC5hdHRyW1widGV4dC1hbmNob3JcIl0gPT09IFwiZW5kXCIpIHtcblx0XHRcdGhhc2guYXR0ci54IC09IGhhc2guZm9udC5wYWRkaW5nO1xuXHRcdH0gZWxzZSBpZiAoaGFzaC5hdHRyW1widGV4dC1hbmNob3JcIl0gPT09IFwic3RhcnRcIikge1xuXHRcdFx0aGFzaC5hdHRyLnggKz0gaGFzaC5mb250LnBhZGRpbmc7XG5cdFx0fVxuXHRcdGhhc2guYXR0ci55ICs9IGhhc2guZm9udC5wYWRkaW5nO1xuXHRcdGRlbGV0ZSBoYXNoLmF0dHJbJ2NsYXNzJ107XG5cdH1cblx0aWYgKHBhcmFtcy5ub0NsYXNzKVxuXHRcdGRlbGV0ZSBoYXNoLmF0dHJbJ2NsYXNzJ107XG5cdGhhc2guYXR0ci54ID0gcm91bmROdW1iZXIoaGFzaC5hdHRyLngpO1xuXHRoYXNoLmF0dHIueSA9IHJvdW5kTnVtYmVyKGhhc2guYXR0ci55KTtcblx0aWYgKHBhcmFtcy5uYW1lKVxuXHRcdGhhc2guYXR0cltcImRhdGEtbmFtZVwiXSA9IHBhcmFtcy5uYW1lO1xuXHR2YXIgZWxlbSA9IHJlbmRlcmVyLnBhcGVyLnRleHQodGV4dCwgaGFzaC5hdHRyKTtcblx0aWYgKGhhc2guZm9udC5ib3gpIHtcblx0XHR2YXIgc2l6ZSA9IGVsZW0uZ2V0QkJveCgpO1xuXG5cdFx0dmFyIGRlbHRhID0gMDtcblx0XHRpZiAoaGFzaC5hdHRyW1widGV4dC1hbmNob3JcIl0gPT09IFwibWlkZGxlXCIpIHtcblx0XHRcdGRlbHRhID0gc2l6ZS53aWR0aCAvIDIgKyBoYXNoLmZvbnQucGFkZGluZztcblx0XHR9IGVsc2UgaWYgKGhhc2guYXR0cltcInRleHQtYW5jaG9yXCJdID09PSBcImVuZFwiKSB7XG5cdFx0XHRkZWx0YSA9IHNpemUud2lkdGggKyBoYXNoLmZvbnQucGFkZGluZyAqIDI7XG5cdFx0fVxuXHRcdHZhciBkZWx0YVkgPSAwO1xuXHRcdGlmIChwYXJhbXMuY2VudGVyVmVydGljYWxseSkge1xuXHRcdFx0ZGVsdGFZID0gc2l6ZS5oZWlnaHQgLSBoYXNoLmZvbnQucGFkZGluZztcblx0XHR9XG5cdFx0cmVuZGVyZXIucGFwZXIucmVjdCh7IFwiZGF0YS1uYW1lXCI6IFwiYm94XCIsIHg6IE1hdGgucm91bmQocGFyYW1zLnggLSBkZWx0YSksIHk6IE1hdGgucm91bmQoeSAtIGRlbHRhWSksIHdpZHRoOiBNYXRoLnJvdW5kKHNpemUud2lkdGggKyBoYXNoLmZvbnQucGFkZGluZyAqIDIpLCBoZWlnaHQ6IE1hdGgucm91bmQoc2l6ZS5oZWlnaHQgKyBoYXNoLmZvbnQucGFkZGluZyAqIDIpIH0pO1xuXHRcdGlmICghYWxyZWFkeUluR3JvdXApXG5cdFx0XHRlbGVtID0gcmVuZGVyZXIucGFwZXIuY2xvc2VHcm91cCgpO1xuXHR9XG5cdHJldHVybiBlbGVtO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJlbmRlclRleHQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/text.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/tie.js":
/*!**************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/tie.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var sprintf = __webpack_require__(/*! ./sprintf */ \"(ssr)/./node_modules/abcjs/src/write/draw/sprintf.js\");\nvar roundNumber = __webpack_require__(/*! ./round-number */ \"(ssr)/./node_modules/abcjs/src/write/draw/round-number.js\");\n\nfunction drawTie(renderer, params, linestartx, lineendx, selectables) {\n\tlayout(params, linestartx, lineendx);\n\n\tvar klass = '';\n\tif (params.anchor1) {\n\t\tklass += 'abcjs-start-m' + params.anchor1.parent.counters.measure + '-n' + params.anchor1.parent.counters.note;\n\t} else\n\t\tklass += 'abcjs-start-edge';\n\tif (params.anchor2) {\n\t\tklass += ' abcjs-end-m' + params.anchor2.parent.counters.measure + '-n' + params.anchor2.parent.counters.note;\n\t} else\n\t\tklass += ' abcjs-end-edge';\n\tif (params.hint)\n\t\tklass = \"abcjs-hint\";\n\tvar fudgeY = params.fixedY ? 1.5 : 0; // TODO-PER: This just compensates for drawArc, which contains too much knowledge of ties and slurs.\n\tvar el = drawArc(renderer, params.startX, params.endX, params.startY + fudgeY, params.endY + fudgeY, params.above, klass, params.isTie, params.dotted);\n\tvar startChar = -1\n\t// This gets the start and end points of the contents of the slur. We assume that the parenthesis are just to the outside of that.\n\tif (params.anchor1 && !params.isTie)\n\t\tstartChar = params.anchor1.parent.abcelem.startChar - 1\n\tvar endChar = -1\n\tif (params.anchor2 && !params.isTie)\n\t\tendChar = params.anchor2.parent.abcelem.endChar + 1\n\n\tselectables.wrapSvgEl({ el_type: \"slur\", startChar: startChar, endChar: endChar }, el);\n\treturn [el];\n}\n\n// TODO-PER: I think params part should have been done earlier in the layout pass.\nvar layout = function (params, lineStartX, lineEndX) {\n\t// We now have all of the input variables set, so we can figure out the start and ending x,y coordinates, and finalize the direction of the arc.\n\n\t// Ties and slurs are handled a little differently, so do calculations for them separately.\n\tif (!params.anchor1 || !params.anchor2)\n\t\tparams.isTie = true; // if the slur goes off the end of the line, then draw it like a tie\n\telse if (params.anchor1.pitch === params.anchor2.pitch && params.internalNotes.length === 0)\n\t\tparams.isTie = true;\n\telse\n\t\tparams.isTie = false;\n\n\tif (params.isTie) {\n\t\tparams.calcTieDirection();\n\t\tparams.calcX(lineStartX, lineEndX);\n\t\tparams.calcTieY();\n\n\t} else {\n\t\tparams.calcSlurDirection();\n\t\tparams.calcX(lineStartX, lineEndX);\n\t\tparams.calcSlurY();\n\t}\n\tparams.avoidCollisionAbove();\n};\n\nvar drawArc = function (renderer, x1, x2, pitch1, pitch2, above, klass, isTie, dotted) {\n\t// If it is a tie vs. a slur, draw it shallower.\n\tvar spacing = isTie ? 1.2 : 1.5;\n\n\tx1 = roundNumber(x1 + 6);\n\tx2 = roundNumber(x2 + 4);\n\tpitch1 = pitch1 + ((above) ? spacing : -spacing);\n\tpitch2 = pitch2 + ((above) ? spacing : -spacing);\n\tvar y1 = roundNumber(renderer.calcY(pitch1));\n\tvar y2 = roundNumber(renderer.calcY(pitch2));\n\n\t//unit direction vector\n\tvar dx = x2 - x1;\n\tvar dy = y2 - y1;\n\tvar norm = Math.sqrt(dx * dx + dy * dy);\n\tvar ux = dx / norm;\n\tvar uy = dy / norm;\n\n\tvar flatten = norm / 3.5;\n\tvar maxFlatten = isTie ? 10 : 25;  // If it is a tie vs. a slur, draw it shallower.\n\tvar curve = ((above) ? -1 : 1) * Math.min(maxFlatten, Math.max(4, flatten));\n\n\tvar controlx1 = roundNumber(x1 + flatten * ux - curve * uy);\n\tvar controly1 = roundNumber(y1 + flatten * uy + curve * ux);\n\tvar controlx2 = roundNumber(x2 - flatten * ux - curve * uy);\n\tvar controly2 = roundNumber(y2 - flatten * uy + curve * ux);\n\tvar thickness = 2;\n\tif (klass)\n\t\tklass += ' slur';\n\telse\n\t\tklass = 'slur';\n\tklass += isTie ? ' tie' : ' legato';\n\tvar ret;\n\tif (dotted) {\n\t\tklass += ' dotted';\n\t\tvar pathString2 = sprintf(\"M %f %f C %f %f %f %f %f %f\", x1, y1,\n\t\t\tcontrolx1, controly1, controlx2, controly2, x2, y2);\n\t\tret = renderer.paper.path({ path: pathString2, stroke: renderer.foregroundColor, fill: \"none\", 'stroke-dasharray': \"5 5\", 'class': renderer.controller.classes.generate(klass), \"data-name\": isTie ? \"tie\" : \"slur\" });\n\t} else {\n\t\tvar pathString = sprintf(\"M %f %f C %f %f %f %f %f %f C %f %f %f %f %f %f z\", x1, y1,\n\t\t\tcontrolx1, controly1, controlx2, controly2, x2, y2,\n\t\t\troundNumber(controlx2 - thickness * uy), roundNumber(controly2 + thickness * ux), roundNumber(controlx1 - thickness * uy), roundNumber(controly1 + thickness * ux), x1, y1);\n\t\tret = renderer.paper.path({ path: pathString, stroke: \"none\", fill: renderer.foregroundColor, 'class': renderer.controller.classes.generate(klass), \"data-name\": isTie ? \"tie\" : \"slur\" });\n\t}\n\n\treturn ret;\n};\n\nmodule.exports = drawTie;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvdGllLmpzIiwibWFwcGluZ3MiOiJBQUFBLGNBQWMsbUJBQU8sQ0FBQyx1RUFBVztBQUNqQyxrQkFBa0IsbUJBQU8sQ0FBQyxpRkFBZ0I7O0FBRTFDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx5QkFBeUIseURBQXlEO0FBQ2xGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9DQUFvQztBQUNwQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIseUxBQXlMO0FBQ3ZOLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsNkpBQTZKO0FBQzNMOztBQUVBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvZHJhdy90aWUuanM/MTdiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc3ByaW50ZiA9IHJlcXVpcmUoJy4vc3ByaW50ZicpO1xudmFyIHJvdW5kTnVtYmVyID0gcmVxdWlyZShcIi4vcm91bmQtbnVtYmVyXCIpO1xuXG5mdW5jdGlvbiBkcmF3VGllKHJlbmRlcmVyLCBwYXJhbXMsIGxpbmVzdGFydHgsIGxpbmVlbmR4LCBzZWxlY3RhYmxlcykge1xuXHRsYXlvdXQocGFyYW1zLCBsaW5lc3RhcnR4LCBsaW5lZW5keCk7XG5cblx0dmFyIGtsYXNzID0gJyc7XG5cdGlmIChwYXJhbXMuYW5jaG9yMSkge1xuXHRcdGtsYXNzICs9ICdhYmNqcy1zdGFydC1tJyArIHBhcmFtcy5hbmNob3IxLnBhcmVudC5jb3VudGVycy5tZWFzdXJlICsgJy1uJyArIHBhcmFtcy5hbmNob3IxLnBhcmVudC5jb3VudGVycy5ub3RlO1xuXHR9IGVsc2Vcblx0XHRrbGFzcyArPSAnYWJjanMtc3RhcnQtZWRnZSc7XG5cdGlmIChwYXJhbXMuYW5jaG9yMikge1xuXHRcdGtsYXNzICs9ICcgYWJjanMtZW5kLW0nICsgcGFyYW1zLmFuY2hvcjIucGFyZW50LmNvdW50ZXJzLm1lYXN1cmUgKyAnLW4nICsgcGFyYW1zLmFuY2hvcjIucGFyZW50LmNvdW50ZXJzLm5vdGU7XG5cdH0gZWxzZVxuXHRcdGtsYXNzICs9ICcgYWJjanMtZW5kLWVkZ2UnO1xuXHRpZiAocGFyYW1zLmhpbnQpXG5cdFx0a2xhc3MgPSBcImFiY2pzLWhpbnRcIjtcblx0dmFyIGZ1ZGdlWSA9IHBhcmFtcy5maXhlZFkgPyAxLjUgOiAwOyAvLyBUT0RPLVBFUjogVGhpcyBqdXN0IGNvbXBlbnNhdGVzIGZvciBkcmF3QXJjLCB3aGljaCBjb250YWlucyB0b28gbXVjaCBrbm93bGVkZ2Ugb2YgdGllcyBhbmQgc2x1cnMuXG5cdHZhciBlbCA9IGRyYXdBcmMocmVuZGVyZXIsIHBhcmFtcy5zdGFydFgsIHBhcmFtcy5lbmRYLCBwYXJhbXMuc3RhcnRZICsgZnVkZ2VZLCBwYXJhbXMuZW5kWSArIGZ1ZGdlWSwgcGFyYW1zLmFib3ZlLCBrbGFzcywgcGFyYW1zLmlzVGllLCBwYXJhbXMuZG90dGVkKTtcblx0dmFyIHN0YXJ0Q2hhciA9IC0xXG5cdC8vIFRoaXMgZ2V0cyB0aGUgc3RhcnQgYW5kIGVuZCBwb2ludHMgb2YgdGhlIGNvbnRlbnRzIG9mIHRoZSBzbHVyLiBXZSBhc3N1bWUgdGhhdCB0aGUgcGFyZW50aGVzaXMgYXJlIGp1c3QgdG8gdGhlIG91dHNpZGUgb2YgdGhhdC5cblx0aWYgKHBhcmFtcy5hbmNob3IxICYmICFwYXJhbXMuaXNUaWUpXG5cdFx0c3RhcnRDaGFyID0gcGFyYW1zLmFuY2hvcjEucGFyZW50LmFiY2VsZW0uc3RhcnRDaGFyIC0gMVxuXHR2YXIgZW5kQ2hhciA9IC0xXG5cdGlmIChwYXJhbXMuYW5jaG9yMiAmJiAhcGFyYW1zLmlzVGllKVxuXHRcdGVuZENoYXIgPSBwYXJhbXMuYW5jaG9yMi5wYXJlbnQuYWJjZWxlbS5lbmRDaGFyICsgMVxuXG5cdHNlbGVjdGFibGVzLndyYXBTdmdFbCh7IGVsX3R5cGU6IFwic2x1clwiLCBzdGFydENoYXI6IHN0YXJ0Q2hhciwgZW5kQ2hhcjogZW5kQ2hhciB9LCBlbCk7XG5cdHJldHVybiBbZWxdO1xufVxuXG4vLyBUT0RPLVBFUjogSSB0aGluayBwYXJhbXMgcGFydCBzaG91bGQgaGF2ZSBiZWVuIGRvbmUgZWFybGllciBpbiB0aGUgbGF5b3V0IHBhc3MuXG52YXIgbGF5b3V0ID0gZnVuY3Rpb24gKHBhcmFtcywgbGluZVN0YXJ0WCwgbGluZUVuZFgpIHtcblx0Ly8gV2Ugbm93IGhhdmUgYWxsIG9mIHRoZSBpbnB1dCB2YXJpYWJsZXMgc2V0LCBzbyB3ZSBjYW4gZmlndXJlIG91dCB0aGUgc3RhcnQgYW5kIGVuZGluZyB4LHkgY29vcmRpbmF0ZXMsIGFuZCBmaW5hbGl6ZSB0aGUgZGlyZWN0aW9uIG9mIHRoZSBhcmMuXG5cblx0Ly8gVGllcyBhbmQgc2x1cnMgYXJlIGhhbmRsZWQgYSBsaXR0bGUgZGlmZmVyZW50bHksIHNvIGRvIGNhbGN1bGF0aW9ucyBmb3IgdGhlbSBzZXBhcmF0ZWx5LlxuXHRpZiAoIXBhcmFtcy5hbmNob3IxIHx8ICFwYXJhbXMuYW5jaG9yMilcblx0XHRwYXJhbXMuaXNUaWUgPSB0cnVlOyAvLyBpZiB0aGUgc2x1ciBnb2VzIG9mZiB0aGUgZW5kIG9mIHRoZSBsaW5lLCB0aGVuIGRyYXcgaXQgbGlrZSBhIHRpZVxuXHRlbHNlIGlmIChwYXJhbXMuYW5jaG9yMS5waXRjaCA9PT0gcGFyYW1zLmFuY2hvcjIucGl0Y2ggJiYgcGFyYW1zLmludGVybmFsTm90ZXMubGVuZ3RoID09PSAwKVxuXHRcdHBhcmFtcy5pc1RpZSA9IHRydWU7XG5cdGVsc2Vcblx0XHRwYXJhbXMuaXNUaWUgPSBmYWxzZTtcblxuXHRpZiAocGFyYW1zLmlzVGllKSB7XG5cdFx0cGFyYW1zLmNhbGNUaWVEaXJlY3Rpb24oKTtcblx0XHRwYXJhbXMuY2FsY1gobGluZVN0YXJ0WCwgbGluZUVuZFgpO1xuXHRcdHBhcmFtcy5jYWxjVGllWSgpO1xuXG5cdH0gZWxzZSB7XG5cdFx0cGFyYW1zLmNhbGNTbHVyRGlyZWN0aW9uKCk7XG5cdFx0cGFyYW1zLmNhbGNYKGxpbmVTdGFydFgsIGxpbmVFbmRYKTtcblx0XHRwYXJhbXMuY2FsY1NsdXJZKCk7XG5cdH1cblx0cGFyYW1zLmF2b2lkQ29sbGlzaW9uQWJvdmUoKTtcbn07XG5cbnZhciBkcmF3QXJjID0gZnVuY3Rpb24gKHJlbmRlcmVyLCB4MSwgeDIsIHBpdGNoMSwgcGl0Y2gyLCBhYm92ZSwga2xhc3MsIGlzVGllLCBkb3R0ZWQpIHtcblx0Ly8gSWYgaXQgaXMgYSB0aWUgdnMuIGEgc2x1ciwgZHJhdyBpdCBzaGFsbG93ZXIuXG5cdHZhciBzcGFjaW5nID0gaXNUaWUgPyAxLjIgOiAxLjU7XG5cblx0eDEgPSByb3VuZE51bWJlcih4MSArIDYpO1xuXHR4MiA9IHJvdW5kTnVtYmVyKHgyICsgNCk7XG5cdHBpdGNoMSA9IHBpdGNoMSArICgoYWJvdmUpID8gc3BhY2luZyA6IC1zcGFjaW5nKTtcblx0cGl0Y2gyID0gcGl0Y2gyICsgKChhYm92ZSkgPyBzcGFjaW5nIDogLXNwYWNpbmcpO1xuXHR2YXIgeTEgPSByb3VuZE51bWJlcihyZW5kZXJlci5jYWxjWShwaXRjaDEpKTtcblx0dmFyIHkyID0gcm91bmROdW1iZXIocmVuZGVyZXIuY2FsY1kocGl0Y2gyKSk7XG5cblx0Ly91bml0IGRpcmVjdGlvbiB2ZWN0b3Jcblx0dmFyIGR4ID0geDIgLSB4MTtcblx0dmFyIGR5ID0geTIgLSB5MTtcblx0dmFyIG5vcm0gPSBNYXRoLnNxcnQoZHggKiBkeCArIGR5ICogZHkpO1xuXHR2YXIgdXggPSBkeCAvIG5vcm07XG5cdHZhciB1eSA9IGR5IC8gbm9ybTtcblxuXHR2YXIgZmxhdHRlbiA9IG5vcm0gLyAzLjU7XG5cdHZhciBtYXhGbGF0dGVuID0gaXNUaWUgPyAxMCA6IDI1OyAgLy8gSWYgaXQgaXMgYSB0aWUgdnMuIGEgc2x1ciwgZHJhdyBpdCBzaGFsbG93ZXIuXG5cdHZhciBjdXJ2ZSA9ICgoYWJvdmUpID8gLTEgOiAxKSAqIE1hdGgubWluKG1heEZsYXR0ZW4sIE1hdGgubWF4KDQsIGZsYXR0ZW4pKTtcblxuXHR2YXIgY29udHJvbHgxID0gcm91bmROdW1iZXIoeDEgKyBmbGF0dGVuICogdXggLSBjdXJ2ZSAqIHV5KTtcblx0dmFyIGNvbnRyb2x5MSA9IHJvdW5kTnVtYmVyKHkxICsgZmxhdHRlbiAqIHV5ICsgY3VydmUgKiB1eCk7XG5cdHZhciBjb250cm9seDIgPSByb3VuZE51bWJlcih4MiAtIGZsYXR0ZW4gKiB1eCAtIGN1cnZlICogdXkpO1xuXHR2YXIgY29udHJvbHkyID0gcm91bmROdW1iZXIoeTIgLSBmbGF0dGVuICogdXkgKyBjdXJ2ZSAqIHV4KTtcblx0dmFyIHRoaWNrbmVzcyA9IDI7XG5cdGlmIChrbGFzcylcblx0XHRrbGFzcyArPSAnIHNsdXInO1xuXHRlbHNlXG5cdFx0a2xhc3MgPSAnc2x1cic7XG5cdGtsYXNzICs9IGlzVGllID8gJyB0aWUnIDogJyBsZWdhdG8nO1xuXHR2YXIgcmV0O1xuXHRpZiAoZG90dGVkKSB7XG5cdFx0a2xhc3MgKz0gJyBkb3R0ZWQnO1xuXHRcdHZhciBwYXRoU3RyaW5nMiA9IHNwcmludGYoXCJNICVmICVmIEMgJWYgJWYgJWYgJWYgJWYgJWZcIiwgeDEsIHkxLFxuXHRcdFx0Y29udHJvbHgxLCBjb250cm9seTEsIGNvbnRyb2x4MiwgY29udHJvbHkyLCB4MiwgeTIpO1xuXHRcdHJldCA9IHJlbmRlcmVyLnBhcGVyLnBhdGgoeyBwYXRoOiBwYXRoU3RyaW5nMiwgc3Ryb2tlOiByZW5kZXJlci5mb3JlZ3JvdW5kQ29sb3IsIGZpbGw6IFwibm9uZVwiLCAnc3Ryb2tlLWRhc2hhcnJheSc6IFwiNSA1XCIsICdjbGFzcyc6IHJlbmRlcmVyLmNvbnRyb2xsZXIuY2xhc3Nlcy5nZW5lcmF0ZShrbGFzcyksIFwiZGF0YS1uYW1lXCI6IGlzVGllID8gXCJ0aWVcIiA6IFwic2x1clwiIH0pO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBwYXRoU3RyaW5nID0gc3ByaW50ZihcIk0gJWYgJWYgQyAlZiAlZiAlZiAlZiAlZiAlZiBDICVmICVmICVmICVmICVmICVmIHpcIiwgeDEsIHkxLFxuXHRcdFx0Y29udHJvbHgxLCBjb250cm9seTEsIGNvbnRyb2x4MiwgY29udHJvbHkyLCB4MiwgeTIsXG5cdFx0XHRyb3VuZE51bWJlcihjb250cm9seDIgLSB0aGlja25lc3MgKiB1eSksIHJvdW5kTnVtYmVyKGNvbnRyb2x5MiArIHRoaWNrbmVzcyAqIHV4KSwgcm91bmROdW1iZXIoY29udHJvbHgxIC0gdGhpY2tuZXNzICogdXkpLCByb3VuZE51bWJlcihjb250cm9seTEgKyB0aGlja25lc3MgKiB1eCksIHgxLCB5MSk7XG5cdFx0cmV0ID0gcmVuZGVyZXIucGFwZXIucGF0aCh7IHBhdGg6IHBhdGhTdHJpbmcsIHN0cm9rZTogXCJub25lXCIsIGZpbGw6IHJlbmRlcmVyLmZvcmVncm91bmRDb2xvciwgJ2NsYXNzJzogcmVuZGVyZXIuY29udHJvbGxlci5jbGFzc2VzLmdlbmVyYXRlKGtsYXNzKSwgXCJkYXRhLW5hbWVcIjogaXNUaWUgPyBcInRpZVwiIDogXCJzbHVyXCIgfSk7XG5cdH1cblxuXHRyZXR1cm4gcmV0O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBkcmF3VGllO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/tie.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/triplet.js":
/*!******************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/triplet.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var sprintf = __webpack_require__(/*! ./sprintf */ \"(ssr)/./node_modules/abcjs/src/write/draw/sprintf.js\");\nvar renderText = __webpack_require__(/*! ./text */ \"(ssr)/./node_modules/abcjs/src/write/draw/text.js\");\nvar printPath = __webpack_require__(/*! ./print-path */ \"(ssr)/./node_modules/abcjs/src/write/draw/print-path.js\");\nvar roundNumber = __webpack_require__(/*! ./round-number */ \"(ssr)/./node_modules/abcjs/src/write/draw/round-number.js\");\n\nfunction drawTriplet(renderer, params, selectables) {\n\trenderer.paper.openGroup({ klass: renderer.controller.classes.generate('triplet ' + params.durationClass), \"data-name\": \"triplet\" });\n\tif (!params.hasBeam) {\n\t\tdrawBracket(renderer, params.anchor1.x, params.startNote, params.anchor2.x + params.anchor2.w, params.endNote);\n\t}\n\t// HACK: adjust the position of \"3\". It is too high in all cases so we fudge it by subtracting 1 here.\n\trenderText(renderer, { x: params.xTextPos, y: renderer.calcY(params.yTextPos - 1), text: \"\" + params.number, type: 'tripletfont', anchor: \"middle\", centerVertically: true, noClass: true, name: \"\" + params.number }, true);\n\tvar g = renderer.paper.closeGroup();\n\tselectables.wrapSvgEl({ el_type: \"triplet\", startChar: -1, endChar: -1 }, g);\n\treturn g;\n}\n\nfunction drawLine(l, t, r, b) {\n\treturn sprintf(\"M %f %f L %f %f\", roundNumber(l), roundNumber(t), roundNumber(r), roundNumber(b));\n}\n\nfunction drawBracket(renderer, x1, y1, x2, y2) {\n\ty1 = renderer.calcY(y1);\n\ty2 = renderer.calcY(y2);\n\tvar bracketHeight = 5;\n\n\t// Draw vertical lines at the beginning and end\n\tvar pathString = \"\";\n\tpathString += drawLine(x1, y1, x1, y1 + bracketHeight);\n\tpathString += drawLine(x2, y2, x2, y2 + bracketHeight);\n\n\t// figure out midpoints to draw the broken line.\n\tvar midX = x1 + (x2 - x1) / 2;\n\t//var midY = y1 + (y2-y1)/2;\n\tvar gapWidth = 8;\n\tvar slope = (y2 - y1) / (x2 - x1);\n\tvar leftEndX = midX - gapWidth;\n\tvar leftEndY = y1 + (leftEndX - x1) * slope;\n\tpathString += drawLine(x1, y1, leftEndX, leftEndY);\n\tvar rightStartX = midX + gapWidth;\n\tvar rightStartY = y1 + (rightStartX - x1) * slope;\n\tpathString += drawLine(rightStartX, rightStartY, x2, y2);\n\tprintPath(renderer, { path: pathString, stroke: renderer.foregroundColor, \"data-name\": \"triplet-bracket\" });\n}\n\nmodule.exports = drawTriplet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvdHJpcGxldC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxjQUFjLG1CQUFPLENBQUMsdUVBQVc7QUFDakMsaUJBQWlCLG1CQUFPLENBQUMsaUVBQVE7QUFDakMsZ0JBQWdCLG1CQUFPLENBQUMsNkVBQWM7QUFDdEMsa0JBQWtCLG1CQUFPLENBQUMsaUZBQWdCOztBQUUxQztBQUNBLDRCQUE0Qix3R0FBd0c7QUFDcEk7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsOExBQThMO0FBQ3ROO0FBQ0EseUJBQXlCLGdEQUFnRDtBQUN6RTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG9GQUFvRjtBQUMzRzs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9kcmF3L3RyaXBsZXQuanM/YzIyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc3ByaW50ZiA9IHJlcXVpcmUoJy4vc3ByaW50ZicpO1xudmFyIHJlbmRlclRleHQgPSByZXF1aXJlKCcuL3RleHQnKTtcbnZhciBwcmludFBhdGggPSByZXF1aXJlKCcuL3ByaW50LXBhdGgnKTtcbnZhciByb3VuZE51bWJlciA9IHJlcXVpcmUoXCIuL3JvdW5kLW51bWJlclwiKTtcblxuZnVuY3Rpb24gZHJhd1RyaXBsZXQocmVuZGVyZXIsIHBhcmFtcywgc2VsZWN0YWJsZXMpIHtcblx0cmVuZGVyZXIucGFwZXIub3Blbkdyb3VwKHsga2xhc3M6IHJlbmRlcmVyLmNvbnRyb2xsZXIuY2xhc3Nlcy5nZW5lcmF0ZSgndHJpcGxldCAnICsgcGFyYW1zLmR1cmF0aW9uQ2xhc3MpLCBcImRhdGEtbmFtZVwiOiBcInRyaXBsZXRcIiB9KTtcblx0aWYgKCFwYXJhbXMuaGFzQmVhbSkge1xuXHRcdGRyYXdCcmFja2V0KHJlbmRlcmVyLCBwYXJhbXMuYW5jaG9yMS54LCBwYXJhbXMuc3RhcnROb3RlLCBwYXJhbXMuYW5jaG9yMi54ICsgcGFyYW1zLmFuY2hvcjIudywgcGFyYW1zLmVuZE5vdGUpO1xuXHR9XG5cdC8vIEhBQ0s6IGFkanVzdCB0aGUgcG9zaXRpb24gb2YgXCIzXCIuIEl0IGlzIHRvbyBoaWdoIGluIGFsbCBjYXNlcyBzbyB3ZSBmdWRnZSBpdCBieSBzdWJ0cmFjdGluZyAxIGhlcmUuXG5cdHJlbmRlclRleHQocmVuZGVyZXIsIHsgeDogcGFyYW1zLnhUZXh0UG9zLCB5OiByZW5kZXJlci5jYWxjWShwYXJhbXMueVRleHRQb3MgLSAxKSwgdGV4dDogXCJcIiArIHBhcmFtcy5udW1iZXIsIHR5cGU6ICd0cmlwbGV0Zm9udCcsIGFuY2hvcjogXCJtaWRkbGVcIiwgY2VudGVyVmVydGljYWxseTogdHJ1ZSwgbm9DbGFzczogdHJ1ZSwgbmFtZTogXCJcIiArIHBhcmFtcy5udW1iZXIgfSwgdHJ1ZSk7XG5cdHZhciBnID0gcmVuZGVyZXIucGFwZXIuY2xvc2VHcm91cCgpO1xuXHRzZWxlY3RhYmxlcy53cmFwU3ZnRWwoeyBlbF90eXBlOiBcInRyaXBsZXRcIiwgc3RhcnRDaGFyOiAtMSwgZW5kQ2hhcjogLTEgfSwgZyk7XG5cdHJldHVybiBnO1xufVxuXG5mdW5jdGlvbiBkcmF3TGluZShsLCB0LCByLCBiKSB7XG5cdHJldHVybiBzcHJpbnRmKFwiTSAlZiAlZiBMICVmICVmXCIsIHJvdW5kTnVtYmVyKGwpLCByb3VuZE51bWJlcih0KSwgcm91bmROdW1iZXIociksIHJvdW5kTnVtYmVyKGIpKTtcbn1cblxuZnVuY3Rpb24gZHJhd0JyYWNrZXQocmVuZGVyZXIsIHgxLCB5MSwgeDIsIHkyKSB7XG5cdHkxID0gcmVuZGVyZXIuY2FsY1koeTEpO1xuXHR5MiA9IHJlbmRlcmVyLmNhbGNZKHkyKTtcblx0dmFyIGJyYWNrZXRIZWlnaHQgPSA1O1xuXG5cdC8vIERyYXcgdmVydGljYWwgbGluZXMgYXQgdGhlIGJlZ2lubmluZyBhbmQgZW5kXG5cdHZhciBwYXRoU3RyaW5nID0gXCJcIjtcblx0cGF0aFN0cmluZyArPSBkcmF3TGluZSh4MSwgeTEsIHgxLCB5MSArIGJyYWNrZXRIZWlnaHQpO1xuXHRwYXRoU3RyaW5nICs9IGRyYXdMaW5lKHgyLCB5MiwgeDIsIHkyICsgYnJhY2tldEhlaWdodCk7XG5cblx0Ly8gZmlndXJlIG91dCBtaWRwb2ludHMgdG8gZHJhdyB0aGUgYnJva2VuIGxpbmUuXG5cdHZhciBtaWRYID0geDEgKyAoeDIgLSB4MSkgLyAyO1xuXHQvL3ZhciBtaWRZID0geTEgKyAoeTIteTEpLzI7XG5cdHZhciBnYXBXaWR0aCA9IDg7XG5cdHZhciBzbG9wZSA9ICh5MiAtIHkxKSAvICh4MiAtIHgxKTtcblx0dmFyIGxlZnRFbmRYID0gbWlkWCAtIGdhcFdpZHRoO1xuXHR2YXIgbGVmdEVuZFkgPSB5MSArIChsZWZ0RW5kWCAtIHgxKSAqIHNsb3BlO1xuXHRwYXRoU3RyaW5nICs9IGRyYXdMaW5lKHgxLCB5MSwgbGVmdEVuZFgsIGxlZnRFbmRZKTtcblx0dmFyIHJpZ2h0U3RhcnRYID0gbWlkWCArIGdhcFdpZHRoO1xuXHR2YXIgcmlnaHRTdGFydFkgPSB5MSArIChyaWdodFN0YXJ0WCAtIHgxKSAqIHNsb3BlO1xuXHRwYXRoU3RyaW5nICs9IGRyYXdMaW5lKHJpZ2h0U3RhcnRYLCByaWdodFN0YXJ0WSwgeDIsIHkyKTtcblx0cHJpbnRQYXRoKHJlbmRlcmVyLCB7IHBhdGg6IHBhdGhTdHJpbmcsIHN0cm9rZTogcmVuZGVyZXIuZm9yZWdyb3VuZENvbG9yLCBcImRhdGEtbmFtZVwiOiBcInRyaXBsZXQtYnJhY2tldFwiIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRyYXdUcmlwbGV0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/triplet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/draw/voice.js":
/*!****************************************************!*\
  !*** ./node_modules/abcjs/src/write/draw/voice.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var drawGlissando = __webpack_require__(/*! ./glissando */ \"(ssr)/./node_modules/abcjs/src/write/draw/glissando.js\");\nvar drawCrescendo = __webpack_require__(/*! ./crescendo */ \"(ssr)/./node_modules/abcjs/src/write/draw/crescendo.js\");\nvar drawDynamics = __webpack_require__(/*! ./dynamics */ \"(ssr)/./node_modules/abcjs/src/write/draw/dynamics.js\");\nvar drawTriplet = __webpack_require__(/*! ./triplet */ \"(ssr)/./node_modules/abcjs/src/write/draw/triplet.js\");\nvar drawEnding = __webpack_require__(/*! ./ending */ \"(ssr)/./node_modules/abcjs/src/write/draw/ending.js\");\nvar drawTie = __webpack_require__(/*! ./tie */ \"(ssr)/./node_modules/abcjs/src/write/draw/tie.js\");\nvar drawBeam = __webpack_require__(/*! ./beam */ \"(ssr)/./node_modules/abcjs/src/write/draw/beam.js\");\nvar renderText = __webpack_require__(/*! ./text */ \"(ssr)/./node_modules/abcjs/src/write/draw/text.js\");\nvar drawAbsolute = __webpack_require__(/*! ./absolute */ \"(ssr)/./node_modules/abcjs/src/write/draw/absolute.js\");\n\nfunction drawVoice(renderer, params, bartop, selectables, staffPos) {\n\tvar width = params.w - 1;\n\trenderer.staffbottom = params.staff.bottom;\n\tvar saveColor = renderer.foregroundColor\n\tif (params.color)\n\t\trenderer.foregroundColor = params.color\n\n\tif (params.header) { // print voice name\n\t\tvar textEl = renderText(renderer, { x: renderer.padding.left, y: renderer.calcY(params.headerPosition), text: params.header, type: 'voicefont', klass: 'staff-extra voice-name', anchor: 'start', centerVertically: true, name: \"voice-name\" }, true);\n\t\tselectables.wrapSvgEl({ el_type: \"voiceName\", startChar: -1, endChar: -1, text: params.header }, textEl);\n\t}\n\n\tvar i;\n\tvar child;\n\tvar foundNote = false;\n\tfor (i = 0; i < params.children.length; i++) {\n\t\tchild = params.children[i];\n\t\tif (child.type === 'note' || child.type === 'rest')\n\t\t\tfoundNote = true;\n\t\tvar justInitializedMeasureNumber = false;\n\t\tif (child.type !== 'staff-extra' && !renderer.controller.classes.isInMeasure()) {\n\t\t\trenderer.controller.classes.startMeasure();\n\t\t\tjustInitializedMeasureNumber = true;\n\t\t}\n\t\tif (params.staff.isTabStaff) {\n\t\t\tchild.invisible = false;\n\t\t\tif (child.type == 'bar') {\n\t\t\t\tif (child.abcelem.lastBar) {\n\t\t\t\t\tbartop = params.topLine;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdrawAbsolute(renderer, child, (params.barto || i === params.children.length - 1) ? bartop : 0, selectables, staffPos);\n\n\t\tif (child.type === 'note' || isNonSpacerRest(child))\n\t\t\trenderer.controller.classes.incrNote();\n\t\tif (child.type === 'bar' && !justInitializedMeasureNumber && foundNote) {\n\t\t\trenderer.controller.classes.incrMeasure();\n\t\t}\n\t}\n\n\trenderer.controller.classes.startMeasure();\n\n\tfor (i = 0; i < params.beams.length; i++) {\n\t\tvar beam = params.beams[i];\n\t\tif (beam === 'bar') {\n\t\t\trenderer.controller.classes.incrMeasure();\n\t\t} else\n\t\t\tdrawBeam(renderer, beam, selectables); // beams must be drawn first for proper printing of triplets, slurs and ties.\n\t}\n\n\trenderer.controller.classes.startMeasure();\n\tfor (i = 0; i < params.otherchildren.length; i++) {\n\t\tchild = params.otherchildren[i];\n\t\tif (child === 'bar') {\n\t\t\trenderer.controller.classes.incrMeasure();\n\t\t} else {\n\t\t\tswitch (child.type) {\n\t\t\t\tcase \"GlissandoElem\":\n\t\t\t\t\tchild.elemset = drawGlissando(renderer, child, selectables);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"CrescendoElem\":\n\t\t\t\t\tchild.elemset = drawCrescendo(renderer, child, selectables);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"DynamicDecoration\":\n\t\t\t\t\tchild.elemset = drawDynamics(renderer, child, selectables);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"TripletElem\":\n\t\t\t\t\tdrawTriplet(renderer, child, selectables);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"EndingElem\":\n\t\t\t\t\tchild.elemset = drawEnding(renderer, child, params.startx + 10, width, selectables);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"TieElem\":\n\t\t\t\t\tchild.elemset = drawTie(renderer, child, params.startx + 10, width, selectables);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(child);\n\t\t\t\t\tdrawAbsolute(renderer, child, params.startx + 10, width, selectables, staffPos);\n\t\t\t}\n\t\t}\n\t}\n\trenderer.foregroundColor = saveColor\n\n}\n\nfunction isNonSpacerRest(elem) {\n\tif (elem.type !== 'rest')\n\t\treturn false;\n\tif (elem.abcelem && elem.abcelem.rest && elem.abcelem.rest.type !== 'spacer')\n\t\treturn true;\n\treturn false;\n}\n\nmodule.exports = drawVoice;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvdm9pY2UuanMiLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CLG1CQUFPLENBQUMsMkVBQWE7QUFDekMsb0JBQW9CLG1CQUFPLENBQUMsMkVBQWE7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMseUVBQVk7QUFDdkMsa0JBQWtCLG1CQUFPLENBQUMsdUVBQVc7QUFDckMsaUJBQWlCLG1CQUFPLENBQUMscUVBQVU7QUFDbkMsY0FBYyxtQkFBTyxDQUFDLCtEQUFPO0FBQzdCLGVBQWUsbUJBQU8sQ0FBQyxpRUFBUTtBQUMvQixpQkFBaUIsbUJBQU8sQ0FBQyxpRUFBUTtBQUNqQyxtQkFBbUIsbUJBQU8sQ0FBQyx5RUFBWTs7QUFFdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHNCQUFzQjtBQUN0QixzQ0FBc0MsME1BQTBNO0FBQ2hQLDBCQUEwQix1RUFBdUU7QUFDakc7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSw0QkFBNEI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsYUFBYSx5QkFBeUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKLDBDQUEwQztBQUMxQzs7QUFFQTtBQUNBLGFBQWEsaUNBQWlDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2RyYXcvdm9pY2UuanM/MDg3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZHJhd0dsaXNzYW5kbyA9IHJlcXVpcmUoJy4vZ2xpc3NhbmRvJyk7XG52YXIgZHJhd0NyZXNjZW5kbyA9IHJlcXVpcmUoJy4vY3Jlc2NlbmRvJyk7XG52YXIgZHJhd0R5bmFtaWNzID0gcmVxdWlyZSgnLi9keW5hbWljcycpO1xudmFyIGRyYXdUcmlwbGV0ID0gcmVxdWlyZSgnLi90cmlwbGV0Jyk7XG52YXIgZHJhd0VuZGluZyA9IHJlcXVpcmUoJy4vZW5kaW5nJyk7XG52YXIgZHJhd1RpZSA9IHJlcXVpcmUoJy4vdGllJyk7XG52YXIgZHJhd0JlYW0gPSByZXF1aXJlKCcuL2JlYW0nKTtcbnZhciByZW5kZXJUZXh0ID0gcmVxdWlyZSgnLi90ZXh0Jyk7XG52YXIgZHJhd0Fic29sdXRlID0gcmVxdWlyZSgnLi9hYnNvbHV0ZScpO1xuXG5mdW5jdGlvbiBkcmF3Vm9pY2UocmVuZGVyZXIsIHBhcmFtcywgYmFydG9wLCBzZWxlY3RhYmxlcywgc3RhZmZQb3MpIHtcblx0dmFyIHdpZHRoID0gcGFyYW1zLncgLSAxO1xuXHRyZW5kZXJlci5zdGFmZmJvdHRvbSA9IHBhcmFtcy5zdGFmZi5ib3R0b207XG5cdHZhciBzYXZlQ29sb3IgPSByZW5kZXJlci5mb3JlZ3JvdW5kQ29sb3Jcblx0aWYgKHBhcmFtcy5jb2xvcilcblx0XHRyZW5kZXJlci5mb3JlZ3JvdW5kQ29sb3IgPSBwYXJhbXMuY29sb3JcblxuXHRpZiAocGFyYW1zLmhlYWRlcikgeyAvLyBwcmludCB2b2ljZSBuYW1lXG5cdFx0dmFyIHRleHRFbCA9IHJlbmRlclRleHQocmVuZGVyZXIsIHsgeDogcmVuZGVyZXIucGFkZGluZy5sZWZ0LCB5OiByZW5kZXJlci5jYWxjWShwYXJhbXMuaGVhZGVyUG9zaXRpb24pLCB0ZXh0OiBwYXJhbXMuaGVhZGVyLCB0eXBlOiAndm9pY2Vmb250Jywga2xhc3M6ICdzdGFmZi1leHRyYSB2b2ljZS1uYW1lJywgYW5jaG9yOiAnc3RhcnQnLCBjZW50ZXJWZXJ0aWNhbGx5OiB0cnVlLCBuYW1lOiBcInZvaWNlLW5hbWVcIiB9LCB0cnVlKTtcblx0XHRzZWxlY3RhYmxlcy53cmFwU3ZnRWwoeyBlbF90eXBlOiBcInZvaWNlTmFtZVwiLCBzdGFydENoYXI6IC0xLCBlbmRDaGFyOiAtMSwgdGV4dDogcGFyYW1zLmhlYWRlciB9LCB0ZXh0RWwpO1xuXHR9XG5cblx0dmFyIGk7XG5cdHZhciBjaGlsZDtcblx0dmFyIGZvdW5kTm90ZSA9IGZhbHNlO1xuXHRmb3IgKGkgPSAwOyBpIDwgcGFyYW1zLmNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG5cdFx0Y2hpbGQgPSBwYXJhbXMuY2hpbGRyZW5baV07XG5cdFx0aWYgKGNoaWxkLnR5cGUgPT09ICdub3RlJyB8fCBjaGlsZC50eXBlID09PSAncmVzdCcpXG5cdFx0XHRmb3VuZE5vdGUgPSB0cnVlO1xuXHRcdHZhciBqdXN0SW5pdGlhbGl6ZWRNZWFzdXJlTnVtYmVyID0gZmFsc2U7XG5cdFx0aWYgKGNoaWxkLnR5cGUgIT09ICdzdGFmZi1leHRyYScgJiYgIXJlbmRlcmVyLmNvbnRyb2xsZXIuY2xhc3Nlcy5pc0luTWVhc3VyZSgpKSB7XG5cdFx0XHRyZW5kZXJlci5jb250cm9sbGVyLmNsYXNzZXMuc3RhcnRNZWFzdXJlKCk7XG5cdFx0XHRqdXN0SW5pdGlhbGl6ZWRNZWFzdXJlTnVtYmVyID0gdHJ1ZTtcblx0XHR9XG5cdFx0aWYgKHBhcmFtcy5zdGFmZi5pc1RhYlN0YWZmKSB7XG5cdFx0XHRjaGlsZC5pbnZpc2libGUgPSBmYWxzZTtcblx0XHRcdGlmIChjaGlsZC50eXBlID09ICdiYXInKSB7XG5cdFx0XHRcdGlmIChjaGlsZC5hYmNlbGVtLmxhc3RCYXIpIHtcblx0XHRcdFx0XHRiYXJ0b3AgPSBwYXJhbXMudG9wTGluZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRkcmF3QWJzb2x1dGUocmVuZGVyZXIsIGNoaWxkLCAocGFyYW1zLmJhcnRvIHx8IGkgPT09IHBhcmFtcy5jaGlsZHJlbi5sZW5ndGggLSAxKSA/IGJhcnRvcCA6IDAsIHNlbGVjdGFibGVzLCBzdGFmZlBvcyk7XG5cblx0XHRpZiAoY2hpbGQudHlwZSA9PT0gJ25vdGUnIHx8IGlzTm9uU3BhY2VyUmVzdChjaGlsZCkpXG5cdFx0XHRyZW5kZXJlci5jb250cm9sbGVyLmNsYXNzZXMuaW5jck5vdGUoKTtcblx0XHRpZiAoY2hpbGQudHlwZSA9PT0gJ2JhcicgJiYgIWp1c3RJbml0aWFsaXplZE1lYXN1cmVOdW1iZXIgJiYgZm91bmROb3RlKSB7XG5cdFx0XHRyZW5kZXJlci5jb250cm9sbGVyLmNsYXNzZXMuaW5jck1lYXN1cmUoKTtcblx0XHR9XG5cdH1cblxuXHRyZW5kZXJlci5jb250cm9sbGVyLmNsYXNzZXMuc3RhcnRNZWFzdXJlKCk7XG5cblx0Zm9yIChpID0gMDsgaSA8IHBhcmFtcy5iZWFtcy5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBiZWFtID0gcGFyYW1zLmJlYW1zW2ldO1xuXHRcdGlmIChiZWFtID09PSAnYmFyJykge1xuXHRcdFx0cmVuZGVyZXIuY29udHJvbGxlci5jbGFzc2VzLmluY3JNZWFzdXJlKCk7XG5cdFx0fSBlbHNlXG5cdFx0XHRkcmF3QmVhbShyZW5kZXJlciwgYmVhbSwgc2VsZWN0YWJsZXMpOyAvLyBiZWFtcyBtdXN0IGJlIGRyYXduIGZpcnN0IGZvciBwcm9wZXIgcHJpbnRpbmcgb2YgdHJpcGxldHMsIHNsdXJzIGFuZCB0aWVzLlxuXHR9XG5cblx0cmVuZGVyZXIuY29udHJvbGxlci5jbGFzc2VzLnN0YXJ0TWVhc3VyZSgpO1xuXHRmb3IgKGkgPSAwOyBpIDwgcGFyYW1zLm90aGVyY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcblx0XHRjaGlsZCA9IHBhcmFtcy5vdGhlcmNoaWxkcmVuW2ldO1xuXHRcdGlmIChjaGlsZCA9PT0gJ2JhcicpIHtcblx0XHRcdHJlbmRlcmVyLmNvbnRyb2xsZXIuY2xhc3Nlcy5pbmNyTWVhc3VyZSgpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRzd2l0Y2ggKGNoaWxkLnR5cGUpIHtcblx0XHRcdFx0Y2FzZSBcIkdsaXNzYW5kb0VsZW1cIjpcblx0XHRcdFx0XHRjaGlsZC5lbGVtc2V0ID0gZHJhd0dsaXNzYW5kbyhyZW5kZXJlciwgY2hpbGQsIHNlbGVjdGFibGVzKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBcIkNyZXNjZW5kb0VsZW1cIjpcblx0XHRcdFx0XHRjaGlsZC5lbGVtc2V0ID0gZHJhd0NyZXNjZW5kbyhyZW5kZXJlciwgY2hpbGQsIHNlbGVjdGFibGVzKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBcIkR5bmFtaWNEZWNvcmF0aW9uXCI6XG5cdFx0XHRcdFx0Y2hpbGQuZWxlbXNldCA9IGRyYXdEeW5hbWljcyhyZW5kZXJlciwgY2hpbGQsIHNlbGVjdGFibGVzKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBcIlRyaXBsZXRFbGVtXCI6XG5cdFx0XHRcdFx0ZHJhd1RyaXBsZXQocmVuZGVyZXIsIGNoaWxkLCBzZWxlY3RhYmxlcyk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgXCJFbmRpbmdFbGVtXCI6XG5cdFx0XHRcdFx0Y2hpbGQuZWxlbXNldCA9IGRyYXdFbmRpbmcocmVuZGVyZXIsIGNoaWxkLCBwYXJhbXMuc3RhcnR4ICsgMTAsIHdpZHRoLCBzZWxlY3RhYmxlcyk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgXCJUaWVFbGVtXCI6XG5cdFx0XHRcdFx0Y2hpbGQuZWxlbXNldCA9IGRyYXdUaWUocmVuZGVyZXIsIGNoaWxkLCBwYXJhbXMuc3RhcnR4ICsgMTAsIHdpZHRoLCBzZWxlY3RhYmxlcyk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0Y29uc29sZS5sb2coY2hpbGQpO1xuXHRcdFx0XHRcdGRyYXdBYnNvbHV0ZShyZW5kZXJlciwgY2hpbGQsIHBhcmFtcy5zdGFydHggKyAxMCwgd2lkdGgsIHNlbGVjdGFibGVzLCBzdGFmZlBvcyk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdHJlbmRlcmVyLmZvcmVncm91bmRDb2xvciA9IHNhdmVDb2xvclxuXG59XG5cbmZ1bmN0aW9uIGlzTm9uU3BhY2VyUmVzdChlbGVtKSB7XG5cdGlmIChlbGVtLnR5cGUgIT09ICdyZXN0Jylcblx0XHRyZXR1cm4gZmFsc2U7XG5cdGlmIChlbGVtLmFiY2VsZW0gJiYgZWxlbS5hYmNlbGVtLnJlc3QgJiYgZWxlbS5hYmNlbGVtLnJlc3QudHlwZSAhPT0gJ3NwYWNlcicpXG5cdFx0cmV0dXJuIHRydWU7XG5cdHJldHVybiBmYWxzZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkcmF3Vm9pY2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/draw/voice.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/engraver-controller.js":
/*!*************************************************************!*\
  !*** ./node_modules/abcjs/src/write/engraver-controller.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_engraver_controller.js: Controls the engraving process of an ABCJS abstract syntax tree as produced by ABCJS/parse\n\n/*global Math */\n\nvar spacing = __webpack_require__(/*! ./helpers/spacing */ \"(ssr)/./node_modules/abcjs/src/write/helpers/spacing.js\");\nvar AbstractEngraver = __webpack_require__(/*! ./creation/abstract-engraver */ \"(ssr)/./node_modules/abcjs/src/write/creation/abstract-engraver.js\");\nvar Renderer = __webpack_require__(/*! ./renderer */ \"(ssr)/./node_modules/abcjs/src/write/renderer.js\");\nvar FreeText = __webpack_require__(/*! ./creation/elements/free-text */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/free-text.js\");\nvar Separator = __webpack_require__(/*! ./creation/elements/separator */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/separator.js\");\nvar Subtitle = __webpack_require__(/*! ./creation/elements/subtitle */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/subtitle.js\");\nvar TopText = __webpack_require__(/*! ./creation/elements/top-text */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/top-text.js\");\nvar BottomText = __webpack_require__(/*! ./creation/elements/bottom-text */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/bottom-text.js\");\nvar setupSelection = __webpack_require__(/*! ./interactive/selection */ \"(ssr)/./node_modules/abcjs/src/write/interactive/selection.js\");\nvar layout = __webpack_require__(/*! ./layout/layout */ \"(ssr)/./node_modules/abcjs/src/write/layout/layout.js\");\nvar Classes = __webpack_require__(/*! ./helpers/classes */ \"(ssr)/./node_modules/abcjs/src/write/helpers/classes.js\");\nvar GetFontAndAttr = __webpack_require__(/*! ./helpers/get-font-and-attr */ \"(ssr)/./node_modules/abcjs/src/write/helpers/get-font-and-attr.js\");\nvar GetTextSize = __webpack_require__(/*! ./helpers/get-text-size */ \"(ssr)/./node_modules/abcjs/src/write/helpers/get-text-size.js\");\nvar draw = __webpack_require__(/*! ./draw/draw */ \"(ssr)/./node_modules/abcjs/src/write/draw/draw.js\");\nvar tablatures = __webpack_require__(/*! ../tablatures/abc_tablatures */ \"(ssr)/./node_modules/abcjs/src/tablatures/abc_tablatures.js\");\nvar findSelectableElement = __webpack_require__(/*! ./interactive/find-selectable-element */ \"(ssr)/./node_modules/abcjs/src/write/interactive/find-selectable-element.js\");\n\n/**\n * @class\n * Controls the engraving process, from ABCJS Abstract Syntax Tree (ABCJS AST) to rendered score sheet\n *\n * Call engraveABC to run the process. This creates a graphelems ABCJS Abstract Engraving Structure (ABCJS AES) that can be accessed through this.staffgroups\n * this data structure is first laid out (giving the graphelems x and y coordinates) and then drawn onto the renderer\n * each ABCJS AES represents a single staffgroup - all elements that are not in a staffgroup are rendered directly by the controller\n *\n * elements in ABCJS AES know their \"source data\" in the ABCJS AST, and their \"target shape\"\n * in the renderer for highlighting purposes\n *\n */\nvar EngraverController = function (paper, params) {\n\tparams = params || {};\n\tthis.findSelectableElement = findSelectableElement;\n\tthis.oneSvgPerLine = params.oneSvgPerLine;\n\tthis.selectionColor = params.selectionColor;\n\tthis.dragColor = params.dragColor ? params.dragColor : params.selectionColor;\n\tthis.dragging = !!params.dragging;\n\tthis.selectTypes = params.selectTypes;\n\tthis.responsive = params.responsive;\n\tthis.space = 3 * spacing.SPACE;\n\tthis.initialClef = params.initialClef;\n\tthis.timeBasedLayout = params.timeBasedLayout;\n\tthis.expandToWidest = !!params.expandToWidest;\n\tthis.scale = params.scale ? parseFloat(params.scale) : 0;\n\tthis.classes = new Classes({ shouldAddClasses: params.add_classes });\n\tif (!(this.scale > 0.1))\n\t\tthis.scale = undefined;\n\n\tif (params.staffwidth) {\n\t\t// Note: Normally all measurements to the engraver are in POINTS. However, if a person is formatting for the\n\t\t// screen and directly inputting the width, then it is more logical to have the measurement in pixels.\n\t\tthis.staffwidthScreen = params.staffwidth;\n\t\tthis.staffwidthPrint = params.staffwidth;\n\t} else {\n\t\tthis.staffwidthScreen = 740; // TODO-PER: Not sure where this number comes from, but this is how it's always been.\n\t\tthis.staffwidthPrint = 680; // The number of pixels in 8.5\", after 1cm of margin has been removed.\n\t}\n\tthis.listeners = [];\n\tif (params.clickListener)\n\t\tthis.addSelectListener(params.clickListener);\n\n\tthis.renderer = new Renderer(paper);\n\tthis.renderer.setPaddingOverride(params);\n\tif (params.showDebug)\n\t\tthis.renderer.showDebug = params.showDebug;\n\tif (params.jazzchords)\n\t\tthis.jazzchords = params.jazzchords;\n\tif (params.accentAbove)\n\t\tthis.accentAbove = params.accentAbove;\n\tif (params.germanAlphabet)\n\t\tthis.germanAlphabet = params.germanAlphabet;\n\tif (params.lineThickness)\n\t\tthis.lineThickness = params.lineThickness;\n\tthis.renderer.controller = this; // TODO-GD needed for highlighting\n\tthis.renderer.foregroundColor = params.foregroundColor ? params.foregroundColor : \"currentColor\";\n\tif (params.ariaLabel !== undefined)\n\t\tthis.renderer.ariaLabel = params.ariaLabel;\n\tthis.renderer.minPadding = params.minPadding ? params.minPadding : 0;\n\n\tthis.reset();\n};\n\nEngraverController.prototype.reset = function () {\n\tthis.selected = [];\n\tthis.staffgroups = [];\n\tif (this.engraver)\n\t\tthis.engraver.reset();\n\tthis.engraver = null;\n\tthis.renderer.reset();\n\tthis.dragTarget = null;\n\tthis.dragIndex = -1;\n\tthis.dragMouseStart = { x: -1, y: -1 };\n\tthis.dragYStep = 0;\n\tif (this.lineThickness)\n\t\tthis.renderer.setLineThickness(this.lineThickness)\n};\n\n/**\n * run the engraving process\n */\nEngraverController.prototype.engraveABC = function (abctunes, tuneNumber, lineOffset) {\n\tif (abctunes[0] === undefined) {\n\t\tabctunes = [abctunes];\n\t}\n\tthis.reset();\n\n\tfor (var i = 0; i < abctunes.length; i++) {\n\t\tif (tuneNumber === undefined)\n\t\t\ttuneNumber = i;\n\t\tthis.getFontAndAttr = new GetFontAndAttr(abctunes[i].formatting, this.classes);\n\t\tthis.getTextSize = new GetTextSize(this.getFontAndAttr, this.renderer.paper);\n\t\tthis.engraveTune(abctunes[i], tuneNumber, lineOffset);\n\t}\n};\n\n/**\n * Some of the items on the page are not scaled, so adjust them in the opposite direction of scaling to cancel out the scaling.\n */\nEngraverController.prototype.adjustNonScaledItems = function (scale) {\n\tthis.width /= scale;\n\tthis.renderer.adjustNonScaledItems(scale);\n};\n\nEngraverController.prototype.getMeasureWidths = function (abcTune) {\n\tthis.reset();\n\tthis.getFontAndAttr = new GetFontAndAttr(abcTune.formatting, this.classes);\n\tthis.getTextSize = new GetTextSize(this.getFontAndAttr, this.renderer.paper);\n\tvar origJazzChords = this.jazzchords\n\n\tthis.setupTune(abcTune, 0);\n\tthis.constructTuneElements(abcTune);\n\t// layout() sets the x-coordinate of the abcTune element here:\n\t// abcTune.lines[0].staffGroup.voices[0].children[0].x\n\tlayout(this.renderer, abcTune, 0, this.space, this.timeBasedLayout);\n\n\tvar ret = [];\n\tvar section;\n\n\tvar needNewSection = true;\n\tfor (var i = 0; i < abcTune.lines.length; i++) {\n\t\tvar abcLine = abcTune.lines[i];\n\t\tif (abcLine.staff) {\n\t\t\tif (needNewSection) {\n\t\t\t\tsection = {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tmeasureWidths: [],\n\t\t\t\t\t//height: this.renderer.padding.top + this.renderer.spacing.music + this.renderer.padding.bottom + 24, // the 24 is the empirical value added to the bottom of all tunes.\n\t\t\t\t\ttotal: 0\n\t\t\t\t};\n\t\t\t\tret.push(section);\n\t\t\t\tneedNewSection = false;\n\t\t\t}\n\t\t\t// At this point, the voices are laid out so that the bar lines are even with each other. So we just need to get the placement of the first voice.\n\t\t\tif (abcLine.staffGroup.voices.length > 0) {\n\t\t\t\tvar voice = abcLine.staffGroup.voices[0];\n\t\t\t\tvar foundNotStaffExtra = false;\n\t\t\t\tvar lastXPosition = 0;\n\t\t\t\tfor (var k = 0; k < voice.children.length; k++) {\n\t\t\t\t\tvar child = voice.children[k];\n\t\t\t\t\tif (!foundNotStaffExtra && !child.isClef && !child.isKeySig) {\n\t\t\t\t\t\tfoundNotStaffExtra = true;\n\t\t\t\t\t\tsection.left = child.x;\n\t\t\t\t\t\tlastXPosition = child.x;\n\t\t\t\t\t}\n\t\t\t\t\tif (child.type === 'bar') {\n\t\t\t\t\t\tsection.measureWidths.push(child.x - lastXPosition);\n\t\t\t\t\t\tsection.total += (child.x - lastXPosition);\n\t\t\t\t\t\tlastXPosition = child.x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//section.height += calcHeight(abcLine.staffGroup) * spacing.STEP;\n\t\t} else\n\t\t\tneedNewSection = true;\n\t}\n\tthis.jazzchords = origJazzChords\n\treturn ret;\n};\n\nEngraverController.prototype.setupTune = function (abcTune, tuneNumber) {\n\tthis.classes.reset();\n\n\tif (abcTune.formatting.jazzchords !== undefined)\n\t\tthis.jazzchords = abcTune.formatting.jazzchords;\n\tif (abcTune.formatting.accentAbove !== undefined)\n\t\tthis.accentAbove = abcTune.formatting.accentAbove;\n\n\tthis.renderer.newTune(abcTune);\n\tthis.engraver = new AbstractEngraver(this.getTextSize, tuneNumber, {\n\t\tbagpipes: abcTune.formatting.bagpipes,\n\t\tflatbeams: abcTune.formatting.flatbeams,\n\t\tgraceSlurs: abcTune.formatting.graceSlurs !== false, // undefined is the default, which is true\n\t\tpercmap: abcTune.formatting.percmap,\n\t\tinitialClef: this.initialClef,\n\t\tjazzchords: this.jazzchords,\n\t\ttimeBasedLayout: this.timeBasedLayout,\n\t\taccentAbove: this.accentAbove,\n\t\tgermanAlphabet: this.germanAlphabet\n\t});\n\tthis.engraver.setStemHeight(this.renderer.spacing.stemHeight);\n\tthis.engraver.measureLength = abcTune.getMeterFraction().num / abcTune.getMeterFraction().den;\n\tif (abcTune.formatting.staffwidth) {\n\t\tthis.width = abcTune.formatting.staffwidth * 1.33; // The width is expressed in pt; convert to px.\n\t} else {\n\t\tthis.width = this.renderer.isPrint ? this.staffwidthPrint : this.staffwidthScreen;\n\t}\n\n\tvar scale = abcTune.formatting.scale ? abcTune.formatting.scale : this.scale;\n\tif (this.responsive === \"resize\") // The resizing will mess with the scaling, so just don't do it explicitly.\n\t\tscale = undefined;\n\tif (scale === undefined) scale = this.renderer.isPrint ? 0.75 : 1;\n\tthis.adjustNonScaledItems(scale);\n\treturn scale;\n};\n\nEngraverController.prototype.constructTuneElements = function (abcTune) {\n\tabcTune.topText = new TopText(abcTune.metaText, abcTune.metaTextInfo, abcTune.formatting, abcTune.lines, this.width, this.renderer.isPrint, this.renderer.padding.left, this.renderer.spacing, this.classes.shouldAddClasses, this.getTextSize);\n\n\t// Generate the raw staff line data\n\tvar i;\n\tvar abcLine;\n\tvar hasPrintedTempo = false;\n\tvar hasSeenNonSubtitle = false;\n\tfor (i = 0; i < abcTune.lines.length; i++) {\n\t\tabcLine = abcTune.lines[i];\n\t\tif (abcLine.staff) {\n\t\t\thasSeenNonSubtitle = true;\n\t\t\tabcLine.staffGroup = this.engraver.createABCLine(abcLine.staff, !hasPrintedTempo ? abcTune.metaText.tempo : null, i);\n\t\t\thasPrintedTempo = true;\n\t\t} else if (abcLine.subtitle) {\n\t\t\t// If the subtitle is at the top, then it was already accounted for. So skip all subtitles until the first non-subtitle line.\n\t\t\tif (hasSeenNonSubtitle) {\n\t\t\t\tvar center = this.width / 2 + this.renderer.padding.left;\n\t\t\t\tabcLine.nonMusic = new Subtitle(this.renderer.spacing.subtitle, abcTune.formatting, abcLine.subtitle, center, this.renderer.padding.left, this.getTextSize);\n\t\t\t}\n\t\t} else if (abcLine.text !== undefined) {\n\t\t\thasSeenNonSubtitle = true;\n\t\t\tabcLine.nonMusic = new FreeText(abcLine.text, abcLine.vskip, this.getFontAndAttr, this.renderer.padding.left, this.width, this.getTextSize);\n\t\t} else if (abcLine.separator !== undefined && abcLine.separator.lineLength) {\n\t\t\thasSeenNonSubtitle = true;\n\t\t\tabcLine.nonMusic = new Separator(abcLine.separator.spaceAbove, abcLine.separator.lineLength, abcLine.separator.spaceBelow);\n\t\t}\n\t}\n\tabcTune.bottomText = new BottomText(abcTune.metaText, this.width, this.renderer.isPrint, this.renderer.padding.left, this.renderer.spacing, this.classes.shouldAddClasses, this.getTextSize);\n};\n\nEngraverController.prototype.engraveTune = function (abcTune, tuneNumber, lineOffset) {\n\n\tvar origJazzChords = this.jazzchords\n\tvar scale = this.setupTune(abcTune, tuneNumber);\n  \n\t// Create all of the element objects that will appear on the page.\n\tthis.constructTuneElements(abcTune);\n  \n\t//Set the top text now that we know the width\n  \n\t// Do all the positioning, both horizontally and vertically\n\tvar maxWidth = layout(this.renderer, abcTune, this.width, this.space, this.expandToWidest, this.timeBasedLayout);\n  \n\t//Set the top text now that we know the width\n\tif (this.expandToWidest && maxWidth > this.width + 1) {\n  \n\t\tabcTune.topText = new TopText(abcTune.metaText, abcTune.metaTextInfo, abcTune.formatting, abcTune.lines, maxWidth, this.renderer.isPrint, this.renderer.padding.left, this.renderer.spacing, this.classes.shouldAddClasses, this.getTextSize);\n  \n\t\tif ((abcTune.lines)&&(abcTune.lines.length > 0)){\n\t\t\tvar nlines = abcTune.lines.length;\n\n\t\t\tfor (var i=0;i<nlines;++i){\n\t\t\t\tvar entry = abcTune.lines[i];\n\t\t\t\tif (entry.nonMusic){\n\t\t\t\t\tif ((entry.nonMusic.rows) && (entry.nonMusic.rows.length > 0)){\n\t\t\t\t\t\tvar nRows = entry.nonMusic.rows.length;\n\t\t\t\t\t\tfor (var j=0;j<nRows;++j){\n\t\t\t\t\t\t\tvar thisRow = entry.nonMusic.rows[j];\n\t\t\t\t\t\t\t// Recenter the element if it's a subtitle or centered text \n\t\t\t\t\t\t\tif (thisRow.left){\n\t\t\t\t\t\t\t\tif (entry.subtitle){\n\t\t\t\t\t\t\t\t\tthisRow.left = (maxWidth/2) + this.renderer.padding.left;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif ((entry.text)&&(entry.text.length>0)){\n\t\t\t\t\t\t\t\t\t\tif (entry.text[0].center){\n\t\t\t\t\t\t\t\t\t\t\tthisRow.left = (maxWidth/2) + this.renderer.padding.left;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Deal with tablature for staff\n\tif (abcTune.tablatures) {\n\t  tablatures.layoutTablatures(this.renderer, abcTune);\n\t}\n  \n\t// Do all the writing to the SVG\n\tvar ret = draw(this.renderer, this.classes, abcTune, this.width, maxWidth, this.responsive, scale, this.selectTypes, tuneNumber, lineOffset);\n\tthis.staffgroups = ret.staffgroups;\n\tthis.selectables = ret.selectables;\n\tif (this.oneSvgPerLine) {\n\t  var div = this.renderer.paper.svg.parentNode;\n\t  this.svgs = splitSvgIntoLines(this.renderer, div, abcTune.metaText.title, this.responsive, scale);\n\t} else {\n\t  this.svgs = [this.renderer.paper.svg];\n\t}\n\tsetupSelection(this, this.svgs);\n\t\n\tthis.jazzchords = origJazzChords\n};\n\nfunction splitSvgIntoLines(renderer, output, title, responsive, scale) {\n\t// Each line is a top level <g> in the svg. To split it into separate\n\t// svgs iterate through each of those and put them in a new svg. Since\n\t// they are placed absolutely, the viewBox needs to be manipulated to\n\t// get the correct vertical positioning.\n\t// We copy all the attributes from the original svg except for the aria-label\n\t// since we want that to include a count. And the height is now a fraction of the original svg.\n\tif (!title) title = \"Untitled\"\n\tvar source = output.querySelector(\"svg\")\n\tif (responsive === 'resize')\n\t\toutput.style.paddingBottom = ''\n\tvar style = source.querySelector(\"style\")\n\tvar width = responsive === 'resize' ? source.viewBox.baseVal.width : source.getAttribute(\"width\")\n\tvar sections = output.querySelectorAll(\"svg > g\") // each section is a line, or the top matter or the bottom matter, or text that has been inserted.\n\tvar nextTop = 0 // There are often gaps between the elements for spacing, so the actual top and height needs to be inferred.\n\tvar wrappers = [] // Create all the elements and place them at once because we use the current svg to get data. It would disappear after placing the first line.\n\tvar svgs = []\n\tfor (var i = 0; i < sections.length; i++) {\n\t\tvar section = sections[i]\n\t\tvar box = section.getBBox()\n\t\tvar gapBetweenLines = box.y - nextTop // take the margin into account\n\t\tvar height = box.height + gapBetweenLines;\n\t\tvar wrapper = document.createElement(\"div\");\n\t\tvar divStyles = \"overflow: hidden;\"\n\t\tif (responsive !== 'resize')\n\t\t\tdivStyles += \"height:\" + (height * scale) + \"px;\"\n\t\twrapper.setAttribute(\"style\", divStyles)\n\t\tvar svg = duplicateSvg(source)\n\t\tvar fullTitle = \"Sheet Music for \\\"\" + title + \"\\\" section \" + (i + 1)\n\t\tsvg.setAttribute(\"aria-label\", fullTitle)\n\t\tif (responsive !== 'resize')\n\t\t\tsvg.setAttribute(\"height\", height)\n\t\tif (responsive === 'resize')\n\t\t\tsvg.style.position = ''\n\t\t// TODO-PER: Hack! Not sure why this is needed.\n\t\tvar viewBoxHeight = renderer.firefox112 ? height+1 : height\n\t\tsvg.setAttribute(\"viewBox\", \"0 \" + nextTop + \" \" + width + \" \" + viewBoxHeight)\n\t\tsvg.appendChild(style.cloneNode(true))\n\t\tvar titleEl = document.createElement(\"title\")\n\t\ttitleEl.innerText = fullTitle\n\t\tsvg.appendChild(titleEl)\n\t\tsvg.appendChild(section)\n\n\t\twrapper.appendChild(svg)\n\t\tsvgs.push(svg)\n\t\toutput.appendChild(wrapper)\n\t\t//wrappers.push(wrapper)\n\t\tnextTop = box.y + box.height\n\t}\n\t// for (i = 0; i < wrappers.length; i++)\n\t// \toutput.appendChild(wrappers[i])\n\toutput.removeChild(source)\n\treturn svgs;\n}\n\nfunction duplicateSvg(source) {\n\tvar svgNS = \"http://www.w3.org/2000/svg\";\n\tvar svg = document.createElementNS(svgNS, \"svg\");\n\tfor (var i = 0; i < source.attributes.length; i++) {\n\t\tvar attr = source.attributes[i];\n\t\tif (attr.name !== \"height\" && attr.name != \"aria-label\")\n\t\t\tsvg.setAttribute(attr.name, attr.value)\n\t}\n\treturn svg;\n}\n\nEngraverController.prototype.getDim = function (historyEl) {\n\t// Get the dimensions on demand because the getBBox call is expensive.\n\tif (!historyEl.dim) {\n\t\tvar box = historyEl.svgEl.getBBox();\n\t\thistoryEl.dim = { left: Math.round(box.x), top: Math.round(box.y), right: Math.round(box.x + box.width), bottom: Math.round(box.y + box.height) };\n\t}\n\treturn historyEl.dim;\n};\n\nEngraverController.prototype.addSelectListener = function (clickListener) {\n\tthis.listeners[this.listeners.length] = clickListener;\n};\n\nmodule.exports = EngraverController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/engraver-controller.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/helpers/classes.js":
/*!*********************************************************!*\
  !*** ./node_modules/abcjs/src/write/helpers/classes.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("var Classes = function Classes(options) {\n\tthis.shouldAddClasses = options.shouldAddClasses;\n\tthis.reset();\n}\n\nClasses.prototype.reset = function () {\n\tthis.lineNumber = null;\n\tthis.voiceNumber = null;\n\tthis.measureNumber = null;\n\tthis.measureTotalPerLine = [];\n\tthis.noteNumber = null;\n}\n\nClasses.prototype.incrLine = function () {\n\tif (this.lineNumber === null)\n\t\tthis.lineNumber = 0;\n\telse\n\t\tthis.lineNumber++;\n\tthis.voiceNumber = null;\n\tthis.measureNumber = null;\n\tthis.noteNumber = null;\n};\n\nClasses.prototype.incrVoice = function () {\n\tif (this.voiceNumber === null)\n\t\tthis.voiceNumber = 0;\n\telse\n\t\tthis.voiceNumber++;\n\tthis.measureNumber = null;\n\tthis.noteNumber = null;\n};\n\nClasses.prototype.isInMeasure = function () {\n\treturn this.measureNumber !== null;\n};\n\nClasses.prototype.newMeasure = function () {\n\tif (this.measureNumber)\n\t\tthis.measureTotalPerLine[this.lineNumber] = this.measureNumber;\n\tthis.measureNumber = null;\n\tthis.noteNumber = null;\n};\n\nClasses.prototype.startMeasure = function () {\n\tthis.measureNumber = 0;\n\tthis.noteNumber = 0;\n};\n\nClasses.prototype.incrMeasure = function () {\n\tthis.measureNumber++;\n\tthis.noteNumber = 0;\n};\n\nClasses.prototype.incrNote = function () {\n\tthis.noteNumber++;\n};\n\nClasses.prototype.measureTotal = function () {\n\tvar total = 0;\n\tfor (var i = 0; i < this.lineNumber; i++)\n\t\ttotal += this.measureTotalPerLine[i] ? this.measureTotalPerLine[i] : 0; // This can be null when non-music things are present.\n\tif (this.measureNumber)\n\t\ttotal += this.measureNumber;\n\treturn total;\n};\n\nClasses.prototype.getCurrent = function (c) {\n\treturn {\n\t\tline: this.lineNumber,\n\t\tmeasure: this.measureNumber,\n\t\tmeasureTotal: this.measureTotal(),\n\t\tvoice: this.voiceNumber,\n\t\tnote: this.noteNumber\n\t};\n};\n\nClasses.prototype.generate = function (c) {\n\tif (!this.shouldAddClasses)\n\t\treturn \"\";\n\tvar ret = [];\n\tif (c && c.length > 0) ret.push(c);\n\tif (c === \"abcjs-tab-number\") // TODO-PER-HACK! straighten out the tablature\n\t\treturn ret.join(' ')\n\tif (c === \"text instrument-name\")\n\t\treturn \"abcjs-text abcjs-instrument-name\"\n\tif (this.lineNumber !== null) ret.push(\"l\" + this.lineNumber);\n\tif (this.measureNumber !== null) ret.push(\"m\" + this.measureNumber);\n\tif (this.measureNumber !== null) ret.push(\"mm\" + this.measureTotal()); // measureNumber is null between measures so this is still the test for measureTotal\n\tif (this.voiceNumber !== null) ret.push(\"v\" + this.voiceNumber);\n\tif (c && (c.indexOf('note') >= 0 || c.indexOf('rest') >= 0 || c.indexOf('lyric') >= 0) && this.noteNumber !== null) ret.push(\"n\" + this.noteNumber);\n\t// add a prefix to all classes that abcjs adds.\n\tif (ret.length > 0) {\n\t\tret = ret.join(' '); // Some strings are compound classes - that is, specify more than one class in a string.\n\t\tret = ret.split(' ');\n\t\tfor (var i = 0; i < ret.length; i++) {\n\t\t\tif (ret[i].indexOf('abcjs-') !== 0 && ret[i].length > 0) // if the prefix doesn't already exist and the class is not blank.\n\t\t\t\tret[i] = 'abcjs-' + ret[i];\n\t\t}\n\t}\n\treturn ret.join(' ');\n};\n\n\nmodule.exports = Classes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2hlbHBlcnMvY2xhc3Nlcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCLHFCQUFxQjtBQUN0QywwRUFBMEU7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0U7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSxrQkFBa0IsZ0JBQWdCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvaGVscGVycy9jbGFzc2VzLmpzP2Q5YjMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIENsYXNzZXMgPSBmdW5jdGlvbiBDbGFzc2VzKG9wdGlvbnMpIHtcblx0dGhpcy5zaG91bGRBZGRDbGFzc2VzID0gb3B0aW9ucy5zaG91bGRBZGRDbGFzc2VzO1xuXHR0aGlzLnJlc2V0KCk7XG59XG5cbkNsYXNzZXMucHJvdG90eXBlLnJlc2V0ID0gZnVuY3Rpb24gKCkge1xuXHR0aGlzLmxpbmVOdW1iZXIgPSBudWxsO1xuXHR0aGlzLnZvaWNlTnVtYmVyID0gbnVsbDtcblx0dGhpcy5tZWFzdXJlTnVtYmVyID0gbnVsbDtcblx0dGhpcy5tZWFzdXJlVG90YWxQZXJMaW5lID0gW107XG5cdHRoaXMubm90ZU51bWJlciA9IG51bGw7XG59XG5cbkNsYXNzZXMucHJvdG90eXBlLmluY3JMaW5lID0gZnVuY3Rpb24gKCkge1xuXHRpZiAodGhpcy5saW5lTnVtYmVyID09PSBudWxsKVxuXHRcdHRoaXMubGluZU51bWJlciA9IDA7XG5cdGVsc2Vcblx0XHR0aGlzLmxpbmVOdW1iZXIrKztcblx0dGhpcy52b2ljZU51bWJlciA9IG51bGw7XG5cdHRoaXMubWVhc3VyZU51bWJlciA9IG51bGw7XG5cdHRoaXMubm90ZU51bWJlciA9IG51bGw7XG59O1xuXG5DbGFzc2VzLnByb3RvdHlwZS5pbmNyVm9pY2UgPSBmdW5jdGlvbiAoKSB7XG5cdGlmICh0aGlzLnZvaWNlTnVtYmVyID09PSBudWxsKVxuXHRcdHRoaXMudm9pY2VOdW1iZXIgPSAwO1xuXHRlbHNlXG5cdFx0dGhpcy52b2ljZU51bWJlcisrO1xuXHR0aGlzLm1lYXN1cmVOdW1iZXIgPSBudWxsO1xuXHR0aGlzLm5vdGVOdW1iZXIgPSBudWxsO1xufTtcblxuQ2xhc3Nlcy5wcm90b3R5cGUuaXNJbk1lYXN1cmUgPSBmdW5jdGlvbiAoKSB7XG5cdHJldHVybiB0aGlzLm1lYXN1cmVOdW1iZXIgIT09IG51bGw7XG59O1xuXG5DbGFzc2VzLnByb3RvdHlwZS5uZXdNZWFzdXJlID0gZnVuY3Rpb24gKCkge1xuXHRpZiAodGhpcy5tZWFzdXJlTnVtYmVyKVxuXHRcdHRoaXMubWVhc3VyZVRvdGFsUGVyTGluZVt0aGlzLmxpbmVOdW1iZXJdID0gdGhpcy5tZWFzdXJlTnVtYmVyO1xuXHR0aGlzLm1lYXN1cmVOdW1iZXIgPSBudWxsO1xuXHR0aGlzLm5vdGVOdW1iZXIgPSBudWxsO1xufTtcblxuQ2xhc3Nlcy5wcm90b3R5cGUuc3RhcnRNZWFzdXJlID0gZnVuY3Rpb24gKCkge1xuXHR0aGlzLm1lYXN1cmVOdW1iZXIgPSAwO1xuXHR0aGlzLm5vdGVOdW1iZXIgPSAwO1xufTtcblxuQ2xhc3Nlcy5wcm90b3R5cGUuaW5jck1lYXN1cmUgPSBmdW5jdGlvbiAoKSB7XG5cdHRoaXMubWVhc3VyZU51bWJlcisrO1xuXHR0aGlzLm5vdGVOdW1iZXIgPSAwO1xufTtcblxuQ2xhc3Nlcy5wcm90b3R5cGUuaW5jck5vdGUgPSBmdW5jdGlvbiAoKSB7XG5cdHRoaXMubm90ZU51bWJlcisrO1xufTtcblxuQ2xhc3Nlcy5wcm90b3R5cGUubWVhc3VyZVRvdGFsID0gZnVuY3Rpb24gKCkge1xuXHR2YXIgdG90YWwgPSAwO1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGluZU51bWJlcjsgaSsrKVxuXHRcdHRvdGFsICs9IHRoaXMubWVhc3VyZVRvdGFsUGVyTGluZVtpXSA/IHRoaXMubWVhc3VyZVRvdGFsUGVyTGluZVtpXSA6IDA7IC8vIFRoaXMgY2FuIGJlIG51bGwgd2hlbiBub24tbXVzaWMgdGhpbmdzIGFyZSBwcmVzZW50LlxuXHRpZiAodGhpcy5tZWFzdXJlTnVtYmVyKVxuXHRcdHRvdGFsICs9IHRoaXMubWVhc3VyZU51bWJlcjtcblx0cmV0dXJuIHRvdGFsO1xufTtcblxuQ2xhc3Nlcy5wcm90b3R5cGUuZ2V0Q3VycmVudCA9IGZ1bmN0aW9uIChjKSB7XG5cdHJldHVybiB7XG5cdFx0bGluZTogdGhpcy5saW5lTnVtYmVyLFxuXHRcdG1lYXN1cmU6IHRoaXMubWVhc3VyZU51bWJlcixcblx0XHRtZWFzdXJlVG90YWw6IHRoaXMubWVhc3VyZVRvdGFsKCksXG5cdFx0dm9pY2U6IHRoaXMudm9pY2VOdW1iZXIsXG5cdFx0bm90ZTogdGhpcy5ub3RlTnVtYmVyXG5cdH07XG59O1xuXG5DbGFzc2VzLnByb3RvdHlwZS5nZW5lcmF0ZSA9IGZ1bmN0aW9uIChjKSB7XG5cdGlmICghdGhpcy5zaG91bGRBZGRDbGFzc2VzKVxuXHRcdHJldHVybiBcIlwiO1xuXHR2YXIgcmV0ID0gW107XG5cdGlmIChjICYmIGMubGVuZ3RoID4gMCkgcmV0LnB1c2goYyk7XG5cdGlmIChjID09PSBcImFiY2pzLXRhYi1udW1iZXJcIikgLy8gVE9ETy1QRVItSEFDSyEgc3RyYWlnaHRlbiBvdXQgdGhlIHRhYmxhdHVyZVxuXHRcdHJldHVybiByZXQuam9pbignICcpXG5cdGlmIChjID09PSBcInRleHQgaW5zdHJ1bWVudC1uYW1lXCIpXG5cdFx0cmV0dXJuIFwiYWJjanMtdGV4dCBhYmNqcy1pbnN0cnVtZW50LW5hbWVcIlxuXHRpZiAodGhpcy5saW5lTnVtYmVyICE9PSBudWxsKSByZXQucHVzaChcImxcIiArIHRoaXMubGluZU51bWJlcik7XG5cdGlmICh0aGlzLm1lYXN1cmVOdW1iZXIgIT09IG51bGwpIHJldC5wdXNoKFwibVwiICsgdGhpcy5tZWFzdXJlTnVtYmVyKTtcblx0aWYgKHRoaXMubWVhc3VyZU51bWJlciAhPT0gbnVsbCkgcmV0LnB1c2goXCJtbVwiICsgdGhpcy5tZWFzdXJlVG90YWwoKSk7IC8vIG1lYXN1cmVOdW1iZXIgaXMgbnVsbCBiZXR3ZWVuIG1lYXN1cmVzIHNvIHRoaXMgaXMgc3RpbGwgdGhlIHRlc3QgZm9yIG1lYXN1cmVUb3RhbFxuXHRpZiAodGhpcy52b2ljZU51bWJlciAhPT0gbnVsbCkgcmV0LnB1c2goXCJ2XCIgKyB0aGlzLnZvaWNlTnVtYmVyKTtcblx0aWYgKGMgJiYgKGMuaW5kZXhPZignbm90ZScpID49IDAgfHwgYy5pbmRleE9mKCdyZXN0JykgPj0gMCB8fCBjLmluZGV4T2YoJ2x5cmljJykgPj0gMCkgJiYgdGhpcy5ub3RlTnVtYmVyICE9PSBudWxsKSByZXQucHVzaChcIm5cIiArIHRoaXMubm90ZU51bWJlcik7XG5cdC8vIGFkZCBhIHByZWZpeCB0byBhbGwgY2xhc3NlcyB0aGF0IGFiY2pzIGFkZHMuXG5cdGlmIChyZXQubGVuZ3RoID4gMCkge1xuXHRcdHJldCA9IHJldC5qb2luKCcgJyk7IC8vIFNvbWUgc3RyaW5ncyBhcmUgY29tcG91bmQgY2xhc3NlcyAtIHRoYXQgaXMsIHNwZWNpZnkgbW9yZSB0aGFuIG9uZSBjbGFzcyBpbiBhIHN0cmluZy5cblx0XHRyZXQgPSByZXQuc3BsaXQoJyAnKTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHJldC5sZW5ndGg7IGkrKykge1xuXHRcdFx0aWYgKHJldFtpXS5pbmRleE9mKCdhYmNqcy0nKSAhPT0gMCAmJiByZXRbaV0ubGVuZ3RoID4gMCkgLy8gaWYgdGhlIHByZWZpeCBkb2Vzbid0IGFscmVhZHkgZXhpc3QgYW5kIHRoZSBjbGFzcyBpcyBub3QgYmxhbmsuXG5cdFx0XHRcdHJldFtpXSA9ICdhYmNqcy0nICsgcmV0W2ldO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gcmV0LmpvaW4oJyAnKTtcbn07XG5cblxubW9kdWxlLmV4cG9ydHMgPSBDbGFzc2VzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/helpers/classes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/helpers/get-font-and-attr.js":
/*!*******************************************************************!*\
  !*** ./node_modules/abcjs/src/write/helpers/get-font-and-attr.js ***!
  \*******************************************************************/
/***/ ((module) => {

eval("var GetFontAndAttr = function GetFontAndAttr(formatting, classes) {\n\tthis.formatting = formatting;\n\tthis.classes = classes;\n};\n\nGetFontAndAttr.prototype.updateFonts = function (fontOverrides) {\n\tif (fontOverrides.gchordfont)\n\t\tthis.formatting.gchordfont = fontOverrides.gchordfont;\n\tif (fontOverrides.tripletfont)\n\t\tthis.formatting.tripletfont = fontOverrides.tripletfont;\n\tif (fontOverrides.annotationfont)\n\t\tthis.formatting.annotationfont = fontOverrides.annotationfont;\n\tif (fontOverrides.vocalfont)\n\t\tthis.formatting.vocalfont = fontOverrides.vocalfont;\n};\n\nGetFontAndAttr.prototype.getFamily = function (type) {\n\tif (type[0] === '\"' && type[type.length-1] === '\"') {\n\t\treturn type.substring(1, type.length-1)\n\t}\n\treturn type\n};\n\nGetFontAndAttr.prototype.calc = function (type, klass) {\n\tvar font;\n\tif (typeof type === 'string') {\n\t\tfont = this.formatting[type];\n\t\t// Raphael deliberately changes the font units to pixels for some reason, so we need to change points to pixels here.\n\t\tif (font)\n\t\t\tfont = { face: font.face, size: Math.round(font.size * 4 / 3), decoration: font.decoration, style: font.style, weight: font.weight, box: font.box };\n\t\telse\n\t\t\tfont = { face: \"Arial\", size: Math.round(12 * 4 / 3), decoration: \"underline\", style: \"normal\", weight: \"normal\" };\n\t} else\n\t\tfont = { face: type.face, size: Math.round(type.size * 4 / 3), decoration: type.decoration, style: type.style, weight: type.weight, box: type.box };\n\tvar paddingPercent = this.formatting.fontboxpadding ? this.formatting.fontboxpadding : 0.1\n\tfont.padding = font.size * paddingPercent;\n\n\tvar attr = {\n\t\t\"font-size\": font.size, 'font-style': font.style,\n\t\t\"font-family\": this.getFamily(font.face), 'font-weight': font.weight, 'text-decoration': font.decoration,\n\t\t'class': this.classes.generate(klass)\n\t};\n\treturn { font: font, attr: attr };\n};\n\nmodule.exports = GetFontAndAttr;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2hlbHBlcnMvZ2V0LWZvbnQtYW5kLWF0dHIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBLFlBQVk7QUFDWixHQUFHO0FBQ0gsV0FBVztBQUNYO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9oZWxwZXJzL2dldC1mb250LWFuZC1hdHRyLmpzPzI1NmEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEdldEZvbnRBbmRBdHRyID0gZnVuY3Rpb24gR2V0Rm9udEFuZEF0dHIoZm9ybWF0dGluZywgY2xhc3Nlcykge1xuXHR0aGlzLmZvcm1hdHRpbmcgPSBmb3JtYXR0aW5nO1xuXHR0aGlzLmNsYXNzZXMgPSBjbGFzc2VzO1xufTtcblxuR2V0Rm9udEFuZEF0dHIucHJvdG90eXBlLnVwZGF0ZUZvbnRzID0gZnVuY3Rpb24gKGZvbnRPdmVycmlkZXMpIHtcblx0aWYgKGZvbnRPdmVycmlkZXMuZ2Nob3JkZm9udClcblx0XHR0aGlzLmZvcm1hdHRpbmcuZ2Nob3JkZm9udCA9IGZvbnRPdmVycmlkZXMuZ2Nob3JkZm9udDtcblx0aWYgKGZvbnRPdmVycmlkZXMudHJpcGxldGZvbnQpXG5cdFx0dGhpcy5mb3JtYXR0aW5nLnRyaXBsZXRmb250ID0gZm9udE92ZXJyaWRlcy50cmlwbGV0Zm9udDtcblx0aWYgKGZvbnRPdmVycmlkZXMuYW5ub3RhdGlvbmZvbnQpXG5cdFx0dGhpcy5mb3JtYXR0aW5nLmFubm90YXRpb25mb250ID0gZm9udE92ZXJyaWRlcy5hbm5vdGF0aW9uZm9udDtcblx0aWYgKGZvbnRPdmVycmlkZXMudm9jYWxmb250KVxuXHRcdHRoaXMuZm9ybWF0dGluZy52b2NhbGZvbnQgPSBmb250T3ZlcnJpZGVzLnZvY2FsZm9udDtcbn07XG5cbkdldEZvbnRBbmRBdHRyLnByb3RvdHlwZS5nZXRGYW1pbHkgPSBmdW5jdGlvbiAodHlwZSkge1xuXHRpZiAodHlwZVswXSA9PT0gJ1wiJyAmJiB0eXBlW3R5cGUubGVuZ3RoLTFdID09PSAnXCInKSB7XG5cdFx0cmV0dXJuIHR5cGUuc3Vic3RyaW5nKDEsIHR5cGUubGVuZ3RoLTEpXG5cdH1cblx0cmV0dXJuIHR5cGVcbn07XG5cbkdldEZvbnRBbmRBdHRyLnByb3RvdHlwZS5jYWxjID0gZnVuY3Rpb24gKHR5cGUsIGtsYXNzKSB7XG5cdHZhciBmb250O1xuXHRpZiAodHlwZW9mIHR5cGUgPT09ICdzdHJpbmcnKSB7XG5cdFx0Zm9udCA9IHRoaXMuZm9ybWF0dGluZ1t0eXBlXTtcblx0XHQvLyBSYXBoYWVsIGRlbGliZXJhdGVseSBjaGFuZ2VzIHRoZSBmb250IHVuaXRzIHRvIHBpeGVscyBmb3Igc29tZSByZWFzb24sIHNvIHdlIG5lZWQgdG8gY2hhbmdlIHBvaW50cyB0byBwaXhlbHMgaGVyZS5cblx0XHRpZiAoZm9udClcblx0XHRcdGZvbnQgPSB7IGZhY2U6IGZvbnQuZmFjZSwgc2l6ZTogTWF0aC5yb3VuZChmb250LnNpemUgKiA0IC8gMyksIGRlY29yYXRpb246IGZvbnQuZGVjb3JhdGlvbiwgc3R5bGU6IGZvbnQuc3R5bGUsIHdlaWdodDogZm9udC53ZWlnaHQsIGJveDogZm9udC5ib3ggfTtcblx0XHRlbHNlXG5cdFx0XHRmb250ID0geyBmYWNlOiBcIkFyaWFsXCIsIHNpemU6IE1hdGgucm91bmQoMTIgKiA0IC8gMyksIGRlY29yYXRpb246IFwidW5kZXJsaW5lXCIsIHN0eWxlOiBcIm5vcm1hbFwiLCB3ZWlnaHQ6IFwibm9ybWFsXCIgfTtcblx0fSBlbHNlXG5cdFx0Zm9udCA9IHsgZmFjZTogdHlwZS5mYWNlLCBzaXplOiBNYXRoLnJvdW5kKHR5cGUuc2l6ZSAqIDQgLyAzKSwgZGVjb3JhdGlvbjogdHlwZS5kZWNvcmF0aW9uLCBzdHlsZTogdHlwZS5zdHlsZSwgd2VpZ2h0OiB0eXBlLndlaWdodCwgYm94OiB0eXBlLmJveCB9O1xuXHR2YXIgcGFkZGluZ1BlcmNlbnQgPSB0aGlzLmZvcm1hdHRpbmcuZm9udGJveHBhZGRpbmcgPyB0aGlzLmZvcm1hdHRpbmcuZm9udGJveHBhZGRpbmcgOiAwLjFcblx0Zm9udC5wYWRkaW5nID0gZm9udC5zaXplICogcGFkZGluZ1BlcmNlbnQ7XG5cblx0dmFyIGF0dHIgPSB7XG5cdFx0XCJmb250LXNpemVcIjogZm9udC5zaXplLCAnZm9udC1zdHlsZSc6IGZvbnQuc3R5bGUsXG5cdFx0XCJmb250LWZhbWlseVwiOiB0aGlzLmdldEZhbWlseShmb250LmZhY2UpLCAnZm9udC13ZWlnaHQnOiBmb250LndlaWdodCwgJ3RleHQtZGVjb3JhdGlvbic6IGZvbnQuZGVjb3JhdGlvbixcblx0XHQnY2xhc3MnOiB0aGlzLmNsYXNzZXMuZ2VuZXJhdGUoa2xhc3MpXG5cdH07XG5cdHJldHVybiB7IGZvbnQ6IGZvbnQsIGF0dHI6IGF0dHIgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gR2V0Rm9udEFuZEF0dHI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/helpers/get-font-and-attr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/helpers/get-text-size.js":
/*!***************************************************************!*\
  !*** ./node_modules/abcjs/src/write/helpers/get-text-size.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("var GetTextSize = function GetTextSize(getFontAndAttr, svg) {\n\tthis.getFontAndAttr = getFontAndAttr;\n\tthis.svg = svg;\n};\n\nGetTextSize.prototype.updateFonts = function (fontOverrides) {\n\tthis.getFontAndAttr.updateFonts(fontOverrides);\n};\n\nGetTextSize.prototype.attr = function (type, klass) {\n\treturn this.getFontAndAttr.calc(type, klass);\n};\n\nGetTextSize.prototype.getFamily = function (type) {\n\tif (type[0] === '\"' && type[type.length-1] === '\"') {\n\t\treturn type.substring(1, type.length-1)\n\t}\n\treturn type\n};\n\nGetTextSize.prototype.calc = function (text, type, klass, el) {\n\tvar hash;\n\t// This can be passed in either a string or a font. If it is a string it names one of the standard fonts.\n\tif (typeof type === 'string')\n\t\thash = this.attr(type, klass);\n\telse {\n\t\thash = {\n\t\t\tfont: {\n\t\t\t\tface: type.face,\n\t\t\t\tsize: type.size,\n\t\t\t\tdecoration: type.decoration,\n\t\t\t\tstyle: type.style,\n\t\t\t\tweight: type.weight\n\t\t\t},\n\t\t\tattr: {\n\t\t\t\t\"font-size\": type.size,\n\t\t\t\t\"font-style\": type.style,\n\t\t\t\t\"font-family\": this.getFamily(type.face),\n\t\t\t\t\"font-weight\": type.weight,\n\t\t\t\t\"text-decoration\": type.decoration,\n\t\t\t\t\"class\": this.getFontAndAttr.classes.generate(klass)\n\t\t\t}\n\t\t}\n\t}\n\tvar size = this.svg.getTextSize(text, hash.attr, el);\n\tif (hash.font.box) {\n\t\t// Add padding and an equal margin to each side.\n\t\treturn { height: size.height + hash.font.padding * 4, width: size.width + hash.font.padding * 4 };\n\t}\n\treturn size;\n};\n\nGetTextSize.prototype.baselineToCenter = function (text, type, klass, index, total) {\n\t// This is for the case where SVG wants to use the baseline of the first line as the Y coordinate.\n\t// If there are multiple lines of text or there is an array of text then that will not be centered so this adjusts it.\n\tvar height = this.calc(text, type, klass).height;\n\tvar fontHeight = this.attr(type, klass).font.size;\n\n\treturn height * 0.5 + (total - index - 2) * fontHeight;\n};\n\n\nmodule.exports = GetTextSize;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2hlbHBlcnMvZ2V0LXRleHQtc2l6ZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9oZWxwZXJzL2dldC10ZXh0LXNpemUuanM/NzdiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgR2V0VGV4dFNpemUgPSBmdW5jdGlvbiBHZXRUZXh0U2l6ZShnZXRGb250QW5kQXR0ciwgc3ZnKSB7XG5cdHRoaXMuZ2V0Rm9udEFuZEF0dHIgPSBnZXRGb250QW5kQXR0cjtcblx0dGhpcy5zdmcgPSBzdmc7XG59O1xuXG5HZXRUZXh0U2l6ZS5wcm90b3R5cGUudXBkYXRlRm9udHMgPSBmdW5jdGlvbiAoZm9udE92ZXJyaWRlcykge1xuXHR0aGlzLmdldEZvbnRBbmRBdHRyLnVwZGF0ZUZvbnRzKGZvbnRPdmVycmlkZXMpO1xufTtcblxuR2V0VGV4dFNpemUucHJvdG90eXBlLmF0dHIgPSBmdW5jdGlvbiAodHlwZSwga2xhc3MpIHtcblx0cmV0dXJuIHRoaXMuZ2V0Rm9udEFuZEF0dHIuY2FsYyh0eXBlLCBrbGFzcyk7XG59O1xuXG5HZXRUZXh0U2l6ZS5wcm90b3R5cGUuZ2V0RmFtaWx5ID0gZnVuY3Rpb24gKHR5cGUpIHtcblx0aWYgKHR5cGVbMF0gPT09ICdcIicgJiYgdHlwZVt0eXBlLmxlbmd0aC0xXSA9PT0gJ1wiJykge1xuXHRcdHJldHVybiB0eXBlLnN1YnN0cmluZygxLCB0eXBlLmxlbmd0aC0xKVxuXHR9XG5cdHJldHVybiB0eXBlXG59O1xuXG5HZXRUZXh0U2l6ZS5wcm90b3R5cGUuY2FsYyA9IGZ1bmN0aW9uICh0ZXh0LCB0eXBlLCBrbGFzcywgZWwpIHtcblx0dmFyIGhhc2g7XG5cdC8vIFRoaXMgY2FuIGJlIHBhc3NlZCBpbiBlaXRoZXIgYSBzdHJpbmcgb3IgYSBmb250LiBJZiBpdCBpcyBhIHN0cmluZyBpdCBuYW1lcyBvbmUgb2YgdGhlIHN0YW5kYXJkIGZvbnRzLlxuXHRpZiAodHlwZW9mIHR5cGUgPT09ICdzdHJpbmcnKVxuXHRcdGhhc2ggPSB0aGlzLmF0dHIodHlwZSwga2xhc3MpO1xuXHRlbHNlIHtcblx0XHRoYXNoID0ge1xuXHRcdFx0Zm9udDoge1xuXHRcdFx0XHRmYWNlOiB0eXBlLmZhY2UsXG5cdFx0XHRcdHNpemU6IHR5cGUuc2l6ZSxcblx0XHRcdFx0ZGVjb3JhdGlvbjogdHlwZS5kZWNvcmF0aW9uLFxuXHRcdFx0XHRzdHlsZTogdHlwZS5zdHlsZSxcblx0XHRcdFx0d2VpZ2h0OiB0eXBlLndlaWdodFxuXHRcdFx0fSxcblx0XHRcdGF0dHI6IHtcblx0XHRcdFx0XCJmb250LXNpemVcIjogdHlwZS5zaXplLFxuXHRcdFx0XHRcImZvbnQtc3R5bGVcIjogdHlwZS5zdHlsZSxcblx0XHRcdFx0XCJmb250LWZhbWlseVwiOiB0aGlzLmdldEZhbWlseSh0eXBlLmZhY2UpLFxuXHRcdFx0XHRcImZvbnQtd2VpZ2h0XCI6IHR5cGUud2VpZ2h0LFxuXHRcdFx0XHRcInRleHQtZGVjb3JhdGlvblwiOiB0eXBlLmRlY29yYXRpb24sXG5cdFx0XHRcdFwiY2xhc3NcIjogdGhpcy5nZXRGb250QW5kQXR0ci5jbGFzc2VzLmdlbmVyYXRlKGtsYXNzKVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXHR2YXIgc2l6ZSA9IHRoaXMuc3ZnLmdldFRleHRTaXplKHRleHQsIGhhc2guYXR0ciwgZWwpO1xuXHRpZiAoaGFzaC5mb250LmJveCkge1xuXHRcdC8vIEFkZCBwYWRkaW5nIGFuZCBhbiBlcXVhbCBtYXJnaW4gdG8gZWFjaCBzaWRlLlxuXHRcdHJldHVybiB7IGhlaWdodDogc2l6ZS5oZWlnaHQgKyBoYXNoLmZvbnQucGFkZGluZyAqIDQsIHdpZHRoOiBzaXplLndpZHRoICsgaGFzaC5mb250LnBhZGRpbmcgKiA0IH07XG5cdH1cblx0cmV0dXJuIHNpemU7XG59O1xuXG5HZXRUZXh0U2l6ZS5wcm90b3R5cGUuYmFzZWxpbmVUb0NlbnRlciA9IGZ1bmN0aW9uICh0ZXh0LCB0eXBlLCBrbGFzcywgaW5kZXgsIHRvdGFsKSB7XG5cdC8vIFRoaXMgaXMgZm9yIHRoZSBjYXNlIHdoZXJlIFNWRyB3YW50cyB0byB1c2UgdGhlIGJhc2VsaW5lIG9mIHRoZSBmaXJzdCBsaW5lIGFzIHRoZSBZIGNvb3JkaW5hdGUuXG5cdC8vIElmIHRoZXJlIGFyZSBtdWx0aXBsZSBsaW5lcyBvZiB0ZXh0IG9yIHRoZXJlIGlzIGFuIGFycmF5IG9mIHRleHQgdGhlbiB0aGF0IHdpbGwgbm90IGJlIGNlbnRlcmVkIHNvIHRoaXMgYWRqdXN0cyBpdC5cblx0dmFyIGhlaWdodCA9IHRoaXMuY2FsYyh0ZXh0LCB0eXBlLCBrbGFzcykuaGVpZ2h0O1xuXHR2YXIgZm9udEhlaWdodCA9IHRoaXMuYXR0cih0eXBlLCBrbGFzcykuZm9udC5zaXplO1xuXG5cdHJldHVybiBoZWlnaHQgKiAwLjUgKyAodG90YWwgLSBpbmRleCAtIDIpICogZm9udEhlaWdodDtcbn07XG5cblxubW9kdWxlLmV4cG9ydHMgPSBHZXRUZXh0U2l6ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/helpers/get-text-size.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/helpers/set-class.js":
/*!***********************************************************!*\
  !*** ./node_modules/abcjs/src/write/helpers/set-class.js ***!
  \***********************************************************/
/***/ ((module) => {

eval("var setClass = function (elemset, addClass, removeClass, color) {\n\tif (!elemset)\n\t\treturn;\n\tfor (var i = 0; i < elemset.length; i++) {\n\t\tvar el = elemset[i];\n\t\tvar attr = el.getAttribute(\"highlight\");\n\t\tif (!attr) attr = \"fill\";\n\t\tel.setAttribute(attr, color);\n\t\tvar kls = el.getAttribute(\"class\");\n\t\tif (!kls) kls = \"\";\n\t\tkls = kls.replace(removeClass, \"\");\n\t\tkls = kls.replace(addClass, \"\");\n\t\tif (addClass.length > 0) {\n\t\t\tif (kls.length > 0 && kls[kls.length - 1] !== ' ') kls += \" \";\n\t\t\tkls += addClass;\n\t\t}\n\t\tel.setAttribute(\"class\", kls);\n\t}\n};\n\nmodule.exports = setClass;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2hlbHBlcnMvc2V0LWNsYXNzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixvQkFBb0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2hlbHBlcnMvc2V0LWNsYXNzLmpzP2JjNmIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHNldENsYXNzID0gZnVuY3Rpb24gKGVsZW1zZXQsIGFkZENsYXNzLCByZW1vdmVDbGFzcywgY29sb3IpIHtcblx0aWYgKCFlbGVtc2V0KVxuXHRcdHJldHVybjtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBlbGVtc2V0Lmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGVsID0gZWxlbXNldFtpXTtcblx0XHR2YXIgYXR0ciA9IGVsLmdldEF0dHJpYnV0ZShcImhpZ2hsaWdodFwiKTtcblx0XHRpZiAoIWF0dHIpIGF0dHIgPSBcImZpbGxcIjtcblx0XHRlbC5zZXRBdHRyaWJ1dGUoYXR0ciwgY29sb3IpO1xuXHRcdHZhciBrbHMgPSBlbC5nZXRBdHRyaWJ1dGUoXCJjbGFzc1wiKTtcblx0XHRpZiAoIWtscykga2xzID0gXCJcIjtcblx0XHRrbHMgPSBrbHMucmVwbGFjZShyZW1vdmVDbGFzcywgXCJcIik7XG5cdFx0a2xzID0ga2xzLnJlcGxhY2UoYWRkQ2xhc3MsIFwiXCIpO1xuXHRcdGlmIChhZGRDbGFzcy5sZW5ndGggPiAwKSB7XG5cdFx0XHRpZiAoa2xzLmxlbmd0aCA+IDAgJiYga2xzW2tscy5sZW5ndGggLSAxXSAhPT0gJyAnKSBrbHMgKz0gXCIgXCI7XG5cdFx0XHRrbHMgKz0gYWRkQ2xhc3M7XG5cdFx0fVxuXHRcdGVsLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIGtscyk7XG5cdH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0Q2xhc3M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/helpers/set-class.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/helpers/spacing.js":
/*!*********************************************************!*\
  !*** ./node_modules/abcjs/src/write/helpers/spacing.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("var spacing = {};\n\nspacing.FONTEM = 360;\nspacing.FONTSIZE = 30;\nspacing.STEP = spacing.FONTSIZE * 93 / 720;\nspacing.SPACE = 10;\nspacing.TOPNOTE = 15;\nspacing.STAVEHEIGHT = 100;\nspacing.INDENT = 50;\n\nmodule.exports = spacing;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2hlbHBlcnMvc3BhY2luZy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9oZWxwZXJzL3NwYWNpbmcuanM/MjZlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc3BhY2luZyA9IHt9O1xuXG5zcGFjaW5nLkZPTlRFTSA9IDM2MDtcbnNwYWNpbmcuRk9OVFNJWkUgPSAzMDtcbnNwYWNpbmcuU1RFUCA9IHNwYWNpbmcuRk9OVFNJWkUgKiA5MyAvIDcyMDtcbnNwYWNpbmcuU1BBQ0UgPSAxMDtcbnNwYWNpbmcuVE9QTk9URSA9IDE1O1xuc3BhY2luZy5TVEFWRUhFSUdIVCA9IDEwMDtcbnNwYWNpbmcuSU5ERU5UID0gNTA7XG5cbm1vZHVsZS5leHBvcnRzID0gc3BhY2luZztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/helpers/spacing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/interactive/create-analysis.js":
/*!*********************************************************************!*\
  !*** ./node_modules/abcjs/src/write/interactive/create-analysis.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("function findNumber(klass, match, target, name) {\n\tif (klass.indexOf(match) === 0) {\n\t\tvar value = klass.replace(match, '');\n\t\tvar num = parseInt(value, 10);\n\t\tif ('' + num === value)\n\t\t\ttarget[name] = num;\n\t}\n}\n\nfunction createAnalysis(target, ev) {\n\tvar classes = [];\n\tif (target.absEl.elemset) {\n\t\tvar classObj = {};\n\t\tfor (var j = 0; j < target.absEl.elemset.length; j++) {\n\t\t\tvar es = target.absEl.elemset[j];\n\t\t\tif (es) {\n\t\t\t\tvar klass = es.getAttribute(\"class\").split(' ');\n\t\t\t\tfor (var k = 0; k < klass.length; k++)\n\t\t\t\t\tclassObj[klass[k]] = true;\n\t\t\t}\n\t\t}\n\t\tfor (var kk = 0; kk < Object.keys(classObj).length; kk++)\n\t\t\tclasses.push(Object.keys(classObj)[kk]);\n\t}\n\tvar analysis = {};\n\tfor (var ii = 0; ii < classes.length; ii++) {\n\t\tfindNumber(classes[ii], \"abcjs-v\", analysis, \"voice\");\n\t\tfindNumber(classes[ii], \"abcjs-l\", analysis, \"line\");\n\t\tfindNumber(classes[ii], \"abcjs-m\", analysis, \"measure\");\n\t}\n\tif (target.staffPos)\n\t\tanalysis.staffPos = target.staffPos;\n\tvar closest = ev.target;\n\twhile (closest && closest.dataset && !closest.dataset.name && closest.tagName.toLowerCase() !== 'svg')\n\t\tclosest = closest.parentNode;\n\tvar parent = ev.target;\n\twhile (parent && parent.dataset && !parent.dataset.index && parent.tagName.toLowerCase() !== 'svg')\n\t\tparent = parent.parentNode;\n\tif (parent && parent.dataset) {\n\t\tanalysis.name = parent.dataset.name;\n\t\tanalysis.clickedName = closest.dataset.name;\n\t\tanalysis.parentClasses = parent.classList;\n\t}\n\tif (closest && closest.classList)\n\t\tanalysis.clickedClasses = closest.classList;\n\tanalysis.selectableElement = target.svgEl;\n\treturn {classes: classes, analysis: analysis}\n}\n\nmodule.exports = createAnalysis;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2ludGVyYWN0aXZlL2NyZWF0ZS1hbmFseXNpcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGlDQUFpQztBQUNuRDtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isa0JBQWtCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixtQ0FBbUM7QUFDdEQ7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHFCQUFxQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2ludGVyYWN0aXZlL2NyZWF0ZS1hbmFseXNpcy5qcz9hODE1Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGZpbmROdW1iZXIoa2xhc3MsIG1hdGNoLCB0YXJnZXQsIG5hbWUpIHtcblx0aWYgKGtsYXNzLmluZGV4T2YobWF0Y2gpID09PSAwKSB7XG5cdFx0dmFyIHZhbHVlID0ga2xhc3MucmVwbGFjZShtYXRjaCwgJycpO1xuXHRcdHZhciBudW0gPSBwYXJzZUludCh2YWx1ZSwgMTApO1xuXHRcdGlmICgnJyArIG51bSA9PT0gdmFsdWUpXG5cdFx0XHR0YXJnZXRbbmFtZV0gPSBudW07XG5cdH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlQW5hbHlzaXModGFyZ2V0LCBldikge1xuXHR2YXIgY2xhc3NlcyA9IFtdO1xuXHRpZiAodGFyZ2V0LmFic0VsLmVsZW1zZXQpIHtcblx0XHR2YXIgY2xhc3NPYmogPSB7fTtcblx0XHRmb3IgKHZhciBqID0gMDsgaiA8IHRhcmdldC5hYnNFbC5lbGVtc2V0Lmxlbmd0aDsgaisrKSB7XG5cdFx0XHR2YXIgZXMgPSB0YXJnZXQuYWJzRWwuZWxlbXNldFtqXTtcblx0XHRcdGlmIChlcykge1xuXHRcdFx0XHR2YXIga2xhc3MgPSBlcy5nZXRBdHRyaWJ1dGUoXCJjbGFzc1wiKS5zcGxpdCgnICcpO1xuXHRcdFx0XHRmb3IgKHZhciBrID0gMDsgayA8IGtsYXNzLmxlbmd0aDsgaysrKVxuXHRcdFx0XHRcdGNsYXNzT2JqW2tsYXNzW2tdXSA9IHRydWU7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGZvciAodmFyIGtrID0gMDsga2sgPCBPYmplY3Qua2V5cyhjbGFzc09iaikubGVuZ3RoOyBraysrKVxuXHRcdFx0Y2xhc3Nlcy5wdXNoKE9iamVjdC5rZXlzKGNsYXNzT2JqKVtra10pO1xuXHR9XG5cdHZhciBhbmFseXNpcyA9IHt9O1xuXHRmb3IgKHZhciBpaSA9IDA7IGlpIDwgY2xhc3Nlcy5sZW5ndGg7IGlpKyspIHtcblx0XHRmaW5kTnVtYmVyKGNsYXNzZXNbaWldLCBcImFiY2pzLXZcIiwgYW5hbHlzaXMsIFwidm9pY2VcIik7XG5cdFx0ZmluZE51bWJlcihjbGFzc2VzW2lpXSwgXCJhYmNqcy1sXCIsIGFuYWx5c2lzLCBcImxpbmVcIik7XG5cdFx0ZmluZE51bWJlcihjbGFzc2VzW2lpXSwgXCJhYmNqcy1tXCIsIGFuYWx5c2lzLCBcIm1lYXN1cmVcIik7XG5cdH1cblx0aWYgKHRhcmdldC5zdGFmZlBvcylcblx0XHRhbmFseXNpcy5zdGFmZlBvcyA9IHRhcmdldC5zdGFmZlBvcztcblx0dmFyIGNsb3Nlc3QgPSBldi50YXJnZXQ7XG5cdHdoaWxlIChjbG9zZXN0ICYmIGNsb3Nlc3QuZGF0YXNldCAmJiAhY2xvc2VzdC5kYXRhc2V0Lm5hbWUgJiYgY2xvc2VzdC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgIT09ICdzdmcnKVxuXHRcdGNsb3Nlc3QgPSBjbG9zZXN0LnBhcmVudE5vZGU7XG5cdHZhciBwYXJlbnQgPSBldi50YXJnZXQ7XG5cdHdoaWxlIChwYXJlbnQgJiYgcGFyZW50LmRhdGFzZXQgJiYgIXBhcmVudC5kYXRhc2V0LmluZGV4ICYmIHBhcmVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgIT09ICdzdmcnKVxuXHRcdHBhcmVudCA9IHBhcmVudC5wYXJlbnROb2RlO1xuXHRpZiAocGFyZW50ICYmIHBhcmVudC5kYXRhc2V0KSB7XG5cdFx0YW5hbHlzaXMubmFtZSA9IHBhcmVudC5kYXRhc2V0Lm5hbWU7XG5cdFx0YW5hbHlzaXMuY2xpY2tlZE5hbWUgPSBjbG9zZXN0LmRhdGFzZXQubmFtZTtcblx0XHRhbmFseXNpcy5wYXJlbnRDbGFzc2VzID0gcGFyZW50LmNsYXNzTGlzdDtcblx0fVxuXHRpZiAoY2xvc2VzdCAmJiBjbG9zZXN0LmNsYXNzTGlzdClcblx0XHRhbmFseXNpcy5jbGlja2VkQ2xhc3NlcyA9IGNsb3Nlc3QuY2xhc3NMaXN0O1xuXHRhbmFseXNpcy5zZWxlY3RhYmxlRWxlbWVudCA9IHRhcmdldC5zdmdFbDtcblx0cmV0dXJuIHtjbGFzc2VzOiBjbGFzc2VzLCBhbmFseXNpczogYW5hbHlzaXN9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY3JlYXRlQW5hbHlzaXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/interactive/create-analysis.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/interactive/find-selectable-element.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/abcjs/src/write/interactive/find-selectable-element.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var createAnalysis = __webpack_require__(/*! ./create-analysis */ \"(ssr)/./node_modules/abcjs/src/write/interactive/create-analysis.js\");\n\nfunction findSelectableElement(event) {\n\tvar selectable = event\n\twhile (selectable && selectable.attributes && selectable.tagName.toLowerCase() !== 'svg' && !selectable.attributes.selectable) {\n\t\tselectable = selectable.parentNode\n\t}\n\tif (selectable && selectable.attributes && selectable.attributes.selectable) {\n\t\tvar index = selectable.attributes['data-index'].nodeValue\n\t\tif (index) {\n\t\t\tindex = parseInt(index, 10)\n\t\t\tif (index >= 0 && index < this.selectables.length) {\n\t\t\t\tvar element = this.selectables[index]\n\t\t\t\tvar ret = createAnalysis(element, event)\n\t\t\t\tret.index = index\n\t\t\t\tret.element = element\n\t\t\t\treturn ret\n\t\t\t}\n\t\t}\n\t}\n\treturn null\n}\n\nmodule.exports = findSelectableElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2ludGVyYWN0aXZlL2ZpbmQtc2VsZWN0YWJsZS1lbGVtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBLHFCQUFxQixtQkFBTyxDQUFDLDhGQUFtQjs7QUFFaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9pbnRlcmFjdGl2ZS9maW5kLXNlbGVjdGFibGUtZWxlbWVudC5qcz8yOTQ2Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBjcmVhdGVBbmFseXNpcyA9IHJlcXVpcmUoJy4vY3JlYXRlLWFuYWx5c2lzJyk7XG5cbmZ1bmN0aW9uIGZpbmRTZWxlY3RhYmxlRWxlbWVudChldmVudCkge1xuXHR2YXIgc2VsZWN0YWJsZSA9IGV2ZW50XG5cdHdoaWxlIChzZWxlY3RhYmxlICYmIHNlbGVjdGFibGUuYXR0cmlidXRlcyAmJiBzZWxlY3RhYmxlLnRhZ05hbWUudG9Mb3dlckNhc2UoKSAhPT0gJ3N2ZycgJiYgIXNlbGVjdGFibGUuYXR0cmlidXRlcy5zZWxlY3RhYmxlKSB7XG5cdFx0c2VsZWN0YWJsZSA9IHNlbGVjdGFibGUucGFyZW50Tm9kZVxuXHR9XG5cdGlmIChzZWxlY3RhYmxlICYmIHNlbGVjdGFibGUuYXR0cmlidXRlcyAmJiBzZWxlY3RhYmxlLmF0dHJpYnV0ZXMuc2VsZWN0YWJsZSkge1xuXHRcdHZhciBpbmRleCA9IHNlbGVjdGFibGUuYXR0cmlidXRlc1snZGF0YS1pbmRleCddLm5vZGVWYWx1ZVxuXHRcdGlmIChpbmRleCkge1xuXHRcdFx0aW5kZXggPSBwYXJzZUludChpbmRleCwgMTApXG5cdFx0XHRpZiAoaW5kZXggPj0gMCAmJiBpbmRleCA8IHRoaXMuc2VsZWN0YWJsZXMubGVuZ3RoKSB7XG5cdFx0XHRcdHZhciBlbGVtZW50ID0gdGhpcy5zZWxlY3RhYmxlc1tpbmRleF1cblx0XHRcdFx0dmFyIHJldCA9IGNyZWF0ZUFuYWx5c2lzKGVsZW1lbnQsIGV2ZW50KVxuXHRcdFx0XHRyZXQuaW5kZXggPSBpbmRleFxuXHRcdFx0XHRyZXQuZWxlbWVudCA9IGVsZW1lbnRcblx0XHRcdFx0cmV0dXJuIHJldFxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXHRyZXR1cm4gbnVsbFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZpbmRTZWxlY3RhYmxlRWxlbWVudDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/interactive/find-selectable-element.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/interactive/highlight.js":
/*!***************************************************************!*\
  !*** ./node_modules/abcjs/src/write/interactive/highlight.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var setClass = __webpack_require__(/*! ../helpers/set-class */ \"(ssr)/./node_modules/abcjs/src/write/helpers/set-class.js\");\n\nvar highlight = function (klass, color) {\n\tif (klass === undefined)\n\t\tklass = \"abcjs-note_selected\";\n\tif (color === undefined)\n\t\tcolor = \"#ff0000\";\n\tsetClass(this.elemset, klass, \"\", color);\n};\n\nmodule.exports = highlight;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2ludGVyYWN0aXZlL2hpZ2hsaWdodC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxlQUFlLG1CQUFPLENBQUMsdUZBQXNCOztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3NyYy93cml0ZS9pbnRlcmFjdGl2ZS9oaWdobGlnaHQuanM/MDk1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc2V0Q2xhc3MgPSByZXF1aXJlKCcuLi9oZWxwZXJzL3NldC1jbGFzcycpO1xuXG52YXIgaGlnaGxpZ2h0ID0gZnVuY3Rpb24gKGtsYXNzLCBjb2xvcikge1xuXHRpZiAoa2xhc3MgPT09IHVuZGVmaW5lZClcblx0XHRrbGFzcyA9IFwiYWJjanMtbm90ZV9zZWxlY3RlZFwiO1xuXHRpZiAoY29sb3IgPT09IHVuZGVmaW5lZClcblx0XHRjb2xvciA9IFwiI2ZmMDAwMFwiO1xuXHRzZXRDbGFzcyh0aGlzLmVsZW1zZXQsIGtsYXNzLCBcIlwiLCBjb2xvcik7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGhpZ2hsaWdodDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/interactive/highlight.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/interactive/selection.js":
/*!***************************************************************!*\
  !*** ./node_modules/abcjs/src/write/interactive/selection.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var spacing = __webpack_require__(/*! ../helpers/spacing */ \"(ssr)/./node_modules/abcjs/src/write/helpers/spacing.js\");\nvar createAnalysis = __webpack_require__(/*! ./create-analysis */ \"(ssr)/./node_modules/abcjs/src/write/interactive/create-analysis.js\");\n\nfunction setupSelection(engraver, svgs) {\n\tengraver.rangeHighlight = rangeHighlight;\n\tif (engraver.dragging) {\n\t\tfor (var h = 0; h < engraver.selectables.length; h++) {\n\t\t\tvar hist = engraver.selectables[h];\n\t\t\tif (hist.svgEl.getAttribute(\"selectable\") === \"true\") {\n\t\t\t\thist.svgEl.setAttribute(\"tabindex\", 0);\n\t\t\t\thist.svgEl.setAttribute(\"data-index\", h);\n\t\t\t\thist.svgEl.addEventListener(\"keydown\", keyboardDown.bind(engraver));\n\t\t\t\thist.svgEl.addEventListener(\"keyup\", keyboardSelection.bind(engraver));\n\t\t\t\thist.svgEl.addEventListener(\"focus\", elementFocused.bind(engraver));\n\t\t\t}\n\t\t}\n\t}\n\tfor (var i = 0; i < svgs.length; i++) {\n\t\tsvgs[i].addEventListener('touchstart', mouseDown.bind(engraver), { passive: true });\n\t\tsvgs[i].addEventListener('touchmove', mouseMove.bind(engraver), { passive: true });\n\t\tsvgs[i].addEventListener('touchend', mouseUp.bind(engraver), { passive: true });\n\t\tsvgs[i].addEventListener('mousedown', mouseDown.bind(engraver));\n\t\tsvgs[i].addEventListener('mousemove', mouseMove.bind(engraver));\n\t\tsvgs[i].addEventListener('mouseup', mouseUp.bind(engraver));\n\t}\n}\n\nfunction getCoord(ev) {\n\tvar scaleX = 1;\n\tvar scaleY = 1;\n\tvar svg = ev.target.closest('svg')\n\tvar yOffset = 0\n\n\t// when renderer.options.responsive === 'resize' the click coords are in relation to the HTML\n\t// element, we need to convert to the SVG viewBox coords\n\tif (svg && svg.viewBox && svg.viewBox.baseVal) { // Firefox passes null to this when no viewBox is given\n\t\t// Chrome makes these values null when no viewBox is given.\n\t\tif (svg.viewBox.baseVal.width !== 0)\n\t\t\tscaleX = svg.viewBox.baseVal.width / svg.clientWidth\n\t\tif (svg.viewBox.baseVal.height !== 0)\n\t\t\tscaleY = svg.viewBox.baseVal.height / svg.clientHeight\n\t\tyOffset = svg.viewBox.baseVal.y\n\t}\n\n\tvar svgClicked = ev.target && ev.target.tagName === \"svg\";\n\tvar x;\n\tvar y;\n\tif (svgClicked) {\n\t\tx = ev.offsetX;\n\t\ty = ev.offsetY;\n\t} else {\n\t\tx = ev.layerX;\n\t\ty = ev.layerY;\n\t}\n\n\tx = x * scaleX;\n\ty = y * scaleY;\n\t//console.log(x, y)\n\n\treturn [x, y + yOffset];\n}\n\nfunction elementFocused(ev) {\n\t// If there had been another element focused and is being dragged, then report that before setting the new element up.\n\tif (this.dragMechanism === \"keyboard\" && this.dragYStep !== 0 && this.dragTarget)\n\t\tnotifySelect.bind(this)(this.dragTarget, this.dragYStep, this.selectables.length, this.dragIndex, ev);\n\n\tthis.dragYStep = 0;\n}\n\nfunction keyboardDown(ev) {\n\t// Swallow the up and down arrow events - they will be used for dragging with the keyboard\n\tswitch (ev.keyCode) {\n\t\tcase 38:\n\t\tcase 40:\n\t\t\tev.preventDefault();\n\t}\n}\n\nfunction keyboardSelection(ev) {\n\t// \"this\" is the EngraverController because of the bind(this) when setting the event listener.\n\tvar handled = false;\n\tvar index = ev.target.dataset.index;\n\tswitch (ev.keyCode) {\n\t\tcase 13:\n\t\tcase 32:\n\t\t\thandled = true;\n\t\t\tthis.dragTarget = this.selectables[index];\n\t\t\tthis.dragIndex = index;\n\t\t\tthis.dragMechanism = \"keyboard\";\n\t\t\tmouseUp.bind(this)(ev);\n\t\t\tbreak;\n\t\tcase 38: // arrow up\n\t\t\thandled = true;\n\t\t\tthis.dragTarget = this.selectables[index];\n\t\t\tthis.dragIndex = index;\n\t\t\tif (this.dragTarget && this.dragTarget.isDraggable) {\n\t\t\t\tif (this.dragging && this.dragTarget.isDraggable)\n\t\t\t\t\tthis.dragTarget.absEl.highlight(undefined, this.dragColor);\n\t\t\t\tthis.dragYStep--;\n\t\t\t\tthis.dragTarget.svgEl.setAttribute(\"transform\", \"translate(0,\" + (this.dragYStep * spacing.STEP) + \")\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 40: // arrow down\n\t\t\thandled = true;\n\t\t\tthis.dragTarget = this.selectables[index];\n\t\t\tthis.dragIndex = index;\n\t\t\tthis.dragMechanism = \"keyboard\";\n\t\t\tif (this.dragTarget && this.dragTarget.isDraggable) {\n\t\t\t\tif (this.dragging && this.dragTarget.isDraggable)\n\t\t\t\t\tthis.dragTarget.absEl.highlight(undefined, this.dragColor);\n\t\t\t\tthis.dragYStep++;\n\t\t\t\tthis.dragTarget.svgEl.setAttribute(\"transform\", \"translate(0,\" + (this.dragYStep * spacing.STEP) + \")\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 9: // tab\n\t\t\t// This is losing focus - if there had been dragging, then do the callback\n\t\t\tif (this.dragYStep !== 0) {\n\t\t\t\tmouseUp.bind(this)(ev);\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t//console.log(ev);\n\t\t\tbreak;\n\t}\n\tif (handled)\n\t\tev.preventDefault();\n}\n\nfunction findElementInHistory(selectables, el) {\n\tif (!el)\n\t\treturn -1;\n\t// This should always exist, but it occasionally causes an exception, so check first.\n\tvar dataset = el.dataset\n\tif (!dataset)\n\t\treturn -1\n\tvar index = dataset.index\n\tfor (var i = 0; i < selectables.length; i++) {\n\t\tvar svgDataset = selectables[i].svgEl.dataset\n\t\tif (svgDataset && index === svgDataset.index)\n\t\t\treturn i;\n\t}\n\treturn -1;\n}\n\nfunction findElementByCoord(self, x, y) {\n\tvar minDistance = 9999999;\n\tvar closestIndex = -1;\n\tfor (var i = 0; i < self.selectables.length && minDistance > 0; i++) {\n\t\tvar el = self.selectables[i];\n\n\t\tself.getDim(el);\n\t\tif (el.dim.left < x && el.dim.right > x && el.dim.top < y && el.dim.bottom > y) {\n\t\t\t// See if it is a direct hit on an element - if so, definitely take it (there are no overlapping elements)\n\t\t\tclosestIndex = i;\n\t\t\tminDistance = 0;\n\t\t} else if (el.dim.top < y && el.dim.bottom > y) {\n\t\t\t// See if it is the same vertical as the element. Then the distance is the x difference\n\t\t\tvar horiz = Math.min(Math.abs(el.dim.left - x), Math.abs(el.dim.right - x));\n\t\t\tif (horiz < minDistance) {\n\t\t\t\tminDistance = horiz;\n\t\t\t\tclosestIndex = i;\n\t\t\t}\n\t\t} else if (el.dim.left < x && el.dim.right > x) {\n\t\t\t// See if it is the same horizontal as the element. Then the distance is the y difference\n\t\t\tvar vert = Math.min(Math.abs(el.dim.top - y), Math.abs(el.dim.bottom - y));\n\t\t\tif (vert < minDistance) {\n\t\t\t\tminDistance = vert;\n\t\t\t\tclosestIndex = i;\n\t\t\t}\n\t\t} else {\n\t\t\t// figure out the distance to this element.\n\t\t\tvar dx = Math.abs(x - el.dim.left) > Math.abs(x - el.dim.right) ? Math.abs(x - el.dim.right) : Math.abs(x - el.dim.left);\n\t\t\tvar dy = Math.abs(y - el.dim.top) > Math.abs(y - el.dim.bottom) ? Math.abs(y - el.dim.bottom) : Math.abs(y - el.dim.top);\n\t\t\tvar hypotenuse = Math.sqrt(dx * dx + dy * dy);\n\t\t\tif (hypotenuse < minDistance) {\n\t\t\t\tminDistance = hypotenuse;\n\t\t\t\tclosestIndex = i;\n\t\t\t}\n\t\t}\n\t}\n\treturn (closestIndex >= 0 && minDistance <= 12) ? closestIndex : -1;\n}\n\nfunction getBestMatchCoordinates(dim, ev, scale) {\n\t// Different browsers have conflicting meanings for the coordinates that are returned.\n\t// If the item we want is clicked on directly, then we will just see what is the best match.\n\t// This seems like less of a hack than browser sniffing.\n\tif (dim.x <= ev.offsetX && dim.x + dim.width >= ev.offsetX &&\n\t\tdim.y <= ev.offsetY && dim.y + dim.height >= ev.offsetY)\n\t\treturn [ev.offsetX, ev.offsetY];\n\t// Firefox returns a weird value for offset, but layer is correct.\n\t// Safari and Chrome return the correct value for offset, but layer is multiplied by the scale (that is, if it were rendered with { scale: 2 })\n\t// For instance (if scale is 2):\n\t// Firefox: { offsetY: 5, layerY: 335 }\n\t// Others: {offsetY: 335, layerY: 670} (there could be a little rounding, so the number might not be exactly 2x)\n\t// So, if layerY/scale is approx. offsetY, then use offsetY, otherwise use layerY\n\tvar epsilon = Math.abs(ev.layerY / scale - ev.offsetY);\n\tif (epsilon < 3)\n\t\treturn [ev.offsetX, ev.offsetY];\n\telse\n\t\treturn [ev.layerX, ev.layerY];\n}\n\nfunction getTarget(target) {\n\t// This searches up the dom for the first item containing the attribute \"selectable\", or stopping at the SVG.\n\tif (!target)\n\t\treturn null;\n\tif (target.tagName === \"svg\")\n\t\treturn target;\n\n\tif (!target.getAttribute)\n\t\treturn null;\t\n\tvar found = target.getAttribute(\"selectable\");\n\twhile (!found) {\n\t\tif (!target.parentElement)\n\t\t\tfound = true;\n\t\telse {\n\t\t\ttarget = target.parentElement;\n\t\t\tif (target.tagName === \"svg\")\n\t\t\t\tfound = true;\n\t\t\telse\n\t\t\t\tfound = target.getAttribute(\"selectable\");\n\t\t}\n\t}\n\treturn target;\n}\n\nfunction getMousePosition(self, ev) {\n\t// if the user clicked exactly on an element that we're interested in, then we already have the answer.\n\t// This is more reliable than the calculations because firefox returns different coords for offsetX, offsetY\n\tvar x;\n\tvar y;\n\tvar box;\n\tvar clickedOn = findElementInHistory(self.selectables, getTarget(ev.target));\n\tif (clickedOn >= 0) {\n\t\t// There was a direct hit on an element.\n\t\tbox = getBestMatchCoordinates(self.selectables[clickedOn].svgEl.getBBox(), ev, self.scale);\n\t\tx = box[0];\n\t\ty = box[1];\n\t\t//console.log(\"clicked on\", clickedOn, x, y, self.selectables[clickedOn].svgEl.getBBox(), ev.target.getBBox());\n\t} else {\n\t\t// See if they clicked close to an element.\n\t\tbox = getCoord(ev);\n\t\tx = box[0];\n\t\ty = box[1];\n\t\tclickedOn = findElementByCoord(self, x, y);\n\t\t//console.log(\"clicked near\", clickedOn, x, y, printEl(ev.target));\n\t}\n\treturn { x: x, y: y, clickedOn: clickedOn };\n}\n\nfunction attachMissingTouchEventAttributes(touchEv) {\n\tif (!touchEv || !touchEv.target || !touchEv.touches || touchEv.touches.length < 1)\n\t\treturn\n\tvar rect = touchEv.target.getBoundingClientRect();\n\tvar offsetX = touchEv.touches[0].pageX - rect.left;\n\tvar offsetY = touchEv.touches[0].pageY - rect.top;\n\n\ttouchEv.touches[0].offsetX = offsetX;\n\ttouchEv.touches[0].offsetY = offsetY;\n\n\ttouchEv.touches[0].layerX = touchEv.touches[0].pageX;\n\ttouchEv.touches[0].layerY = touchEv.touches[0].pageY;\n}\n\nfunction mouseDown(ev) {\n\t// \"this\" is the EngraverController because of the bind(this) when setting the event listener.\n\tvar _ev = ev;\n\tif (ev.type === 'touchstart') {\n\t\tattachMissingTouchEventAttributes(ev);\n\t\tif (ev.touches.length > 0)\n\t\t\t_ev = ev.touches[0];\n\t}\n\n\tvar positioning = getMousePosition(this, _ev);\n\n\t// Only start dragging if the user clicked close enough to an element and clicked with the main mouse button.\n\tif (positioning.clickedOn >= 0 && (ev.type === 'touchstart' || ev.button === 0) && this.selectables[positioning.clickedOn]) {\n\t\tthis.dragTarget = this.selectables[positioning.clickedOn];\n\t\tthis.dragIndex = positioning.clickedOn;\n\t\tthis.dragMechanism = \"mouse\";\n\t\tthis.dragMouseStart = { x: positioning.x, y: positioning.y };\n\t\tif (this.dragging && this.dragTarget.isDraggable) {\n\t\t\taddGlobalClass(this.renderer.paper, \"abcjs-dragging-in-progress\");\n\t\t\tthis.dragTarget.absEl.highlight(undefined, this.dragColor);\n\t\t}\n\t}\n}\n\nfunction mouseMove(ev) {\n\tvar _ev = ev;\n\tif (ev.type === 'touchmove') {\n\t\tattachMissingTouchEventAttributes(ev);\n\t\tif (ev.touches.length > 0)\n\t\t\t_ev = ev.touches[0];\n\t}\n\tthis.lastTouchMove = ev;\n\t// \"this\" is the EngraverController because of the bind(this) when setting the event listener.\n\n\tif (!this.dragTarget || !this.dragging || !this.dragTarget.isDraggable || this.dragMechanism !== 'mouse' || !this.dragMouseStart)\n\t\treturn;\n\n\tvar positioning = getMousePosition(this, _ev);\n\n\tvar yDist = Math.round((positioning.y - this.dragMouseStart.y) / spacing.STEP);\n\tif (yDist !== this.dragYStep) {\n\t\tthis.dragYStep = yDist;\n\t\tthis.dragTarget.svgEl.setAttribute(\"transform\", \"translate(0,\" + (yDist * spacing.STEP) + \")\");\n\t}\n}\n\nfunction mouseUp(ev) {\n\t// \"this\" is the EngraverController because of the bind(this) when setting the event listener.\n\tvar _ev = ev;\n\tif (ev.type === 'touchend' && this.lastTouchMove) {\n\t\tattachMissingTouchEventAttributes(this.lastTouchMove);\n\t\tif (this.lastTouchMove && this.lastTouchMove.touches && this.lastTouchMove.touches.length > 0)\n\t\t\t_ev = this.lastTouchMove.touches[0];\n\t}\n\n\tif (!this.dragTarget)\n\t\treturn;\n\n\tclearSelection.bind(this)();\n\tif (this.dragTarget.absEl && this.dragTarget.absEl.highlight) {\n\t\tthis.selected = [this.dragTarget.absEl];\n\t\tthis.dragTarget.absEl.highlight(undefined, this.selectionColor);\n\t}\n\n\tnotifySelect.bind(this)(this.dragTarget, this.dragYStep, this.selectables.length, this.dragIndex, _ev);\n\tif (this.dragTarget.svgEl && this.dragTarget.svgEl.focus) {\n\t\tthis.dragTarget.svgEl.focus();\n\t\tthis.dragTarget = null;\n\t\tthis.dragIndex = -1;\n\t}\n\tremoveGlobalClass(this.renderer.svg, \"abcjs-dragging-in-progress\");\n}\n\nfunction setSelection(dragIndex) {\n\tif (dragIndex >= 0 && dragIndex < this.selectables.length) {\n\t\tthis.dragTarget = this.selectables[dragIndex];\n\t\tthis.dragIndex = dragIndex;\n\t\tthis.dragMechanism = \"keyboard\";\n\t\tmouseUp.bind(this)({ target: this.dragTarget.svgEl });\n\t}\n}\n\n\nfunction notifySelect(target, dragStep, dragMax, dragIndex, ev) {\n\tvar ret = createAnalysis(target, ev)\n\tvar classes = ret.classes\n\tvar analysis = ret.analysis\n\n\tfor (var i = 0; i < this.listeners.length; i++) {\n\t\tthis.listeners[i](target.absEl.abcelem, target.absEl.tuneNumber, classes.join(' '), analysis, { step: dragStep, max: dragMax, index: dragIndex, setSelection: setSelection.bind(this) }, ev);\n\t}\n}\n\nfunction clearSelection() {\n\tfor (var i = 0; i < this.selected.length; i++) {\n\t\tthis.selected[i].unhighlight(undefined, this.renderer.foregroundColor);\n\t}\n\tthis.selected = [];\n}\n\nfunction rangeHighlight(start, end) {\n\tclearSelection.bind(this)();\n\tfor (var line = 0; line < this.staffgroups.length; line++) {\n\t\tvar voices = this.staffgroups[line].voices;\n\t\tfor (var voice = 0; voice < voices.length; voice++) {\n\t\t\tvar elems = voices[voice].children;\n\t\t\tfor (var elem = 0; elem < elems.length; elem++) {\n\t\t\t\t// Since the user can highlight more than an element, or part of an element, a hit is if any of the endpoints\n\t\t\t\t// is inside the other range.\n\t\t\t\tvar elStart = elems[elem].abcelem.startChar;\n\t\t\t\tvar elEnd = elems[elem].abcelem.endChar;\n\t\t\t\tif ((end > elStart && start < elEnd) || ((end === start) && end === elEnd)) {\n\t\t\t\t\t//\t\tif (elems[elem].abcelem.startChar>=start && elems[elem].abcelem.endChar<=end) {\n\t\t\t\t\tthis.selected[this.selected.length] = elems[elem];\n\t\t\t\t\telems[elem].highlight(undefined, this.selectionColor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction getClassSet(el) {\n\tvar oldClass = el.getAttribute('class');\n\tif (!oldClass)\n\t\toldClass = \"\";\n\tvar klasses = oldClass.split(\" \");\n\tvar obj = {};\n\tfor (var i = 0; i < klasses.length; i++)\n\t\tobj[klasses[i]] = true;\n\treturn obj;\n}\n\nfunction setClassSet(el, klassSet) {\n\tvar klasses = [];\n\tfor (var key in klassSet) {\n\t\tif (klassSet.hasOwnProperty(key))\n\t\t\tklasses.push(key);\n\t}\n\tel.setAttribute('class', klasses.join(' '));\n}\n\nfunction addGlobalClass(svg, klass) {\n\tif (svg) {\n\t\tvar obj = getClassSet(svg.svg);\n\t\tobj[klass] = true;\n\t\tsetClassSet(svg.svg, obj);\n\t}\n}\n\nfunction removeGlobalClass(svg, klass) {\n\tif (svg) {\n\t\tvar obj = getClassSet(svg.svg);\n\t\tdelete obj[klass];\n\t\tsetClassSet(svg.svg, obj);\n\t}\n}\n\nmodule.exports = setupSelection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/interactive/selection.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/interactive/unhighlight.js":
/*!*****************************************************************!*\
  !*** ./node_modules/abcjs/src/write/interactive/unhighlight.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var setClass = __webpack_require__(/*! ../helpers/set-class */ \"(ssr)/./node_modules/abcjs/src/write/helpers/set-class.js\");\n\nvar unhighlight = function (klass, color) {\n\tif (klass === undefined)\n\t\tklass = \"abcjs-note_selected\";\n\tif (color === undefined)\n\t\tcolor = \"#000000\";\n\tsetClass(this.elemset, \"\", klass, color);\n};\n\nmodule.exports = unhighlight;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2ludGVyYWN0aXZlL3VuaGlnaGxpZ2h0LmpzIiwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQyx1RkFBc0I7O0FBRTdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2ludGVyYWN0aXZlL3VuaGlnaGxpZ2h0LmpzP2JhOWMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHNldENsYXNzID0gcmVxdWlyZSgnLi4vaGVscGVycy9zZXQtY2xhc3MnKTtcblxudmFyIHVuaGlnaGxpZ2h0ID0gZnVuY3Rpb24gKGtsYXNzLCBjb2xvcikge1xuXHRpZiAoa2xhc3MgPT09IHVuZGVmaW5lZClcblx0XHRrbGFzcyA9IFwiYWJjanMtbm90ZV9zZWxlY3RlZFwiO1xuXHRpZiAoY29sb3IgPT09IHVuZGVmaW5lZClcblx0XHRjb2xvciA9IFwiIzAwMDAwMFwiO1xuXHRzZXRDbGFzcyh0aGlzLmVsZW1zZXQsIFwiXCIsIGtsYXNzLCBjb2xvcik7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHVuaGlnaGxpZ2h0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/interactive/unhighlight.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/layout/beam.js":
/*!*****************************************************!*\
  !*** ./node_modules/abcjs/src/write/layout/beam.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var RelativeElement = __webpack_require__(/*! ../creation/elements/relative-element */ \"(ssr)/./node_modules/abcjs/src/write/creation/elements/relative-element.js\");\nvar spacing = __webpack_require__(/*! ../helpers/spacing */ \"(ssr)/./node_modules/abcjs/src/write/helpers/spacing.js\");\nvar getBarYAt = __webpack_require__(/*! ./get-bar-y-at */ \"(ssr)/./node_modules/abcjs/src/write/layout/get-bar-y-at.js\");\n\nvar layoutBeam = function (beam) {\n\tif (beam.elems.length === 0 || beam.allrests) return;\n\n\tvar dy = calcDy(beam.stemsUp, beam.isgrace); // This is the width of the beam line.\n\n\t// create the main beam\n\tvar firstElement = beam.elems[0];\n\tvar lastElement = beam.elems[beam.elems.length - 1];\n\tvar minStemHeight = 0; // The following is to leave space for \"!///!\" marks.\n\tvar referencePitch = beam.stemsUp ? firstElement.abcelem.maxpitch : firstElement.abcelem.minpitch;\n\tminStemHeight = minStem(firstElement, beam.stemsUp, referencePitch, minStemHeight);\n\tminStemHeight = minStem(lastElement, beam.stemsUp, referencePitch, minStemHeight);\n\tminStemHeight = Math.max(beam.stemHeight, minStemHeight + 3); // TODO-PER: The 3 is the width of a 16th beam. The actual height of the beam should be used instead.\n\tvar yPos = calcYPos(beam.average, beam.elems.length, minStemHeight, beam.stemsUp, firstElement.abcelem.averagepitch, lastElement.abcelem.averagepitch, beam.isflat, beam.min, beam.max, beam.isgrace);\n\tvar xPos = calcXPos(beam.stemsUp, firstElement, lastElement);\n\tbeam.addBeam({ startX: xPos[0], endX: xPos[1], startY: yPos[0], endY: yPos[1], dy: dy });\n\n\t// create the rest of the beams (in the case of 1/16th notes, etc.\n\tvar beams = createAdditionalBeams(beam.elems, beam.stemsUp, beam.beams[0], beam.isgrace, dy);\n\tfor (var i = 0; i < beams.length; i++)\n\t\tbeam.addBeam(beams[i]);\n\n\t// Now that the main beam is defined, we know how tall the stems should be, so create them and attach them to the original notes.\n\tcreateStems(beam.elems, beam.stemsUp, beam.beams[0], dy, beam.mainNote);\n};\n\nvar getDurlog = function (duration) {\n\t// TODO-PER: This is a hack to prevent a Chrome lockup. Duration should have been defined already,\n\t// but there's definitely a case where it isn't. [Probably something to do with triplets.]\n\tif (duration === undefined) {\n\t\treturn 0;\n\t}\n\t//        console.log(\"getDurlog: \" + duration);\n\treturn Math.floor(Math.log(duration) / Math.log(2));\n};\n\n//\n// private functions\n//\nfunction minStem(element, stemsUp, referencePitch, minStemHeight) {\n\tif (!element.children)\n\t\treturn minStemHeight;\n\tfor (var i = 0; i < element.children.length; i++) {\n\t\tvar elem = element.children[i];\n\t\tif (stemsUp && elem.top !== undefined && elem.c === \"flags.ugrace\")\n\t\t\tminStemHeight = Math.max(minStemHeight, elem.top - referencePitch);\n\t\telse if (!stemsUp && elem.bottom !== undefined && elem.c === \"flags.ugrace\")\n\t\t\tminStemHeight = Math.max(minStemHeight, referencePitch - elem.bottom + 7); // The extra 7 is because we are measuring the slash from the top.\n\t}\n\treturn minStemHeight;\n}\n\nfunction calcSlant(leftAveragePitch, rightAveragePitch, numStems, isFlat) {\n\tif (isFlat)\n\t\treturn 0;\n\tvar slant = leftAveragePitch - rightAveragePitch;\n\tvar maxSlant = numStems / 2;\n\n\tif (slant > maxSlant) slant = maxSlant;\n\tif (slant < -maxSlant) slant = -maxSlant;\n\treturn slant;\n}\n\nfunction calcDy(asc, isGrace) {\n\tvar dy = (asc) ? spacing.STEP : -spacing.STEP;\n\tif (isGrace) dy = dy * 0.4;\n\treturn dy;\n}\n\nfunction calcXPos(asc, firstElement, lastElement) {\n\tvar starthead = firstElement.heads[asc ? 0 : firstElement.heads.length - 1];\n\tvar endhead = lastElement.heads[asc ? 0 : lastElement.heads.length - 1];\n\tvar startX = starthead.x;\n\tif (asc) startX += starthead.w - 0.6;\n\tvar endX = endhead.x;\n\tendX += (asc) ? endhead.w : 0.6;\n\treturn [startX, endX];\n}\n\nfunction calcYPos(average, numElements, stemHeight, asc, firstAveragePitch, lastAveragePitch, isFlat, minPitch, maxPitch, isGrace) {\n\tvar barpos = stemHeight - 2; // (isGrace)? 5:7;\n\tvar barminpos = stemHeight - 2;\n\tvar pos = Math.round(asc ? Math.max(average + barpos, maxPitch + barminpos) : Math.min(average - barpos, minPitch - barminpos));\n\n\tvar slant = calcSlant(firstAveragePitch, lastAveragePitch, numElements, isFlat);\n\tvar startY = pos + Math.floor(slant / 2);\n\tvar endY = pos + Math.floor(-slant / 2);\n\n\t// If the notes are too high or too low, make the beam go down to the middle\n\tif (!isGrace) {\n\t\tif (asc && pos < 6) {\n\t\t\tstartY = 6;\n\t\t\tendY = 6;\n\t\t} else if (!asc && pos > 6) {\n\t\t\tstartY = 6;\n\t\t\tendY = 6;\n\t\t}\n\t}\n\n\treturn [startY, endY];\n}\n\nfunction createStems(elems, asc, beam, dy, mainNote) {\n\tfor (var i = 0; i < elems.length; i++) {\n\t\tvar elem = elems[i];\n\t\tif (elem.abcelem.rest)\n\t\t\tcontinue;\n\t\t// TODO-PER: This is odd. If it is a regular beam then elems is an array of AbsoluteElements, if it is a grace beam then it is an array of objects , so we directly attach the element to the parent. We tell it if is a grace note because they are passed in as a generic object instead of an AbsoluteElement.\n\t\tvar isGrace = elem.addExtra ? false : true;\n\t\tvar parent = isGrace ? mainNote : elem;\n\t\tvar furthestHead = elem.heads[(asc) ? 0 : elem.heads.length - 1];\n\t\tvar ovalDelta = 1 / 5;//(isGrace)?1/3:1/5;\n\t\tvar pitch = furthestHead.pitch + ((asc) ? ovalDelta : -ovalDelta);\n\t\tvar dx = asc ? furthestHead.w : 0; // down-pointing stems start on the left side of the note, up-pointing stems start on the right side, so we offset by the note width.\n\t\tif (!isGrace)\n\t\t\tdx += furthestHead.dx;\n\t\tvar x = furthestHead.x + dx; // this is now the actual x location in pixels.\n\t\tvar bary = getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, x);\n\t\tvar lineWidth = (asc) ? -0.6 : 0.6;\n\t\tif (!asc)\n\t\t\tbary -= (dy / 2) / spacing.STEP;\t// TODO-PER: This is just a fudge factor so the down-pointing stems don't overlap.\n\t\tif (isGrace)\n\t\t\tdx += elem.heads[0].dx;\n\t\t// TODO-PER-HACK: One type of note head has a different placement of the stem. This should be more generically calculated:\n\t\tif (furthestHead.c === 'noteheads.slash.quarter') {\n\t\t\tif (asc)\n\t\t\t\tpitch += 1;\n\t\t\telse\n\t\t\t\tpitch -= 1;\n\t\t}\n\t\tvar stem = new RelativeElement(null, dx, 0, pitch, {\n\t\t\t\"type\": \"stem\",\n\t\t\t\"pitch2\": bary,\n\t\t\tlinewidth: lineWidth\n\t\t});\n\t\tstem.setX(parent.x); // This is after the x coordinates were set, so we have to set it directly.\n\t\tparent.addRight(stem);\n\t}\n\n}\n\nfunction createAdditionalBeams(elems, asc, beam, isGrace, dy) {\n\tvar beams = [];\n\tvar auxBeams = [];  // auxbeam will be {x, y, durlog, single} auxbeam[0] should match with durlog=-4 (16th) (j=-4-durlog)\n\tfor (var i = 0; i < elems.length; i++) {\n\t\tvar elem = elems[i];\n\t\tif (elem.abcelem.rest)\n\t\t\tcontinue;\n\t\tvar furthestHead = elem.heads[(asc) ? 0 : elem.heads.length - 1];\n\t\tvar x = furthestHead.x + ((asc) ? furthestHead.w : 0);\n\t\tvar bary = getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, x);\n\n\t\tvar sy = (asc) ? -1.5 : 1.5;\n\t\tif (isGrace) sy = sy * 2 / 3; // This makes the second beam on grace notes closer to the first one.\n\t\tvar duration = elem.abcelem.duration; // get the duration via abcelem because of triplets\n\t\tif (duration === 0) duration = 0.25; // if this is stemless, then we use quarter note as the duration.\n\t\tfor (var durlog = getDurlog(duration); durlog < -3; durlog++) {\n\t\t\tvar index = -4 - durlog;\n\t\t\tif (auxBeams[index]) {\n\t\t\t\tauxBeams[index].single = false;\n\t\t\t} else {\n\t\t\t\tauxBeams[index] = {\n\t\t\t\t\tx: x + ((asc) ? -0.6 : 0), y: bary + sy * (index + 1),\n\t\t\t\t\tdurlog: durlog, single: true\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (i > 0 && elem.abcelem.beambr && elem.abcelem.beambr <= (index + 1)) {\n\t\t\t\tif (!auxBeams[index].split)\n\t\t\t\t\tauxBeams[index].split = [auxBeams[index].x];\n\t\t\t\tvar xPos = calcXPos(asc, elems[i - 1], elem);\n\t\t\t\tif (auxBeams[index].split[auxBeams[index].split.length - 1] >= xPos[0]) {\n\t\t\t\t\t// the reduction in beams leaves a note unattached so create a small flag for it.\n\t\t\t\t\txPos[0] += elem.w;\n\t\t\t\t}\n\t\t\t\tauxBeams[index].split.push(xPos[0]);\n\t\t\t\tauxBeams[index].split.push(xPos[1]);\n\t\t\t}\n\t\t}\n\n\t\tfor (var j = auxBeams.length - 1; j >= 0; j--) {\n\t\t\tif (i === elems.length - 1 || getDurlog(elems[i + 1].abcelem.duration) > (-j - 4)) {\n\n\t\t\t\tvar auxBeamEndX = x;\n\t\t\t\tvar auxBeamEndY = bary + sy * (j + 1);\n\n\n\t\t\t\tif (auxBeams[j].single) {\n\t\t\t\t\tauxBeamEndX = (i === 0) ? x + 5 : x - 5;\n\t\t\t\t\tauxBeamEndY = getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, auxBeamEndX) + sy * (j + 1);\n\t\t\t\t}\n\t\t\t\tvar b = { startX: auxBeams[j].x, endX: auxBeamEndX, startY: auxBeams[j].y, endY: auxBeamEndY, dy: dy }\n\t\t\t\tif (auxBeams[j].split !== undefined) {\n\t\t\t\t\tvar split = auxBeams[j].split;\n\t\t\t\t\tif (b.endX <= split[split.length - 1]) {\n\t\t\t\t\t\t// the reduction in beams leaves the last note by itself, so create a little flag for it\n\t\t\t\t\t\tsplit[split.length - 1] -= elem.w;\n\t\t\t\t\t}\n\t\t\t\t\tsplit.push(b.endX);\n\t\t\t\t\tb.split = auxBeams[j].split;\n\t\t\t\t}\n\t\t\t\tbeams.push(b);\n\t\t\t\tauxBeams = auxBeams.slice(0, j);\n\t\t\t}\n\t\t}\n\t}\n\treturn beams;\n}\n\nmodule.exports = layoutBeam;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/layout/beam.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/layout/get-bar-y-at.js":
/*!*************************************************************!*\
  !*** ./node_modules/abcjs/src/write/layout/get-bar-y-at.js ***!
  \*************************************************************/
/***/ ((module) => {

eval("function getBarYAt(startx, starty, endx, endy, x) {\n\treturn starty + (endy - starty) / (endx - startx) * (x - startx);\n}\n\nmodule.exports = getBarYAt;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2xheW91dC9nZXQtYmFyLXktYXQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2xheW91dC9nZXQtYmFyLXktYXQuanM/YjQ0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBnZXRCYXJZQXQoc3RhcnR4LCBzdGFydHksIGVuZHgsIGVuZHksIHgpIHtcblx0cmV0dXJuIHN0YXJ0eSArIChlbmR5IC0gc3RhcnR5KSAvIChlbmR4IC0gc3RhcnR4KSAqICh4IC0gc3RhcnR4KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRCYXJZQXQ7XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/layout/get-bar-y-at.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/layout/get-left-edge-of-staff.js":
/*!***********************************************************************!*\
  !*** ./node_modules/abcjs/src/write/layout/get-left-edge-of-staff.js ***!
  \***********************************************************************/
/***/ ((module) => {

eval("function getLeftEdgeOfStaff(renderer, getTextSize, voices, brace, bracket) {\n\tvar x = renderer.padding.left;\n\n\t// find out how much space will be taken up by voice headers\n\tvar voiceheaderw = 0;\n\tvar i;\n\tvar size;\n\tfor (i = 0; i < voices.length; i++) {\n\t\tif (voices[i].header) {\n\t\t\tsize = getTextSize.calc(voices[i].header, 'voicefont', '');\n\t\t\tvoiceheaderw = Math.max(voiceheaderw, size.width);\n\t\t}\n\t}\n\tvoiceheaderw = addBraceSize(voiceheaderw, brace, getTextSize);\n\tvoiceheaderw = addBraceSize(voiceheaderw, bracket, getTextSize);\n\n\tif (voiceheaderw) {\n\t\t// Give enough spacing to the right - we use the width of an A for the amount of spacing.\n\t\tvar sizeW = getTextSize.calc(\"A\", 'voicefont', '');\n\t\tvoiceheaderw += sizeW.width;\n\t}\n\tx += voiceheaderw;\n\n\tvar ofs = 0;\n\tofs = setBraceLocation(brace, x, ofs);\n\tofs = setBraceLocation(bracket, x, ofs);\n\treturn x + ofs;\n}\n\nfunction addBraceSize(voiceheaderw, brace, getTextSize) {\n\tif (brace) {\n\t\tfor (var i = 0; i < brace.length; i++) {\n\t\t\tif (brace[i].header) {\n\t\t\t\tvar size = getTextSize.calc(brace[i].header, 'voicefont', '');\n\t\t\t\tvoiceheaderw = Math.max(voiceheaderw, size.width);\n\t\t\t}\n\t\t}\n\t}\n\treturn voiceheaderw;\n}\n\nfunction setBraceLocation(brace, x, ofs) {\n\tif (brace) {\n\t\tfor (var i = 0; i < brace.length; i++) {\n\t\t\tsetLocation(x, brace[i]);\n\t\t\tofs = Math.max(ofs, brace[i].getWidth());\n\t\t}\n\t}\n\treturn ofs;\n}\n\nfunction setLocation(x, element) {\n\telement.x = x;\n}\n\nmodule.exports = getLeftEdgeOfStaff;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2xheW91dC9nZXQtbGVmdC1lZGdlLW9mLXN0YWZmLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFtQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0Isa0JBQWtCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLWFydGlmYWN0cy8uL25vZGVfbW9kdWxlcy9hYmNqcy9zcmMvd3JpdGUvbGF5b3V0L2dldC1sZWZ0LWVkZ2Utb2Ytc3RhZmYuanM/N2MzMSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBnZXRMZWZ0RWRnZU9mU3RhZmYocmVuZGVyZXIsIGdldFRleHRTaXplLCB2b2ljZXMsIGJyYWNlLCBicmFja2V0KSB7XG5cdHZhciB4ID0gcmVuZGVyZXIucGFkZGluZy5sZWZ0O1xuXG5cdC8vIGZpbmQgb3V0IGhvdyBtdWNoIHNwYWNlIHdpbGwgYmUgdGFrZW4gdXAgYnkgdm9pY2UgaGVhZGVyc1xuXHR2YXIgdm9pY2VoZWFkZXJ3ID0gMDtcblx0dmFyIGk7XG5cdHZhciBzaXplO1xuXHRmb3IgKGkgPSAwOyBpIDwgdm9pY2VzLmxlbmd0aDsgaSsrKSB7XG5cdFx0aWYgKHZvaWNlc1tpXS5oZWFkZXIpIHtcblx0XHRcdHNpemUgPSBnZXRUZXh0U2l6ZS5jYWxjKHZvaWNlc1tpXS5oZWFkZXIsICd2b2ljZWZvbnQnLCAnJyk7XG5cdFx0XHR2b2ljZWhlYWRlcncgPSBNYXRoLm1heCh2b2ljZWhlYWRlcncsIHNpemUud2lkdGgpO1xuXHRcdH1cblx0fVxuXHR2b2ljZWhlYWRlcncgPSBhZGRCcmFjZVNpemUodm9pY2VoZWFkZXJ3LCBicmFjZSwgZ2V0VGV4dFNpemUpO1xuXHR2b2ljZWhlYWRlcncgPSBhZGRCcmFjZVNpemUodm9pY2VoZWFkZXJ3LCBicmFja2V0LCBnZXRUZXh0U2l6ZSk7XG5cblx0aWYgKHZvaWNlaGVhZGVydykge1xuXHRcdC8vIEdpdmUgZW5vdWdoIHNwYWNpbmcgdG8gdGhlIHJpZ2h0IC0gd2UgdXNlIHRoZSB3aWR0aCBvZiBhbiBBIGZvciB0aGUgYW1vdW50IG9mIHNwYWNpbmcuXG5cdFx0dmFyIHNpemVXID0gZ2V0VGV4dFNpemUuY2FsYyhcIkFcIiwgJ3ZvaWNlZm9udCcsICcnKTtcblx0XHR2b2ljZWhlYWRlcncgKz0gc2l6ZVcud2lkdGg7XG5cdH1cblx0eCArPSB2b2ljZWhlYWRlcnc7XG5cblx0dmFyIG9mcyA9IDA7XG5cdG9mcyA9IHNldEJyYWNlTG9jYXRpb24oYnJhY2UsIHgsIG9mcyk7XG5cdG9mcyA9IHNldEJyYWNlTG9jYXRpb24oYnJhY2tldCwgeCwgb2ZzKTtcblx0cmV0dXJuIHggKyBvZnM7XG59XG5cbmZ1bmN0aW9uIGFkZEJyYWNlU2l6ZSh2b2ljZWhlYWRlcncsIGJyYWNlLCBnZXRUZXh0U2l6ZSkge1xuXHRpZiAoYnJhY2UpIHtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGJyYWNlLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRpZiAoYnJhY2VbaV0uaGVhZGVyKSB7XG5cdFx0XHRcdHZhciBzaXplID0gZ2V0VGV4dFNpemUuY2FsYyhicmFjZVtpXS5oZWFkZXIsICd2b2ljZWZvbnQnLCAnJyk7XG5cdFx0XHRcdHZvaWNlaGVhZGVydyA9IE1hdGgubWF4KHZvaWNlaGVhZGVydywgc2l6ZS53aWR0aCk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdHJldHVybiB2b2ljZWhlYWRlcnc7XG59XG5cbmZ1bmN0aW9uIHNldEJyYWNlTG9jYXRpb24oYnJhY2UsIHgsIG9mcykge1xuXHRpZiAoYnJhY2UpIHtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGJyYWNlLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRzZXRMb2NhdGlvbih4LCBicmFjZVtpXSk7XG5cdFx0XHRvZnMgPSBNYXRoLm1heChvZnMsIGJyYWNlW2ldLmdldFdpZHRoKCkpO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gb2ZzO1xufVxuXG5mdW5jdGlvbiBzZXRMb2NhdGlvbih4LCBlbGVtZW50KSB7XG5cdGVsZW1lbnQueCA9IHg7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0TGVmdEVkZ2VPZlN0YWZmO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/layout/get-left-edge-of-staff.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/layout/layout-in-grid.js":
/*!***************************************************************!*\
  !*** ./node_modules/abcjs/src/write/layout/layout-in-grid.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var getLeftEdgeOfStaff = __webpack_require__(/*! ./get-left-edge-of-staff */ \"(ssr)/./node_modules/abcjs/src/write/layout/get-left-edge-of-staff.js\");\n\nfunction layoutInGrid(renderer, staffGroup, timeBasedLayout) {\n\tvar leftEdge = getLeftEdgeOfStaff(renderer, staffGroup.getTextSize, staffGroup.voices, staffGroup.brace, staffGroup.bracket);\n\tvar ret = getTotalDuration(staffGroup, timeBasedLayout.minPadding)\n\tvar totalDuration = ret.totalDuration\n\tvar minSpacing = ret.minSpacing\n\tvar totalWidth = minSpacing * totalDuration\n\tif (timeBasedLayout.minWidth)\n\t\ttotalWidth = Math.max(totalWidth, timeBasedLayout.minWidth)\n\tvar leftAlignPadding = timeBasedLayout.minPadding ? timeBasedLayout.minPadding/2 : 2 // If the padding isn't specified still give it some\n\n\tstaffGroup.startx = leftEdge\n\tstaffGroup.w = totalWidth + leftEdge\n\tfor (var i = 0; i < staffGroup.voices.length; i++) {\n\t\tvar voice = staffGroup.voices[i]\n\t\tvoice.startx = leftEdge\n\t\tvoice.w = totalWidth + leftEdge\n\n\t\tvar x = leftEdge\n\t\tvar afterFixedLeft = false\n\t\tvar durationUnit = 0\n\t\tfor (var j = 0; j < voice.children.length; j++) {\n\t\t\tvar child = voice.children[j]\n\t\t\tif (!afterFixedLeft) {\n\t\t\t\tif (child.duration !== 0) {\n\t\t\t\t\t// We got to the first music element on the line\n\t\t\t\t\tafterFixedLeft = true\n\t\t\t\t\tdurationUnit = (totalWidth + leftEdge - x) / totalDuration\n\t\t\t\t\tstaffGroup.gridStart = x\n\t\t\t\t} else {\n\t\t\t\t\t// We are still doing the preliminary stuff - clef, time sig, etc.\n\t\t\t\t\tchild.x = x\n\t\t\t\t\tx += child.w + child.minspacing\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (afterFixedLeft) {\n\t\t\t\tif (timeBasedLayout.align === 'center')\n\t\t\t\t\tchild.x = x + (child.duration * durationUnit) / 2 - child.w / 2\n\t\t\t\telse {\n\t\t\t\t\t// left align with padding - but no padding for barlines, they should be right aligned.\n\t\t\t\t\t// TODO-PER: it looks better to move bar lines one pixel to right. Not sure why.\n\t\t\t\t\tif (child.duration === 0) {\n\t\t\t\t\t\tchild.x = x + 1 - child.w\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// child.extraw has the width of the accidentals - push the note to the right to take that into consideration. It will be 0 if there is nothing to the left.\n\t\t\t\t\t\tchild.x = x + leftAlignPadding - child.extraw\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tx += child.duration * durationUnit\n\t\t\t}\n\t\t\tfor (var k = 0; k < child.children.length; k++) {\n\t\t\t\tvar grandchild = child.children[k]\n\t\t\t\t// some elements don't have a dx - Tempo, for instance\n\t\t\t\tvar dx = grandchild.dx ? grandchild.dx : 0\n\t\t\t\tgrandchild.x = child.x + dx\n\t\t\t}\n\t\t}\n\t\tstaffGroup.gridEnd = x\n\t}\n\treturn totalWidth\n}\n\nfunction getTotalDuration(staffGroup, timeBasedLayout) {\n\tvar maxSpacing = 0\n\tvar maxCount = 0\n\tfor (var i = 0; i < staffGroup.voices.length; i++) {\n\t\tvar count = 0\n\t\tvar voice = staffGroup.voices[i]\n\t\tfor (var j = 0; j < voice.children.length; j++) {\n\t\t\tvar element = voice.children[j]\n\t\t\tcount += element.duration\n\t\t\tif (element.duration) {\n\t\t\t\tvar width = (element.w+timeBasedLayout) / element.duration\n\t\t\t\tmaxSpacing = Math.max(maxSpacing, width)\n\t\t\t}\n\t\t}\n\t\tmaxCount = Math.max(maxCount, count)\n\t}\n\treturn { totalDuration: maxCount, minSpacing: maxSpacing}\n}\n\nmodule.exports = layoutInGrid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2xheW91dC9sYXlvdXQtaW4tZ3JpZC5qcyIsIm1hcHBpbmdzIjoiQUFBQSx5QkFBeUIsbUJBQU8sQ0FBQyx1R0FBMEI7O0FBRTNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCLDhCQUE4QjtBQUMvQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDJCQUEyQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsMkJBQTJCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiw4QkFBOEI7QUFDL0M7QUFDQTtBQUNBLGtCQUFrQiwyQkFBMkI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2xheW91dC9sYXlvdXQtaW4tZ3JpZC5qcz85M2QyIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBnZXRMZWZ0RWRnZU9mU3RhZmYgPSByZXF1aXJlKCcuL2dldC1sZWZ0LWVkZ2Utb2Ytc3RhZmYnKTtcblxuZnVuY3Rpb24gbGF5b3V0SW5HcmlkKHJlbmRlcmVyLCBzdGFmZkdyb3VwLCB0aW1lQmFzZWRMYXlvdXQpIHtcblx0dmFyIGxlZnRFZGdlID0gZ2V0TGVmdEVkZ2VPZlN0YWZmKHJlbmRlcmVyLCBzdGFmZkdyb3VwLmdldFRleHRTaXplLCBzdGFmZkdyb3VwLnZvaWNlcywgc3RhZmZHcm91cC5icmFjZSwgc3RhZmZHcm91cC5icmFja2V0KTtcblx0dmFyIHJldCA9IGdldFRvdGFsRHVyYXRpb24oc3RhZmZHcm91cCwgdGltZUJhc2VkTGF5b3V0Lm1pblBhZGRpbmcpXG5cdHZhciB0b3RhbER1cmF0aW9uID0gcmV0LnRvdGFsRHVyYXRpb25cblx0dmFyIG1pblNwYWNpbmcgPSByZXQubWluU3BhY2luZ1xuXHR2YXIgdG90YWxXaWR0aCA9IG1pblNwYWNpbmcgKiB0b3RhbER1cmF0aW9uXG5cdGlmICh0aW1lQmFzZWRMYXlvdXQubWluV2lkdGgpXG5cdFx0dG90YWxXaWR0aCA9IE1hdGgubWF4KHRvdGFsV2lkdGgsIHRpbWVCYXNlZExheW91dC5taW5XaWR0aClcblx0dmFyIGxlZnRBbGlnblBhZGRpbmcgPSB0aW1lQmFzZWRMYXlvdXQubWluUGFkZGluZyA/IHRpbWVCYXNlZExheW91dC5taW5QYWRkaW5nLzIgOiAyIC8vIElmIHRoZSBwYWRkaW5nIGlzbid0IHNwZWNpZmllZCBzdGlsbCBnaXZlIGl0IHNvbWVcblxuXHRzdGFmZkdyb3VwLnN0YXJ0eCA9IGxlZnRFZGdlXG5cdHN0YWZmR3JvdXAudyA9IHRvdGFsV2lkdGggKyBsZWZ0RWRnZVxuXHRmb3IgKHZhciBpID0gMDsgaSA8IHN0YWZmR3JvdXAudm9pY2VzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIHZvaWNlID0gc3RhZmZHcm91cC52b2ljZXNbaV1cblx0XHR2b2ljZS5zdGFydHggPSBsZWZ0RWRnZVxuXHRcdHZvaWNlLncgPSB0b3RhbFdpZHRoICsgbGVmdEVkZ2VcblxuXHRcdHZhciB4ID0gbGVmdEVkZ2Vcblx0XHR2YXIgYWZ0ZXJGaXhlZExlZnQgPSBmYWxzZVxuXHRcdHZhciBkdXJhdGlvblVuaXQgPSAwXG5cdFx0Zm9yICh2YXIgaiA9IDA7IGogPCB2b2ljZS5jaGlsZHJlbi5sZW5ndGg7IGorKykge1xuXHRcdFx0dmFyIGNoaWxkID0gdm9pY2UuY2hpbGRyZW5bal1cblx0XHRcdGlmICghYWZ0ZXJGaXhlZExlZnQpIHtcblx0XHRcdFx0aWYgKGNoaWxkLmR1cmF0aW9uICE9PSAwKSB7XG5cdFx0XHRcdFx0Ly8gV2UgZ290IHRvIHRoZSBmaXJzdCBtdXNpYyBlbGVtZW50IG9uIHRoZSBsaW5lXG5cdFx0XHRcdFx0YWZ0ZXJGaXhlZExlZnQgPSB0cnVlXG5cdFx0XHRcdFx0ZHVyYXRpb25Vbml0ID0gKHRvdGFsV2lkdGggKyBsZWZ0RWRnZSAtIHgpIC8gdG90YWxEdXJhdGlvblxuXHRcdFx0XHRcdHN0YWZmR3JvdXAuZ3JpZFN0YXJ0ID0geFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdC8vIFdlIGFyZSBzdGlsbCBkb2luZyB0aGUgcHJlbGltaW5hcnkgc3R1ZmYgLSBjbGVmLCB0aW1lIHNpZywgZXRjLlxuXHRcdFx0XHRcdGNoaWxkLnggPSB4XG5cdFx0XHRcdFx0eCArPSBjaGlsZC53ICsgY2hpbGQubWluc3BhY2luZ1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRpZiAoYWZ0ZXJGaXhlZExlZnQpIHtcblx0XHRcdFx0aWYgKHRpbWVCYXNlZExheW91dC5hbGlnbiA9PT0gJ2NlbnRlcicpXG5cdFx0XHRcdFx0Y2hpbGQueCA9IHggKyAoY2hpbGQuZHVyYXRpb24gKiBkdXJhdGlvblVuaXQpIC8gMiAtIGNoaWxkLncgLyAyXG5cdFx0XHRcdGVsc2Uge1xuXHRcdFx0XHRcdC8vIGxlZnQgYWxpZ24gd2l0aCBwYWRkaW5nIC0gYnV0IG5vIHBhZGRpbmcgZm9yIGJhcmxpbmVzLCB0aGV5IHNob3VsZCBiZSByaWdodCBhbGlnbmVkLlxuXHRcdFx0XHRcdC8vIFRPRE8tUEVSOiBpdCBsb29rcyBiZXR0ZXIgdG8gbW92ZSBiYXIgbGluZXMgb25lIHBpeGVsIHRvIHJpZ2h0LiBOb3Qgc3VyZSB3aHkuXG5cdFx0XHRcdFx0aWYgKGNoaWxkLmR1cmF0aW9uID09PSAwKSB7XG5cdFx0XHRcdFx0XHRjaGlsZC54ID0geCArIDEgLSBjaGlsZC53XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdC8vIGNoaWxkLmV4dHJhdyBoYXMgdGhlIHdpZHRoIG9mIHRoZSBhY2NpZGVudGFscyAtIHB1c2ggdGhlIG5vdGUgdG8gdGhlIHJpZ2h0IHRvIHRha2UgdGhhdCBpbnRvIGNvbnNpZGVyYXRpb24uIEl0IHdpbGwgYmUgMCBpZiB0aGVyZSBpcyBub3RoaW5nIHRvIHRoZSBsZWZ0LlxuXHRcdFx0XHRcdFx0Y2hpbGQueCA9IHggKyBsZWZ0QWxpZ25QYWRkaW5nIC0gY2hpbGQuZXh0cmF3XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHggKz0gY2hpbGQuZHVyYXRpb24gKiBkdXJhdGlvblVuaXRcblx0XHRcdH1cblx0XHRcdGZvciAodmFyIGsgPSAwOyBrIDwgY2hpbGQuY2hpbGRyZW4ubGVuZ3RoOyBrKyspIHtcblx0XHRcdFx0dmFyIGdyYW5kY2hpbGQgPSBjaGlsZC5jaGlsZHJlbltrXVxuXHRcdFx0XHQvLyBzb21lIGVsZW1lbnRzIGRvbid0IGhhdmUgYSBkeCAtIFRlbXBvLCBmb3IgaW5zdGFuY2Vcblx0XHRcdFx0dmFyIGR4ID0gZ3JhbmRjaGlsZC5keCA/IGdyYW5kY2hpbGQuZHggOiAwXG5cdFx0XHRcdGdyYW5kY2hpbGQueCA9IGNoaWxkLnggKyBkeFxuXHRcdFx0fVxuXHRcdH1cblx0XHRzdGFmZkdyb3VwLmdyaWRFbmQgPSB4XG5cdH1cblx0cmV0dXJuIHRvdGFsV2lkdGhcbn1cblxuZnVuY3Rpb24gZ2V0VG90YWxEdXJhdGlvbihzdGFmZkdyb3VwLCB0aW1lQmFzZWRMYXlvdXQpIHtcblx0dmFyIG1heFNwYWNpbmcgPSAwXG5cdHZhciBtYXhDb3VudCA9IDBcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdGFmZkdyb3VwLnZvaWNlcy5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBjb3VudCA9IDBcblx0XHR2YXIgdm9pY2UgPSBzdGFmZkdyb3VwLnZvaWNlc1tpXVxuXHRcdGZvciAodmFyIGogPSAwOyBqIDwgdm9pY2UuY2hpbGRyZW4ubGVuZ3RoOyBqKyspIHtcblx0XHRcdHZhciBlbGVtZW50ID0gdm9pY2UuY2hpbGRyZW5bal1cblx0XHRcdGNvdW50ICs9IGVsZW1lbnQuZHVyYXRpb25cblx0XHRcdGlmIChlbGVtZW50LmR1cmF0aW9uKSB7XG5cdFx0XHRcdHZhciB3aWR0aCA9IChlbGVtZW50LncrdGltZUJhc2VkTGF5b3V0KSAvIGVsZW1lbnQuZHVyYXRpb25cblx0XHRcdFx0bWF4U3BhY2luZyA9IE1hdGgubWF4KG1heFNwYWNpbmcsIHdpZHRoKVxuXHRcdFx0fVxuXHRcdH1cblx0XHRtYXhDb3VudCA9IE1hdGgubWF4KG1heENvdW50LCBjb3VudClcblx0fVxuXHRyZXR1cm4geyB0b3RhbER1cmF0aW9uOiBtYXhDb3VudCwgbWluU3BhY2luZzogbWF4U3BhY2luZ31cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBsYXlvdXRJbkdyaWQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/layout/layout-in-grid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/layout/layout.js":
/*!*******************************************************!*\
  !*** ./node_modules/abcjs/src/write/layout/layout.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var layoutVoice = __webpack_require__(/*! ./voice */ \"(ssr)/./node_modules/abcjs/src/write/layout/voice.js\");\nvar setUpperAndLowerElements = __webpack_require__(/*! ./set-upper-and-lower-elements */ \"(ssr)/./node_modules/abcjs/src/write/layout/set-upper-and-lower-elements.js\");\nvar layoutStaffGroup = __webpack_require__(/*! ./staff-group */ \"(ssr)/./node_modules/abcjs/src/write/layout/staff-group.js\");\nvar getLeftEdgeOfStaff = __webpack_require__(/*! ./get-left-edge-of-staff */ \"(ssr)/./node_modules/abcjs/src/write/layout/get-left-edge-of-staff.js\");\nvar layoutInGrid = __webpack_require__(/*! ./layout-in-grid */ \"(ssr)/./node_modules/abcjs/src/write/layout/layout-in-grid.js\");\n\n// This sets the \"x\" attribute on all the children in abctune.lines\n// It also sets the \"w\" and \"startx\" attributes on \"voices\"\n// It also sets the \"w\" and \"startx\" attributes on \"voices.children\"\nvar layout = function (renderer, abctune, width, space, expandToWidest, timeBasedLayout) {\n\tvar i;\n\tvar abcLine;\n\t// Adjust the x-coordinates to their absolute positions\n\tvar maxWidth = width;\n\tfor (i = 0; i < abctune.lines.length; i++) {\n\t\tabcLine = abctune.lines[i];\n\t\tif (abcLine.staff) {\n\t\t\t// console.log(\"=== line\", i)\n\t\t\tvar thisWidth;\n\t\t\tif (timeBasedLayout !== undefined)\n\t\t\t\tthisWidth = layoutInGrid(renderer, abcLine.staffGroup, timeBasedLayout);\n\t\t\telse\n\t\t\t\tthisWidth = setXSpacing(renderer, maxWidth, space, abcLine.staffGroup, abctune.formatting, i === abctune.lines.length - 1, false);\n\t\t\t// console.log(thisWidth, maxWidth)\n\t\t\tif (Math.round(thisWidth) > Math.round(maxWidth)) { // to take care of floating point weirdness\n\t\t\t\tmaxWidth = thisWidth\n\t\t\t\tif (expandToWidest)\n\t\t\t\t\ti = -1 // do the calculations over with the new width\n\t\t\t}\n\t\t}\n\t}\n\n\t// Layout the beams and add the stems to the beamed notes.\n\tfor (i = 0; i < abctune.lines.length; i++) {\n\t\tabcLine = abctune.lines[i];\n\t\tif (abcLine.staffGroup && abcLine.staffGroup.voices) {\n\t\t\tfor (var j = 0; j < abcLine.staffGroup.voices.length; j++)\n\t\t\t\tlayoutVoice(abcLine.staffGroup.voices[j]);\n\t\t\tsetUpperAndLowerElements(renderer, abcLine.staffGroup);\n\t\t}\n\t}\n\n\t// Set the staff spacing\n\t// TODO-PER: we should have been able to do this by the time we called setUpperAndLowerElements, but for some reason the \"bottom\" element seems to be set as a side effect of setting the X spacing.\n\tfor (i = 0; i < abctune.lines.length; i++) {\n\t\tabcLine = abctune.lines[i];\n\t\tif (abcLine.staffGroup) {\n\t\t\tabcLine.staffGroup.setHeight();\n\t\t}\n\t}\n\treturn maxWidth;\n}\n// Do the x-axis positioning for a single line (a group of related staffs)\nvar setXSpacing = function (renderer, width, space, staffGroup, formatting, isLastLine, debug) {\n\tvar leftEdge = getLeftEdgeOfStaff(renderer, staffGroup.getTextSize, staffGroup.voices, staffGroup.brace, staffGroup.bracket);\n\tvar newspace = space;\n\t//dumpGroup(\"before\", staffGroup)\n\tfor (var it = 0; it < 8; it++) { // TODO-PER: shouldn't need multiple passes, but each pass gets it closer to the right spacing. (Only affects long lines: normal lines break out of this loop quickly.)\n\t\t// console.log(\"iteration\", it)\n\t\tvar ret = layoutStaffGroup(newspace, renderer.minPadding, debug, staffGroup, leftEdge);\n\t\tnewspace = calcHorizontalSpacing(isLastLine, formatting.stretchlast, width + renderer.padding.left, staffGroup.w, newspace, ret.spacingUnits, ret.minSpace, renderer.padding.left + renderer.padding.right);\n\t\tif (debug)\n\t\t\tconsole.log(\"setXSpace\", it, staffGroup.w, newspace, staffGroup.minspace);\n\t\tif (newspace === null) break;\n\t}\n\t//dumpGroup(\"after\",staffGroup)\n\tcenterWholeRests(staffGroup.voices);\n\treturn staffGroup.w - leftEdge\n};\n\nfunction replacer(key, value) {\n\t// Filtering out properties\n\tif (key === 'parent') {\n\t\treturn 'parent';\n\t}\n\tif (key === 'beam') {\n\t\treturn 'beam';\n\t}\n\treturn value;\n}\n\nfunction dumpGroup(label, staffGroup) {\n\tconsole.log(\"=================== \" + label + \" =========================\")\n\tconsole.log(staffGroup)\n\tconsole.log(JSON.stringify(staffGroup, replacer, \"\\t\"))\n}\n\nfunction calcHorizontalSpacing(isLastLine, stretchLast, targetWidth, lineWidth, spacing, spacingUnits, minSpace, padding) {\n\tif (isLastLine) {\n\t\tif (stretchLast === undefined) {\n\t\t\tif (lineWidth / targetWidth < 0.66) return null; // keep this for backward compatibility. The break isn't quite the same for some reason.\n\t\t} else {\n\t\t\t// \"Stretch the last music line of a tune when it lacks less than the float fraction of the page width.\"\n\t\t\tvar lack = 1 - (lineWidth + padding) / targetWidth;\n\t\t\tvar stretch = lack < stretchLast;\n\t\t\tif (!stretch) return null; // don't stretch last line too much\n\t\t}\n\t}\n\tif (Math.abs(targetWidth - lineWidth) < 2) return null; // if we are already near the target width, we're done.\n\tvar relSpace = spacingUnits * spacing;\n\tvar constSpace = lineWidth - relSpace;\n\tif (spacingUnits > 0) {\n\t\tspacing = (targetWidth - constSpace) / spacingUnits;\n\t\tif (spacing * minSpace > 50) {\n\t\t\tspacing = 50 / minSpace;\n\t\t}\n\t\treturn spacing;\n\t}\n\treturn null;\n}\n\nfunction centerWholeRests(voices) {\n\t// whole rests are a special case: if they are by themselves in a measure, then they should be centered.\n\t// (If they are not by themselves, that is probably a user error, but we'll just center it between the two items to either side of it.)\n\tfor (var i = 0; i < voices.length; i++) {\n\t\tvar voice = voices[i];\n\t\t// Look through all of the elements except for the first and last. If the whole note appears there then there isn't anything to center it between anyway.\n\t\tfor (var j = 1; j < voice.children.length - 1; j++) {\n\t\t\tvar absElem = voice.children[j];\n\t\t\tif (absElem.abcelem.rest && (absElem.abcelem.rest.type === 'whole' || absElem.abcelem.rest.type === 'multimeasure')) {\n\t\t\t\tvar before = voice.children[j - 1];\n\t\t\t\tvar after = voice.children[j + 1];\n\t\t\t\tabsElem.center(before, after);\n\t\t\t}\n\t\t}\n\t}\n}\n\nmodule.exports = layout;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/layout/layout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/layout/set-upper-and-lower-elements.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/abcjs/src/write/layout/set-upper-and-lower-elements.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var spacing = __webpack_require__(/*! ../helpers/spacing */ \"(ssr)/./node_modules/abcjs/src/write/helpers/spacing.js\");\n\nvar setUpperAndLowerElements = function (renderer, staffGroup) {\n\t// Each staff already has the top and bottom set, now we see if there are elements that are always on top and bottom, and resolve their pitch.\n\t// Also, get the overall height of all the staves in this group.\n\tvar lastStaffBottom;\n\tfor (var i = 0; i < staffGroup.staffs.length; i++) {\n\t\tvar staff = staffGroup.staffs[i];\n\t\t// the vertical order of elements that are above is: tempo, part, volume/dynamic, ending/chord, lyric\n\t\t// the vertical order of elements that are below is: lyric, chord, volume/dynamic\n\t\tvar positionY = {\n\t\t\ttempoHeightAbove: 0,\n\t\t\tpartHeightAbove: 0,\n\t\t\tvolumeHeightAbove: 0,\n\t\t\tdynamicHeightAbove: 0,\n\t\t\tendingHeightAbove: 0,\n\t\t\tchordHeightAbove: 0,\n\t\t\tlyricHeightAbove: 0,\n\n\t\t\tlyricHeightBelow: 0,\n\t\t\tchordHeightBelow: 0,\n\t\t\tvolumeHeightBelow: 0,\n\t\t\tdynamicHeightBelow: 0\n\t\t};\n\n\t\tif (renderer.showDebug && renderer.showDebug.indexOf(\"box\") >= 0) {\n\t\t\tstaff.originalTop = staff.top; // This is just being stored for debugging purposes.\n\t\t\tstaff.originalBottom = staff.bottom; // This is just being stored for debugging purposes.\n\t\t}\n\n\t\tincTop(staff, positionY, 'lyricHeightAbove');\n\t\tincTop(staff, positionY, 'chordHeightAbove', staff.specialY.chordLines.above);\n\t\tif (staff.specialY.endingHeightAbove) {\n\t\t\tif (staff.specialY.chordHeightAbove)\n\t\t\t\tstaff.top += 2;\n\t\t\telse\n\t\t\t\tstaff.top += staff.specialY.endingHeightAbove + margin;\n\t\t\tpositionY.endingHeightAbove = staff.top;\n\t\t}\n\t\tif (staff.specialY.dynamicHeightAbove && staff.specialY.volumeHeightAbove) {\n\t\t\tstaff.top += Math.max(staff.specialY.dynamicHeightAbove, staff.specialY.volumeHeightAbove) + margin;\n\t\t\tpositionY.dynamicHeightAbove = staff.top;\n\t\t\tpositionY.volumeHeightAbove = staff.top;\n\t\t} else {\n\t\t\tincTop(staff, positionY, 'dynamicHeightAbove');\n\t\t\tincTop(staff, positionY, 'volumeHeightAbove');\n\t\t}\n\t\tincTop(staff, positionY, 'partHeightAbove');\n\t\tincTop(staff, positionY, 'tempoHeightAbove');\n\n\t\tif (staff.specialY.lyricHeightBelow) {\n\t\t\tstaff.specialY.lyricHeightBelow += renderer.spacing.vocal / spacing.STEP;\n\t\t\tpositionY.lyricHeightBelow = staff.bottom;\n\t\t\tstaff.bottom -= (staff.specialY.lyricHeightBelow + margin);\n\t\t}\n\t\tif (staff.specialY.chordHeightBelow) {\n\t\t\tpositionY.chordHeightBelow = staff.bottom;\n\t\t\tvar hgt = staff.specialY.chordHeightBelow;\n\t\t\tif (staff.specialY.chordLines.below)\n\t\t\t\thgt *= staff.specialY.chordLines.below;\n\t\t\tstaff.bottom -= (hgt + margin);\n\t\t}\n\t\tif (staff.specialY.volumeHeightBelow && staff.specialY.dynamicHeightBelow) {\n\t\t\tpositionY.volumeHeightBelow = staff.bottom;\n\t\t\tpositionY.dynamicHeightBelow = staff.bottom;\n\t\t\tstaff.bottom -= (Math.max(staff.specialY.volumeHeightBelow, staff.specialY.dynamicHeightBelow) + margin);\n\t\t} else if (staff.specialY.volumeHeightBelow) {\n\t\t\tpositionY.volumeHeightBelow = staff.bottom; staff.bottom -= (staff.specialY.volumeHeightBelow + margin);\n\t\t} else if (staff.specialY.dynamicHeightBelow) {\n\t\t\tpositionY.dynamicHeightBelow = staff.bottom; staff.bottom -= (staff.specialY.dynamicHeightBelow + margin);\n\t\t}\n\n\t\tif (renderer.showDebug && renderer.showDebug.indexOf(\"box\") >= 0)\n\t\t\tstaff.positionY = positionY; // This is just being stored for debugging purposes.\n\n\t\tfor (var j = 0; j < staff.voices.length; j++) {\n\t\t\tvar voice = staffGroup.voices[staff.voices[j]];\n\t\t\tsetUpperAndLowerVoiceElements(positionY, voice, renderer.spacing);\n\t\t}\n\t\t// We might need a little space in between staves if the staves haven't been pushed far enough apart by notes or extra vertical stuff.\n\t\t// Only try to put in extra space if this isn't the top staff.\n\t\tif (lastStaffBottom !== undefined) {\n\t\t\tvar thisStaffTop = staff.top - 10;\n\t\t\tvar forcedSpacingBetween = lastStaffBottom + thisStaffTop;\n\t\t\tvar minSpacingInPitches = renderer.spacing.systemStaffSeparation / spacing.STEP;\n\t\t\tvar addedSpace = minSpacingInPitches - forcedSpacingBetween;\n\t\t\tif (addedSpace > 0)\n\t\t\t\tstaff.top += addedSpace;\n\t\t}\n\t\tstaff.top += renderer.spacing.staffTopMargin / spacing.STEP\n\n\t\tlastStaffBottom = 2 - staff.bottom; // the staff starts at position 2 and the bottom variable is negative. Therefore to find out how large the bottom is, we reverse the sign of the bottom, and add the 2 in.\n\n\t\t// Now we need a little margin on the top, so we'll just throw that in.\n\t\t//staff.top += 4;\n\t\t//console.log(\"Staff Y: \",i,heightInPitches,staff.top,staff.bottom);\n\t}\n\t//console.log(\"Staff Height: \",heightInPitches,this.height);\n};\n\nvar margin = 1;\nfunction incTop(staff, positionY, item, count) {\n\tif (staff.specialY[item]) {\n\t\tvar height = staff.specialY[item];\n\t\tif (count)\n\t\t\theight *= count;\n\t\tstaff.top += height + margin;\n\t\tpositionY[item] = staff.top;\n\t}\n}\n\nfunction setUpperAndLowerVoiceElements(positionY, voice, spacing) {\n\tvar i;\n\tvar abselem;\n\tfor (i = 0; i < voice.children.length; i++) {\n\t\tabselem = voice.children[i];\n\t\tsetUpperAndLowerAbsoluteElements(positionY, abselem, spacing);\n\t}\n\tfor (i = 0; i < voice.otherchildren.length; i++) {\n\t\tabselem = voice.otherchildren[i];\n\t\tswitch (abselem.type) {\n\t\t\tcase 'CrescendoElem':\n\t\t\t\tsetUpperAndLowerCrescendoElements(positionY, abselem);\n\t\t\t\tbreak;\n\t\t\tcase 'DynamicDecoration':\n\t\t\t\tsetUpperAndLowerDynamicElements(positionY, abselem);\n\t\t\t\tbreak;\n\t\t\tcase 'EndingElem':\n\t\t\t\tsetUpperAndLowerEndingElements(positionY, abselem);\n\t\t\t\tbreak;\n\t\t\tcase 'TieElem':\n\t\t\t\t// If a tie element is the highest or lowest thing then space might need to make room for it.\n\t\t\t\tvar yBounds = abselem.getYBounds()\n\t\t\t\tvoice.staff.top = Math.max(voice.staff.top, yBounds[0])\n\t\t\t\tvoice.staff.top = Math.max(voice.staff.top, yBounds[1])\n\t\t\t\tvoice.staff.bottom = Math.min(voice.staff.bottom, yBounds[0])\n\t\t\t\tvoice.staff.bottom = Math.min(voice.staff.bottom, yBounds[1])\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\n// For each of the relative elements that can't be placed in advance (because their vertical placement depends on everything\n// else on the line), this iterates through them and sets their pitch. By the time this is called, specialYResolved contains a\n// hash with the vertical placement (in pitch units) for each type.\n// TODO-PER: I think this needs to be separated by \"above\" and \"below\". How do we know that for dynamics at the point where they are being defined, though? We need a pass through all the relative elements to set \"above\" and \"below\".\nfunction setUpperAndLowerAbsoluteElements(specialYResolved, element, spacing) {\n\t// specialYResolved contains the actual pitch for each of the classes of elements.\n\tfor (var i = 0; i < element.children.length; i++) {\n\t\tvar child = element.children[i];\n\t\tfor (var key in element.specialY) { // for each class of element that needs to be placed vertically\n\t\t\tif (element.specialY.hasOwnProperty(key)) {\n\t\t\t\tif (child[key]) { // If this relative element has defined a height for this class of element\n\t\t\t\t\tchild.pitch = specialYResolved[key];\n\t\t\t\t\tif (child.top === undefined) { // TODO-PER: HACK! Not sure this is the right place to do this.\n\t\t\t\t\t\tif (child.type === 'TempoElement') {\n\t\t\t\t\t\t\tsetUpperAndLowerTempoElement(specialYResolved, child);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetUpperAndLowerRelativeElements(specialYResolved, child, spacing);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telement.pushTop(child.top);\n\t\t\t\t\t\telement.pushBottom(child.bottom);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction setUpperAndLowerCrescendoElements(positionY, element) {\n\tif (element.dynamicHeightAbove)\n\t\telement.pitch = positionY.dynamicHeightAbove;\n\telse\n\t\telement.pitch = positionY.dynamicHeightBelow;\n}\n\nfunction setUpperAndLowerDynamicElements(positionY, element) {\n\tif (element.volumeHeightAbove)\n\t\telement.pitch = positionY.volumeHeightAbove;\n\telse\n\t\telement.pitch = positionY.volumeHeightBelow;\n}\n\nfunction setUpperAndLowerEndingElements(positionY, element) {\n\telement.pitch = positionY.endingHeightAbove - 2;\n}\n\nfunction setUpperAndLowerTempoElement(positionY, element) {\n\telement.pitch = positionY.tempoHeightAbove;\n\telement.top = positionY.tempoHeightAbove;\n\telement.bottom = positionY.tempoHeightAbove;\n\tif (element.note) {\n\t\tvar tempoPitch = element.pitch - element.totalHeightInPitches + 1; // The pitch we receive is the top of the allotted area: change that to practically the bottom.\n\t\telement.note.top = tempoPitch;\n\t\telement.note.bottom = tempoPitch;\n\t\tfor (var i = 0; i < element.note.children.length; i++) {\n\t\t\tvar child = element.note.children[i];\n\t\t\tchild.top += tempoPitch;\n\t\t\tchild.bottom += tempoPitch;\n\t\t\tchild.pitch += tempoPitch;\n\t\t\tif (child.pitch2 !== undefined)\n\t\t\t\tchild.pitch2 += tempoPitch;\n\t\t}\n\t}\n}\n\nfunction setUpperAndLowerRelativeElements(positionY, element, renderSpacing) {\n\tswitch (element.type) {\n\t\tcase \"part\":\n\t\t\telement.top = positionY.partHeightAbove + element.height;\n\t\t\telement.bottom = positionY.partHeightAbove;\n\t\t\tbreak;\n\t\tcase \"text\":\n\t\tcase \"chord\":\n\t\t\tif (element.chordHeightAbove) {\n\t\t\t\telement.top = positionY.chordHeightAbove;\n\t\t\t\telement.bottom = positionY.chordHeightAbove;\n\t\t\t} else {\n\t\t\t\telement.top = positionY.chordHeightBelow;\n\t\t\t\telement.bottom = positionY.chordHeightBelow;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"lyric\":\n\t\t\tif (element.lyricHeightAbove) {\n\t\t\t\telement.top = positionY.lyricHeightAbove;\n\t\t\t\telement.bottom = positionY.lyricHeightAbove;\n\t\t\t} else {\n\t\t\t\telement.top = positionY.lyricHeightBelow + renderSpacing.vocal / spacing.STEP;\n\t\t\t\telement.bottom = positionY.lyricHeightBelow + renderSpacing.vocal / spacing.STEP;\n\t\t\t\telement.pitch -= renderSpacing.vocal / spacing.STEP;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"debug\":\n\t\t\telement.top = positionY.chordHeightAbove;\n\t\t\telement.bottom = positionY.chordHeightAbove;\n\t\t\tbreak;\n\t}\n\tif (element.pitch === undefined || element.top === undefined)\n\t\tconsole.error(\"RelativeElement position not set.\", element.type, element.pitch, element.top, positionY);\n}\n\nmodule.exports = setUpperAndLowerElements;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2xheW91dC9zZXQtdXBwZXItYW5kLWxvd2VyLWVsZW1lbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGNBQWMsbUJBQU8sQ0FBQyxtRkFBb0I7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDhCQUE4QjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrQ0FBa0M7QUFDbEMsd0NBQXdDO0FBQ3hDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osK0NBQStDO0FBQy9DLElBQUk7QUFDSixnREFBZ0Q7QUFDaEQ7O0FBRUE7QUFDQSxnQ0FBZ0M7O0FBRWhDLGtCQUFrQix5QkFBeUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxzQ0FBc0M7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDJCQUEyQjtBQUN4QztBQUNBO0FBQ0E7QUFDQSxhQUFhLGdDQUFnQztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNkJBQTZCO0FBQzlDO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFFQUFxRTtBQUNyRTtBQUNBO0FBQ0Esa0JBQWtCLGtDQUFrQztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2xheW91dC9zZXQtdXBwZXItYW5kLWxvd2VyLWVsZW1lbnRzLmpzPzljZDYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHNwYWNpbmcgPSByZXF1aXJlKCcuLi9oZWxwZXJzL3NwYWNpbmcnKTtcblxudmFyIHNldFVwcGVyQW5kTG93ZXJFbGVtZW50cyA9IGZ1bmN0aW9uIChyZW5kZXJlciwgc3RhZmZHcm91cCkge1xuXHQvLyBFYWNoIHN0YWZmIGFscmVhZHkgaGFzIHRoZSB0b3AgYW5kIGJvdHRvbSBzZXQsIG5vdyB3ZSBzZWUgaWYgdGhlcmUgYXJlIGVsZW1lbnRzIHRoYXQgYXJlIGFsd2F5cyBvbiB0b3AgYW5kIGJvdHRvbSwgYW5kIHJlc29sdmUgdGhlaXIgcGl0Y2guXG5cdC8vIEFsc28sIGdldCB0aGUgb3ZlcmFsbCBoZWlnaHQgb2YgYWxsIHRoZSBzdGF2ZXMgaW4gdGhpcyBncm91cC5cblx0dmFyIGxhc3RTdGFmZkJvdHRvbTtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdGFmZkdyb3VwLnN0YWZmcy5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBzdGFmZiA9IHN0YWZmR3JvdXAuc3RhZmZzW2ldO1xuXHRcdC8vIHRoZSB2ZXJ0aWNhbCBvcmRlciBvZiBlbGVtZW50cyB0aGF0IGFyZSBhYm92ZSBpczogdGVtcG8sIHBhcnQsIHZvbHVtZS9keW5hbWljLCBlbmRpbmcvY2hvcmQsIGx5cmljXG5cdFx0Ly8gdGhlIHZlcnRpY2FsIG9yZGVyIG9mIGVsZW1lbnRzIHRoYXQgYXJlIGJlbG93IGlzOiBseXJpYywgY2hvcmQsIHZvbHVtZS9keW5hbWljXG5cdFx0dmFyIHBvc2l0aW9uWSA9IHtcblx0XHRcdHRlbXBvSGVpZ2h0QWJvdmU6IDAsXG5cdFx0XHRwYXJ0SGVpZ2h0QWJvdmU6IDAsXG5cdFx0XHR2b2x1bWVIZWlnaHRBYm92ZTogMCxcblx0XHRcdGR5bmFtaWNIZWlnaHRBYm92ZTogMCxcblx0XHRcdGVuZGluZ0hlaWdodEFib3ZlOiAwLFxuXHRcdFx0Y2hvcmRIZWlnaHRBYm92ZTogMCxcblx0XHRcdGx5cmljSGVpZ2h0QWJvdmU6IDAsXG5cblx0XHRcdGx5cmljSGVpZ2h0QmVsb3c6IDAsXG5cdFx0XHRjaG9yZEhlaWdodEJlbG93OiAwLFxuXHRcdFx0dm9sdW1lSGVpZ2h0QmVsb3c6IDAsXG5cdFx0XHRkeW5hbWljSGVpZ2h0QmVsb3c6IDBcblx0XHR9O1xuXG5cdFx0aWYgKHJlbmRlcmVyLnNob3dEZWJ1ZyAmJiByZW5kZXJlci5zaG93RGVidWcuaW5kZXhPZihcImJveFwiKSA+PSAwKSB7XG5cdFx0XHRzdGFmZi5vcmlnaW5hbFRvcCA9IHN0YWZmLnRvcDsgLy8gVGhpcyBpcyBqdXN0IGJlaW5nIHN0b3JlZCBmb3IgZGVidWdnaW5nIHB1cnBvc2VzLlxuXHRcdFx0c3RhZmYub3JpZ2luYWxCb3R0b20gPSBzdGFmZi5ib3R0b207IC8vIFRoaXMgaXMganVzdCBiZWluZyBzdG9yZWQgZm9yIGRlYnVnZ2luZyBwdXJwb3Nlcy5cblx0XHR9XG5cblx0XHRpbmNUb3Aoc3RhZmYsIHBvc2l0aW9uWSwgJ2x5cmljSGVpZ2h0QWJvdmUnKTtcblx0XHRpbmNUb3Aoc3RhZmYsIHBvc2l0aW9uWSwgJ2Nob3JkSGVpZ2h0QWJvdmUnLCBzdGFmZi5zcGVjaWFsWS5jaG9yZExpbmVzLmFib3ZlKTtcblx0XHRpZiAoc3RhZmYuc3BlY2lhbFkuZW5kaW5nSGVpZ2h0QWJvdmUpIHtcblx0XHRcdGlmIChzdGFmZi5zcGVjaWFsWS5jaG9yZEhlaWdodEFib3ZlKVxuXHRcdFx0XHRzdGFmZi50b3AgKz0gMjtcblx0XHRcdGVsc2Vcblx0XHRcdFx0c3RhZmYudG9wICs9IHN0YWZmLnNwZWNpYWxZLmVuZGluZ0hlaWdodEFib3ZlICsgbWFyZ2luO1xuXHRcdFx0cG9zaXRpb25ZLmVuZGluZ0hlaWdodEFib3ZlID0gc3RhZmYudG9wO1xuXHRcdH1cblx0XHRpZiAoc3RhZmYuc3BlY2lhbFkuZHluYW1pY0hlaWdodEFib3ZlICYmIHN0YWZmLnNwZWNpYWxZLnZvbHVtZUhlaWdodEFib3ZlKSB7XG5cdFx0XHRzdGFmZi50b3AgKz0gTWF0aC5tYXgoc3RhZmYuc3BlY2lhbFkuZHluYW1pY0hlaWdodEFib3ZlLCBzdGFmZi5zcGVjaWFsWS52b2x1bWVIZWlnaHRBYm92ZSkgKyBtYXJnaW47XG5cdFx0XHRwb3NpdGlvblkuZHluYW1pY0hlaWdodEFib3ZlID0gc3RhZmYudG9wO1xuXHRcdFx0cG9zaXRpb25ZLnZvbHVtZUhlaWdodEFib3ZlID0gc3RhZmYudG9wO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRpbmNUb3Aoc3RhZmYsIHBvc2l0aW9uWSwgJ2R5bmFtaWNIZWlnaHRBYm92ZScpO1xuXHRcdFx0aW5jVG9wKHN0YWZmLCBwb3NpdGlvblksICd2b2x1bWVIZWlnaHRBYm92ZScpO1xuXHRcdH1cblx0XHRpbmNUb3Aoc3RhZmYsIHBvc2l0aW9uWSwgJ3BhcnRIZWlnaHRBYm92ZScpO1xuXHRcdGluY1RvcChzdGFmZiwgcG9zaXRpb25ZLCAndGVtcG9IZWlnaHRBYm92ZScpO1xuXG5cdFx0aWYgKHN0YWZmLnNwZWNpYWxZLmx5cmljSGVpZ2h0QmVsb3cpIHtcblx0XHRcdHN0YWZmLnNwZWNpYWxZLmx5cmljSGVpZ2h0QmVsb3cgKz0gcmVuZGVyZXIuc3BhY2luZy52b2NhbCAvIHNwYWNpbmcuU1RFUDtcblx0XHRcdHBvc2l0aW9uWS5seXJpY0hlaWdodEJlbG93ID0gc3RhZmYuYm90dG9tO1xuXHRcdFx0c3RhZmYuYm90dG9tIC09IChzdGFmZi5zcGVjaWFsWS5seXJpY0hlaWdodEJlbG93ICsgbWFyZ2luKTtcblx0XHR9XG5cdFx0aWYgKHN0YWZmLnNwZWNpYWxZLmNob3JkSGVpZ2h0QmVsb3cpIHtcblx0XHRcdHBvc2l0aW9uWS5jaG9yZEhlaWdodEJlbG93ID0gc3RhZmYuYm90dG9tO1xuXHRcdFx0dmFyIGhndCA9IHN0YWZmLnNwZWNpYWxZLmNob3JkSGVpZ2h0QmVsb3c7XG5cdFx0XHRpZiAoc3RhZmYuc3BlY2lhbFkuY2hvcmRMaW5lcy5iZWxvdylcblx0XHRcdFx0aGd0ICo9IHN0YWZmLnNwZWNpYWxZLmNob3JkTGluZXMuYmVsb3c7XG5cdFx0XHRzdGFmZi5ib3R0b20gLT0gKGhndCArIG1hcmdpbik7XG5cdFx0fVxuXHRcdGlmIChzdGFmZi5zcGVjaWFsWS52b2x1bWVIZWlnaHRCZWxvdyAmJiBzdGFmZi5zcGVjaWFsWS5keW5hbWljSGVpZ2h0QmVsb3cpIHtcblx0XHRcdHBvc2l0aW9uWS52b2x1bWVIZWlnaHRCZWxvdyA9IHN0YWZmLmJvdHRvbTtcblx0XHRcdHBvc2l0aW9uWS5keW5hbWljSGVpZ2h0QmVsb3cgPSBzdGFmZi5ib3R0b207XG5cdFx0XHRzdGFmZi5ib3R0b20gLT0gKE1hdGgubWF4KHN0YWZmLnNwZWNpYWxZLnZvbHVtZUhlaWdodEJlbG93LCBzdGFmZi5zcGVjaWFsWS5keW5hbWljSGVpZ2h0QmVsb3cpICsgbWFyZ2luKTtcblx0XHR9IGVsc2UgaWYgKHN0YWZmLnNwZWNpYWxZLnZvbHVtZUhlaWdodEJlbG93KSB7XG5cdFx0XHRwb3NpdGlvblkudm9sdW1lSGVpZ2h0QmVsb3cgPSBzdGFmZi5ib3R0b207IHN0YWZmLmJvdHRvbSAtPSAoc3RhZmYuc3BlY2lhbFkudm9sdW1lSGVpZ2h0QmVsb3cgKyBtYXJnaW4pO1xuXHRcdH0gZWxzZSBpZiAoc3RhZmYuc3BlY2lhbFkuZHluYW1pY0hlaWdodEJlbG93KSB7XG5cdFx0XHRwb3NpdGlvblkuZHluYW1pY0hlaWdodEJlbG93ID0gc3RhZmYuYm90dG9tOyBzdGFmZi5ib3R0b20gLT0gKHN0YWZmLnNwZWNpYWxZLmR5bmFtaWNIZWlnaHRCZWxvdyArIG1hcmdpbik7XG5cdFx0fVxuXG5cdFx0aWYgKHJlbmRlcmVyLnNob3dEZWJ1ZyAmJiByZW5kZXJlci5zaG93RGVidWcuaW5kZXhPZihcImJveFwiKSA+PSAwKVxuXHRcdFx0c3RhZmYucG9zaXRpb25ZID0gcG9zaXRpb25ZOyAvLyBUaGlzIGlzIGp1c3QgYmVpbmcgc3RvcmVkIGZvciBkZWJ1Z2dpbmcgcHVycG9zZXMuXG5cblx0XHRmb3IgKHZhciBqID0gMDsgaiA8IHN0YWZmLnZvaWNlcy5sZW5ndGg7IGorKykge1xuXHRcdFx0dmFyIHZvaWNlID0gc3RhZmZHcm91cC52b2ljZXNbc3RhZmYudm9pY2VzW2pdXTtcblx0XHRcdHNldFVwcGVyQW5kTG93ZXJWb2ljZUVsZW1lbnRzKHBvc2l0aW9uWSwgdm9pY2UsIHJlbmRlcmVyLnNwYWNpbmcpO1xuXHRcdH1cblx0XHQvLyBXZSBtaWdodCBuZWVkIGEgbGl0dGxlIHNwYWNlIGluIGJldHdlZW4gc3RhdmVzIGlmIHRoZSBzdGF2ZXMgaGF2ZW4ndCBiZWVuIHB1c2hlZCBmYXIgZW5vdWdoIGFwYXJ0IGJ5IG5vdGVzIG9yIGV4dHJhIHZlcnRpY2FsIHN0dWZmLlxuXHRcdC8vIE9ubHkgdHJ5IHRvIHB1dCBpbiBleHRyYSBzcGFjZSBpZiB0aGlzIGlzbid0IHRoZSB0b3Agc3RhZmYuXG5cdFx0aWYgKGxhc3RTdGFmZkJvdHRvbSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHR2YXIgdGhpc1N0YWZmVG9wID0gc3RhZmYudG9wIC0gMTA7XG5cdFx0XHR2YXIgZm9yY2VkU3BhY2luZ0JldHdlZW4gPSBsYXN0U3RhZmZCb3R0b20gKyB0aGlzU3RhZmZUb3A7XG5cdFx0XHR2YXIgbWluU3BhY2luZ0luUGl0Y2hlcyA9IHJlbmRlcmVyLnNwYWNpbmcuc3lzdGVtU3RhZmZTZXBhcmF0aW9uIC8gc3BhY2luZy5TVEVQO1xuXHRcdFx0dmFyIGFkZGVkU3BhY2UgPSBtaW5TcGFjaW5nSW5QaXRjaGVzIC0gZm9yY2VkU3BhY2luZ0JldHdlZW47XG5cdFx0XHRpZiAoYWRkZWRTcGFjZSA+IDApXG5cdFx0XHRcdHN0YWZmLnRvcCArPSBhZGRlZFNwYWNlO1xuXHRcdH1cblx0XHRzdGFmZi50b3AgKz0gcmVuZGVyZXIuc3BhY2luZy5zdGFmZlRvcE1hcmdpbiAvIHNwYWNpbmcuU1RFUFxuXG5cdFx0bGFzdFN0YWZmQm90dG9tID0gMiAtIHN0YWZmLmJvdHRvbTsgLy8gdGhlIHN0YWZmIHN0YXJ0cyBhdCBwb3NpdGlvbiAyIGFuZCB0aGUgYm90dG9tIHZhcmlhYmxlIGlzIG5lZ2F0aXZlLiBUaGVyZWZvcmUgdG8gZmluZCBvdXQgaG93IGxhcmdlIHRoZSBib3R0b20gaXMsIHdlIHJldmVyc2UgdGhlIHNpZ24gb2YgdGhlIGJvdHRvbSwgYW5kIGFkZCB0aGUgMiBpbi5cblxuXHRcdC8vIE5vdyB3ZSBuZWVkIGEgbGl0dGxlIG1hcmdpbiBvbiB0aGUgdG9wLCBzbyB3ZSdsbCBqdXN0IHRocm93IHRoYXQgaW4uXG5cdFx0Ly9zdGFmZi50b3AgKz0gNDtcblx0XHQvL2NvbnNvbGUubG9nKFwiU3RhZmYgWTogXCIsaSxoZWlnaHRJblBpdGNoZXMsc3RhZmYudG9wLHN0YWZmLmJvdHRvbSk7XG5cdH1cblx0Ly9jb25zb2xlLmxvZyhcIlN0YWZmIEhlaWdodDogXCIsaGVpZ2h0SW5QaXRjaGVzLHRoaXMuaGVpZ2h0KTtcbn07XG5cbnZhciBtYXJnaW4gPSAxO1xuZnVuY3Rpb24gaW5jVG9wKHN0YWZmLCBwb3NpdGlvblksIGl0ZW0sIGNvdW50KSB7XG5cdGlmIChzdGFmZi5zcGVjaWFsWVtpdGVtXSkge1xuXHRcdHZhciBoZWlnaHQgPSBzdGFmZi5zcGVjaWFsWVtpdGVtXTtcblx0XHRpZiAoY291bnQpXG5cdFx0XHRoZWlnaHQgKj0gY291bnQ7XG5cdFx0c3RhZmYudG9wICs9IGhlaWdodCArIG1hcmdpbjtcblx0XHRwb3NpdGlvbllbaXRlbV0gPSBzdGFmZi50b3A7XG5cdH1cbn1cblxuZnVuY3Rpb24gc2V0VXBwZXJBbmRMb3dlclZvaWNlRWxlbWVudHMocG9zaXRpb25ZLCB2b2ljZSwgc3BhY2luZykge1xuXHR2YXIgaTtcblx0dmFyIGFic2VsZW07XG5cdGZvciAoaSA9IDA7IGkgPCB2b2ljZS5jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuXHRcdGFic2VsZW0gPSB2b2ljZS5jaGlsZHJlbltpXTtcblx0XHRzZXRVcHBlckFuZExvd2VyQWJzb2x1dGVFbGVtZW50cyhwb3NpdGlvblksIGFic2VsZW0sIHNwYWNpbmcpO1xuXHR9XG5cdGZvciAoaSA9IDA7IGkgPCB2b2ljZS5vdGhlcmNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG5cdFx0YWJzZWxlbSA9IHZvaWNlLm90aGVyY2hpbGRyZW5baV07XG5cdFx0c3dpdGNoIChhYnNlbGVtLnR5cGUpIHtcblx0XHRcdGNhc2UgJ0NyZXNjZW5kb0VsZW0nOlxuXHRcdFx0XHRzZXRVcHBlckFuZExvd2VyQ3Jlc2NlbmRvRWxlbWVudHMocG9zaXRpb25ZLCBhYnNlbGVtKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlICdEeW5hbWljRGVjb3JhdGlvbic6XG5cdFx0XHRcdHNldFVwcGVyQW5kTG93ZXJEeW5hbWljRWxlbWVudHMocG9zaXRpb25ZLCBhYnNlbGVtKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlICdFbmRpbmdFbGVtJzpcblx0XHRcdFx0c2V0VXBwZXJBbmRMb3dlckVuZGluZ0VsZW1lbnRzKHBvc2l0aW9uWSwgYWJzZWxlbSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnVGllRWxlbSc6XG5cdFx0XHRcdC8vIElmIGEgdGllIGVsZW1lbnQgaXMgdGhlIGhpZ2hlc3Qgb3IgbG93ZXN0IHRoaW5nIHRoZW4gc3BhY2UgbWlnaHQgbmVlZCB0byBtYWtlIHJvb20gZm9yIGl0LlxuXHRcdFx0XHR2YXIgeUJvdW5kcyA9IGFic2VsZW0uZ2V0WUJvdW5kcygpXG5cdFx0XHRcdHZvaWNlLnN0YWZmLnRvcCA9IE1hdGgubWF4KHZvaWNlLnN0YWZmLnRvcCwgeUJvdW5kc1swXSlcblx0XHRcdFx0dm9pY2Uuc3RhZmYudG9wID0gTWF0aC5tYXgodm9pY2Uuc3RhZmYudG9wLCB5Qm91bmRzWzFdKVxuXHRcdFx0XHR2b2ljZS5zdGFmZi5ib3R0b20gPSBNYXRoLm1pbih2b2ljZS5zdGFmZi5ib3R0b20sIHlCb3VuZHNbMF0pXG5cdFx0XHRcdHZvaWNlLnN0YWZmLmJvdHRvbSA9IE1hdGgubWluKHZvaWNlLnN0YWZmLmJvdHRvbSwgeUJvdW5kc1sxXSlcblx0XHRcdFx0YnJlYWs7XG5cdFx0fVxuXHR9XG59XG5cbi8vIEZvciBlYWNoIG9mIHRoZSByZWxhdGl2ZSBlbGVtZW50cyB0aGF0IGNhbid0IGJlIHBsYWNlZCBpbiBhZHZhbmNlIChiZWNhdXNlIHRoZWlyIHZlcnRpY2FsIHBsYWNlbWVudCBkZXBlbmRzIG9uIGV2ZXJ5dGhpbmdcbi8vIGVsc2Ugb24gdGhlIGxpbmUpLCB0aGlzIGl0ZXJhdGVzIHRocm91Z2ggdGhlbSBhbmQgc2V0cyB0aGVpciBwaXRjaC4gQnkgdGhlIHRpbWUgdGhpcyBpcyBjYWxsZWQsIHNwZWNpYWxZUmVzb2x2ZWQgY29udGFpbnMgYVxuLy8gaGFzaCB3aXRoIHRoZSB2ZXJ0aWNhbCBwbGFjZW1lbnQgKGluIHBpdGNoIHVuaXRzKSBmb3IgZWFjaCB0eXBlLlxuLy8gVE9ETy1QRVI6IEkgdGhpbmsgdGhpcyBuZWVkcyB0byBiZSBzZXBhcmF0ZWQgYnkgXCJhYm92ZVwiIGFuZCBcImJlbG93XCIuIEhvdyBkbyB3ZSBrbm93IHRoYXQgZm9yIGR5bmFtaWNzIGF0IHRoZSBwb2ludCB3aGVyZSB0aGV5IGFyZSBiZWluZyBkZWZpbmVkLCB0aG91Z2g/IFdlIG5lZWQgYSBwYXNzIHRocm91Z2ggYWxsIHRoZSByZWxhdGl2ZSBlbGVtZW50cyB0byBzZXQgXCJhYm92ZVwiIGFuZCBcImJlbG93XCIuXG5mdW5jdGlvbiBzZXRVcHBlckFuZExvd2VyQWJzb2x1dGVFbGVtZW50cyhzcGVjaWFsWVJlc29sdmVkLCBlbGVtZW50LCBzcGFjaW5nKSB7XG5cdC8vIHNwZWNpYWxZUmVzb2x2ZWQgY29udGFpbnMgdGhlIGFjdHVhbCBwaXRjaCBmb3IgZWFjaCBvZiB0aGUgY2xhc3NlcyBvZiBlbGVtZW50cy5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBlbGVtZW50LmNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGNoaWxkID0gZWxlbWVudC5jaGlsZHJlbltpXTtcblx0XHRmb3IgKHZhciBrZXkgaW4gZWxlbWVudC5zcGVjaWFsWSkgeyAvLyBmb3IgZWFjaCBjbGFzcyBvZiBlbGVtZW50IHRoYXQgbmVlZHMgdG8gYmUgcGxhY2VkIHZlcnRpY2FsbHlcblx0XHRcdGlmIChlbGVtZW50LnNwZWNpYWxZLmhhc093blByb3BlcnR5KGtleSkpIHtcblx0XHRcdFx0aWYgKGNoaWxkW2tleV0pIHsgLy8gSWYgdGhpcyByZWxhdGl2ZSBlbGVtZW50IGhhcyBkZWZpbmVkIGEgaGVpZ2h0IGZvciB0aGlzIGNsYXNzIG9mIGVsZW1lbnRcblx0XHRcdFx0XHRjaGlsZC5waXRjaCA9IHNwZWNpYWxZUmVzb2x2ZWRba2V5XTtcblx0XHRcdFx0XHRpZiAoY2hpbGQudG9wID09PSB1bmRlZmluZWQpIHsgLy8gVE9ETy1QRVI6IEhBQ0shIE5vdCBzdXJlIHRoaXMgaXMgdGhlIHJpZ2h0IHBsYWNlIHRvIGRvIHRoaXMuXG5cdFx0XHRcdFx0XHRpZiAoY2hpbGQudHlwZSA9PT0gJ1RlbXBvRWxlbWVudCcpIHtcblx0XHRcdFx0XHRcdFx0c2V0VXBwZXJBbmRMb3dlclRlbXBvRWxlbWVudChzcGVjaWFsWVJlc29sdmVkLCBjaGlsZCk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRzZXRVcHBlckFuZExvd2VyUmVsYXRpdmVFbGVtZW50cyhzcGVjaWFsWVJlc29sdmVkLCBjaGlsZCwgc3BhY2luZyk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRlbGVtZW50LnB1c2hUb3AoY2hpbGQudG9wKTtcblx0XHRcdFx0XHRcdGVsZW1lbnQucHVzaEJvdHRvbShjaGlsZC5ib3R0b20pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBzZXRVcHBlckFuZExvd2VyQ3Jlc2NlbmRvRWxlbWVudHMocG9zaXRpb25ZLCBlbGVtZW50KSB7XG5cdGlmIChlbGVtZW50LmR5bmFtaWNIZWlnaHRBYm92ZSlcblx0XHRlbGVtZW50LnBpdGNoID0gcG9zaXRpb25ZLmR5bmFtaWNIZWlnaHRBYm92ZTtcblx0ZWxzZVxuXHRcdGVsZW1lbnQucGl0Y2ggPSBwb3NpdGlvblkuZHluYW1pY0hlaWdodEJlbG93O1xufVxuXG5mdW5jdGlvbiBzZXRVcHBlckFuZExvd2VyRHluYW1pY0VsZW1lbnRzKHBvc2l0aW9uWSwgZWxlbWVudCkge1xuXHRpZiAoZWxlbWVudC52b2x1bWVIZWlnaHRBYm92ZSlcblx0XHRlbGVtZW50LnBpdGNoID0gcG9zaXRpb25ZLnZvbHVtZUhlaWdodEFib3ZlO1xuXHRlbHNlXG5cdFx0ZWxlbWVudC5waXRjaCA9IHBvc2l0aW9uWS52b2x1bWVIZWlnaHRCZWxvdztcbn1cblxuZnVuY3Rpb24gc2V0VXBwZXJBbmRMb3dlckVuZGluZ0VsZW1lbnRzKHBvc2l0aW9uWSwgZWxlbWVudCkge1xuXHRlbGVtZW50LnBpdGNoID0gcG9zaXRpb25ZLmVuZGluZ0hlaWdodEFib3ZlIC0gMjtcbn1cblxuZnVuY3Rpb24gc2V0VXBwZXJBbmRMb3dlclRlbXBvRWxlbWVudChwb3NpdGlvblksIGVsZW1lbnQpIHtcblx0ZWxlbWVudC5waXRjaCA9IHBvc2l0aW9uWS50ZW1wb0hlaWdodEFib3ZlO1xuXHRlbGVtZW50LnRvcCA9IHBvc2l0aW9uWS50ZW1wb0hlaWdodEFib3ZlO1xuXHRlbGVtZW50LmJvdHRvbSA9IHBvc2l0aW9uWS50ZW1wb0hlaWdodEFib3ZlO1xuXHRpZiAoZWxlbWVudC5ub3RlKSB7XG5cdFx0dmFyIHRlbXBvUGl0Y2ggPSBlbGVtZW50LnBpdGNoIC0gZWxlbWVudC50b3RhbEhlaWdodEluUGl0Y2hlcyArIDE7IC8vIFRoZSBwaXRjaCB3ZSByZWNlaXZlIGlzIHRoZSB0b3Agb2YgdGhlIGFsbG90dGVkIGFyZWE6IGNoYW5nZSB0aGF0IHRvIHByYWN0aWNhbGx5IHRoZSBib3R0b20uXG5cdFx0ZWxlbWVudC5ub3RlLnRvcCA9IHRlbXBvUGl0Y2g7XG5cdFx0ZWxlbWVudC5ub3RlLmJvdHRvbSA9IHRlbXBvUGl0Y2g7XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBlbGVtZW50Lm5vdGUuY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBjaGlsZCA9IGVsZW1lbnQubm90ZS5jaGlsZHJlbltpXTtcblx0XHRcdGNoaWxkLnRvcCArPSB0ZW1wb1BpdGNoO1xuXHRcdFx0Y2hpbGQuYm90dG9tICs9IHRlbXBvUGl0Y2g7XG5cdFx0XHRjaGlsZC5waXRjaCArPSB0ZW1wb1BpdGNoO1xuXHRcdFx0aWYgKGNoaWxkLnBpdGNoMiAhPT0gdW5kZWZpbmVkKVxuXHRcdFx0XHRjaGlsZC5waXRjaDIgKz0gdGVtcG9QaXRjaDtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gc2V0VXBwZXJBbmRMb3dlclJlbGF0aXZlRWxlbWVudHMocG9zaXRpb25ZLCBlbGVtZW50LCByZW5kZXJTcGFjaW5nKSB7XG5cdHN3aXRjaCAoZWxlbWVudC50eXBlKSB7XG5cdFx0Y2FzZSBcInBhcnRcIjpcblx0XHRcdGVsZW1lbnQudG9wID0gcG9zaXRpb25ZLnBhcnRIZWlnaHRBYm92ZSArIGVsZW1lbnQuaGVpZ2h0O1xuXHRcdFx0ZWxlbWVudC5ib3R0b20gPSBwb3NpdGlvblkucGFydEhlaWdodEFib3ZlO1xuXHRcdFx0YnJlYWs7XG5cdFx0Y2FzZSBcInRleHRcIjpcblx0XHRjYXNlIFwiY2hvcmRcIjpcblx0XHRcdGlmIChlbGVtZW50LmNob3JkSGVpZ2h0QWJvdmUpIHtcblx0XHRcdFx0ZWxlbWVudC50b3AgPSBwb3NpdGlvblkuY2hvcmRIZWlnaHRBYm92ZTtcblx0XHRcdFx0ZWxlbWVudC5ib3R0b20gPSBwb3NpdGlvblkuY2hvcmRIZWlnaHRBYm92ZTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGVsZW1lbnQudG9wID0gcG9zaXRpb25ZLmNob3JkSGVpZ2h0QmVsb3c7XG5cdFx0XHRcdGVsZW1lbnQuYm90dG9tID0gcG9zaXRpb25ZLmNob3JkSGVpZ2h0QmVsb3c7XG5cdFx0XHR9XG5cdFx0XHRicmVhaztcblx0XHRjYXNlIFwibHlyaWNcIjpcblx0XHRcdGlmIChlbGVtZW50Lmx5cmljSGVpZ2h0QWJvdmUpIHtcblx0XHRcdFx0ZWxlbWVudC50b3AgPSBwb3NpdGlvblkubHlyaWNIZWlnaHRBYm92ZTtcblx0XHRcdFx0ZWxlbWVudC5ib3R0b20gPSBwb3NpdGlvblkubHlyaWNIZWlnaHRBYm92ZTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGVsZW1lbnQudG9wID0gcG9zaXRpb25ZLmx5cmljSGVpZ2h0QmVsb3cgKyByZW5kZXJTcGFjaW5nLnZvY2FsIC8gc3BhY2luZy5TVEVQO1xuXHRcdFx0XHRlbGVtZW50LmJvdHRvbSA9IHBvc2l0aW9uWS5seXJpY0hlaWdodEJlbG93ICsgcmVuZGVyU3BhY2luZy52b2NhbCAvIHNwYWNpbmcuU1RFUDtcblx0XHRcdFx0ZWxlbWVudC5waXRjaCAtPSByZW5kZXJTcGFjaW5nLnZvY2FsIC8gc3BhY2luZy5TVEVQO1xuXHRcdFx0fVxuXHRcdFx0YnJlYWs7XG5cdFx0Y2FzZSBcImRlYnVnXCI6XG5cdFx0XHRlbGVtZW50LnRvcCA9IHBvc2l0aW9uWS5jaG9yZEhlaWdodEFib3ZlO1xuXHRcdFx0ZWxlbWVudC5ib3R0b20gPSBwb3NpdGlvblkuY2hvcmRIZWlnaHRBYm92ZTtcblx0XHRcdGJyZWFrO1xuXHR9XG5cdGlmIChlbGVtZW50LnBpdGNoID09PSB1bmRlZmluZWQgfHwgZWxlbWVudC50b3AgPT09IHVuZGVmaW5lZClcblx0XHRjb25zb2xlLmVycm9yKFwiUmVsYXRpdmVFbGVtZW50IHBvc2l0aW9uIG5vdCBzZXQuXCIsIGVsZW1lbnQudHlwZSwgZWxlbWVudC5waXRjaCwgZWxlbWVudC50b3AsIHBvc2l0aW9uWSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0VXBwZXJBbmRMb3dlckVsZW1lbnRzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/layout/set-upper-and-lower-elements.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/layout/staff-group.js":
/*!************************************************************!*\
  !*** ./node_modules/abcjs/src/write/layout/staff-group.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var layoutVoiceElements = __webpack_require__(/*! ./voice-elements */ \"(ssr)/./node_modules/abcjs/src/write/layout/voice-elements.js\");\n\nfunction checkLastBarX(voices) {\n\tvar maxX = 0;\n\tfor (var i = 0; i < voices.length; i++) {\n\t\tvar curVoice = voices[i];\n\t\tif (curVoice.children.length > 0) {\n\t\t\tvar lastChild = curVoice.children.length - 1;\n\t\t\tvar maxChild = curVoice.children[lastChild];\n\t\t\tif (maxChild.abcelem.el_type === 'bar') {\n\t\t\t\tvar barX = maxChild.children[0].x;\n\t\t\t\tif (barX > maxX) {\n\t\t\t\t\tmaxX = barX;\n\t\t\t\t} else {\n\t\t\t\t\tmaxChild.children[0].x = maxX;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nvar layoutStaffGroup = function (spacing, minPadding, debug, staffGroup, leftEdge) {\n\tvar epsilon = 0.0000001; // Fudging for inexactness of floating point math.\n\tvar spacingunits = 0; // number of times we will have ended up using the spacing distance (as opposed to fixed width distances)\n\tvar minspace = 1000; // a big number to start off with - used to find out what the smallest space between two notes is -- GD 2014.1.7\n\n\tvar x = leftEdge;\n\tstaffGroup.startx = x;\n\tvar i;\n\n\tvar currentduration = 0;\n\tif (debug) console.log(\"init layout\", spacing);\n\tfor (i = 0; i < staffGroup.voices.length; i++) {\n\t\tlayoutVoiceElements.beginLayout(x, staffGroup.voices[i]);\n\t}\n\n\tvar spacingunit = 0; // number of spacingunits coming from the previously laid out element to this one\n\twhile (!finished(staffGroup.voices)) {\n\t\t// find first duration level to be laid out among candidates across voices\n\t\tcurrentduration = null; // candidate smallest duration level\n\t\tfor (i = 0; i < staffGroup.voices.length; i++) {\n\t\t\tif (!layoutVoiceElements.layoutEnded(staffGroup.voices[i]) && (!currentduration || getDurationIndex(staffGroup.voices[i]) < currentduration))\n\t\t\t\tcurrentduration = getDurationIndex(staffGroup.voices[i]);\n\t\t}\n\n\n\t\t// isolate voices at current duration level\n\t\tvar currentvoices = [];\n\t\tvar othervoices = [];\n\t\tfor (i = 0; i < staffGroup.voices.length; i++) {\n\t\t\tvar durationIndex = getDurationIndex(staffGroup.voices[i]);\n\t\t\t// PER: Because of the inexactness of JS floating point math, we just get close.\n\t\t\tif (durationIndex - currentduration > epsilon) {\n\t\t\t\tothervoices.push(staffGroup.voices[i]);\n\t\t\t\t//console.log(\"out: voice \",i);\n\t\t\t} else {\n\t\t\t\tcurrentvoices.push(staffGroup.voices[i]);\n\t\t\t\t//if (debug) console.log(\"in: voice \",i);\n\t\t\t}\n\t\t}\n\n\t\t// among the current duration level find the one which needs starting furthest right\n\t\tspacingunit = 0; // number of spacingunits coming from the previously laid out element to this one\n\t\tvar spacingduration = 0;\n\t\tfor (i = 0; i < currentvoices.length; i++) {\n\t\t\t//console.log(\"greatest spacing unit\", x, layoutVoiceElements.getNextX(currentvoices[i]), layoutVoiceElements.getSpacingUnits(currentvoices[i]), currentvoices[i].spacingduration);\n\t\t\tif (layoutVoiceElements.getNextX(currentvoices[i]) > x) {\n\t\t\t\tx = layoutVoiceElements.getNextX(currentvoices[i]);\n\t\t\t\tspacingunit = layoutVoiceElements.getSpacingUnits(currentvoices[i]);\n\t\t\t\tspacingduration = currentvoices[i].spacingduration;\n\t\t\t}\n\t\t}\n\t\tspacingunits += spacingunit;\n\t\tminspace = Math.min(minspace, spacingunit);\n\t\tif (debug) console.log(\"currentduration: \", currentduration, spacingunits, minspace);\n\n\t\tvar lastTopVoice = undefined;\n\t\tfor (i = 0; i < currentvoices.length; i++) {\n\t\t\tvar v = currentvoices[i];\n\t\t\tif (v.voicenumber === 0)\n\t\t\t\tlastTopVoice = i;\n\t\t\tvar topVoice = (lastTopVoice !== undefined && currentvoices[lastTopVoice].voicenumber !== v.voicenumber) ? currentvoices[lastTopVoice] : undefined;\n\t\t\tif (!isSameStaff(v, topVoice))\n\t\t\t\ttopVoice = undefined;\n\t\t\tvar voicechildx = layoutVoiceElements.layoutOneItem(x, spacing, v, minPadding, topVoice);\n\t\t\tvar dx = voicechildx - x;\n\t\t\tif (dx > 0) {\n\t\t\t\tx = voicechildx; //update x\n\t\t\t\tfor (var j = 0; j < i; j++) { // shift over all previously laid out elements\n\t\t\t\t\tlayoutVoiceElements.shiftRight(dx, currentvoices[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// remove the value of already counted spacing units in other voices (e.g. if a voice had planned to use up 5 spacing units but is not in line to be laid out at this duration level - where we've used 2 spacing units - then we must use up 3 spacing units, not 5)\n\t\tfor (i = 0; i < othervoices.length; i++) {\n\t\t\tothervoices[i].spacingduration -= spacingduration;\n\t\t\tlayoutVoiceElements.updateNextX(x, spacing, othervoices[i]); // adjust other voices expectations\n\t\t}\n\n\t\t// update indexes of currently laid out elems\n\t\tfor (i = 0; i < currentvoices.length; i++) {\n\t\t\tvar voice = currentvoices[i];\n\t\t\tlayoutVoiceElements.updateIndices(voice);\n\t\t}\n\t} // finished laying out\n\n\n\t// find the greatest remaining x as a base for the width\n\tfor (i = 0; i < staffGroup.voices.length; i++) {\n\t\tif (layoutVoiceElements.getNextX(staffGroup.voices[i]) > x) {\n\t\t\tx = layoutVoiceElements.getNextX(staffGroup.voices[i]);\n\t\t\tspacingunit = layoutVoiceElements.getSpacingUnits(staffGroup.voices[i]);\n\t\t}\n\t}\n\n\t// adjust lastBar when needed (multi staves)\n\tcheckLastBarX(staffGroup.voices);\n\t//console.log(\"greatest remaining\",spacingunit,x);\n\tspacingunits += spacingunit;\n\tstaffGroup.setWidth(x);\n\n\treturn { spacingUnits: spacingunits, minSpace: minspace };\n};\n\n\nfunction finished(voices) {\n\tfor (var i = 0; i < voices.length; i++) {\n\t\tif (!layoutVoiceElements.layoutEnded(voices[i])) return false;\n\t}\n\treturn true;\n}\n\nfunction getDurationIndex(element) {\n\treturn element.durationindex - (element.children[element.i] && (element.children[element.i].duration > 0) ? 0 : 0.0000005); // if the ith element doesn't have a duration (is not a note), its duration index is fractionally before. This enables CLEF KEYSIG TIMESIG PART, etc. to be laid out before we get to the first note of other voices\n}\n\nfunction isSameStaff(voice1, voice2) {\n\tif (!voice1 || !voice1.staff || !voice1.staff.voices || voice1.staff.voices.length === 0)\n\t\treturn false;\n\tif (!voice2 || !voice2.staff || !voice2.staff.voices || voice2.staff.voices.length === 0)\n\t\treturn false;\n\treturn (voice1.staff.voices[0] === voice2.staff.voices[0]);\n}\n\nmodule.exports = layoutStaffGroup;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/layout/staff-group.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/layout/triplet.js":
/*!********************************************************!*\
  !*** ./node_modules/abcjs/src/write/layout/triplet.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var getBarYAt = __webpack_require__(/*! ./get-bar-y-at */ \"(ssr)/./node_modules/abcjs/src/write/layout/get-bar-y-at.js\");\n\nfunction layoutTriplet(element) {\n\t// TODO end and beginning of line (PER: P.S. I'm not sure this can happen: I think the parser will always specify both the start and end points.)\n\tif (element.anchor1 && element.anchor2) {\n\t\telement.hasBeam = !!element.anchor1.parent.beam && element.anchor1.parent.beam === element.anchor2.parent.beam;\n\t\tvar beam = element.anchor1.parent.beam;\n\t\t// if hasBeam is true, then the first and last element in the triplet have the same beam.\n\t\t// We also need to check if the beam doesn't contain other notes so that `(3 dcdcc` will do a bracket.\n\t\tif (element.hasBeam && (beam.elems[0] !== element.anchor1.parent || beam.elems[beam.elems.length - 1] !== element.anchor2.parent))\n\t\t\telement.hasBeam = false;\n\n\t\tif (element.hasBeam) {\n\t\t\t// If there is a beam then we don't need to draw anything except the text. The beam could either be above or below.\n\t\t\tvar left = isAbove(beam) ? element.anchor1.x + element.anchor1.w : element.anchor1.x;\n\t\t\telement.yTextPos = heightAtMidpoint(left, element.anchor2.x, beam);\n\t\t\telement.yTextPos += isAbove(beam) ? 3 : -2; // This creates some space between the beam and the number.\n\t\t\telement.xTextPos = xAtMidpoint(left, element.anchor2.x);\n\t\t\telement.top = element.yTextPos + 1;\n\t\t\telement.bottom = element.yTextPos - 2;\n\t\t\tif (isAbove(beam))\n\t\t\t\telement.endingHeightAbove = 4;\n\t\t} else {\n\t\t\t// If there isn't a beam, then we need to draw the bracket and the text. The bracket is always above.\n\t\t\t// The bracket is never lower than the 'a' line, but is 4 pitches above the first and last notes. If there is\n\t\t\t// a tall note in the middle, the bracket is horizontal and above the highest note.\n\t\t\telement.startNote = Math.max(element.anchor1.parent.top, 9) + 4;\n\t\t\telement.endNote = Math.max(element.anchor2.parent.top, 9) + 4;\n\t\t\t// If it starts or ends on a rest, make the beam horizontal\n\t\t\tif (element.anchor1.parent.type === \"rest\" && element.anchor2.parent.type !== \"rest\")\n\t\t\t\telement.startNote = element.endNote;\n\t\t\telse if (element.anchor2.parent.type === \"rest\" && element.anchor1.parent.type !== \"rest\")\n\t\t\t\telement.endNote = element.startNote;\n\t\t\t// See if the middle note is really high.\n\t\t\tvar max = 0;\n\t\t\tfor (var i = 0; i < element.middleElems.length; i++) {\n\t\t\t\tmax = Math.max(max, element.middleElems[i].top);\n\t\t\t}\n\t\t\tmax += 4;\n\t\t\tif (max > element.startNote || max > element.endNote) {\n\t\t\t\telement.startNote = max;\n\t\t\t\telement.endNote = max;\n\t\t\t}\n\t\t\tif (element.flatBeams) {\n\t\t\t\telement.startNote = Math.max(element.startNote, element.endNote);\n\t\t\t\telement.endNote = Math.max(element.startNote, element.endNote);\n\t\t\t}\n\n\t\t\telement.yTextPos = element.startNote + (element.endNote - element.startNote) / 2;\n\t\t\telement.xTextPos = element.anchor1.x + (element.anchor2.x + element.anchor2.w - element.anchor1.x) / 2;\n\t\t\telement.top = element.yTextPos + 1;\n\t\t}\n\t}\n\tdelete element.middleElems;\n\tdelete element.flatBeams;\n}\n\nfunction isAbove(beam) {\n\treturn beam.stemsUp;\n}\n\n// We can't just use the entire beam for the calculation. The range has to be passed in, because the beam might extend into some unrelated notes. for instance, (3_a'f'e'f'2 when L:16\nfunction heightAtMidpoint(startX, endX, beam) {\n\tif (beam.beams.length === 0)\n\t\treturn 0;\n\tbeam = beam.beams[0];\n\tvar midPoint = startX + (endX - startX) / 2;\n\treturn getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, midPoint);\n}\n\nfunction xAtMidpoint(startX, endX) {\n\treturn startX + (endX - startX) / 2;\n}\n\nmodule.exports = layoutTriplet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2xheW91dC90cmlwbGV0LmpzIiwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQixtQkFBTyxDQUFDLG1GQUFnQjs7QUFFeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGdDQUFnQztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2xheW91dC90cmlwbGV0LmpzPzQ5MTIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdldEJhcllBdCA9IHJlcXVpcmUoJy4vZ2V0LWJhci15LWF0Jyk7XG5cbmZ1bmN0aW9uIGxheW91dFRyaXBsZXQoZWxlbWVudCkge1xuXHQvLyBUT0RPIGVuZCBhbmQgYmVnaW5uaW5nIG9mIGxpbmUgKFBFUjogUC5TLiBJJ20gbm90IHN1cmUgdGhpcyBjYW4gaGFwcGVuOiBJIHRoaW5rIHRoZSBwYXJzZXIgd2lsbCBhbHdheXMgc3BlY2lmeSBib3RoIHRoZSBzdGFydCBhbmQgZW5kIHBvaW50cy4pXG5cdGlmIChlbGVtZW50LmFuY2hvcjEgJiYgZWxlbWVudC5hbmNob3IyKSB7XG5cdFx0ZWxlbWVudC5oYXNCZWFtID0gISFlbGVtZW50LmFuY2hvcjEucGFyZW50LmJlYW0gJiYgZWxlbWVudC5hbmNob3IxLnBhcmVudC5iZWFtID09PSBlbGVtZW50LmFuY2hvcjIucGFyZW50LmJlYW07XG5cdFx0dmFyIGJlYW0gPSBlbGVtZW50LmFuY2hvcjEucGFyZW50LmJlYW07XG5cdFx0Ly8gaWYgaGFzQmVhbSBpcyB0cnVlLCB0aGVuIHRoZSBmaXJzdCBhbmQgbGFzdCBlbGVtZW50IGluIHRoZSB0cmlwbGV0IGhhdmUgdGhlIHNhbWUgYmVhbS5cblx0XHQvLyBXZSBhbHNvIG5lZWQgdG8gY2hlY2sgaWYgdGhlIGJlYW0gZG9lc24ndCBjb250YWluIG90aGVyIG5vdGVzIHNvIHRoYXQgYCgzIGRjZGNjYCB3aWxsIGRvIGEgYnJhY2tldC5cblx0XHRpZiAoZWxlbWVudC5oYXNCZWFtICYmIChiZWFtLmVsZW1zWzBdICE9PSBlbGVtZW50LmFuY2hvcjEucGFyZW50IHx8IGJlYW0uZWxlbXNbYmVhbS5lbGVtcy5sZW5ndGggLSAxXSAhPT0gZWxlbWVudC5hbmNob3IyLnBhcmVudCkpXG5cdFx0XHRlbGVtZW50Lmhhc0JlYW0gPSBmYWxzZTtcblxuXHRcdGlmIChlbGVtZW50Lmhhc0JlYW0pIHtcblx0XHRcdC8vIElmIHRoZXJlIGlzIGEgYmVhbSB0aGVuIHdlIGRvbid0IG5lZWQgdG8gZHJhdyBhbnl0aGluZyBleGNlcHQgdGhlIHRleHQuIFRoZSBiZWFtIGNvdWxkIGVpdGhlciBiZSBhYm92ZSBvciBiZWxvdy5cblx0XHRcdHZhciBsZWZ0ID0gaXNBYm92ZShiZWFtKSA/IGVsZW1lbnQuYW5jaG9yMS54ICsgZWxlbWVudC5hbmNob3IxLncgOiBlbGVtZW50LmFuY2hvcjEueDtcblx0XHRcdGVsZW1lbnQueVRleHRQb3MgPSBoZWlnaHRBdE1pZHBvaW50KGxlZnQsIGVsZW1lbnQuYW5jaG9yMi54LCBiZWFtKTtcblx0XHRcdGVsZW1lbnQueVRleHRQb3MgKz0gaXNBYm92ZShiZWFtKSA/IDMgOiAtMjsgLy8gVGhpcyBjcmVhdGVzIHNvbWUgc3BhY2UgYmV0d2VlbiB0aGUgYmVhbSBhbmQgdGhlIG51bWJlci5cblx0XHRcdGVsZW1lbnQueFRleHRQb3MgPSB4QXRNaWRwb2ludChsZWZ0LCBlbGVtZW50LmFuY2hvcjIueCk7XG5cdFx0XHRlbGVtZW50LnRvcCA9IGVsZW1lbnQueVRleHRQb3MgKyAxO1xuXHRcdFx0ZWxlbWVudC5ib3R0b20gPSBlbGVtZW50LnlUZXh0UG9zIC0gMjtcblx0XHRcdGlmIChpc0Fib3ZlKGJlYW0pKVxuXHRcdFx0XHRlbGVtZW50LmVuZGluZ0hlaWdodEFib3ZlID0gNDtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gSWYgdGhlcmUgaXNuJ3QgYSBiZWFtLCB0aGVuIHdlIG5lZWQgdG8gZHJhdyB0aGUgYnJhY2tldCBhbmQgdGhlIHRleHQuIFRoZSBicmFja2V0IGlzIGFsd2F5cyBhYm92ZS5cblx0XHRcdC8vIFRoZSBicmFja2V0IGlzIG5ldmVyIGxvd2VyIHRoYW4gdGhlICdhJyBsaW5lLCBidXQgaXMgNCBwaXRjaGVzIGFib3ZlIHRoZSBmaXJzdCBhbmQgbGFzdCBub3Rlcy4gSWYgdGhlcmUgaXNcblx0XHRcdC8vIGEgdGFsbCBub3RlIGluIHRoZSBtaWRkbGUsIHRoZSBicmFja2V0IGlzIGhvcml6b250YWwgYW5kIGFib3ZlIHRoZSBoaWdoZXN0IG5vdGUuXG5cdFx0XHRlbGVtZW50LnN0YXJ0Tm90ZSA9IE1hdGgubWF4KGVsZW1lbnQuYW5jaG9yMS5wYXJlbnQudG9wLCA5KSArIDQ7XG5cdFx0XHRlbGVtZW50LmVuZE5vdGUgPSBNYXRoLm1heChlbGVtZW50LmFuY2hvcjIucGFyZW50LnRvcCwgOSkgKyA0O1xuXHRcdFx0Ly8gSWYgaXQgc3RhcnRzIG9yIGVuZHMgb24gYSByZXN0LCBtYWtlIHRoZSBiZWFtIGhvcml6b250YWxcblx0XHRcdGlmIChlbGVtZW50LmFuY2hvcjEucGFyZW50LnR5cGUgPT09IFwicmVzdFwiICYmIGVsZW1lbnQuYW5jaG9yMi5wYXJlbnQudHlwZSAhPT0gXCJyZXN0XCIpXG5cdFx0XHRcdGVsZW1lbnQuc3RhcnROb3RlID0gZWxlbWVudC5lbmROb3RlO1xuXHRcdFx0ZWxzZSBpZiAoZWxlbWVudC5hbmNob3IyLnBhcmVudC50eXBlID09PSBcInJlc3RcIiAmJiBlbGVtZW50LmFuY2hvcjEucGFyZW50LnR5cGUgIT09IFwicmVzdFwiKVxuXHRcdFx0XHRlbGVtZW50LmVuZE5vdGUgPSBlbGVtZW50LnN0YXJ0Tm90ZTtcblx0XHRcdC8vIFNlZSBpZiB0aGUgbWlkZGxlIG5vdGUgaXMgcmVhbGx5IGhpZ2guXG5cdFx0XHR2YXIgbWF4ID0gMDtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgZWxlbWVudC5taWRkbGVFbGVtcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRtYXggPSBNYXRoLm1heChtYXgsIGVsZW1lbnQubWlkZGxlRWxlbXNbaV0udG9wKTtcblx0XHRcdH1cblx0XHRcdG1heCArPSA0O1xuXHRcdFx0aWYgKG1heCA+IGVsZW1lbnQuc3RhcnROb3RlIHx8IG1heCA+IGVsZW1lbnQuZW5kTm90ZSkge1xuXHRcdFx0XHRlbGVtZW50LnN0YXJ0Tm90ZSA9IG1heDtcblx0XHRcdFx0ZWxlbWVudC5lbmROb3RlID0gbWF4O1xuXHRcdFx0fVxuXHRcdFx0aWYgKGVsZW1lbnQuZmxhdEJlYW1zKSB7XG5cdFx0XHRcdGVsZW1lbnQuc3RhcnROb3RlID0gTWF0aC5tYXgoZWxlbWVudC5zdGFydE5vdGUsIGVsZW1lbnQuZW5kTm90ZSk7XG5cdFx0XHRcdGVsZW1lbnQuZW5kTm90ZSA9IE1hdGgubWF4KGVsZW1lbnQuc3RhcnROb3RlLCBlbGVtZW50LmVuZE5vdGUpO1xuXHRcdFx0fVxuXG5cdFx0XHRlbGVtZW50LnlUZXh0UG9zID0gZWxlbWVudC5zdGFydE5vdGUgKyAoZWxlbWVudC5lbmROb3RlIC0gZWxlbWVudC5zdGFydE5vdGUpIC8gMjtcblx0XHRcdGVsZW1lbnQueFRleHRQb3MgPSBlbGVtZW50LmFuY2hvcjEueCArIChlbGVtZW50LmFuY2hvcjIueCArIGVsZW1lbnQuYW5jaG9yMi53IC0gZWxlbWVudC5hbmNob3IxLngpIC8gMjtcblx0XHRcdGVsZW1lbnQudG9wID0gZWxlbWVudC55VGV4dFBvcyArIDE7XG5cdFx0fVxuXHR9XG5cdGRlbGV0ZSBlbGVtZW50Lm1pZGRsZUVsZW1zO1xuXHRkZWxldGUgZWxlbWVudC5mbGF0QmVhbXM7XG59XG5cbmZ1bmN0aW9uIGlzQWJvdmUoYmVhbSkge1xuXHRyZXR1cm4gYmVhbS5zdGVtc1VwO1xufVxuXG4vLyBXZSBjYW4ndCBqdXN0IHVzZSB0aGUgZW50aXJlIGJlYW0gZm9yIHRoZSBjYWxjdWxhdGlvbi4gVGhlIHJhbmdlIGhhcyB0byBiZSBwYXNzZWQgaW4sIGJlY2F1c2UgdGhlIGJlYW0gbWlnaHQgZXh0ZW5kIGludG8gc29tZSB1bnJlbGF0ZWQgbm90ZXMuIGZvciBpbnN0YW5jZSwgKDNfYSdmJ2UnZicyIHdoZW4gTDoxNlxuZnVuY3Rpb24gaGVpZ2h0QXRNaWRwb2ludChzdGFydFgsIGVuZFgsIGJlYW0pIHtcblx0aWYgKGJlYW0uYmVhbXMubGVuZ3RoID09PSAwKVxuXHRcdHJldHVybiAwO1xuXHRiZWFtID0gYmVhbS5iZWFtc1swXTtcblx0dmFyIG1pZFBvaW50ID0gc3RhcnRYICsgKGVuZFggLSBzdGFydFgpIC8gMjtcblx0cmV0dXJuIGdldEJhcllBdChiZWFtLnN0YXJ0WCwgYmVhbS5zdGFydFksIGJlYW0uZW5kWCwgYmVhbS5lbmRZLCBtaWRQb2ludCk7XG59XG5cbmZ1bmN0aW9uIHhBdE1pZHBvaW50KHN0YXJ0WCwgZW5kWCkge1xuXHRyZXR1cm4gc3RhcnRYICsgKGVuZFggLSBzdGFydFgpIC8gMjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBsYXlvdXRUcmlwbGV0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/layout/triplet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/layout/voice-elements.js":
/*!***************************************************************!*\
  !*** ./node_modules/abcjs/src/write/layout/voice-elements.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("var VoiceElement = function VoiceElements() { }\n\nVoiceElement.beginLayout = function (startx, voice) {\n\tvoice.i = 0;\n\tvoice.durationindex = 0;\n\t//this.ii=this.children.length;\n\tvoice.startx = startx;\n\tvoice.minx = startx; // furthest left to where negatively positioned elements are allowed to go\n\tvoice.nextx = startx; // x position where the next element of this voice should be placed assuming no other voices and no fixed width constraints\n\tvoice.spacingduration = 0; // duration left to be laid out in current iteration (omitting additional spacing due to other aspects, such as bars, dots, sharps and flats)\n};\n\nVoiceElement.layoutEnded = function (voice) {\n\treturn (voice.i >= voice.children.length);\n};\n\nVoiceElement.getNextX = function (voice) {\n\treturn Math.max(voice.minx, voice.nextx);\n};\n\n// number of spacing units expected for next positioning\nVoiceElement.getSpacingUnits = function (voice) {\n\treturn Math.sqrt(voice.spacingduration * 8);\n};\n\n// Try to layout the element at index this.i\n// x - position to try to layout the element at\n// spacing - base spacing\n// can't call this function more than once per iteration\nVoiceElement.layoutOneItem = function (x, spacing, voice, minPadding, firstVoice) {\n\tvar child = voice.children[voice.i];\n\tif (!child) return 0;\n\tvar er = x - voice.minx; // available extrawidth to the left\n\tvar pad = voice.durationindex + child.duration > 0 ? minPadding : 0; // only add padding to the items that aren't fixed to the left edge.\n\t// See if this item overlaps the item in the first voice. If firstVoice is undefined then there's nothing to compare.\n\tif (child.abcelem.el_type === \"note\" && !child.abcelem.rest && voice.voicenumber !== 0 && firstVoice) {\n\t\tvar firstChild = firstVoice.children[firstVoice.i];\n\t\t// It overlaps if the either the child's top or bottom is inside the firstChild's or at least within 1\n\t\t// A special case is if the element is on the same line then it can share a note head, if the notehead is the same\n\t\tvar overlaps = firstChild &&\n\t\t\t((child.abcelem.maxpitch <= firstChild.abcelem.maxpitch + 1 && child.abcelem.maxpitch >= firstChild.abcelem.minpitch - 1) ||\n\t\t\t\t(child.abcelem.minpitch <= firstChild.abcelem.maxpitch + 1 && child.abcelem.minpitch >= firstChild.abcelem.minpitch - 1))\n\t\t// See if they can share a note head\n\t\tif (overlaps && child.abcelem.minpitch === firstChild.abcelem.minpitch && child.abcelem.maxpitch === firstChild.abcelem.maxpitch &&\n\t\t\tfirstChild.heads && firstChild.heads.length > 0 && child.heads && child.heads.length > 0 &&\n\t\t\tfirstChild.heads[0].c === child.heads[0].c)\n\t\t\toverlaps = false;\n\t\t// If this note overlaps the note in the first voice and we haven't moved the note yet (this can be called multiple times)\n\t\tif (overlaps) {\n\t\t\t// I think that firstChild should always have at least one note head, but defensively make sure.\n\t\t\t// There was a problem with this being called more than once so if a value is adjusted then it is saved so it is only adjusted once.\n\t\t\tvar firstChildNoteWidth = firstChild.heads && firstChild.heads.length > 0 ? firstChild.heads[0].realWidth : firstChild.fixed.w;\n\t\t\tif (!child.adjustedWidth)\n\t\t\t\tchild.adjustedWidth = firstChildNoteWidth + child.w;\n\t\t\tchild.w = child.adjustedWidth\n\t\t\tfor (var j = 0; j < child.children.length; j++) {\n\t\t\t\tvar relativeChild = child.children[j];\n\t\t\t\tif (relativeChild.name.indexOf(\"accidental\") < 0) {\n\t\t\t\t\tif (!relativeChild.adjustedWidth)\n\t\t\t\t\t\trelativeChild.adjustedWidth = relativeChild.dx + firstChildNoteWidth;\n\t\t\t\t\trelativeChild.dx = relativeChild.adjustedWidth\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\tvar extraWidth = getExtraWidth(child, pad);\n\tif (er < extraWidth) { // shift right by needed amount\n\t\t// There's an exception if a bar element is after a Part element, there is no shift.\n\t\tif (voice.i === 0 || child.type !== 'bar' || (voice.children[voice.i - 1].type !== 'part' && voice.children[voice.i - 1].type !== 'tempo'))\n\t\t\tx += extraWidth - er;\n\t}\n\tchild.setX(x);\n\n\tvoice.spacingduration = child.duration;\n\t//update minx\n\tvoice.minx = x + getMinWidth(child); // add necessary layout space\n\tif (voice.i !== voice.children.length - 1) voice.minx += child.minspacing; // add minimumspacing except on last elem\n\n\tthis.updateNextX(x, spacing, voice);\n\n\t// contribute to staff y position\n\t//this.staff.top = Math.max(child.top,this.staff.top);\n\t//this.staff.bottom = Math.min(child.bottom,this.staff.bottom);\n\n\treturn x; // where we end up having placed the child\n};\n\nVoiceElement.shiftRight = function (dx, voice) {\n\tvar child = voice.children[voice.i];\n\tif (!child) return;\n\tchild.setX(child.x + dx);\n\tvoice.minx += dx;\n\tvoice.nextx += dx;\n};\n\n// call when spacingduration has been updated\nVoiceElement.updateNextX = function (x, spacing, voice) {\n\tvoice.nextx = x + (spacing * this.getSpacingUnits(voice));\n};\n\nVoiceElement.updateIndices = function (voice) {\n\tif (!this.layoutEnded(voice)) {\n\t\tvoice.durationindex += voice.children[voice.i].duration;\n\t\tif (voice.children[voice.i].type === 'bar') voice.durationindex = Math.round(voice.durationindex * 64) / 64; // everytime we meet a barline, do rounding to nearest 64th\n\t\tvoice.i++;\n\t}\n};\n\nfunction getExtraWidth(child, minPadding) { // space needed to the left of the note\n\tvar padding = 0;\n\tif (child.type === 'note' || child.type === 'bar')\n\t\tpadding = minPadding;\n\treturn -child.extraw + padding;\n}\n\nfunction getMinWidth(child) { // absolute space taken to the right of the note\n\treturn child.w;\n}\n\nmodule.exports = VoiceElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/layout/voice-elements.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/layout/voice.js":
/*!******************************************************!*\
  !*** ./node_modules/abcjs/src/write/layout/voice.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var layoutBeam = __webpack_require__(/*! ./beam */ \"(ssr)/./node_modules/abcjs/src/write/layout/beam.js\");\nvar getBarYAt = __webpack_require__(/*! ./get-bar-y-at */ \"(ssr)/./node_modules/abcjs/src/write/layout/get-bar-y-at.js\");\nvar layoutTriplet = __webpack_require__(/*! ./triplet */ \"(ssr)/./node_modules/abcjs/src/write/layout/triplet.js\");\n\nvar layoutVoice = function (voice) {\n\tfor (var i = 0; i < voice.beams.length; i++) {\n\t\tif (voice.beams[i].type === 'BeamElem') {\n\t\t\tlayoutBeam(voice.beams[i]);\n\t\t\tmoveDecorations(voice.beams[i]);\n\t\t\t// The above will change the top and bottom of the abselem children, so see if we need to expand our range.\n\t\t\tfor (var j = 0; j < voice.beams[i].elems.length; j++) {\n\t\t\t\tvoice.adjustRange(voice.beams[i].elems[j]);\n\t\t\t}\n\t\t}\n\t}\n\tvoice.staff.specialY.chordLines = setLaneForChord(voice.children);\n\n\t// Now we can layout the triplets\n\tfor (i = 0; i < voice.otherchildren.length; i++) {\n\t\tvar child = voice.otherchildren[i];\n\t\tif (child.type === 'TripletElem') {\n\t\t\tlayoutTriplet(child);\n\t\t\tvoice.adjustRange(child);\n\t\t}\n\t}\n\tvoice.staff.top = Math.max(voice.staff.top, voice.top);\n\tvoice.staff.bottom = Math.min(voice.staff.bottom, voice.bottom);\n};\n\nfunction moveDecorations(beam) {\n\tvar padding = 1.5; // This is the vertical padding between elements, in pitches.\n\tfor (var ch = 0; ch < beam.elems.length; ch++) {\n\t\tvar child = beam.elems[ch];\n\t\tif (child.top) {\n\t\t\t// We now know where the ornaments should have been placed, so move them if they would overlap.\n\t\t\tvar top = yAtNote(child, beam);\n\t\t\tfor (var i = 0; i < child.children.length; i++) {\n\t\t\t\tvar el = child.children[i];\n\t\t\t\tif (el.klass === 'ornament' && el.position !== 'below') {\n\t\t\t\t\tif (el.bottom - padding < top) {\n\t\t\t\t\t\tvar distance = top - el.bottom + padding; // Find the distance that it needs to move and add a little margin so the element doesn't touch the beam.\n\t\t\t\t\t\tel.bottom += distance;\n\t\t\t\t\t\tel.top += distance;\n\t\t\t\t\t\tel.pitch += distance;\n\t\t\t\t\t\ttop = child.top = el.top;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction placeInLane(rightMost, relElem) {\n\t// These items are centered so figure the coordinates accordingly.\n\t// The font reports some extra space so the margin is built in.\n\tvar xCoords = relElem.getChordDim();\n\tif (xCoords) {\n\t\tfor (var i = 0; i < rightMost.length; i++) {\n\t\t\tvar fits = rightMost[i] < xCoords.left;\n\t\t\tif (fits) {\n\t\t\t\tif (i > 0)\n\t\t\t\t\trelElem.putChordInLane(i);\n\t\t\t\trightMost[i] = xCoords.right;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// If we didn't return early, then we need a new row\n\t\trightMost.push(xCoords.right);\n\t\trelElem.putChordInLane(rightMost.length - 1);\n\t}\n}\n\nfunction setLaneForChord(absElems) {\n\t// Criteria:\n\t// 1) lane numbers start from the bottom so that as many items as possible are in lane 0, closest to the music.\n\t// 2) a chord can have more than one line (for instance \"C\\nD\") each line is a lane.\n\t// 3) if two adjoining items would touch then push the second one to the next lane.\n\t// 4) use as many lanes as is necessary to get everything to not touch.\n\t// 5) leave a margin between items, so use another lane if the chords would have less than a character's width.\n\t// 6) if the chord only has one character, allow it to be closer than if the chord has more than one character.\n\tvar rightMostAbove = [0];\n\tvar rightMostBelow = [0];\n\tvar i;\n\tvar j;\n\tvar relElem;\n\tfor (i = 0; i < absElems.length; i++) {\n\t\tfor (j = 0; j < absElems[i].children.length; j++) {\n\t\t\trelElem = absElems[i].children[j];\n\t\t\tif (relElem.chordHeightAbove) {\n\t\t\t\tplaceInLane(rightMostAbove, relElem);\n\t\t\t}\n\t\t}\n\t\tfor (j = absElems[i].children.length - 1; j >= 0; j--) {\n\t\t\trelElem = absElems[i].children[j];\n\t\t\tif (relElem.chordHeightBelow) {\n\t\t\t\tplaceInLane(rightMostBelow, relElem);\n\t\t\t}\n\t\t}\n\t}\n\t// If we used a second line, then we need to go back and set the first lines.\n\t// Also we need to flip the indexes of the names so that we can count from the top line.\n\tif (rightMostAbove.length > 1 || rightMostBelow.length > 1)\n\t\tsetLane(absElems, rightMostAbove.length, rightMostBelow.length);\n\treturn { above: rightMostAbove.length, below: rightMostBelow.length };\n}\n\nfunction numAnnotationsBelow(absElem) {\n\tvar count = 0;\n\tfor (var j = 0; j < absElem.children.length; j++) {\n\t\tvar relElem = absElem.children[j];\n\t\tif (relElem.chordHeightBelow)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\n\nfunction setLane(absElems, numLanesAbove, numLanesBelow) {\n\tfor (var i = 0; i < absElems.length; i++) {\n\t\tvar below = numAnnotationsBelow(absElems[i]);\n\t\tfor (var j = 0; j < absElems[i].children.length; j++) {\n\t\t\tvar relElem = absElems[i].children[j];\n\t\t\tif (relElem.chordHeightAbove) {\n\t\t\t\trelElem.invertLane(numLanesAbove);\n\t\t\t\t// } else if (relElem.chordHeightBelow) {\n\t\t\t\t// \trelElem.invertLane(below);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction yAtNote(element, beam) {\n\tbeam = beam.beams[0];\n\treturn getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, element.x);\n}\n\n\nmodule.exports = layoutVoice;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2xheW91dC92b2ljZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQyxtRUFBUTtBQUNqQyxnQkFBZ0IsbUJBQU8sQ0FBQyxtRkFBZ0I7QUFDeEMsb0JBQW9CLG1CQUFPLENBQUMseUVBQVc7O0FBRXZDO0FBQ0EsaUJBQWlCLHdCQUF3QjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixpQ0FBaUM7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGFBQWEsZ0NBQWdDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQjtBQUNwQixrQkFBa0Isd0JBQXdCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDJCQUEyQjtBQUM5QztBQUNBO0FBQ0E7QUFDQSxnREFBZ0Q7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixzQkFBc0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHFCQUFxQjtBQUNsQyxjQUFjLGlDQUFpQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLFFBQVE7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7O0FBRUE7QUFDQTtBQUNBLGlCQUFpQiw2QkFBNkI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCLHFCQUFxQjtBQUN0QztBQUNBLGtCQUFrQixpQ0FBaUM7QUFDbkQ7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1hcnRpZmFjdHMvLi9ub2RlX21vZHVsZXMvYWJjanMvc3JjL3dyaXRlL2xheW91dC92b2ljZS5qcz9kMjdjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBsYXlvdXRCZWFtID0gcmVxdWlyZSgnLi9iZWFtJyk7XG52YXIgZ2V0QmFyWUF0ID0gcmVxdWlyZSgnLi9nZXQtYmFyLXktYXQnKTtcbnZhciBsYXlvdXRUcmlwbGV0ID0gcmVxdWlyZSgnLi90cmlwbGV0Jyk7XG5cbnZhciBsYXlvdXRWb2ljZSA9IGZ1bmN0aW9uICh2b2ljZSkge1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IHZvaWNlLmJlYW1zLmxlbmd0aDsgaSsrKSB7XG5cdFx0aWYgKHZvaWNlLmJlYW1zW2ldLnR5cGUgPT09ICdCZWFtRWxlbScpIHtcblx0XHRcdGxheW91dEJlYW0odm9pY2UuYmVhbXNbaV0pO1xuXHRcdFx0bW92ZURlY29yYXRpb25zKHZvaWNlLmJlYW1zW2ldKTtcblx0XHRcdC8vIFRoZSBhYm92ZSB3aWxsIGNoYW5nZSB0aGUgdG9wIGFuZCBib3R0b20gb2YgdGhlIGFic2VsZW0gY2hpbGRyZW4sIHNvIHNlZSBpZiB3ZSBuZWVkIHRvIGV4cGFuZCBvdXIgcmFuZ2UuXG5cdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IHZvaWNlLmJlYW1zW2ldLmVsZW1zLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdHZvaWNlLmFkanVzdFJhbmdlKHZvaWNlLmJlYW1zW2ldLmVsZW1zW2pdKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0dm9pY2Uuc3RhZmYuc3BlY2lhbFkuY2hvcmRMaW5lcyA9IHNldExhbmVGb3JDaG9yZCh2b2ljZS5jaGlsZHJlbik7XG5cblx0Ly8gTm93IHdlIGNhbiBsYXlvdXQgdGhlIHRyaXBsZXRzXG5cdGZvciAoaSA9IDA7IGkgPCB2b2ljZS5vdGhlcmNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGNoaWxkID0gdm9pY2Uub3RoZXJjaGlsZHJlbltpXTtcblx0XHRpZiAoY2hpbGQudHlwZSA9PT0gJ1RyaXBsZXRFbGVtJykge1xuXHRcdFx0bGF5b3V0VHJpcGxldChjaGlsZCk7XG5cdFx0XHR2b2ljZS5hZGp1c3RSYW5nZShjaGlsZCk7XG5cdFx0fVxuXHR9XG5cdHZvaWNlLnN0YWZmLnRvcCA9IE1hdGgubWF4KHZvaWNlLnN0YWZmLnRvcCwgdm9pY2UudG9wKTtcblx0dm9pY2Uuc3RhZmYuYm90dG9tID0gTWF0aC5taW4odm9pY2Uuc3RhZmYuYm90dG9tLCB2b2ljZS5ib3R0b20pO1xufTtcblxuZnVuY3Rpb24gbW92ZURlY29yYXRpb25zKGJlYW0pIHtcblx0dmFyIHBhZGRpbmcgPSAxLjU7IC8vIFRoaXMgaXMgdGhlIHZlcnRpY2FsIHBhZGRpbmcgYmV0d2VlbiBlbGVtZW50cywgaW4gcGl0Y2hlcy5cblx0Zm9yICh2YXIgY2ggPSAwOyBjaCA8IGJlYW0uZWxlbXMubGVuZ3RoOyBjaCsrKSB7XG5cdFx0dmFyIGNoaWxkID0gYmVhbS5lbGVtc1tjaF07XG5cdFx0aWYgKGNoaWxkLnRvcCkge1xuXHRcdFx0Ly8gV2Ugbm93IGtub3cgd2hlcmUgdGhlIG9ybmFtZW50cyBzaG91bGQgaGF2ZSBiZWVuIHBsYWNlZCwgc28gbW92ZSB0aGVtIGlmIHRoZXkgd291bGQgb3ZlcmxhcC5cblx0XHRcdHZhciB0b3AgPSB5QXROb3RlKGNoaWxkLCBiZWFtKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgY2hpbGQuY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0dmFyIGVsID0gY2hpbGQuY2hpbGRyZW5baV07XG5cdFx0XHRcdGlmIChlbC5rbGFzcyA9PT0gJ29ybmFtZW50JyAmJiBlbC5wb3NpdGlvbiAhPT0gJ2JlbG93Jykge1xuXHRcdFx0XHRcdGlmIChlbC5ib3R0b20gLSBwYWRkaW5nIDwgdG9wKSB7XG5cdFx0XHRcdFx0XHR2YXIgZGlzdGFuY2UgPSB0b3AgLSBlbC5ib3R0b20gKyBwYWRkaW5nOyAvLyBGaW5kIHRoZSBkaXN0YW5jZSB0aGF0IGl0IG5lZWRzIHRvIG1vdmUgYW5kIGFkZCBhIGxpdHRsZSBtYXJnaW4gc28gdGhlIGVsZW1lbnQgZG9lc24ndCB0b3VjaCB0aGUgYmVhbS5cblx0XHRcdFx0XHRcdGVsLmJvdHRvbSArPSBkaXN0YW5jZTtcblx0XHRcdFx0XHRcdGVsLnRvcCArPSBkaXN0YW5jZTtcblx0XHRcdFx0XHRcdGVsLnBpdGNoICs9IGRpc3RhbmNlO1xuXHRcdFx0XHRcdFx0dG9wID0gY2hpbGQudG9wID0gZWwudG9wO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBwbGFjZUluTGFuZShyaWdodE1vc3QsIHJlbEVsZW0pIHtcblx0Ly8gVGhlc2UgaXRlbXMgYXJlIGNlbnRlcmVkIHNvIGZpZ3VyZSB0aGUgY29vcmRpbmF0ZXMgYWNjb3JkaW5nbHkuXG5cdC8vIFRoZSBmb250IHJlcG9ydHMgc29tZSBleHRyYSBzcGFjZSBzbyB0aGUgbWFyZ2luIGlzIGJ1aWx0IGluLlxuXHR2YXIgeENvb3JkcyA9IHJlbEVsZW0uZ2V0Q2hvcmREaW0oKTtcblx0aWYgKHhDb29yZHMpIHtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHJpZ2h0TW9zdC5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGZpdHMgPSByaWdodE1vc3RbaV0gPCB4Q29vcmRzLmxlZnQ7XG5cdFx0XHRpZiAoZml0cykge1xuXHRcdFx0XHRpZiAoaSA+IDApXG5cdFx0XHRcdFx0cmVsRWxlbS5wdXRDaG9yZEluTGFuZShpKTtcblx0XHRcdFx0cmlnaHRNb3N0W2ldID0geENvb3Jkcy5yaWdodDtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdH1cblx0XHQvLyBJZiB3ZSBkaWRuJ3QgcmV0dXJuIGVhcmx5LCB0aGVuIHdlIG5lZWQgYSBuZXcgcm93XG5cdFx0cmlnaHRNb3N0LnB1c2goeENvb3Jkcy5yaWdodCk7XG5cdFx0cmVsRWxlbS5wdXRDaG9yZEluTGFuZShyaWdodE1vc3QubGVuZ3RoIC0gMSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gc2V0TGFuZUZvckNob3JkKGFic0VsZW1zKSB7XG5cdC8vIENyaXRlcmlhOlxuXHQvLyAxKSBsYW5lIG51bWJlcnMgc3RhcnQgZnJvbSB0aGUgYm90dG9tIHNvIHRoYXQgYXMgbWFueSBpdGVtcyBhcyBwb3NzaWJsZSBhcmUgaW4gbGFuZSAwLCBjbG9zZXN0IHRvIHRoZSBtdXNpYy5cblx0Ly8gMikgYSBjaG9yZCBjYW4gaGF2ZSBtb3JlIHRoYW4gb25lIGxpbmUgKGZvciBpbnN0YW5jZSBcIkNcXG5EXCIpIGVhY2ggbGluZSBpcyBhIGxhbmUuXG5cdC8vIDMpIGlmIHR3byBhZGpvaW5pbmcgaXRlbXMgd291bGQgdG91Y2ggdGhlbiBwdXNoIHRoZSBzZWNvbmQgb25lIHRvIHRoZSBuZXh0IGxhbmUuXG5cdC8vIDQpIHVzZSBhcyBtYW55IGxhbmVzIGFzIGlzIG5lY2Vzc2FyeSB0byBnZXQgZXZlcnl0aGluZyB0byBub3QgdG91Y2guXG5cdC8vIDUpIGxlYXZlIGEgbWFyZ2luIGJldHdlZW4gaXRlbXMsIHNvIHVzZSBhbm90aGVyIGxhbmUgaWYgdGhlIGNob3JkcyB3b3VsZCBoYXZlIGxlc3MgdGhhbiBhIGNoYXJhY3RlcidzIHdpZHRoLlxuXHQvLyA2KSBpZiB0aGUgY2hvcmQgb25seSBoYXMgb25lIGNoYXJhY3RlciwgYWxsb3cgaXQgdG8gYmUgY2xvc2VyIHRoYW4gaWYgdGhlIGNob3JkIGhhcyBtb3JlIHRoYW4gb25lIGNoYXJhY3Rlci5cblx0dmFyIHJpZ2h0TW9zdEFib3ZlID0gWzBdO1xuXHR2YXIgcmlnaHRNb3N0QmVsb3cgPSBbMF07XG5cdHZhciBpO1xuXHR2YXIgajtcblx0dmFyIHJlbEVsZW07XG5cdGZvciAoaSA9IDA7IGkgPCBhYnNFbGVtcy5sZW5ndGg7IGkrKykge1xuXHRcdGZvciAoaiA9IDA7IGogPCBhYnNFbGVtc1tpXS5jaGlsZHJlbi5sZW5ndGg7IGorKykge1xuXHRcdFx0cmVsRWxlbSA9IGFic0VsZW1zW2ldLmNoaWxkcmVuW2pdO1xuXHRcdFx0aWYgKHJlbEVsZW0uY2hvcmRIZWlnaHRBYm92ZSkge1xuXHRcdFx0XHRwbGFjZUluTGFuZShyaWdodE1vc3RBYm92ZSwgcmVsRWxlbSk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGZvciAoaiA9IGFic0VsZW1zW2ldLmNoaWxkcmVuLmxlbmd0aCAtIDE7IGogPj0gMDsgai0tKSB7XG5cdFx0XHRyZWxFbGVtID0gYWJzRWxlbXNbaV0uY2hpbGRyZW5bal07XG5cdFx0XHRpZiAocmVsRWxlbS5jaG9yZEhlaWdodEJlbG93KSB7XG5cdFx0XHRcdHBsYWNlSW5MYW5lKHJpZ2h0TW9zdEJlbG93LCByZWxFbGVtKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0Ly8gSWYgd2UgdXNlZCBhIHNlY29uZCBsaW5lLCB0aGVuIHdlIG5lZWQgdG8gZ28gYmFjayBhbmQgc2V0IHRoZSBmaXJzdCBsaW5lcy5cblx0Ly8gQWxzbyB3ZSBuZWVkIHRvIGZsaXAgdGhlIGluZGV4ZXMgb2YgdGhlIG5hbWVzIHNvIHRoYXQgd2UgY2FuIGNvdW50IGZyb20gdGhlIHRvcCBsaW5lLlxuXHRpZiAocmlnaHRNb3N0QWJvdmUubGVuZ3RoID4gMSB8fCByaWdodE1vc3RCZWxvdy5sZW5ndGggPiAxKVxuXHRcdHNldExhbmUoYWJzRWxlbXMsIHJpZ2h0TW9zdEFib3ZlLmxlbmd0aCwgcmlnaHRNb3N0QmVsb3cubGVuZ3RoKTtcblx0cmV0dXJuIHsgYWJvdmU6IHJpZ2h0TW9zdEFib3ZlLmxlbmd0aCwgYmVsb3c6IHJpZ2h0TW9zdEJlbG93Lmxlbmd0aCB9O1xufVxuXG5mdW5jdGlvbiBudW1Bbm5vdGF0aW9uc0JlbG93KGFic0VsZW0pIHtcblx0dmFyIGNvdW50ID0gMDtcblx0Zm9yICh2YXIgaiA9IDA7IGogPCBhYnNFbGVtLmNoaWxkcmVuLmxlbmd0aDsgaisrKSB7XG5cdFx0dmFyIHJlbEVsZW0gPSBhYnNFbGVtLmNoaWxkcmVuW2pdO1xuXHRcdGlmIChyZWxFbGVtLmNob3JkSGVpZ2h0QmVsb3cpXG5cdFx0XHRjb3VudCsrO1xuXHR9XG5cdHJldHVybiBjb3VudDtcbn1cblxuZnVuY3Rpb24gc2V0TGFuZShhYnNFbGVtcywgbnVtTGFuZXNBYm92ZSwgbnVtTGFuZXNCZWxvdykge1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IGFic0VsZW1zLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGJlbG93ID0gbnVtQW5ub3RhdGlvbnNCZWxvdyhhYnNFbGVtc1tpXSk7XG5cdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBhYnNFbGVtc1tpXS5jaGlsZHJlbi5sZW5ndGg7IGorKykge1xuXHRcdFx0dmFyIHJlbEVsZW0gPSBhYnNFbGVtc1tpXS5jaGlsZHJlbltqXTtcblx0XHRcdGlmIChyZWxFbGVtLmNob3JkSGVpZ2h0QWJvdmUpIHtcblx0XHRcdFx0cmVsRWxlbS5pbnZlcnRMYW5lKG51bUxhbmVzQWJvdmUpO1xuXHRcdFx0XHQvLyB9IGVsc2UgaWYgKHJlbEVsZW0uY2hvcmRIZWlnaHRCZWxvdykge1xuXHRcdFx0XHQvLyBcdHJlbEVsZW0uaW52ZXJ0TGFuZShiZWxvdyk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIHlBdE5vdGUoZWxlbWVudCwgYmVhbSkge1xuXHRiZWFtID0gYmVhbS5iZWFtc1swXTtcblx0cmV0dXJuIGdldEJhcllBdChiZWFtLnN0YXJ0WCwgYmVhbS5zdGFydFksIGJlYW0uZW5kWCwgYmVhbS5lbmRZLCBlbGVtZW50LngpO1xufVxuXG5cbm1vZHVsZS5leHBvcnRzID0gbGF5b3V0Vm9pY2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/layout/voice.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/renderer.js":
/*!**************************************************!*\
  !*** ./node_modules/abcjs/src/write/renderer.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//    abc_renderer.js: API to render to SVG/Raphael/whatever rendering engine\n\n/*global Math */\n\nvar spacing = __webpack_require__(/*! ./helpers/spacing */ \"(ssr)/./node_modules/abcjs/src/write/helpers/spacing.js\");\nvar Svg = __webpack_require__(/*! ./svg */ \"(ssr)/./node_modules/abcjs/src/write/svg.js\");\n\n/**\n * Implements the API for rendering ABCJS Abstract Rendering Structure to a canvas/paper (e.g. SVG, Raphael, etc)\n * @param {Object} paper\n */\nvar Renderer = function (paper) {\n\tthis.paper = new Svg(paper);\n\tthis.controller = null;\n\n\tthis.space = 3 * spacing.SPACE;\n\tthis.padding = {}; // renderer's padding is managed by the controller\n\tthis.reset();\n\tthis.firefox112 = navigator.userAgent.indexOf('Firefox/112.0') >= 0\n};\n\nRenderer.prototype.reset = function () {\n\n\tthis.paper.clear();\n\tthis.y = 0;\n\tthis.abctune = null;\n\tthis.path = null;\n\tthis.isPrint = false;\n\tthis.lineThickness = 0;\n\tthis.initVerticalSpace();\n};\n\nRenderer.prototype.newTune = function (abcTune) {\n\tthis.abctune = abcTune; // TODO-PER: this is just to get the font info.\n\tthis.setVerticalSpace(abcTune.formatting);\n\t//this.measureNumber = null;\n\t//this.noteNumber = null;\n\tthis.isPrint = abcTune.media === 'print';\n\tthis.setPadding(abcTune);\n};\n\nRenderer.prototype.setLineThickness = function (lineThickness) {\n\tthis.lineThickness = lineThickness\n};\n\nRenderer.prototype.setPaddingOverride = function (params) {\n\tthis.paddingOverride = {\n\t\ttop: params.paddingtop, bottom: params.paddingbottom,\n\t\tright: params.paddingright, left: params.paddingleft\n\t};\n};\n\nRenderer.prototype.setPadding = function (abctune) {\n\t// If the padding is set in the tune, then use that.\n\t// Otherwise, if the padding is set in the override, use that.\n\t// Otherwise, use the defaults (there are a different set of defaults for screen and print.)\n\tfunction setPaddingVariable(self, paddingKey, formattingKey, printDefault, screenDefault) {\n\t\tif (abctune.formatting[formattingKey] !== undefined)\n\t\t\tself.padding[paddingKey] = abctune.formatting[formattingKey];\n\t\telse if (self.paddingOverride[paddingKey] !== undefined)\n\t\t\tself.padding[paddingKey] = self.paddingOverride[paddingKey];\n\t\telse if (self.isPrint)\n\t\t\tself.padding[paddingKey] = printDefault;\n\t\telse\n\t\t\tself.padding[paddingKey] = screenDefault;\n\t}\n\t// 1cm x 0.393701in/cm x 72pt/in x 1.33px/pt = 38px\n\t// 1.8cm x 0.393701in/cm x 72pt/in x 1.33px/pt = 68px\n\tsetPaddingVariable(this, 'top', 'topmargin', 38, 15);\n\tsetPaddingVariable(this, 'bottom', 'botmargin', 38, 15);\n\tsetPaddingVariable(this, 'left', 'leftmargin', 68, 15);\n\tsetPaddingVariable(this, 'right', 'rightmargin', 68, 15);\n};\n\n/**\n * Some of the items on the page are not scaled, so adjust them in the opposite direction of scaling to cancel out the scaling.\n * @param {float} scale\n */\nRenderer.prototype.adjustNonScaledItems = function (scale) {\n\tthis.padding.top /= scale;\n\tthis.padding.bottom /= scale;\n\tthis.padding.left /= scale;\n\tthis.padding.right /= scale;\n\tthis.abctune.formatting.headerfont.size /= scale;\n\tthis.abctune.formatting.footerfont.size /= scale;\n};\n\n/**\n * Set the the values for all the configurable vertical space options.\n */\nRenderer.prototype.initVerticalSpace = function () {\n\t// conversion: 37.7953 = conversion factor for cm to px.\n\t// All of the following values are in px.\n\tthis.spacing = {\n\t\tcomposer: 7.56, // Set the vertical space above the composer.\n\t\tgraceBefore: 8.67, // Define the space before, inside and after the grace notes.\n\t\tgraceInside: 10.67,\n\t\tgraceAfter: 16,\n\t\tinfo: 0, // Set the vertical space above the infoline.\n\t\tlineSkipFactor: 1.1, // Set the factor for spacing between lines of text. (multiply this by the font size)\n\t\tmusic: 7.56, // Set the vertical space above the first staff.\n\t\tparagraphSkipFactor: 0.4, // Set the factor for spacing between text paragraphs. (multiply this by the font size)\n\t\tparts: 11.33, // Set the vertical space above a new part.\n\t\tslurHeight: 1.0, // Set the slur height factor.\n\t\tstaffSeparation: 61.33, // Do not put a staff system closer than <unit> from the previous system.\n\t\tstaffTopMargin: 0,\n\t\tstemHeight: 26.67 + 10, // Set the stem height.\n\t\tsubtitle: 3.78, // Set the vertical space above the subtitle.\n\t\tsystemStaffSeparation: 48, // Do not place the staves closer than <unit> inside a system. * This values applies to all staves when in the tune header. Otherwise, it applies to the next staff\n\t\ttext: 18.9, // Set the vertical space above the history.\n\t\ttitle: 7.56, // Set the vertical space above the title.\n\t\ttop: 30.24, //Set the vertical space above the tunes and on the top of the continuation pages.\n\t\tvocal: 0, // Set the vertical space above the lyrics under the staves.\n\t\twords: 0 // Set the vertical space above the lyrics at the end of the tune.\n\t};\n\t/*\n\tTODO-PER: Handle the x-coordinate spacing items, too.\nmaxshrink <float>Default: 0.65\nSet how much to compress horizontally when music line breaks\nare automatic.\n<float> must be between 0 (natural spacing)\nand 1 (max shrinking).\n\n// This next value is used to compute the natural spacing of\n// the notes. The base spacing of the crotchet is always\n// 40 pts. When the duration of a note type is twice the\n// duration of an other note type, its spacing is multiplied\n// by this factor.\n// The default value causes the note spacing to be multiplied\n// by 2 when its duration is multiplied by 4, i.e. the\n// space of the semibreve is 80 pts and the space of the\n// semiquaver is 20 pts.\n// Setting this value to 1 sets all note spacing to 40 pts.\nnoteSpacingFactor: 1.414, // Set the note spacing factor to <float> (range 1..2).\n\nscale <float> Default: 0.75 Set the page scale factor. Note that the header and footer are not scaled.\n\nstretchlast <float>Default: 0.8\nStretch the last music line of a tune when it exceeds\nthe <float> fraction of the page width.\n<float> range is 0.0 to 1.0.\n\t */\n};\n\nRenderer.prototype.setVerticalSpace = function (formatting) {\n\t// conversion from pts to px 4/3\n\tif (formatting.staffsep !== undefined)\n\t\tthis.spacing.staffSeparation = formatting.staffsep * 4 / 3;\n\tif (formatting.composerspace !== undefined)\n\t\tthis.spacing.composer = formatting.composerspace * 4 / 3;\n\tif (formatting.partsspace !== undefined)\n\t\tthis.spacing.parts = formatting.partsspace * 4 / 3;\n\tif (formatting.textspace !== undefined)\n\t\tthis.spacing.text = formatting.textspace * 4 / 3;\n\tif (formatting.musicspace !== undefined)\n\t\tthis.spacing.music = formatting.musicspace * 4 / 3;\n\tif (formatting.titlespace !== undefined)\n\t\tthis.spacing.title = formatting.titlespace * 4 / 3;\n\tif (formatting.sysstaffsep !== undefined)\n\t\tthis.spacing.systemStaffSeparation = formatting.sysstaffsep * 4 / 3;\n\tif (formatting.stafftopmargin !== undefined)\n\t\tthis.spacing.staffTopMargin = formatting.stafftopmargin * 4 / 3;\n\tif (formatting.subtitlespace !== undefined)\n\t\tthis.spacing.subtitle = formatting.subtitlespace * 4 / 3;\n\tif (formatting.topspace !== undefined)\n\t\tthis.spacing.top = formatting.topspace * 4 / 3;\n\tif (formatting.vocalspace !== undefined)\n\t\tthis.spacing.vocal = formatting.vocalspace * 4 / 3;\n\tif (formatting.wordsspace !== undefined)\n\t\tthis.spacing.words = formatting.wordsspace * 4 / 3;\n};\n\n\n/**\n * Calculates the y for a given pitch value (relative to the stave the renderer is currently printing)\n * @param {number} ofs pitch value (bottom C on a G clef = 0, D=1, etc.)\n */\nRenderer.prototype.calcY = function (ofs) {\n\treturn this.y - ofs * spacing.STEP;\n};\n\nRenderer.prototype.moveY = function (em, numLines) {\n\tif (numLines === undefined) numLines = 1;\n\tthis.y += em * numLines;\n};\n\nRenderer.prototype.absolutemoveY = function (y) {\n\tthis.y = y;\n};\n\nmodule.exports = Renderer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/src/write/svg.js":
/*!*********************************************!*\
  !*** ./node_modules/abcjs/src/write/svg.js ***!
  \*********************************************/
/***/ ((module) => {

eval("//    abc_voice_element.js: Definition of the VoiceElement class.\n\n/*global module */\n\nvar svgNS = \"http://www.w3.org/2000/svg\";\n\nfunction Svg(wrapper) {\n\tthis.svg = createSvg();\n\tthis.currentGroup = [];\n\twrapper.appendChild(this.svg);\n}\n\nSvg.prototype.clear = function () {\n\tif (this.svg) {\n\t\tvar wrapper = this.svg.parentNode;\n\t\tthis.svg = createSvg();\n\t\tthis.currentGroup = [];\n\t\tif (wrapper) {\n\t\t\t// TODO-PER: If the wrapper is not present, then the underlying div was pulled out from under this instance. It's possible that is still useful (for creating the music off page?)\n\t\t\twrapper.innerHTML = \"\";\n\t\t\twrapper.appendChild(this.svg);\n\t\t}\n\t}\n};\n\nSvg.prototype.setTitle = function (title) {\n\tvar titleEl = document.createElement(\"title\");\n\tvar titleNode = document.createTextNode(title);\n\ttitleEl.appendChild(titleNode);\n\tthis.svg.insertBefore(titleEl, this.svg.firstChild);\n};\n\nSvg.prototype.setResponsiveWidth = function (w, h) {\n\t// this technique is from: http://thenewcode.com/744/Make-SVG-Responsive, thx to https://github.com/iantresman\n\tthis.svg.setAttribute(\"viewBox\", \"0 0 \" + w + \" \" + h);\n\tthis.svg.setAttribute(\"preserveAspectRatio\", \"xMinYMin meet\");\n\tthis.svg.removeAttribute(\"height\");\n\tthis.svg.removeAttribute(\"width\");\n\tthis.svg.style['display'] = \"inline-block\";\n\tthis.svg.style['position'] = \"absolute\";\n\tthis.svg.style['top'] = \"0\";\n\tthis.svg.style['left'] = \"0\";\n\n\tif (this.svg.parentNode) {\n\t\tvar cls = this.svg.parentNode.getAttribute(\"class\");\n\t\tif (!cls)\n\t\t\tthis.svg.parentNode.setAttribute(\"class\", \"abcjs-container\");\n\t\telse if (cls.indexOf(\"abcjs-container\") < 0)\n\t\t\tthis.svg.parentNode.setAttribute(\"class\", cls + \" abcjs-container\");\n\t\tthis.svg.parentNode.style['display'] = \"inline-block\";\n\t\tthis.svg.parentNode.style['position'] = \"relative\";\n\t\tthis.svg.parentNode.style['width'] = \"100%\";\n\t\t// PER: I changed the padding from 100% to this through trial and error.\n\t\t// The example was using a square image, but this music might be either wider or taller.\n\t\tvar padding = h / w * 100;\n\t\tthis.svg.parentNode.style['padding-bottom'] = padding + \"%\";\n\t\tthis.svg.parentNode.style['vertical-align'] = \"middle\";\n\t\tthis.svg.parentNode.style['overflow'] = \"hidden\";\n\t}\n};\n\nSvg.prototype.setSize = function (w, h) {\n\tthis.svg.setAttribute('width', w);\n\tthis.svg.setAttribute('height', h);\n};\n\nSvg.prototype.setAttribute = function (attr, value) {\n\tthis.svg.setAttribute(attr, value);\n};\n\nSvg.prototype.setScale = function (scale) {\n\tif (scale !== 1) {\n\t\tthis.svg.style.transform = \"scale(\" + scale + \",\" + scale + \")\";\n\t\tthis.svg.style['-ms-transform'] = \"scale(\" + scale + \",\" + scale + \")\";\n\t\tthis.svg.style['-webkit-transform'] = \"scale(\" + scale + \",\" + scale + \")\";\n\t\tthis.svg.style['transform-origin'] = \"0 0\";\n\t\tthis.svg.style['-ms-transform-origin-x'] = \"0\";\n\t\tthis.svg.style['-ms-transform-origin-y'] = \"0\";\n\t\tthis.svg.style['-webkit-transform-origin-x'] = \"0\";\n\t\tthis.svg.style['-webkit-transform-origin-y'] = \"0\";\n\t} else {\n\t\tthis.svg.style.transform = \"\";\n\t\tthis.svg.style['-ms-transform'] = \"\";\n\t\tthis.svg.style['-webkit-transform'] = \"\";\n\t}\n};\n\nSvg.prototype.insertStyles = function (styles) {\n\tvar el = document.createElementNS(svgNS, \"style\");\n\tel.textContent = styles;\n\tthis.svg.insertBefore(el, this.svg.firstChild); // prepend is not available on older browsers.\n\t//\tthis.svg.prepend(el);\n};\n\nSvg.prototype.setParentStyles = function (attr) {\n\t// This is needed to get the size right when there is scaling involved.\n\tfor (var key in attr) {\n\t\tif (attr.hasOwnProperty(key)) {\n\t\t\tif (this.svg.parentNode)\n\t\t\t\tthis.svg.parentNode.style[key] = attr[key];\n\t\t}\n\t}\n\t// This is the last thing that gets called, so delete the temporary SVG if one was created\n\tif (this.dummySvg) {\n\t\tvar body = document.querySelector('body');\n\t\tbody.removeChild(this.dummySvg);\n\t\tthis.dummySvg = null;\n\t}\n\n};\n\nfunction constructHLine(x1, y1, x2) {\n\tvar len = x2 - x1;\n\treturn \"M \" + x1 + \" \" + y1 +\n\t\t\" l \" + len + ' ' + 0 +\n\t\t\" l \" + 0 + \" \" + 1 + \" \" +\n\t\t\" l \" + (-len) + \" \" + 0 + \" \" + \" z \";\n}\n\nfunction constructVLine(x1, y1, y2) {\n\tvar len = y2 - y1;\n\treturn \"M \" + x1 + \" \" + y1 +\n\t\t\" l \" + 0 + ' ' + len +\n\t\t\" l \" + 1 + \" \" + 0 + \" \" +\n\t\t\" l \" + 0 + \" \" + (-len) + \" \" + \" z \";\n}\n\nSvg.prototype.rect = function (attr) {\n\t// This uses path instead of rect so that it can be hollow and the color changes with \"fill\" instead of \"stroke\".\n\tvar lines = [];\n\tvar x1 = attr.x;\n\tvar y1 = attr.y;\n\tvar x2 = attr.x + attr.width;\n\tvar y2 = attr.y + attr.height;\n\tlines.push(constructHLine(x1, y1, x2));\n\tlines.push(constructHLine(x1, y2, x2));\n\tlines.push(constructVLine(x2, y1, y2));\n\tlines.push(constructVLine(x1, y2, y1));\n\n\treturn this.path({ path: lines.join(\" \"), stroke: \"none\", \"data-name\": attr[\"data-name\"] });\n};\n\nSvg.prototype.dottedLine = function (attr) {\n\tvar el = document.createElementNS(svgNS, 'line');\n\tel.setAttribute(\"x1\", attr.x1);\n\tel.setAttribute(\"x2\", attr.x2);\n\tel.setAttribute(\"y1\", attr.y1);\n\tel.setAttribute(\"y2\", attr.y2);\n\tel.setAttribute(\"stroke\", attr.stroke);\n\tel.setAttribute(\"stroke-dasharray\", \"5,5\");\n\tthis.svg.insertBefore(el, this.svg.firstChild);\n};\n\nSvg.prototype.rectBeneath = function (attr) {\n\tvar el = document.createElementNS(svgNS, 'rect');\n\tel.setAttribute(\"x\", attr.x);\n\tel.setAttribute(\"width\", attr.width);\n\tel.setAttribute(\"y\", attr.y);\n\tel.setAttribute(\"height\", attr.height);\n\tif (attr.stroke)\n\t\tel.setAttribute(\"stroke\", attr.stroke);\n\tif (attr['stroke-opacity'])\n\t\tel.setAttribute(\"stroke-opacity\", attr['stroke-opacity']);\n\tif (attr.fill)\n\t\tel.setAttribute(\"fill\", attr.fill);\n\tif (attr['fill-opacity'])\n\t\tel.setAttribute(\"fill-opacity\", attr['fill-opacity']);\n\tthis.svg.insertBefore(el, this.svg.firstChild);\n};\n\nSvg.prototype.text = function (text, attr, target) {\n\tvar el = document.createElementNS(svgNS, 'text');\n\tel.setAttribute(\"stroke\", \"none\");\n\tfor (var key in attr) {\n\t\tif (attr.hasOwnProperty(key)) {\n\t\t\tel.setAttribute(key, attr[key]);\n\t\t}\n\t}\n\tvar isFreeText = (attr[\"data-name\"] == \"free-text\");\n\tvar lines = (\"\" + text).split(\"\\n\");\n\tfor (var i = 0; i < lines.length; i++) {\n\t\tif (isFreeText && (lines[i] == \"\")){\n\t      // Don't draw empty lines\n\t      continue;\n\t    }\n\n\t\tvar line = document.createElementNS(svgNS, 'tspan');\n\t\tline.setAttribute(\"x\", attr.x ? attr.x : 0);\n\t\tif (i !== 0)\n\t\t\tline.setAttribute(\"dy\", \"1.2em\");\n\t\tif (lines[i].indexOf(\"\\x03\") !== -1) {\n\t\t\tvar parts = lines[i].split('\\x03')\n\t\t\tline.textContent = parts[0];\n\t\t\tif (parts[1]) {\n\t\t\t\tvar ts2 = document.createElementNS(svgNS, 'tspan');\n\t\t\t\tts2.setAttribute(\"dy\", \"-0.3em\");\n\t\t\t\tts2.setAttribute(\"style\", \"font-size:0.7em\");\n\t\t\t\tts2.textContent = parts[1];\n\t\t\t\tline.appendChild(ts2);\n\t\t\t}\n\t\t\tif (parts[2]) {\n\t\t\t\tvar dist = parts[1] ? \"0.4em\" : \"0.1em\";\n\t\t\t\tvar ts3 = document.createElementNS(svgNS, 'tspan');\n\t\t\t\tts3.setAttribute(\"dy\", dist);\n\t\t\t\tts3.setAttribute(\"style\", \"font-size:0.7em\");\n\t\t\t\tts3.textContent = parts[2];\n\t\t\t\tline.appendChild(ts3);\n\t\t\t}\n\t\t}     \n\t\telse \n    \t{\n\t      // MAE 9 May 2025 - For improved block text\n\t      if (isFreeText){\n\t        // Fixes issue where blank lines in text blocks didn't take up any vertical\n\t        if (lines[i].trim() == \"\"){\n\t          line.innerHTML = \"&nbsp;\";\n\t        }\n\t        else{\n\t          line.textContent = lines[i];\n\t        }\n\t      }\n\t      else{\n\t        line.textContent = lines[i];\n\t      }\n    \t}\t\n\t\tel.appendChild(line);\n\t}\n\tif (target)\n\t\ttarget.appendChild(el);\n\telse\n\t\tthis.append(el);\n\treturn el;\n};\n\nSvg.prototype.richTextLine = function (phrases, x, y, klass, anchor, target) {\n\tvar el = document.createElementNS(svgNS, 'text');\n\tel.setAttribute(\"stroke\", \"none\");\n\tel.setAttribute(\"class\", klass);\n\tel.setAttribute(\"x\", x);\n\tel.setAttribute(\"y\", y);\n\tel.setAttribute(\"text-anchor\", anchor);\n\tel.setAttribute(\"dominant-baseline\", \"middle\");\n\n\tfor (var i = 0; i < phrases.length; i++) {\n\t\tvar phrase = phrases[i]\n\t\tvar tspan = document.createElementNS(svgNS, 'tspan');\n\t\tvar attrs = Object.keys(phrase.attrs)\n\t\tfor (var j = 0; j < attrs.length; j++) {\n\t\t\tvar value = phrase.attrs[attrs[j]]\n\t\t\tif (value !== '')\n\t\t\t\ttspan.setAttribute(attrs[j], value)\n\t\t}\n\t\ttspan.textContent = phrase.content;\n\n\t\tel.appendChild(tspan);\n\t}\n\n\tif (target)\n\t\ttarget.appendChild(el);\n\telse\n\t\tthis.append(el);\n\treturn el;\n}\n\nSvg.prototype.guessWidth = function (text, attr) {\n\tvar svg = this.createDummySvg();\n\tvar el = this.text(text, attr, svg);\n\tvar size;\n\ttry {\n\t\tsize = el.getBBox();\n\t\tif (isNaN(size.height) || !size.height) // TODO-PER: I don't think this can happen unless there isn't a browser at all.\n\t\t\tsize = { width: attr['font-size'] / 2, height: attr['font-size'] + 2 }; // Just a wild guess.\n\t\telse\n\t\t\tsize = { width: size.width, height: size.height };\n\t} catch (ex) {\n\t\tsize = { width: attr['font-size'] / 2, height: attr['font-size'] + 2 }; // Just a wild guess.\n\t}\n\tsvg.removeChild(el);\n\treturn size;\n};\n\nSvg.prototype.createDummySvg = function () {\n\tif (!this.dummySvg) {\n\t\tthis.dummySvg = createSvg();\n\t\tvar styles = [\n\t\t\t\"display: block !important;\",\n\t\t\t\"height: 1px;\",\n\t\t\t\"width: 1px;\",\n\t\t\t\"position: absolute;\"\n\t\t];\n\t\tthis.dummySvg.setAttribute('style', styles.join(\"\"));\n\t\tvar body = document.querySelector('body');\n\t\tbody.appendChild(this.dummySvg);\n\t}\n\n\treturn this.dummySvg;\n};\n\nvar sizeCache = {};\n\nSvg.prototype.getTextSize = function (text, attr, el) {\n\tif (typeof text === 'number')\n\t\ttext = '' + text;\n\tif (!text || text.match(/^\\s+$/))\n\t\treturn { width: 0, height: 0 };\n\tvar key;\n\tif (text.length < 20) {\n\t\t// The short text tends to be repetitive and getBBox is really slow, so lets cache.\n\t\tkey = text + JSON.stringify(attr);\n\t\tif (sizeCache[key])\n\t\t\treturn sizeCache[key];\n\t}\n\tvar removeLater = !el;\n\tif (!el)\n\t\tel = this.text(text, attr);\n\tvar size;\n\ttry {\n\t\tsize = el.getBBox();\n\t\tif (isNaN(size.height) || !size.height)\n\t\t\tsize = this.guessWidth(text, attr);\n\t\telse\n\t\t\tsize = { width: size.width, height: size.height };\n\t} catch (ex) {\n\t\tsize = this.guessWidth(text, attr);\n\t}\n\tif (removeLater) {\n\t\tif (this.currentGroup.length > 0)\n\t\t\tthis.currentGroup[0].removeChild(el);\n\t\telse\n\t\t\tthis.svg.removeChild(el);\n\t}\n\tif (key)\n\t\tsizeCache[key] = size;\n\treturn size;\n};\n\nSvg.prototype.openGroup = function (options) {\n\toptions = options ? options : {};\n\tvar el = document.createElementNS(svgNS, \"g\");\n\tif (options.klass)\n\t\tel.setAttribute(\"class\", options.klass);\n\tif (options.fill)\n\t\tel.setAttribute(\"fill\", options.fill);\n\tif (options.stroke)\n\t\tel.setAttribute(\"stroke\", options.stroke);\n\tif (options['data-name'])\n\t\tel.setAttribute(\"data-name\", options['data-name']);\n\n\tif (options.prepend)\n\t\tthis.prepend(el);\n\telse\n\t\tthis.append(el);\n\tthis.currentGroup.unshift(el);\n\treturn el;\n};\n\nSvg.prototype.closeGroup = function () {\n\tvar g = this.currentGroup.shift();\n\tif (g && g.children.length === 0) {\n\t\t// If nothing was added to the group it is because all the elements were invisible. We don't need the group, then.\n\t\tg.parentElement.removeChild(g);\n\t\treturn null;\n\t}\n\treturn g;\n};\n\nSvg.prototype.path = function (attr) {\n\tvar el = document.createElementNS(svgNS, \"path\");\n\tfor (var key in attr) {\n\t\tif (attr.hasOwnProperty(key)) {\n\t\t\tif (key === 'path')\n\t\t\t\tel.setAttributeNS(null, 'd', attr.path);\n\t\t\telse if (key === 'klass')\n\t\t\t\tel.setAttributeNS(null, \"class\", attr[key]);\n\t\t\telse if (attr[key] !== undefined)\n\t\t\t\tel.setAttributeNS(null, key, attr[key]);\n\t\t}\n\t}\n\tthis.append(el);\n\treturn el;\n};\n\nSvg.prototype.pathToBack = function (attr) {\n\tvar el = document.createElementNS(svgNS, \"path\");\n\tfor (var key in attr) {\n\t\tif (attr.hasOwnProperty(key)) {\n\t\t\tif (key === 'path')\n\t\t\t\tel.setAttributeNS(null, 'd', attr.path);\n\t\t\telse if (key === 'klass')\n\t\t\t\tel.setAttributeNS(null, \"class\", attr[key]);\n\t\t\telse\n\t\t\t\tel.setAttributeNS(null, key, attr[key]);\n\t\t}\n\t}\n\tthis.prepend(el);\n\treturn el;\n};\n\nSvg.prototype.lineToBack = function (attr) {\n\tvar el = document.createElementNS(svgNS, 'line');\n\tvar keys = Object.keys(attr)\n\tfor (var i = 0; i < keys.length; i++)\n\t\tel.setAttribute(keys[i], attr[keys[i]]);\n\tthis.prepend(el);\n\treturn el;\n};\n\n\nSvg.prototype.append = function (el) {\n\tif (this.currentGroup.length > 0)\n\t\tthis.currentGroup[0].appendChild(el);\n\telse\n\t\tthis.svg.appendChild(el);\n};\n\nSvg.prototype.prepend = function (el) {\n\t// The entire group is prepended, so don't prepend the individual elements.\n\tif (this.currentGroup.length > 0)\n\t\tthis.currentGroup[0].appendChild(el);\n\telse\n\t\tthis.svg.insertBefore(el, this.svg.firstChild);\n};\n\nSvg.prototype.setAttributeOnElement = function (el, attr) {\n\tfor (var key in attr) {\n\t\tif (attr.hasOwnProperty(key)) {\n\t\t\tel.setAttributeNS(null, key, attr[key]);\n\t\t}\n\t}\n};\n\nSvg.prototype.moveElementToChild = function (parent, child) {\n\tparent.appendChild(child);\n};\n\nfunction createSvg() {\n\tvar svg = document.createElementNS(svgNS, \"svg\");\n\tsvg.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\");\n\tsvg.setAttribute('role', 'img');    // for accessibility\n\tsvg.setAttribute('fill', 'currentColor');    // for automatically picking up dark mode and high contrast\n\tsvg.setAttribute('stroke', 'currentColor');    // for automatically picking up dark mode and high contrast\n\treturn svg;\n}\n\n\nmodule.exports = Svg;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/src/write/svg.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/abcjs/version.js":
/*!***************************************!*\
  !*** ./node_modules/abcjs/version.js ***!
  \***************************************/
/***/ ((module) => {

eval("var version = '6.5.2';\n\nmodule.exports = version;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYWJjanMvdmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tYXJ0aWZhY3RzLy4vbm9kZV9tb2R1bGVzL2FiY2pzL3ZlcnNpb24uanM/YTk4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdmVyc2lvbiA9ICc2LjUuMic7XG5cbm1vZHVsZS5leHBvcnRzID0gdmVyc2lvbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/abcjs/version.js\n");

/***/ })

};
;